#ifndef ADSP594_H
#define ADSP594_H

#define _ADI_MSK_3( mask, smask, type ) ((type)(smask))

/* ============================================================================================================================
        SCB0
   ============================================================================================================================ */
#define REG_SCB0_SP0A_READ_QOS               0x30042100            /*  SCB0 SP0A Read Quality of Service Register */
#define REG_SCB0_SP0A_WRITE_QOS              0x30042104            /*  SCB0 SP0A Write Quality of Service Register */
#define REG_SCB0_SP0B_READ_QOS               0x30043100            /*  SCB0 SP0B Read Quality of Service Register */
#define REG_SCB0_SP0B_WRITE_QOS              0x30043104            /*  SCB0 SP0B Write Quality of Service Register */
#define REG_SCB0_SP1A_READ_QOS               0x30044100            /*  SCB0 SP1A Read Quality of Service Register */
#define REG_SCB0_SP1A_WRITE_QOS              0x30044104            /*  SCB0 SP1A Write Quality of Service Register */
#define REG_SCB0_SP1B_READ_QOS               0x30045100            /*  SCB0 SP1B Read Quality of Service Register */
#define REG_SCB0_SP1B_WRITE_QOS              0x30045104            /*  SCB0 SP1B Write Quality of Service Register */
#define REG_SCB0_SP2A_READ_QOS               0x30046100            /*  SCB0 SP2A Read Quality of Service Register */
#define REG_SCB0_SP2A_WRITE_QOS              0x30046104            /*  SCB0 SP2A Write Quality of Service Register */
#define REG_SCB0_SP2B_READ_QOS               0x30047100            /*  SCB0 SP2B Read Quality of Service Register */
#define REG_SCB0_SP2B_WRITE_QOS              0x30047104            /*  SCB0 SP2B Write Quality of Service Register */
#define REG_SCB0_SP3A_READ_QOS               0x30048100            /*  SCB0 SP3A Read Quality of Service Register */
#define REG_SCB0_SP3A_WRITE_QOS              0x30048104            /*  SCB0 SP3A Write Quality of Service Register */
#define REG_SCB0_SP3B_READ_QOS               0x30049100            /*  SCB0 SP3B Read Quality of Service Register */
#define REG_SCB0_SP3B_WRITE_QOS              0x30049104            /*  SCB0 SP3B Write Quality of Service Register */
#define REG_SCB0_CRC0_CH0_READ_QOS           0x3004A100            /*  SCB0 CRC0 Channel 0  Read Quality of Service Register */
#define REG_SCB0_CRC0_CH0_WRITE_QOS          0x3004A104            /*  SCB0 CRC0 Channel 0 Write Quality of Service Register */
#define REG_SCB0_CRC0_CH1_READ_QOS           0x3004B100            /*  SCB0 CRC0 Channel 1 Read Quality of Service Register */
#define REG_SCB0_CRC0_CH1_WRITE_QOS          0x3004B104            /*  SCB0 CRC0 Channel 1 Write Quality of Service Register */
#define REG_SCB0_CRC1_CH0_READ_QOS           0x3004C100            /*  SCB0 CRC1 Channel 0 Read Quality of Service Register */
#define REG_SCB0_CRC1_CH0_WRITE_QOS          0x3004C104            /*  SCB0 CRC1 Channel 0 Write Quality of Service Register */
#define REG_SCB0_CRC1_CH1_READ_QOS           0x3004D100            /*  SCB0 CRC1 Channel 1  Read Quality of Service Register */
#define REG_SCB0_CRC1_CH1_WRITE_QOS          0x3004D104            /*  SCB0 CRC1 Channel 1 Write Quality of Service Register */
#define REG_SCB0_UART2_RX_READ_QOS           0x3004E100            /*  SCB0 UART2 RX Read Quality of Service Register */
#define REG_SCB0_UART2_RX_WRITE_QOS          0x3004E104            /*  SCB0 UART2 RX Write Quality of Service Register */
#define REG_SCB0_SH0_DPORT_READ_QOS          0x3004F100            /*  SCB0 SH0 DPORT Read Quality of Service Register */
#define REG_SCB0_SH0_DPORT_WRITE_QOS         0x3004F104            /*  SCB0 SH0 DPORT Write Quality of Service Register */
#define REG_SCB0_SH0_IPORT_READ_QOS          0x30050100            /*  SCB0 SH0 LPORT Read Quality of Service Register */
#define REG_SCB0_SH0_IPORT_WRITE_QOS         0x30050104            /*  SCB0 SH0 LPORT Write Quality of Service Register */
#define REG_SCB0_SP4A_READ_QOS               0x30051100            /*  SCB0 SP4A Read Quality of Service Register */
#define REG_SCB0_SP4A_WRITE_QOS              0x30051104            /*  SCB0 SP4A Write Quality of Service Register */
#define REG_SCB0_SP4B_READ_QOS               0x30052100            /*  SCB0 SP4B Read Quality of Service Register */
#define REG_SCB0_SP4B_WRITE_QOS              0x30052104            /*  SCB0 SP4B Write Quality of Service Register */
#define REG_SCB0_UART3_TX_READ_QOS           0x30053100            /*  SCB0 UART3 TX Read Quality of Service Register */
#define REG_SCB0_UART3_TX_WRITE_QOS          0x30053104            /*  SCB0 UART3 TX Write Quality of Service Register */
#define REG_SCB0_UART3_RX_READ_QOS           0x30054100            /*  SCB0 UART3 RX Read Quality of Service Register */
#define REG_SCB0_UART3_RX_WRITE_QOS          0x30054104            /*  SCB0 UART3 RX Write Quality of Service Register */
#define REG_SCB0_HSMDMA_CH0_READ_QOS         0x30055100            /*  SCB0 HSMDMA Channel 0  Read Quality of Service Register */
#define REG_SCB0_HSMDMA_CH0_WRITE_QOS        0x30055104            /*  SCB0 HSMDMA Channel 0 Write Quality of Service Register */
#define REG_SCB0_SP5A_READ_QOS               0x30056100            /*  SCB0 SP5A Read Quality of Service Register */
#define REG_SCB0_SP5A_WRITE_QOS              0x30056104            /*  SCB0 SP5A Write Quality of Service Register */
#define REG_SCB0_MLB_READ_QOS                0x30057100            /*  SCB0 MLB Read Quality of Service Register */
#define REG_SCB0_MLB_WRITE_QOS               0x30057104            /*  SCB0 MLB Write Quality of Service Register */
#define REG_SCB0_UART0_TX_READ_QOS           0x30058100            /*  SCB0 UART0 TX Read Quality of Service Register */
#define REG_SCB0_UART0_TX_WRITE_QOS          0x30058104            /*  SCB0 UART0 TX Write Quality of Service Register */
#define REG_SCB0_UART0_RX_READ_QOS           0x30059100            /*  SCB0 UART0 RX Read Quality of Service Register */
#define REG_SCB0_UART0_RX_WRITE_QOS          0x30059104            /*  SCB0 UART0 RX Write Quality of Service Register */
#define REG_SCB0_SP5B_READ_QOS               0x3005A100            /*  SCB0 SP5B Read Quality of Service Register */
#define REG_SCB0_SP5B_WRITE_QOS              0x3005A104            /*  SCB0 SP5B Write Quality of Service Register */
#define REG_SCB0_HSMDMA_CH1_READ_QOS         0x3005B100            /*  SCB0 HSMDMA Channel 1 Read Quality of Service Register */
#define REG_SCB0_HSMDMA_CH1_WRITE_QOS        0x3005B104            /*  SCB0 HSMDMA Channel 1 Write Quality of Service Register */
#define REG_SCB0_UART2_TX_READ_QOS           0x3005C100            /*  SCB0 UART2 TX Read Quality of Service Register */
#define REG_SCB0_UART2_TX_WRITE_QOS          0x3005C104            /*  SCB0 UART2 TX Write Quality of Service Register */
#define REG_SCB0_SPI0TX_READ_QOS             0x3005D100            /*  SCB0 SPI0 TX Read Quality of Service Register */
#define REG_SCB0_SPI0TX_WRITE_QOS            0x3005D104            /*  SCB0 SPI0 TX Write Quality of Service Register */
#define REG_SCB0_SPI0RX_READ_QOS             0x3005E100            /*  SCB0 SPI0 RX Read Quality of Service Register */
#define REG_SCB0_SPI0RX_WRITE_QOS            0x3005E104            /*  SCB0 SPI0 RX Write Quality of Service Register */
#define REG_SCB0_SPI1TX_READ_QOS             0x3005F100            /*  SCB0 SPI1 TX Read Quality of Service Register */
#define REG_SCB0_SPI1TX_WRITE_QOS            0x3005F104            /*  SCB0 SPI1 TX Write Quality of Service Register */
#define REG_SCB0_SPI1RX_READ_QOS             0x30060100            /*  SCB0 SPI1 RX Read Quality of Service Register */
#define REG_SCB0_SPI1RX_WRITE_QOS            0x30060104            /*  SCB0 SPI1 RX Write Quality of Service Register */
#define REG_SCB0_SPI2TX_READ_QOS             0x30061100            /*  SCB0 SPI2 TX Read Quality of Service Register */
#define REG_SCB0_SPI2TX_WRITE_QOS            0x30061104            /*  SCB0 SPI2 TX Write Quality of Service Register */
#define REG_SCB0_SPI2RX_READ_QOS             0x30062100            /*  SCB0 SPI2 RX Read Quality of Service Register */
#define REG_SCB0_SPI2RX_WRITE_QOS            0x30062104            /*  SCB0 SPI2 RX Write Quality of Service Register */
#define REG_SCB0_SP6A_READ_QOS               0x30063100            /*  SCB0 SP6A Read Quality of Service Register */
#define REG_SCB0_SP6A_WRITE_QOS              0x30063104            /*  SCB0 SP6A Write Quality of Service Registers */
#define REG_SCB0_SP6B_READ_QOS               0x30064100            /*  SCB0 SP6B Read Quality of Service Register */
#define REG_SCB0_SP6B_WRITE_QOS              0x30064104            /*  SCB0 SP6B Write Quality of Service Register */
#define REG_SCB0_LP0_READ_QOS                0x30065100            /*  SCB0 LP0 Read Quality of Service Register */
#define REG_SCB0_LP0_WRITE_QOS               0x30065104            /*  SCB0 LP0 Write Quality of Service Register */
#define REG_SCB0_SP7A_READ_QOS               0x30066100            /*  SCB0 SP7A Read Quality of Service Register */
#define REG_SCB0_SP7A_WRITE_QOS              0x30066104            /*  SCB0 SP7A Write Quality of Service Register */
#define REG_SCB0_SP7B_READ_QOS               0x30067100            /*  SCB0 SP7B Read Quality of Service Register */
#define REG_SCB0_SP7B_WRITE_QOS              0x30067104            /*  SCB0 SP7B Write Quality of Service Register */
#define REG_SCB0_SH0_MMR_READ_QOS            0x30068100            /*  SCB0 SH0 MMR Read Quality of Service Register */
#define REG_SCB0_SH0_MMR_WRITE_QOS           0x30068104            /*  SCB0 SH0 MMR Write Quality of Service Register */
#define REG_SCB0_SPI3RX_READ_QOS             0x30069100            /*  SCB0 SPI3 RX Read Quality of Service Register */
#define REG_SCB0_SPI3RX_WRITE_QOS            0x30069104            /*  SCB0 SPI3 RX Write Quality of Service Register */
#define REG_SCB0_UART1_TX_READ_QOS           0x3006A100            /*  SCB0 UART1 TX Read Quality of Service Register */
#define REG_SCB0_UART1_TX_WRITE_QOS          0x3006A104            /*  SCB0 UART1 TX Write Quality of Service Registers */
#define REG_SCB0_UART1_RX_READ_QOS           0x3006B100            /*  SCB0 UART1 RX Read Quality of Service Register */
#define REG_SCB0_UART1_RX_WRITE_QOS          0x3006B104            /*  SCB0 UART1 RX Write Quality of Service Register */
#define REG_SCB0_SPI3TX_READ_QOS             0x3006C100            /*  SCB0 SPI3 TX Read Quality of Service Register */
#define REG_SCB0_SPI3TX_WRITE_QOS            0x3006C104            /*  SCB0 SPI3 TX Write Quality of Service Register */
#define REG_SCB0_LP1_READ_QOS                0x3006D100            /*  SCB0 LP1 Read Quality of Service Register */
#define REG_SCB0_LP1_WRITE_QOS               0x3006D104            /*  SCB0 LP1 Write Quality of Service Register */
#define REG_SCB0_CRC2_CH1_READ_QOS           0x3006E100            /*  SCB0 CRC2 Channel 1 Read Quality of Service Register */
#define REG_SCB0_CRC2_CH1_WRITE_QOS          0x3006E104            /*  SCB0 CRC2 Channel 1 Write Quality of Service Register */
#define REG_SCB0_CRC2_CH0_READ_QOS           0x3006F100            /*  SCB0 CRC2 Channel 0 Read Quality of Service Register */
#define REG_SCB0_CRC2_CH0_WRITE_QOS          0x3006F104            /*  SCB0 CRC2 Channel 0 Write Quality of Service Register */
#define REG_SCB0_CRC3_CH1_READ_QOS           0x30070100            /*  SCB0 CRC3 Channel 1 Read Quality of Service Register */
#define REG_SCB0_CRC3_CH1_WRITE_QOS          0x30070104            /*  SCB0 CRC3 Channel 1 Write Quality of Service Register */
#define REG_SCB0_CRYPTO_READ_QOS             0x30071100            /*  SCB0 CRYPTO Read Quality of Service Register */
#define REG_SCB0_CRYPTO_WRITE_QOS            0x30071104            /*  SCB0 CRYPTO Write Quality of Service Register */
#define REG_SCB0_CRC3_CH0_READ_QOS           0x30072100            /*  SCB0 CRC3 Channel 0 Read Quality of Service Register */
#define REG_SCB0_CRC3_CH0_WRITE_QOS          0x30072104            /*  SCB0 CRC3 Channel 0 Write Quality of Service Register */
#define REG_SCB0_MSMDMA1_CH1_READ_QOS        0x30073100            /*  SCB0 MSMDMA1 Channel 1 Read Quality of Service Register */
#define REG_SCB0_MSMDMA1_CH1_WRITE_QOS       0x30073104            /*  SCB0 MSMDMA1 Channel 1 Write Quality of Service Register */
#define REG_SCB0_SH0_FIR_CH0_READ_QOS        0x30074100            /*  SCB0 SH0 FIR Channel 0 Read Quality of Service Register */
#define REG_SCB0_SH0_FIR_CH0_WRITE_QOS       0x30074104            /*  SCB0 SH0 FIR Channel 0 Write Quality of Service Register */
#define REG_SCB0_SH0_FIR_CH1_READ_QOS        0x30075100            /*  SCB0 SH0 FIR Channel 1 Read Quality of Service Register */
#define REG_SCB0_SH0_FIR_CH1_WRITE_QOS       0x30075104            /*  SCB0 SH0 FIR Channel 1 Write Quality of Service Register */
#define REG_SCB0_MSMDMA1_CH0_READ_QOS        0x30076100            /*  SCB0 MSMDMA1 Channel 0  Read Quality of Service Register */
#define REG_SCB0_MSMDMA1_CH0_WRITE_QOS       0x30076104            /*  SCB0 MSMDMA1 Channel 0  Write Quality of Service Register */
#define REG_SCB0_HSMDMA1_CH1_READ_QOS        0x30077100            /*  SCB0 HSMDMA1 Channel 1  Read Quality of Service Register */
#define REG_SCB0_HSMDMA1_CH1_WRITE_QOS       0x30077104            /*  SCB0 HSMDMA1 Channel 1  Write Quality of Service Register */
#define REG_SCB0_DLDMA0_CH0_READ_QOS         0x30078100            /*  SCB0 DLDMA0 Channel 0  Read Quality of Service Register */
#define REG_SCB0_DLDMA0_CH0_WRITE_QOS        0x30078104            /*  SCB0 DLDMA0 Channel 0  Write Quality of Service Register */
#define REG_SCB0_DLDMA0_CH1_READ_QOS         0x30079100            /*  SCB0 DLDMA0 Channel 1  Read Quality of Service Register */
#define REG_SCB0_DLDMA0_CH1_WRITE_QOS        0x30079104            /*  SCB0 DLDMA0 Channel 1 Write Quality of Service Register */
#define REG_SCB0_DLDMA1_CH0_READ_QOS         0x3007A100            /*  SCB0 DLDMA1 Channel 0  Read Quality of Service Register */
#define REG_SCB0_DLDMA1_CH0_WRITE_QOS        0x3007A104            /*  SCB0 DLDMA1 Channel 0 Write Quality of Service Register */
#define REG_SCB0_DLDMA1_CH1_READ_QOS         0x3007B100            /*  SCB0 DLDMA1 Channel 1 Read Quality of Service Register */
#define REG_SCB0_DLDMA1_CH1_WRITE_QOS        0x3007B104            /*  SCB0 DLDMA1 Channel 1 Write Quality of Service Register */
#define REG_SCB0_MSMDMA_CH0_READ_QOS         0x3007C100            /*  SCB0 MSMDMA Channel 0  Read Quality of Service Register */
#define REG_SCB0_MSMDMA_CH0_WRITE_QOS        0x3007C104            /*  SCB0 MSMDMA Channel 0  Write Quality of Service Register */
#define REG_SCB0_MSMDMA_CH1_READ_QOS         0x3007D100            /*  SCB0 MSMDMA Channel 1  Read Quality of Service Register */
#define REG_SCB0_MSMDMA_CH1_WRITE_QOS        0x3007D104            /*  SCB0 MSMDMA Channel 1 Write Quality of Service Registers */
#define REG_SCB0_HSMDMA1_CH0_READ_QOS        0x3007E100            /*  SCB0 HSMDMA1 Channel 0 Read Quality of Service Register */
#define REG_SCB0_HSMDMA1_CH0_WRITE_QOS       0x3007E104            /*  SCB0 HSMDMA1 Channel 0 Write Quality of Service Register */
#define REG_SCB0_PPI_F0_READ_QOS             0x3007F100            /*  SCB0 PPI F0 Read Quality of Service Register */
#define REG_SCB0_PPI_F0_WRITE_QOS            0x3007F104            /*  SCB0 PPI F0 Write Quality of Service Register */
#define REG_SCB0_PPI_F1_READ_QOS             0x30080100            /*  SCB0 PPI F1 Read Quality of Service Register */
#define REG_SCB0_PPI_F1_WRITE_QOS            0x30080104            /*  SCB0 PPI F1 Write Quality of Service Register */
#define REG_SCB0_USB0_READ_QOS               0x30081100            /*  SCB0 USB0 Read Quality of Service Register */
#define REG_SCB0_USB0_WRITE_QOS              0x30081104            /*  SCB0 USB0 Write Quality of Service Register */
#define REG_SCB0_SH1_IPORT_READ_QOS          0x30082100            /*  SCB0 SH1 IPORT Read Quality of Service Register */
#define REG_SCB0_SH1_IPORT_WRITE_QOS         0x30082104            /*  SCB0 SH1 IPORT Write Quality of Service Register */
#define REG_SCB0_SH1_DPORT_READ_QOS          0x30083100            /*  SCB0 SH1 DPORT Read Quality of Service Register */
#define REG_SCB0_SH1_DPORT_WRITE_QOS         0x30083104            /*  SCB0 SH1 DPORT Write Quality of Service Register */
#define REG_SCB0_SH1_MMR_READ_QOS            0x30084100            /*  SCB0 SH1 MMR Read Quality of Service Register */
#define REG_SCB0_SH1_MMR_WRITE_QOS           0x30084104            /*  SCB0 SH1 MMR  Write Quality of Service Register */
#define REG_SCB0_PL310_M0_READ_QOS           0x30085100            /*  SCB0 ARM_L2CC M0 Read Quality of Service Register */
#define REG_SCB0_PL310_M0_WRITE_QOS          0x30085104            /*  SCB0 ARM_L2CC M0 Write Quality of Service Register */
#define REG_SCB0_PL310_M1_READ_QOS           0x30086100            /*  SCB0 ARM_L2CC M1 Read Quality of Service Register */
#define REG_SCB0_PL310_M1_WRITE_QOS          0x30086104            /*  SCB0 ARM_L2CC M1 Write Quality of Service Register */
#define REG_SCB0_GIGE_READ_QOS               0x30087100            /*  SCB0 GIGE Read Quality of Service Register */
#define REG_SCB0_GIGE_WRITE_QOS              0x30087104            /*  SCB0 GIGE Write Quality of Service Register */
#define REG_SCB0_DBG_READ_QOS                0x30088100            /*  SCB0 DBG Read Quality of Service Register */
#define REG_SCB0_DBG_WRITE_QOS               0x30088104            /*  SCB0 DBG Write Quality of Service Register */
#define REG_SCB0_ETR_READ_QOS                0x30089100            /*  SCB0 ETR Read Quality of Service Register */
#define REG_SCB0_ETR_WRITE_QOS               0x30089104            /*  SCB0 ETR Write Quality of Service Register */
#define REG_SCB0_EMAC_READ_QOS               0x3008A100            /*  SCB0 EMAC Read Quality of Service Register */
#define REG_SCB0_EMAC_WRITE_QOS              0x3008A104            /*  SCB0 EMAC Write Quality of Service Register */
#define REG_SCB0_SH1_FIR_CH1_READ_QOS        0x3008B100            /*  SCB0 SH1 FIR Channel 1 Read Quality of Service Register */
#define REG_SCB0_SH1_FIR_CH1_WRITE_QOS       0x3008B104            /*  SCB0 SH1 FIR Channel 1 Write Quality of Service Register */
#define REG_SCB0_SH1_FIR_CH0_READ_QOS        0x3008C100            /*  SCB0 SH1 FIR Channel 0 Read Quality of Service Register */
#define REG_SCB0_SH1_FIR_CH0_WRITE_QOS       0x3008C104            /*  SCB0 SH1 FIR Channel 0 Write Quality of Service Register */
#define REG_SCB0_SH0_IIR_CH0_READ_QOS        0x3008D100            /*  SCB0 SH0 IIR Channel 0 Read Quality of Service Register */
#define REG_SCB0_SH0_IIR_CH0_WRITE_QOS       0x3008D104            /*  SCB0 SH0 IIR Channel 0 Write Quality of Service Register */
#define REG_SCB0_SH0_IIR_CH1_READ_QOS        0x3008E100            /*  SCB0 SH0 IIR Channel 1 Read Quality of Service Register */
#define REG_SCB0_SH0_IIR_CH1_WRITE_QOS       0x3008E104            /*  SCB0 SH0 IIR Channel 1 Write Quality of Service Register */
#define REG_SCB0_SH1_IIR_CH0_READ_QOS        0x3008F100            /*  SCB0 SH1 IIR Channel 0 Read Quality of Service Register */
#define REG_SCB0_SH1_IIR_CH0_WRITE_QOS       0x3008F104            /*  SCB0 SH1 IIR Channel 0 Write Quality of Service Register */
#define REG_SCB0_SH1_IIR_CH1_READ_QOS        0x30090100            /*  SCB0 SH1 IIR Channel 1 Read Quality of Service Register */
#define REG_SCB0_SH1_IIR_CH1_WRITE_QOS       0x30090104            /*  SCB0 SH1 IIR Channel 1 Write Quality of Service Register */
#define REG_SCB0_LP_SYNC_MODE                0x300C2020            /*  SCB0 LP Fabric (CLKO8) Synchronization Mode Register */

/* ============================================================================================================================
        SCB0 Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP0A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP0A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP0A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP0A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP0A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP0A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP0B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP0B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP0B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP0B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP0B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP0B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP1A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP1A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP1A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP1A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP1A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP1A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP1B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP1B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP1B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP1B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP1B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP1B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP2A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP2A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP2A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP2A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP2A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP2A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP2B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP2B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP2B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP2B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP2B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP2B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP3A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP3A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP3A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP3A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP3A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP3A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP3B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP3B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP3B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP3B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP3B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP3B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC0_CH0_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC0_CH0_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC0_CH0_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC0_CH0_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC0_CH0_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC0_CH0_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC0_CH1_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC0_CH1_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC0_CH1_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC0_CH1_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC0_CH1_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC0_CH1_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC1_CH0_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC1_CH0_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC1_CH0_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC1_CH0_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC1_CH0_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC1_CH0_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC1_CH1_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC1_CH1_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC1_CH1_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC1_CH1_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC1_CH1_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC1_CH1_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART2_RX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART2_RX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART2_RX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART2_RX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART2_RX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART2_RX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_DPORT_READ_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_DPORT_READ_QOS_AR_QOS   0            /*  Ar Qos */
#define BITM_SCB0_SH0_DPORT_READ_QOS_AR_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_DPORT_WRITE_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_DPORT_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH0_DPORT_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_IPORT_READ_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_IPORT_READ_QOS_AR_QOS   0            /*  Ar Qos */
#define BITM_SCB0_SH0_IPORT_READ_QOS_AR_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_IPORT_WRITE_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_IPORT_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH0_IPORT_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP4A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP4A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP4A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP4A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP4A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP4A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP4B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP4B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP4B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP4B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP4B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP4B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART3_TX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART3_TX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART3_TX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART3_TX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART3_TX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART3_TX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART3_RX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART3_RX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART3_RX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART3_RX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART3_RX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART3_RX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA_CH0_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_HSMDMA_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA_CH0_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_HSMDMA_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP5A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP5A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP5A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP5A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP5A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP5A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MLB_READ_QOS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MLB_READ_QOS_AR_QOS         0            /*  Ar Qos */
#define BITM_SCB0_MLB_READ_QOS_AR_QOS        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MLB_WRITE_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MLB_WRITE_QOS_AW_QOS        0            /*  Aw Qos */
#define BITM_SCB0_MLB_WRITE_QOS_AW_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART0_TX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART0_TX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART0_TX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART0_TX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART0_TX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART0_TX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART0_RX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART0_RX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART0_RX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART0_RX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART0_RX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART0_RX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP5B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP5B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP5B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP5B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP5B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP5B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA_CH1_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_HSMDMA_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA_CH1_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_HSMDMA_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART2_TX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART2_TX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART2_TX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART2_TX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART2_TX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART2_TX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI0TX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI0TX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI0TX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI0TX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI0TX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI0TX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI0RX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI0RX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI0RX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI0RX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI0RX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI0RX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI1TX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI1TX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI1TX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI1TX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI1TX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI1TX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI1RX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI1RX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI1RX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI1RX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI1RX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI1RX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI2TX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI2TX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI2TX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI2TX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI2TX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI2TX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI2RX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI2RX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI2RX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI2RX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI2RX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI2RX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP6A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP6A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP6A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP6A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP6A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP6A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP6B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP6B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP6B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP6B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP6B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP6B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_LP0_READ_QOS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_LP0_READ_QOS_AR_QOS         0            /*  Ar Qos */
#define BITM_SCB0_LP0_READ_QOS_AR_QOS        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_LP0_WRITE_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_LP0_WRITE_QOS_AW_QOS        0            /*  Aw Qos */
#define BITM_SCB0_LP0_WRITE_QOS_AW_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP7A_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP7A_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP7A_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP7A_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP7A_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP7A_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP7B_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP7B_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_SP7B_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SP7B_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SP7B_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_SP7B_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_MMR_READ_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_MMR_READ_QOS_AR_QOS     0            /*  Ar Qos */
#define BITM_SCB0_SH0_MMR_READ_QOS_AR_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_MMR_WRITE_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_MMR_WRITE_QOS_AW_QOS    0            /*  Aw Qos */
#define BITM_SCB0_SH0_MMR_WRITE_QOS_AW_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI3RX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI3RX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI3RX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI3RX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI3RX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI3RX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART1_TX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART1_TX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART1_TX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART1_TX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART1_TX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART1_TX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART1_RX_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART1_RX_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_UART1_RX_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_UART1_RX_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_UART1_RX_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_UART1_RX_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI3TX_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI3TX_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_SPI3TX_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SPI3TX_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SPI3TX_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_SPI3TX_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_LP1_READ_QOS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_LP1_READ_QOS_AR_QOS         0            /*  Ar Qos */
#define BITM_SCB0_LP1_READ_QOS_AR_QOS        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_LP1_WRITE_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_LP1_WRITE_QOS_AW_QOS        0            /*  Aw Qos */
#define BITM_SCB0_LP1_WRITE_QOS_AW_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC2_CH1_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC2_CH1_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC2_CH1_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC2_CH1_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC2_CH1_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC2_CH1_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC2_CH0_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC2_CH0_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC2_CH0_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC2_CH0_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC2_CH0_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC2_CH0_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC3_CH1_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC3_CH1_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC3_CH1_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC3_CH1_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC3_CH1_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC3_CH1_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRYPTO_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRYPTO_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_CRYPTO_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRYPTO_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRYPTO_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_CRYPTO_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC3_CH0_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC3_CH0_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_CRC3_CH0_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_CRC3_CH0_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_CRC3_CH0_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_CRC3_CH0_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA1_CH1_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA1_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_MSMDMA1_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA1_CH1_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA1_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_MSMDMA1_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_FIR_CH0_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_FIR_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH0_FIR_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_FIR_CH0_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_FIR_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH0_FIR_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_FIR_CH1_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_FIR_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH0_FIR_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_FIR_CH1_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_FIR_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH0_FIR_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA1_CH0_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA1_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_MSMDMA1_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA1_CH0_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA1_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_MSMDMA1_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA1_CH1_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA1_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_HSMDMA1_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA1_CH1_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA1_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_HSMDMA1_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA0_CH0_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA0_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_DLDMA0_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA0_CH0_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA0_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_DLDMA0_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA0_CH1_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA0_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_DLDMA0_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA0_CH1_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA0_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_DLDMA0_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA1_CH0_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA1_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_DLDMA1_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA1_CH0_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA1_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_DLDMA1_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA1_CH1_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA1_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_DLDMA1_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DLDMA1_CH1_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DLDMA1_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_DLDMA1_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA_CH0_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_MSMDMA_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA_CH0_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_MSMDMA_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA_CH1_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_MSMDMA_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_MSMDMA_CH1_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_MSMDMA_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_MSMDMA_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA1_CH0_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA1_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_HSMDMA1_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_HSMDMA1_CH0_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_HSMDMA1_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_HSMDMA1_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PPI_F0_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PPI_F0_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_PPI_F0_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PPI_F0_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PPI_F0_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_PPI_F0_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PPI_F1_READ_QOS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PPI_F1_READ_QOS_AR_QOS      0            /*  Ar Qos */
#define BITM_SCB0_PPI_F1_READ_QOS_AR_QOS     (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PPI_F1_WRITE_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PPI_F1_WRITE_QOS_AW_QOS     0            /*  Aw Qos */
#define BITM_SCB0_PPI_F1_WRITE_QOS_AW_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_USB0_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_USB0_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_USB0_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_USB0_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_USB0_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_USB0_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_IPORT_READ_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_IPORT_READ_QOS_AR_QOS   0            /*  Ar Qos */
#define BITM_SCB0_SH1_IPORT_READ_QOS_AR_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_IPORT_WRITE_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_IPORT_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH1_IPORT_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_DPORT_READ_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_DPORT_READ_QOS_AR_QOS   0            /*  Ar Qos */
#define BITM_SCB0_SH1_DPORT_READ_QOS_AR_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_DPORT_WRITE_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_DPORT_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH1_DPORT_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_MMR_READ_QOS                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_MMR_READ_QOS_AR_QOS     0            /*  Ar Qos */
#define BITM_SCB0_SH1_MMR_READ_QOS_AR_QOS    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_MMR_WRITE_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_MMR_WRITE_QOS_AW_QOS    0            /*  Aw Qos */
#define BITM_SCB0_SH1_MMR_WRITE_QOS_AW_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PL310_M0_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PL310_M0_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_PL310_M0_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PL310_M0_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PL310_M0_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_PL310_M0_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PL310_M1_READ_QOS               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PL310_M1_READ_QOS_AR_QOS    0            /*  Ar Qos */
#define BITM_SCB0_PL310_M1_READ_QOS_AR_QOS   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_PL310_M1_WRITE_QOS              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_PL310_M1_WRITE_QOS_AW_QOS   0            /*  Aw Qos */
#define BITM_SCB0_PL310_M1_WRITE_QOS_AW_QOS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_GIGE_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_GIGE_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_GIGE_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_GIGE_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_GIGE_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_GIGE_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DBG_READ_QOS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DBG_READ_QOS_AR_QOS         0            /*  Ar Qos */
#define BITM_SCB0_DBG_READ_QOS_AR_QOS        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_DBG_WRITE_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_DBG_WRITE_QOS_AW_QOS        0            /*  Aw Qos */
#define BITM_SCB0_DBG_WRITE_QOS_AW_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_ETR_READ_QOS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_ETR_READ_QOS_AR_QOS         0            /*  Ar Qos */
#define BITM_SCB0_ETR_READ_QOS_AR_QOS        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_ETR_WRITE_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_ETR_WRITE_QOS_AW_QOS        0            /*  Aw Qos */
#define BITM_SCB0_ETR_WRITE_QOS_AW_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_EMAC_READ_QOS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_EMAC_READ_QOS_AR_QOS        0            /*  Ar Qos */
#define BITM_SCB0_EMAC_READ_QOS_AR_QOS       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_EMAC_WRITE_QOS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_EMAC_WRITE_QOS_AW_QOS       0            /*  Aw Qos */
#define BITM_SCB0_EMAC_WRITE_QOS_AW_QOS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_FIR_CH1_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_FIR_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH1_FIR_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_FIR_CH1_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_FIR_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH1_FIR_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_FIR_CH0_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_FIR_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH1_FIR_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_FIR_CH0_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_FIR_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH1_FIR_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_IIR_CH0_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_IIR_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH0_IIR_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_IIR_CH0_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_IIR_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH0_IIR_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_IIR_CH1_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_IIR_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH0_IIR_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH0_IIR_CH1_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH0_IIR_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH0_IIR_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_IIR_CH0_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_IIR_CH0_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH1_IIR_CH0_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_IIR_CH0_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_IIR_CH0_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH1_IIR_CH0_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_IIR_CH1_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_IIR_CH1_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB0_SH1_IIR_CH1_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_SH1_IIR_CH1_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_SH1_IIR_CH1_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB0_SH1_IIR_CH1_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB0_LP_SYNC_MODE                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB0_LP_SYNC_MODE_SYNC_MODE      0            /*  Sync Mode. Default is ASYNC('h4) other valid option is M:N('h3). */
#define BITM_SCB0_LP_SYNC_MODE_SYNC_MODE     (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Sync Mode. Default is ASYNC('h4) other valid option is M:N('h3). */


/* ============================================================================================================================
        
   ============================================================================================================================ */

/* ============================================================================================================================
        SCB3
   ============================================================================================================================ */
#define REG_SCB3_LP_MMR_IB_SYNC_MODE         0x30102020            /*  SCB3 DMC MMRG Fabric (CLK08) Synchronization Mode Register */
#define REG_SCB3_DMC_MMR_IB_SYNC_MODE        0x30105020            /*  SCB3 DMC MMRG Fabric (CLK03) Synchronization Mode Register */
#define REG_SCB3_CAN_MMR_IB_SYNC_MODE        0x3010B020            /*  SCB3 DMC MMRG Fabric (CLK04) Synchronization Mode Register */

/* ============================================================================================================================
        SCB3 Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SCB3_LP_MMR_IB_SYNC_MODE             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB3_LP_MMR_IB_SYNC_MODE_SYNC_MODE  0            /*  Sync Mode. Default is ASYNC('h4) other valid option is M:N('h3). */
#define BITM_SCB3_LP_MMR_IB_SYNC_MODE_SYNC_MODE (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Sync Mode. Default is ASYNC('h4) other valid option is M:N('h3). */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB3_DMC_MMR_IB_SYNC_MODE            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB3_DMC_MMR_IB_SYNC_MODE_SYNC_MODE  0            /*  Sync Mode */
#define BITM_SCB3_DMC_MMR_IB_SYNC_MODE_SYNC_MODE (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Sync Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB3_CAN_MMR_IB_SYNC_MODE            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB3_CAN_MMR_IB_SYNC_MODE_SYNC_MODE  0            /*  Sync Mode */
#define BITM_SCB3_CAN_MMR_IB_SYNC_MODE_SYNC_MODE (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Sync Mode */


/* ============================================================================================================================
        
   ============================================================================================================================ */

/* ============================================================================================================================
        SCB1
   ============================================================================================================================ */
#define REG_SCB1_DMC_IB_SYNC_MODE            0x30200020            /*  SCB1 DMC Fabric (CLK03) Synchronization Mode Register */

/* ============================================================================================================================
        SCB1 Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SCB1_DMC_IB_SYNC_MODE                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB1_DMC_IB_SYNC_MODE_SYNC_MODE  0            /*  Sync Mode. Default is ASYNC('h4) other valid option is M:N('h3). */
#define BITM_SCB1_DMC_IB_SYNC_MODE_SYNC_MODE (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Sync Mode. Default is ASYNC('h4) other valid option is M:N('h3). */


/* ============================================================================================================================
        
   ============================================================================================================================ */

/* ============================================================================================================================
        SCB4
   ============================================================================================================================ */
#define REG_SCB4_IIR2_CH0_IB_READ_QOS        0x30342100            /*  SCB4 Iir2 Ch0 Ib.read Qos */
#define REG_SCB4_IIR2_CH0_IB_WRITE_QOS       0x30342104            /*  SCB4 Iir2 Ch0 Ib.write Qos */
#define REG_SCB4_SHARC_DPORT_READ_QOS        0x30343100            /*  SCB4 Sharc Dport.read Qos */
#define REG_SCB4_SHARC_DPORT_WRITE_QOS       0x30343104            /*  SCB4 Sharc Dport.write Qos */
#define REG_SCB4_FABRIC_S2PORT_IB_READ_QOS   0x30344100            /*  SCB4 Fabric S2port Ib.read Qos */
#define REG_SCB4_FABRIC_S2PORT_IB_WRITE_QOS  0x30344104            /*  SCB4 Fabric S2port Ib.write Qos */
#define REG_SCB4_FIR_CH0_IB_READ_QOS         0x30345100            /*  SCB4 Fir Ch0 Ib.read Qos */
#define REG_SCB4_FIR_CH0_IB_WRITE_QOS        0x30345104            /*  SCB4 Fir Ch0 Ib.write Qos */
#define REG_SCB4_FIR_CH1_IB_READ_QOS         0x30346100            /*  SCB4 Fir Ch1 Ib.read Qos */
#define REG_SCB4_FIR_CH1_IB_WRITE_QOS        0x30346104            /*  SCB4 Fir Ch1 Ib.write Qos */
#define REG_SCB4_IIR0_CH0_IB_READ_QOS        0x30347100            /*  SCB4 Iir0 Ch0 Ib.read Qos */
#define REG_SCB4_IIR0_CH0_IB_WRITE_QOS       0x30347104            /*  SCB4 Iir0 Ch0 Ib.write Qos */
#define REG_SCB4_IIR0_CH1_IB_READ_QOS        0x30348100            /*  SCB4 Iir0 Ch1 Ib.read Qos */
#define REG_SCB4_IIR0_CH1_IB_WRITE_QOS       0x30348104            /*  SCB4 Iir0 Ch1 Ib.write Qos */
#define REG_SCB4_IIR2_CH1_IB_READ_QOS        0x30349100            /*  SCB4 Iir2 Ch1 Ib.read Qos */
#define REG_SCB4_IIR2_CH1_IB_WRITE_QOS       0x30349104            /*  SCB4 Iir2 Ch1 Ib.write Qos */
#define REG_SCB4_FABRIC_S1PORT_IB_READ_QOS   0x3034A100            /*  SCB4 Fabric S1port Ib.read Qos */
#define REG_SCB4_FABRIC_S1PORT_IB_WRITE_QOS  0x3034A104            /*  SCB4 Fabric S1port Ib.write Qos */
#define REG_SCB4_IIR3_CH0_IB_READ_QOS        0x3034B100            /*  SCB4 Iir3 Ch0 Ib.read Qos */
#define REG_SCB4_IIR3_CH0_IB_WRITE_QOS       0x3034B104            /*  SCB4 Iir3 Ch0 Ib.write Qos */
#define REG_SCB4_IIR3_CH1_IB_READ_QOS        0x3034C100            /*  SCB4 Iir3 Ch1 Ib.read Qos */
#define REG_SCB4_IIR3_CH1_IB_WRITE_QOS       0x3034C104            /*  SCB4 Iir3 Ch1 Ib.write Qos */
#define REG_SCB4_FABRIC_ACC_MMR_IB_READ_QOS  0x3034D100            /*  SCB4 Fabric Acc Mmr Ib.read Qos */
#define REG_SCB4_FABRIC_ACC_MMR_IB_WRITE_QOS 0x3034D104            /*  SCB4 Fabric Acc Mmr Ib.write Qos */
#define REG_SCB4_IIR1_CH0_IB_READ_QOS        0x3034E100            /*  SCB4 Iir1 Ch0 Ib.read Qos */
#define REG_SCB4_IIR1_CH0_IB_WRITE_QOS       0x3034E104            /*  SCB4 Iir1 Ch0 Ib.write Qos */
#define REG_SCB4_IIR1_CH1_IB_READ_QOS        0x3034F100            /*  SCB4 Iir1 Ch1 Ib.read Qos */
#define REG_SCB4_IIR1_CH1_IB_WRITE_QOS       0x3034F104            /*  SCB4 Iir1 Ch1 Ib.write Qos */

/* ============================================================================================================================
        SCB4 Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR2_CH0_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR2_CH0_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR2_CH0_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR2_CH0_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR2_CH0_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR2_CH0_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_SHARC_DPORT_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_SHARC_DPORT_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_SHARC_DPORT_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_SHARC_DPORT_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_SHARC_DPORT_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_SHARC_DPORT_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FABRIC_S2PORT_IB_READ_QOS       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FABRIC_S2PORT_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_FABRIC_S2PORT_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FABRIC_S2PORT_IB_WRITE_QOS      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FABRIC_S2PORT_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_FABRIC_S2PORT_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FIR_CH0_IB_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FIR_CH0_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_FIR_CH0_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FIR_CH0_IB_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FIR_CH0_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_FIR_CH0_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FIR_CH1_IB_READ_QOS             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FIR_CH1_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_FIR_CH1_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FIR_CH1_IB_WRITE_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FIR_CH1_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_FIR_CH1_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR0_CH0_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR0_CH0_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR0_CH0_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR0_CH0_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR0_CH0_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR0_CH0_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR0_CH1_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR0_CH1_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR0_CH1_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR0_CH1_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR0_CH1_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR0_CH1_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR2_CH1_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR2_CH1_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR2_CH1_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR2_CH1_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR2_CH1_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR2_CH1_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FABRIC_S1PORT_IB_READ_QOS       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FABRIC_S1PORT_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_FABRIC_S1PORT_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FABRIC_S1PORT_IB_WRITE_QOS      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FABRIC_S1PORT_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_FABRIC_S1PORT_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR3_CH0_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR3_CH0_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR3_CH0_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR3_CH0_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR3_CH0_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR3_CH0_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR3_CH1_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR3_CH1_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR3_CH1_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR3_CH1_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR3_CH1_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR3_CH1_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FABRIC_ACC_MMR_IB_READ_QOS      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FABRIC_ACC_MMR_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_FABRIC_ACC_MMR_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_FABRIC_ACC_MMR_IB_WRITE_QOS     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_FABRIC_ACC_MMR_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_FABRIC_ACC_MMR_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR1_CH0_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR1_CH0_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR1_CH0_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR1_CH0_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR1_CH0_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR1_CH0_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR1_CH1_IB_READ_QOS            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR1_CH1_IB_READ_QOS_AR_QOS  0            /*  Ar Qos */
#define BITM_SCB4_IIR1_CH1_IB_READ_QOS_AR_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Ar Qos */

/* -------------------------------------------------------------------------------------------------------------------------
          SCB4_IIR1_CH1_IB_WRITE_QOS           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB4_IIR1_CH1_IB_WRITE_QOS_AW_QOS  0            /*  Aw Qos */
#define BITM_SCB4_IIR1_CH1_IB_WRITE_QOS_AW_QOS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Aw Qos */


/* ============================================================================================================================
        System Crossbars
   ============================================================================================================================ */

/* ============================================================================================================================
        SCB5
   ============================================================================================================================ */
#define REG_SCB5_SPI2_OSPI_REMAP             0x30400000            /*  SCB5 SPI2/OSPI Memory Map Address Remap Register */

/* ============================================================================================================================
        SCB5 Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SCB5_SPI2_OSPI_REMAP                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SCB5_SPI2_OSPI_REMAP_REMAP       0
#define BITM_SCB5_SPI2_OSPI_REMAP_REMAP      (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))
#define ENUM_SCB5_SPI2_OSPI_REMAP_SPI2       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  remap: Selects map for SPI2 only */
#define ENUM_SCB5_SPI2_OSPI_REMAP_OSPI0      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  remap: Selects map for OSPI only */
#define ENUM_SCB5_SPI2_OSPI_REMAP_SHARE_SPI2_OSPI0 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  remap: Selects map for SPI2/OSPI split sharing */


/* ============================================================================================================================
        Link Port
   ============================================================================================================================ */

/* ============================================================================================================================
        LP0
   ============================================================================================================================ */
#define REG_LP0_CTL                          0x30FFE000            /*  LP0 Control Register */
#define REG_LP0_STAT                         0x30FFE004            /*  LP0 Status Register */
#define REG_LP0_DIV                          0x30FFE008            /*  LP0 Clock Divider Value Register */
#define REG_LP0_TX                           0x30FFE010            /*  LP0 Transmit Buffer Register */
#define REG_LP0_RX                           0x30FFE014            /*  LP0 Receive Buffer Register */
#define REG_LP0_TXIN_SHDW                    0x30FFE018            /*  LP0 Shadow Input Transmit Buffer Register */
#define REG_LP0_TXOUT_SHDW                   0x30FFE01C            /*  LP0 Shadow Output Transmit Buffer Register */

/* ============================================================================================================================
        LP1
   ============================================================================================================================ */
#define REG_LP1_CTL                          0x30FFE100            /*  LP1 Control Register */
#define REG_LP1_STAT                         0x30FFE104            /*  LP1 Status Register */
#define REG_LP1_DIV                          0x30FFE108            /*  LP1 Clock Divider Value Register */
#define REG_LP1_TX                           0x30FFE110            /*  LP1 Transmit Buffer Register */
#define REG_LP1_RX                           0x30FFE114            /*  LP1 Receive Buffer Register */
#define REG_LP1_TXIN_SHDW                    0x30FFE118            /*  LP1 Shadow Input Transmit Buffer Register */
#define REG_LP1_TXOUT_SHDW                   0x30FFE11C            /*  LP1 Shadow Output Transmit Buffer Register */

/* ============================================================================================================================
        LP Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          LP_CTL                               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_CTL_MODE                     12            /*  Select Mode of operation */
#define BITP_LP_CTL_ROVFMSK                  11            /*  Receive FIFO Overflow Interrupt Mask */
#define BITP_LP_CTL_RRQMSK                    9            /*  Receive Request Interrupt Mask */
#define BITP_LP_CTL_TRQMSK                    8            /*  Transmit Request Interrupt Mask */
#define BITP_LP_CTL_TRAN                      3            /*  Transfer Direction */
#define BITP_LP_CTL_EN                        0            /*  Enable */
#define BITM_LP_CTL_MODE                     (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  Select Mode of operation */
#define BITM_LP_CTL_ROVFMSK                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Receive FIFO Overflow Interrupt Mask */
#define BITM_LP_CTL_RRQMSK                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive Request Interrupt Mask */
#define BITM_LP_CTL_TRQMSK                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Transmit Request Interrupt Mask */
#define BITM_LP_CTL_TRAN                     (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transfer Direction */
#define BITM_LP_CTL_EN                       (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */
#define ENUM_LP_CTL_8BIT_SDR                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MODE: 8BIT Single Data Rate Mode selected (D0, D1, D2, D3, D4, D5, D6 and D7 data pins used), Default Mode */
#define ENUM_LP_CTL_4BIT_SDR                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  MODE: 4BIT Single Data Rate Mode selected (D0, D1, D2 and D3 data pins used) */
#define ENUM_LP_CTL_2BIT_SDR                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  MODE: 2BIT Single Data Rate Mode selected (D0 and D1 data pins used) */
#define ENUM_LP_CTL_4BIT_DDR                 (_ADI_MSK_3(0x00005000,0x00005000UL, uint32_t  ))    /*  MODE: 4BIT Double Data Rate Mode selected (D0, D1, D2 and D3 data pins used) */
#define ENUM_LP_CTL_2BIT_DDR                 (_ADI_MSK_3(0x00006000,0x00006000UL, uint32_t  ))    /*  MODE: 2BIT Double Data Rate Mode selected (D0 and D1 data pins used) */
#define ENUM_LP_CTL_RX_OVF_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ROVFMSK: Mask */
#define ENUM_LP_CTL_RX_OVF_EN                (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  ROVFMSK: Unmask */
#define ENUM_LP_CTL_RRQ_DIS                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RRQMSK: Mask */
#define ENUM_LP_CTL_RRQ_EN                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RRQMSK: Unmask */
#define ENUM_LP_CTL_TRQ_DIS                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TRQMSK: Mask */
#define ENUM_LP_CTL_TRQ_EN                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  TRQMSK: Unmask */
#define ENUM_LP_CTL_RX                       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TRAN: Receive */
#define ENUM_LP_CTL_TX                       (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRAN: Transmit */
#define ENUM_LP_CTL_DIS                      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_LP_CTL_EN                       (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable linkport */

/* -------------------------------------------------------------------------------------------------------------------------
          LP_STAT                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_STAT_LPBS                     8            /*  Bus Status */
#define BITP_LP_STAT_LPACK                    7            /*  Buffer Pack Status */
#define BITP_LP_STAT_FFST                     4            /*  FIFO Status */
#define BITP_LP_STAT_ROVF                     3            /*  Receive FIFO Overflow Interrupt */
#define BITP_LP_STAT_LRRQ                     1            /*  Receive Request */
#define BITP_LP_STAT_LTRQ                     0            /*  Transmit Request */
#define BITM_LP_STAT_LPBS                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Bus Status */
#define BITM_LP_STAT_LPACK                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Buffer Pack Status */
#define BITM_LP_STAT_FFST                    (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  FIFO Status */
#define BITM_LP_STAT_ROVF                    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Receive FIFO Overflow Interrupt */
#define BITM_LP_STAT_LRRQ                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Request */
#define BITM_LP_STAT_LTRQ                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Request */
#define ENUM_LP_STAT_IDLE                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LPBS: Bus is Idle */
#define ENUM_LP_STAT_BUSY                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  LPBS: Bus Busy */
#define ENUM_LP_STAT_PACK_DONE               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LPACK: Packing Complete */
#define ENUM_LP_STAT_PACK_PROG               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  LPACK: Packing Incomplete */
#define ENUM_LP_STAT_RX0_TX0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FFST: TX - Empty; RX - Empty */
#define ENUM_LP_STAT_RX1_TXR                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  FFST: TX - Reserved ; RX - Has 1 data word */
#define ENUM_LP_STAT_RX2_TXR                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  FFST: TX - Reserved; RX - Has 2 data words */
#define ENUM_LP_STAT_RX3_TXR                 (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  FFST: TX - Reserved; RX - Has 3 data words */
#define ENUM_LP_STAT_RX4_TX1                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  FFST: TX - One Word; RX -Has 4 data words */
#define ENUM_LP_STAT_RXR2_TXR2               (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  FFST: TX - FIFO Full; RX - Reserved */

/* -------------------------------------------------------------------------------------------------------------------------
          LP_DIV                               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_DIV_VALUE                     0            /*  Divisor Value */
#define BITM_LP_DIV_VALUE                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Divisor Value */

/* -------------------------------------------------------------------------------------------------------------------------
          LP_TX                                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_TX_DATA                       0            /*  Transmit Data Buffer */
#define BITM_LP_TX_DATA                      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Data Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          LP_RX                                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_RX_DATA                       0            /*  Receive Buffer */
#define BITM_LP_RX_DATA                      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          LP_TXIN_SHDW                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_TXIN_SHDW_DATA                0            /*  Transmit Data Buffer Shadow Input Stage */
#define BITM_LP_TXIN_SHDW_DATA               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Data Buffer Shadow Input Stage */

/* -------------------------------------------------------------------------------------------------------------------------
          LP_TXOUT_SHDW                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_LP_TXOUT_SHDW_DATA               0            /*  Transmit Data Output Shadow Register */
#define BITM_LP_TXOUT_SHDW_DATA              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Data Output Shadow Register */


/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA30
   ============================================================================================================================ */
#define REG_DMA30_DSCPTR_NXT                 0x30FFF000            /*  DMA30 Pointer to Next Initial Descriptor Register */
#define REG_DMA30_ADDRSTART                  0x30FFF004            /*  DMA30 Start Address of Current Buffer Register */
#define REG_DMA30_CFG                        0x30FFF008            /*  DMA30 Configuration Register */
#define REG_DMA30_XCNT                       0x30FFF00C            /*  DMA30 Inner Loop Count Start Value Register */
#define REG_DMA30_XMOD                       0x30FFF010            /*  DMA30 Inner Loop Address Increment Register */
#define REG_DMA30_YCNT                       0x30FFF014            /*  DMA30 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA30_YMOD                       0x30FFF018            /*  DMA30 Outer Loop Address Increment (2D only) Register */
#define REG_DMA30_DSCPTR_CUR                 0x30FFF024            /*  DMA30 Current Descriptor Pointer Register */
#define REG_DMA30_DSCPTR_PRV                 0x30FFF028            /*  DMA30 Previous Initial Descriptor Pointer Register */
#define REG_DMA30_ADDR_CUR                   0x30FFF02C            /*  DMA30 Current Address Register */
#define REG_DMA30_STAT                       0x30FFF030            /*  DMA30 Status Register */
#define REG_DMA30_XCNT_CUR                   0x30FFF034            /*  DMA30 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA30_YCNT_CUR                   0x30FFF038            /*  DMA30 Current Row Count (2D only) Register */
#define REG_DMA30_BWLCNT                     0x30FFF040            /*  DMA30 Bandwidth Limit Count Register */
#define REG_DMA30_BWLCNT_CUR                 0x30FFF044            /*  DMA30 Bandwidth Limit Count Current Register */
#define REG_DMA30_BWMCNT                     0x30FFF048            /*  DMA30 Bandwidth Monitor Count Register */
#define REG_DMA30_BWMCNT_CUR                 0x30FFF04C            /*  DMA30 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA36
   ============================================================================================================================ */
#define REG_DMA36_DSCPTR_NXT                 0x30FFF080            /*  DMA36 Pointer to Next Initial Descriptor Register */
#define REG_DMA36_ADDRSTART                  0x30FFF084            /*  DMA36 Start Address of Current Buffer Register */
#define REG_DMA36_CFG                        0x30FFF088            /*  DMA36 Configuration Register */
#define REG_DMA36_XCNT                       0x30FFF08C            /*  DMA36 Inner Loop Count Start Value Register */
#define REG_DMA36_XMOD                       0x30FFF090            /*  DMA36 Inner Loop Address Increment Register */
#define REG_DMA36_YCNT                       0x30FFF094            /*  DMA36 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA36_YMOD                       0x30FFF098            /*  DMA36 Outer Loop Address Increment (2D only) Register */
#define REG_DMA36_DSCPTR_CUR                 0x30FFF0A4            /*  DMA36 Current Descriptor Pointer Register */
#define REG_DMA36_DSCPTR_PRV                 0x30FFF0A8            /*  DMA36 Previous Initial Descriptor Pointer Register */
#define REG_DMA36_ADDR_CUR                   0x30FFF0AC            /*  DMA36 Current Address Register */
#define REG_DMA36_STAT                       0x30FFF0B0            /*  DMA36 Status Register */
#define REG_DMA36_XCNT_CUR                   0x30FFF0B4            /*  DMA36 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA36_YCNT_CUR                   0x30FFF0B8            /*  DMA36 Current Row Count (2D only) Register */
#define REG_DMA36_BWLCNT                     0x30FFF0C0            /*  DMA36 Bandwidth Limit Count Register */
#define REG_DMA36_BWLCNT_CUR                 0x30FFF0C4            /*  DMA36 Bandwidth Limit Count Current Register */
#define REG_DMA36_BWMCNT                     0x30FFF0C8            /*  DMA36 Bandwidth Monitor Count Register */
#define REG_DMA36_BWMCNT_CUR                 0x30FFF0CC            /*  DMA36 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          DMA_DSCPTR_NXT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_DSCPTR_NXT_VALUE             0            /*  Pointer to Next Descriptor Set */
#define BITM_DMA_DSCPTR_NXT_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Pointer to Next Descriptor Set */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_ADDRSTART                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_ADDRSTART_VALUE              0            /*  Work Unit Address Start Value */
#define BITM_DMA_ADDRSTART_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Work Unit Address Start Value */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_CFG                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_CFG_PDRF                    28            /*  Peripheral Data Request Forward */
#define BITP_DMA_CFG_TWOD                    26            /*  Two Dimension Addressing Enable */
#define BITP_DMA_CFG_DESCIDCPY               25            /*  Descriptor ID Copy Control */
#define BITP_DMA_CFG_TOVEN                   24            /*  Trigger Overrun Error Enable */
#define BITP_DMA_CFG_TRIG                    22            /*  Generate Outgoing Trigger */
#define BITP_DMA_CFG_INT                     20            /*  Generate Interrupt Request */
#define BITP_DMA_CFG_NDSIZE                  16            /*  Next Descriptor Set Size */
#define BITP_DMA_CFG_TWAIT                   15            /*  Wait for Trigger */
#define BITP_DMA_CFG_FLOW                    12            /*  Next Operation */
#define BITP_DMA_CFG_MSIZE                    8            /*  Memory Transfer Word Size */
#define BITP_DMA_CFG_PSIZE                    4            /*  Peripheral Transfer Word Size */
#define BITP_DMA_CFG_CADDR                    3            /*  Use Current Address */
#define BITP_DMA_CFG_SYNC                     2            /*  Synchronize Work Unit Transitions */
#define BITP_DMA_CFG_WNR                      1            /*  Write/Read Channel Direction */
#define BITP_DMA_CFG_EN                       0            /*  DMA Channel Enable */
#define BITM_DMA_CFG_PDRF                    (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Peripheral Data Request Forward */
#define BITM_DMA_CFG_TWOD                    (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Two Dimension Addressing Enable */
#define BITM_DMA_CFG_DESCIDCPY               (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Descriptor ID Copy Control */
#define BITM_DMA_CFG_TOVEN                   (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Trigger Overrun Error Enable */
#define BITM_DMA_CFG_TRIG                    (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  Generate Outgoing Trigger */
#define BITM_DMA_CFG_INT                     (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Generate Interrupt Request */
#define BITM_DMA_CFG_NDSIZE                  (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  Next Descriptor Set Size */
#define BITM_DMA_CFG_TWAIT                   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Wait for Trigger */
#define BITM_DMA_CFG_FLOW                    (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  Next Operation */
#define BITM_DMA_CFG_MSIZE                   (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  Memory Transfer Word Size */
#define BITM_DMA_CFG_PSIZE                   (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  Peripheral Transfer Word Size */
#define BITM_DMA_CFG_CADDR                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Use Current Address */
#define BITM_DMA_CFG_SYNC                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Synchronize Work Unit Transitions */
#define BITM_DMA_CFG_WNR                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Write/Read Channel Direction */
#define BITM_DMA_CFG_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  DMA Channel Enable */
#define ENUM_DMA_CFG_PDAT_NOTFWD             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PDRF: Peripheral Data Request Not Forwarded */
#define ENUM_DMA_CFG_PDAT_FWD                (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  PDRF: Peripheral Data Request Forwarded */
#define ENUM_DMA_CFG_ADDR1D                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TWOD: One-Dimensional Addressing */
#define ENUM_DMA_CFG_ADDR2D                  (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  TWOD: Two-Dimensional Addressing */
#define ENUM_DMA_CFG_NO_COPY                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DESCIDCPY: Never Copy */
#define ENUM_DMA_CFG_COPY                    (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  DESCIDCPY: Copy on Work Unit Complete */
#define ENUM_DMA_CFG_TOV_DIS                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TOVEN: Ignore Trigger Overrun */
#define ENUM_DMA_CFG_TOV_EN                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  TOVEN: Error on Trigger Overrun */
#define ENUM_DMA_CFG_NO_TRIG                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TRIG: Never Assert Trigger */
#define ENUM_DMA_CFG_XCNT_TRIG               (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  TRIG: Trigger When XCNTCUR Reaches 0 */
#define ENUM_DMA_CFG_YCNT_TRIG               (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  TRIG: Trigger When YCNTCUR Reaches 0 */
#define ENUM_DMA_CFG_NO_INT                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  INT: Never Assert Interrupt */
#define ENUM_DMA_CFG_XCNT_INT                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  INT: Interrupt When X Count Expires */
#define ENUM_DMA_CFG_YCNT_INT                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  INT: Interrupt When Y Count Expires */
#define ENUM_DMA_CFG_PERIPH_INT              (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  INT: Peripheral Interrupt request */
#define ENUM_DMA_CFG_FETCH01                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  NDSIZE: Fetch One Descriptor Element */
#define ENUM_DMA_CFG_FETCH02                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  NDSIZE: Fetch Two Descriptor Elements */
#define ENUM_DMA_CFG_FETCH03                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  NDSIZE: Fetch Three Descriptor Elements */
#define ENUM_DMA_CFG_FETCH04                 (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  NDSIZE: Fetch Four Descriptor Elements */
#define ENUM_DMA_CFG_FETCH05                 (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  NDSIZE: Fetch Five Descriptor Elements */
#define ENUM_DMA_CFG_FETCH06                 (_ADI_MSK_3(0x00050000,0x00050000UL, uint32_t  ))    /*  NDSIZE: Fetch Six Descriptor Elements */
#define ENUM_DMA_CFG_FETCH07                 (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  NDSIZE: Fetch Seven Descriptor Elements */
#define ENUM_DMA_CFG_NO_TRGWAIT              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TWAIT: Begin Work Unit Automatically (No Wait) */
#define ENUM_DMA_CFG_TRGWAIT                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  TWAIT: Wait for Trigger (Halt before Work Unit) */
#define ENUM_DMA_CFG_STOP                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FLOW: STOP. */
#define ENUM_DMA_CFG_AUTO                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  FLOW: AUTO. */
#define ENUM_DMA_CFG_DSCLIST                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  FLOW: DSCL. */
#define ENUM_DMA_CFG_DSCARRAY                (_ADI_MSK_3(0x00005000,0x00005000UL, uint32_t  ))    /*  FLOW: DSCA. */
#define ENUM_DMA_CFG_DODLIST                 (_ADI_MSK_3(0x00006000,0x00006000UL, uint32_t  ))    /*  FLOW: Descriptor On-Demand List. */
#define ENUM_DMA_CFG_DODARRAY                (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  FLOW: Descriptor On Demand Array. */
#define ENUM_DMA_CFG_MSIZE01                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MSIZE: 1 Byte */
#define ENUM_DMA_CFG_MSIZE02                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  MSIZE: 2 Bytes */
#define ENUM_DMA_CFG_MSIZE04                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  MSIZE: 4 Bytes */
#define ENUM_DMA_CFG_MSIZE08                 (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  MSIZE: 8 Bytes */
#define ENUM_DMA_CFG_MSIZE16                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  MSIZE: 16 Bytes */
#define ENUM_DMA_CFG_MSIZE32                 (_ADI_MSK_3(0x00000500,0x00000500UL, uint32_t  ))    /*  MSIZE: 32 Bytes */
#define ENUM_DMA_CFG_PSIZE01                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PSIZE: 1 Byte */
#define ENUM_DMA_CFG_PSIZE02                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  PSIZE: 2 Bytes */
#define ENUM_DMA_CFG_PSIZE04                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  PSIZE: 4 Bytes */
#define ENUM_DMA_CFG_PSIZE08                 (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  PSIZE: 8 Bytes */
#define ENUM_DMA_CFG_LD_STARTADDR            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CADDR: Load Starting Address */
#define ENUM_DMA_CFG_LD_CURADDR              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  CADDR: Use Current Address */
#define ENUM_DMA_CFG_NO_SYNC                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SYNC: No Synchronization */
#define ENUM_DMA_CFG_SYNC                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SYNC: Synchronize Channel */
#define ENUM_DMA_CFG_READ                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WNR: Transmit (Read from memory) */
#define ENUM_DMA_CFG_WRITE                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  WNR: Receive (Write to memory) */
#define ENUM_DMA_CFG_DIS                     (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_DMA_CFG_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_XCNT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_XCNT_VALUE                   0            /*  Work Unit Inner Loop Counter Start Value */
#define BITM_DMA_XCNT_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Work Unit Inner Loop Counter Start Value */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_XMOD                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_XMOD_VALUE                   0            /*  Inner Loop Address Increment in Bytes */
#define BITM_DMA_XMOD_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF, int32_t   ))    /*  Inner Loop Address Increment in Bytes */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_YCNT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_YCNT_VALUE                   0            /*  Work Unit Inner Loop Counter Current Value */
#define BITM_DMA_YCNT_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Work Unit Inner Loop Counter Current Value */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_YMOD                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_YMOD_VALUE                   0            /*  Outer Loop Address Increment in Bytes */
#define BITM_DMA_YMOD_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF, int32_t   ))    /*  Outer Loop Address Increment in Bytes */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_DSCPTR_CUR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_DSCPTR_CUR_VALUE             0            /*  Pointer for Current Descriptor Element */
#define BITM_DMA_DSCPTR_CUR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Pointer for Current Descriptor Element */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_DSCPTR_PRV                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_DSCPTR_PRV_DESCPPREV         2            /*  Descriptor Pointer for Previous Element */
#define BITP_DMA_DSCPTR_PRV_PDPO              0            /*  Previous Descriptor Pointer Overrun */
#define BITM_DMA_DSCPTR_PRV_DESCPPREV        (_ADI_MSK_3(0xFFFFFFFC,0xFFFFFFFCUL, uint32_t  ))    /*  Descriptor Pointer for Previous Element */
#define BITM_DMA_DSCPTR_PRV_PDPO             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Previous Descriptor Pointer Overrun */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_ADDR_CUR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_ADDR_CUR_VALUE               0            /*  Work Unit Current Address Value */
#define BITM_DMA_ADDR_CUR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Work Unit Current Address Value */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_STAT_TWAIT                  20            /*  Trigger Wait Status */
#define BITP_DMA_STAT_FIFOFILL               16            /*  FIFO Fill Status */
#define BITP_DMA_STAT_MBWID                  14            /*  Memory Bus Width */
#define BITP_DMA_STAT_PBWID                  12            /*  Peripheral Bus Width */
#define BITP_DMA_STAT_RUN                     8            /*  Run Status */
#define BITP_DMA_STAT_ERRC                    4            /*  Error Cause */
#define BITP_DMA_STAT_PIRQ                    2            /*  Peripheral Interrupt Request */
#define BITP_DMA_STAT_IRQERR                  1            /*  Error Interrupt Request */
#define BITP_DMA_STAT_IRQDONE                 0            /*  Work Unit/Row Done Interrupt */
#define BITM_DMA_STAT_TWAIT                  (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Trigger Wait Status */
#define BITM_DMA_STAT_FIFOFILL               (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  FIFO Fill Status */
#define BITM_DMA_STAT_MBWID                  (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  Memory Bus Width */
#define BITM_DMA_STAT_PBWID                  (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Peripheral Bus Width */
#define BITM_DMA_STAT_RUN                    (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  Run Status */
#define BITM_DMA_STAT_ERRC                   (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  Error Cause */
#define BITM_DMA_STAT_PIRQ                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Peripheral Interrupt Request */
#define BITM_DMA_STAT_IRQERR                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Error Interrupt Request */
#define BITM_DMA_STAT_IRQDONE                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Work Unit/Row Done Interrupt */
#define ENUM_DMA_STAT_NOTRIGRX               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TWAIT: No Trigger Received */
#define ENUM_DMA_STAT_TRIGRX                 (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  TWAIT: Trigger Received */
#define ENUM_DMA_STAT_FIFOEMPTY              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FIFOFILL: Empty */
#define ENUM_DMA_STAT_FIFO25                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  FIFOFILL: Empty < FIFO = 1/4 Full */
#define ENUM_DMA_STAT_FIFO50                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  FIFOFILL: 1/4 Full < FIFO = 1/2 Full */
#define ENUM_DMA_STAT_FIFO75                 (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  FIFOFILL: 1/2 Full < FIFO = 3/4 Full */
#define ENUM_DMA_STAT_FIFONEARFULL           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  FIFOFILL: 3/4 Full < FIFO = Full */
#define ENUM_DMA_STAT_FIFOFULL               (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  FIFOFILL: Full */
#define ENUM_DMA_STAT_MBUS02                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MBWID: 2 Bytes */
#define ENUM_DMA_STAT_MBUS04                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  MBWID: 4 Bytes */
#define ENUM_DMA_STAT_MBUS08                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  MBWID: 8 Bytes */
#define ENUM_DMA_STAT_MBUS16                 (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  MBWID: 16 Bytes */
#define ENUM_DMA_STAT_PBUS01                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PBWID: 1 Byte */
#define ENUM_DMA_STAT_PBUS02                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  PBWID: 2 Bytes */
#define ENUM_DMA_STAT_PBUS04                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  PBWID: 4 Bytes */
#define ENUM_DMA_STAT_PBUS08                 (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  PBWID: 8 Bytes */
#define ENUM_DMA_STAT_STOPPED                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RUN: Idle/Stop State */
#define ENUM_DMA_STAT_DSCFETCH               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RUN: Descriptor Fetch */
#define ENUM_DMA_STAT_DATAXFER               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RUN: Data Transfer */
#define ENUM_DMA_STAT_TRGWAIT                (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  RUN: Waiting for Trigger */
#define ENUM_DMA_STAT_ACKWAIT                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RUN: Waiting for Write ACK/FIFO Drain to Peripheral */
#define ENUM_DMA_STAT_CFGERR                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRC: Configuration Error */
#define ENUM_DMA_STAT_ILLWRERR               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ERRC: Illegal Write Occurred While Channel Running */
#define ENUM_DMA_STAT_ALGNERR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  ERRC: Address Alignment Error */
#define ENUM_DMA_STAT_MEMERR                 (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  ERRC: Memory Access or Fabric Error */
#define ENUM_DMA_STAT_TRGOVERR               (_ADI_MSK_3(0x00000050,0x00000050UL, uint32_t  ))    /*  ERRC: Trigger Overrun */
#define ENUM_DMA_STAT_BWMONERR               (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  ERRC: Bandwidth Monitor Error */
#define ENUM_DMA_STAT_NO_PIRQ                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PIRQ: No Interrupt request */
#define ENUM_DMA_STAT_PIRQ                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PIRQ: Interrupt Request signaled by peripheral */
#define ENUM_DMA_STAT_NO_IRQERR              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IRQERR: No Error */
#define ENUM_DMA_STAT_IRQERR                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  IRQERR: Error Occurred */
#define ENUM_DMA_STAT_NO_IRQ                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IRQDONE: Inactive */
#define ENUM_DMA_STAT_IRQDONE                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  IRQDONE: Active */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_XCNT_CUR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_XCNT_CUR_VALUE               0            /*  Work Unit Outer Loop Counter Start Value */
#define BITM_DMA_XCNT_CUR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Work Unit Outer Loop Counter Start Value */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_YCNT_CUR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_YCNT_CUR_VALUE               0            /*  Work Unit Outer Loop Counter Current Value */
#define BITM_DMA_YCNT_CUR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Work Unit Outer Loop Counter Current Value */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_BWLCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_BWLCNT_VALUE                 0            /*  Bandwidth Limit Count */
#define BITM_DMA_BWLCNT_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Bandwidth Limit Count */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_BWLCNT_CUR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_BWLCNT_CUR_VALUE             0            /*  Bandwidth Limit Count Current */
#define BITM_DMA_BWLCNT_CUR_VALUE            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Bandwidth Limit Count Current */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_BWMCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_BWMCNT_VALUE                 0            /*  Bandwidth Monitor Count */
#define BITM_DMA_BWMCNT_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Bandwidth Monitor Count */

/* -------------------------------------------------------------------------------------------------------------------------
          DMA_BWMCNT_CUR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMA_BWMCNT_CUR_VALUE             0            /*  Bandwidth Monitor Count Current */
#define BITM_DMA_BWMCNT_CUR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Bandwidth Monitor Count Current */


/* ============================================================================================================================
        Two-Wire Interface
   ============================================================================================================================ */

/* ============================================================================================================================
        TWI0
   ============================================================================================================================ */
#define REG_TWI0_CLKDIV                      0x31001400            /*  TWI0 SCL Clock Divider Register */
#define REG_TWI0_CTL                         0x31001404            /*  TWI0 Control Register */
#define REG_TWI0_SLVCTL                      0x31001408            /*  TWI0 Slave Mode Control Register */
#define REG_TWI0_SLVSTAT                     0x3100140C            /*  TWI0 Slave Mode Status Register */
#define REG_TWI0_SLVADDR                     0x31001410            /*  TWI0 Slave Mode Address Register */
#define REG_TWI0_MSTRCTL                     0x31001414            /*  TWI0 Master Mode Control Registers */
#define REG_TWI0_MSTRSTAT                    0x31001418            /*  TWI0 Master Mode Status Register */
#define REG_TWI0_MSTRADDR                    0x3100141C            /*  TWI0 Master Mode Address Register */
#define REG_TWI0_ISTAT                       0x31001420            /*  TWI0 Interrupt Status Register */
#define REG_TWI0_IMSK                        0x31001424            /*  TWI0 Interrupt Mask Register */
#define REG_TWI0_FIFOCTL                     0x31001428            /*  TWI0 FIFO Control Register */
#define REG_TWI0_FIFOSTAT                    0x3100142C            /*  TWI0 FIFO Status Register */
#define REG_TWI0_TXDATA8                     0x31001480            /*  TWI0 Tx Data Single-Byte Register */
#define REG_TWI0_TXDATA16                    0x31001484            /*  TWI0 Tx Data Double-Byte Register */
#define REG_TWI0_RXDATA8                     0x31001488            /*  TWI0 Rx Data Single-Byte Register */
#define REG_TWI0_RXDATA16                    0x3100148C            /*  TWI0 Rx Data Double-Byte Register */

/* ============================================================================================================================
        TWI1
   ============================================================================================================================ */
#define REG_TWI1_CLKDIV                      0x31001500            /*  TWI1 SCL Clock Divider Register */
#define REG_TWI1_CTL                         0x31001504            /*  TWI1 Control Register */
#define REG_TWI1_SLVCTL                      0x31001508            /*  TWI1 Slave Mode Control Register */
#define REG_TWI1_SLVSTAT                     0x3100150C            /*  TWI1 Slave Mode Status Register */
#define REG_TWI1_SLVADDR                     0x31001510            /*  TWI1 Slave Mode Address Register */
#define REG_TWI1_MSTRCTL                     0x31001514            /*  TWI1 Master Mode Control Registers */
#define REG_TWI1_MSTRSTAT                    0x31001518            /*  TWI1 Master Mode Status Register */
#define REG_TWI1_MSTRADDR                    0x3100151C            /*  TWI1 Master Mode Address Register */
#define REG_TWI1_ISTAT                       0x31001520            /*  TWI1 Interrupt Status Register */
#define REG_TWI1_IMSK                        0x31001524            /*  TWI1 Interrupt Mask Register */
#define REG_TWI1_FIFOCTL                     0x31001528            /*  TWI1 FIFO Control Register */
#define REG_TWI1_FIFOSTAT                    0x3100152C            /*  TWI1 FIFO Status Register */
#define REG_TWI1_TXDATA8                     0x31001580            /*  TWI1 Tx Data Single-Byte Register */
#define REG_TWI1_TXDATA16                    0x31001584            /*  TWI1 Tx Data Double-Byte Register */
#define REG_TWI1_RXDATA8                     0x31001588            /*  TWI1 Rx Data Single-Byte Register */
#define REG_TWI1_RXDATA16                    0x3100158C            /*  TWI1 Rx Data Double-Byte Register */

/* ============================================================================================================================
        TWI2
   ============================================================================================================================ */
#define REG_TWI2_CLKDIV                      0x31001600            /*  TWI2 SCL Clock Divider Register */
#define REG_TWI2_CTL                         0x31001604            /*  TWI2 Control Register */
#define REG_TWI2_SLVCTL                      0x31001608            /*  TWI2 Slave Mode Control Register */
#define REG_TWI2_SLVSTAT                     0x3100160C            /*  TWI2 Slave Mode Status Register */
#define REG_TWI2_SLVADDR                     0x31001610            /*  TWI2 Slave Mode Address Register */
#define REG_TWI2_MSTRCTL                     0x31001614            /*  TWI2 Master Mode Control Registers */
#define REG_TWI2_MSTRSTAT                    0x31001618            /*  TWI2 Master Mode Status Register */
#define REG_TWI2_MSTRADDR                    0x3100161C            /*  TWI2 Master Mode Address Register */
#define REG_TWI2_ISTAT                       0x31001620            /*  TWI2 Interrupt Status Register */
#define REG_TWI2_IMSK                        0x31001624            /*  TWI2 Interrupt Mask Register */
#define REG_TWI2_FIFOCTL                     0x31001628            /*  TWI2 FIFO Control Register */
#define REG_TWI2_FIFOSTAT                    0x3100162C            /*  TWI2 FIFO Status Register */
#define REG_TWI2_TXDATA8                     0x31001680            /*  TWI2 Tx Data Single-Byte Register */
#define REG_TWI2_TXDATA16                    0x31001684            /*  TWI2 Tx Data Double-Byte Register */
#define REG_TWI2_RXDATA8                     0x31001688            /*  TWI2 Rx Data Single-Byte Register */
#define REG_TWI2_RXDATA16                    0x3100168C            /*  TWI2 Rx Data Double-Byte Register */

/* ============================================================================================================================
        TWI3
   ============================================================================================================================ */
#define REG_TWI3_CLKDIV                      0x31001000            /*  TWI3 SCL Clock Divider Register */
#define REG_TWI3_CTL                         0x31001004            /*  TWI3 Control Register */
#define REG_TWI3_SLVCTL                      0x31001008            /*  TWI3 Slave Mode Control Register */
#define REG_TWI3_SLVSTAT                     0x3100100C            /*  TWI3 Slave Mode Status Register */
#define REG_TWI3_SLVADDR                     0x31001010            /*  TWI3 Slave Mode Address Register */
#define REG_TWI3_MSTRCTL                     0x31001014            /*  TWI3 Master Mode Control Registers */
#define REG_TWI3_MSTRSTAT                    0x31001018            /*  TWI3 Master Mode Status Register */
#define REG_TWI3_MSTRADDR                    0x3100101C            /*  TWI3 Master Mode Address Register */
#define REG_TWI3_ISTAT                       0x31001020            /*  TWI3 Interrupt Status Register */
#define REG_TWI3_IMSK                        0x31001024            /*  TWI3 Interrupt Mask Register */
#define REG_TWI3_FIFOCTL                     0x31001028            /*  TWI3 FIFO Control Register */
#define REG_TWI3_FIFOSTAT                    0x3100102C            /*  TWI3 FIFO Status Register */
#define REG_TWI3_TXDATA8                     0x31001080            /*  TWI3 Tx Data Single-Byte Register */
#define REG_TWI3_TXDATA16                    0x31001084            /*  TWI3 Tx Data Double-Byte Register */
#define REG_TWI3_RXDATA8                     0x31001088            /*  TWI3 Rx Data Single-Byte Register */
#define REG_TWI3_RXDATA16                    0x3100108C            /*  TWI3 Rx Data Double-Byte Register */

/* ============================================================================================================================
        TWI4
   ============================================================================================================================ */
#define REG_TWI4_CLKDIV                      0x31001100            /*  TWI4 SCL Clock Divider Register */
#define REG_TWI4_CTL                         0x31001104            /*  TWI4 Control Register */
#define REG_TWI4_SLVCTL                      0x31001108            /*  TWI4 Slave Mode Control Register */
#define REG_TWI4_SLVSTAT                     0x3100110C            /*  TWI4 Slave Mode Status Register */
#define REG_TWI4_SLVADDR                     0x31001110            /*  TWI4 Slave Mode Address Register */
#define REG_TWI4_MSTRCTL                     0x31001114            /*  TWI4 Master Mode Control Registers */
#define REG_TWI4_MSTRSTAT                    0x31001118            /*  TWI4 Master Mode Status Register */
#define REG_TWI4_MSTRADDR                    0x3100111C            /*  TWI4 Master Mode Address Register */
#define REG_TWI4_ISTAT                       0x31001120            /*  TWI4 Interrupt Status Register */
#define REG_TWI4_IMSK                        0x31001124            /*  TWI4 Interrupt Mask Register */
#define REG_TWI4_FIFOCTL                     0x31001128            /*  TWI4 FIFO Control Register */
#define REG_TWI4_FIFOSTAT                    0x3100112C            /*  TWI4 FIFO Status Register */
#define REG_TWI4_TXDATA8                     0x31001180            /*  TWI4 Tx Data Single-Byte Register */
#define REG_TWI4_TXDATA16                    0x31001184            /*  TWI4 Tx Data Double-Byte Register */
#define REG_TWI4_RXDATA8                     0x31001188            /*  TWI4 Rx Data Single-Byte Register */
#define REG_TWI4_RXDATA16                    0x3100118C            /*  TWI4 Rx Data Double-Byte Register */

/* ============================================================================================================================
        TWI5
   ============================================================================================================================ */
#define REG_TWI5_CLKDIV                      0x31001200            /*  TWI5 SCL Clock Divider Register */
#define REG_TWI5_CTL                         0x31001204            /*  TWI5 Control Register */
#define REG_TWI5_SLVCTL                      0x31001208            /*  TWI5 Slave Mode Control Register */
#define REG_TWI5_SLVSTAT                     0x3100120C            /*  TWI5 Slave Mode Status Register */
#define REG_TWI5_SLVADDR                     0x31001210            /*  TWI5 Slave Mode Address Register */
#define REG_TWI5_MSTRCTL                     0x31001214            /*  TWI5 Master Mode Control Registers */
#define REG_TWI5_MSTRSTAT                    0x31001218            /*  TWI5 Master Mode Status Register */
#define REG_TWI5_MSTRADDR                    0x3100121C            /*  TWI5 Master Mode Address Register */
#define REG_TWI5_ISTAT                       0x31001220            /*  TWI5 Interrupt Status Register */
#define REG_TWI5_IMSK                        0x31001224            /*  TWI5 Interrupt Mask Register */
#define REG_TWI5_FIFOCTL                     0x31001228            /*  TWI5 FIFO Control Register */
#define REG_TWI5_FIFOSTAT                    0x3100122C            /*  TWI5 FIFO Status Register */
#define REG_TWI5_TXDATA8                     0x31001280            /*  TWI5 Tx Data Single-Byte Register */
#define REG_TWI5_TXDATA16                    0x31001284            /*  TWI5 Tx Data Double-Byte Register */
#define REG_TWI5_RXDATA8                     0x31001288            /*  TWI5 Rx Data Single-Byte Register */
#define REG_TWI5_RXDATA16                    0x3100128C            /*  TWI5 Rx Data Double-Byte Register */

/* ============================================================================================================================
        TWI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TWI_CLKDIV                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_CLKDIV_CLKHI                 8            /*  SCL Clock High Periods */
#define BITP_TWI_CLKDIV_CLKLO                 0            /*  SCL Clock Low Periods */
#define BITM_TWI_CLKDIV_CLKHI                (_ADI_MSK_3(0x0000FF00,0x0000FF00U, uint16_t  ))    /*  SCL Clock High Periods */
#define BITM_TWI_CLKDIV_CLKLO                (_ADI_MSK_3(0x000000FF,0x000000FFU, uint16_t  ))    /*  SCL Clock Low Periods */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_CTL_SCCB                     9            /*  SCCB Compatibility */
#define BITP_TWI_CTL_EN                       7            /*  Enable Module */
#define BITP_TWI_CTL_PRESCALE                 0            /*  SCLK0 Prescale Value */
#define BITM_TWI_CTL_SCCB                    (_ADI_MSK_3(0x00000200,0x00000200U, uint16_t  ))    /*  SCCB Compatibility */
#define BITM_TWI_CTL_EN                      (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  Enable Module */
#define BITM_TWI_CTL_PRESCALE                (_ADI_MSK_3(0x0000007F,0x0000007FU, uint16_t  ))    /*  SCLK0 Prescale Value */
#define ENUM_TWI_CTL_SCCB_DIS                (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCCB: Disable SCCB compatibility. */
#define ENUM_TWI_CTL_SCCB_EN                 (_ADI_MSK_3(0x00000200,0x00000200U, uint16_t  ))    /*  SCCB: Enable SCCB compatibility. */
#define ENUM_TWI_CTL_DIS                     (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  EN: Disable */
#define ENUM_TWI_CTL_EN                      (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_SLVCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_SLVCTL_GEN                   4            /*  General Call Enable */
#define BITP_TWI_SLVCTL_NAK                   3            /*  Not Acknowledge */
#define BITP_TWI_SLVCTL_TDVAL                 2            /*  Transmit Data Valid for Slave */
#define BITP_TWI_SLVCTL_EN                    0            /*  Enable Slave Mode */
#define BITM_TWI_SLVCTL_GEN                  (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  General Call Enable */
#define BITM_TWI_SLVCTL_NAK                  (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  Not Acknowledge */
#define BITM_TWI_SLVCTL_TDVAL                (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  Transmit Data Valid for Slave */
#define BITM_TWI_SLVCTL_EN                   (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Enable Slave Mode */
#define ENUM_TWI_SLVCTL_GDIS                 (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  GEN: Disable General Call Matching */
#define ENUM_TWI_SLVCTL_GEN                  (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  GEN: Enable General Call Matching */
#define ENUM_TWI_SLVCTL_ACKGEN               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  NAK: Generate ACK */
#define ENUM_TWI_SLVCTL_NAKGEN               (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  NAK: Generate NAK */
#define ENUM_TWI_SLVCTL_INVALID              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  TDVAL: Data Invalid for Slave Tx */
#define ENUM_TWI_SLVCTL_VALID                (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  TDVAL: Data Valid for Slave Tx */
#define ENUM_TWI_SLVCTL_DIS                  (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  EN: Disable */
#define ENUM_TWI_SLVCTL_EN                   (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_SLVSTAT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_SLVSTAT_GCALL                1            /*  General Call */
#define BITP_TWI_SLVSTAT_DIR                  0            /*  Transfer Direction for Slave */
#define BITM_TWI_SLVSTAT_GCALL               (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  General Call */
#define BITM_TWI_SLVSTAT_DIR                 (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Transfer Direction for Slave */
#define ENUM_TWI_SLVSTAT_NO                  (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  GCALL: Not a General Call Address */
#define ENUM_TWI_SLVSTAT_YES                 (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  GCALL: General Call Address */
#define ENUM_TWI_SLVSTAT_RX                  (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  DIR: Slave Receive */
#define ENUM_TWI_SLVSTAT_TX                  (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  DIR: Slave Transmit */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_SLVADDR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_SLVADDR_ADDR                 0            /*  Slave Mode Address */
#define BITM_TWI_SLVADDR_ADDR                (_ADI_MSK_3(0x0000007F,0x0000007FU, uint16_t  ))    /*  Slave Mode Address */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_MSTRCTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_MSTRCTL_SCLOVR              15            /*  Serial Clock Override */
#define BITP_TWI_MSTRCTL_SDAOVR              14            /*  Serial Data Override */
#define BITP_TWI_MSTRCTL_DCNT                 6            /*  Data Transfer Count */
#define BITP_TWI_MSTRCTL_RSTART               5            /*  Repeat Start */
#define BITP_TWI_MSTRCTL_STOP                 4            /*  Issue Stop Condition */
#define BITP_TWI_MSTRCTL_FAST                 3            /*  Fast Mode */
#define BITP_TWI_MSTRCTL_DIR                  2            /*  Transfer Direction for Master */
#define BITP_TWI_MSTRCTL_EN                   0            /*  Enable Master Mode */
#define BITM_TWI_MSTRCTL_SCLOVR              (_ADI_MSK_3(0x00008000,0x00008000U, uint16_t  ))    /*  Serial Clock Override */
#define BITM_TWI_MSTRCTL_SDAOVR              (_ADI_MSK_3(0x00004000,0x00004000U, uint16_t  ))    /*  Serial Data Override */
#define BITM_TWI_MSTRCTL_DCNT                (_ADI_MSK_3(0x00003FC0,0x00003FC0U, uint16_t  ))    /*  Data Transfer Count */
#define BITM_TWI_MSTRCTL_RSTART              (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  Repeat Start */
#define BITM_TWI_MSTRCTL_STOP                (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  Issue Stop Condition */
#define BITM_TWI_MSTRCTL_FAST                (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  Fast Mode */
#define BITM_TWI_MSTRCTL_DIR                 (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  Transfer Direction for Master */
#define BITM_TWI_MSTRCTL_EN                  (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Enable Master Mode */
#define ENUM_TWI_MSTRCTL_SCLNORM             (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCLOVR: Permit Normal SCL Operation */
#define ENUM_TWI_MSTRCTL_SCLOVER             (_ADI_MSK_3(0x00008000,0x00008000U, uint16_t  ))    /*  SCLOVR: Override Normal SCL Operation */
#define ENUM_TWI_MSTRCTL_SDANORM             (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SDAOVR: Permit Normal SDA Operation */
#define ENUM_TWI_MSTRCTL_SDAOVER             (_ADI_MSK_3(0x00004000,0x00004000U, uint16_t  ))    /*  SDAOVR: Override Normal SDA Operation */
#define ENUM_TWI_MSTRCTL_END                 (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  RSTART: Disable Repeat Start */
#define ENUM_TWI_MSTRCTL_RPT                 (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  RSTART: Enable Repeat Start */
#define ENUM_TWI_MSTRCTL_NORM                (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  STOP: Permit Normal Operation */
#define ENUM_TWI_MSTRCTL_STOP                (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  STOP: Issue Stop */
#define ENUM_TWI_MSTRCTL_SMODE               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  FAST: Select Standard Mode */
#define ENUM_TWI_MSTRCTL_FAST                (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  FAST: Select Fast Mode */
#define ENUM_TWI_MSTRCTL_TX                  (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  DIR: Master Transmit */
#define ENUM_TWI_MSTRCTL_RX                  (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  DIR: Master Receive */
#define ENUM_TWI_MSTRCTL_DIS                 (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  EN: Disable */
#define ENUM_TWI_MSTRCTL_EN                  (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_MSTRSTAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_MSTRSTAT_BUSBUSY             8            /*  Bus Busy */
#define BITP_TWI_MSTRSTAT_SCLSEN              7            /*  Serial Clock Sense */
#define BITP_TWI_MSTRSTAT_SDASEN              6            /*  Serial Data Sense */
#define BITP_TWI_MSTRSTAT_BUFWRERR            5            /*  Buffer Write Error */
#define BITP_TWI_MSTRSTAT_BUFRDERR            4            /*  Buffer Read Error */
#define BITP_TWI_MSTRSTAT_DNAK                3            /*  Data Not Acknowledged */
#define BITP_TWI_MSTRSTAT_ANAK                2            /*  Address Not Acknowledged */
#define BITP_TWI_MSTRSTAT_LOSTARB             1            /*  Lost Arbitration */
#define BITP_TWI_MSTRSTAT_MPROG               0            /*  Master Transfer in Progress */
#define BITM_TWI_MSTRSTAT_BUSBUSY            (_ADI_MSK_3(0x00000100,0x00000100U, uint16_t  ))    /*  Bus Busy */
#define BITM_TWI_MSTRSTAT_SCLSEN             (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  Serial Clock Sense */
#define BITM_TWI_MSTRSTAT_SDASEN             (_ADI_MSK_3(0x00000040,0x00000040U, uint16_t  ))    /*  Serial Data Sense */
#define BITM_TWI_MSTRSTAT_BUFWRERR           (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  Buffer Write Error */
#define BITM_TWI_MSTRSTAT_BUFRDERR           (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  Buffer Read Error */
#define BITM_TWI_MSTRSTAT_DNAK               (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  Data Not Acknowledged */
#define BITM_TWI_MSTRSTAT_ANAK               (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  Address Not Acknowledged */
#define BITM_TWI_MSTRSTAT_LOSTARB            (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  Lost Arbitration */
#define BITM_TWI_MSTRSTAT_MPROG              (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Master Transfer in Progress */
#define ENUM_TWI_MSTRSTAT_FREE               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  BUSBUSY: Bus Free. */
#define ENUM_TWI_MSTRSTAT_BUSY               (_ADI_MSK_3(0x00000100,0x00000100U, uint16_t  ))    /*  BUSBUSY: Bus Busy. */
#define ENUM_TWI_MSTRSTAT_SCLSEN_NO          (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCLSEN: SCL Inactive "One". */
#define ENUM_TWI_MSTRSTAT_SCLSEN_YES         (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  SCLSEN: SCL Active "Zero". */
#define ENUM_TWI_MSTRSTAT_SDASEN_NO          (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SDASEN: SDA Inactive "One". */
#define ENUM_TWI_MSTRSTAT_SDASEN_YES         (_ADI_MSK_3(0x00000040,0x00000040U, uint16_t  ))    /*  SDASEN: SDA Active "Zero". */
#define ENUM_TWI_MSTRSTAT_BUFWRERR_NO        (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  BUFWRERR: No Status */
#define ENUM_TWI_MSTRSTAT_BUFWRERR_YES       (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  BUFWRERR: Buffer Write Error */
#define ENUM_TWI_MSTRSTAT_BUFRDERR_NO        (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  BUFRDERR: No Status */
#define ENUM_TWI_MSTRSTAT_BUFRDERR_YES       (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  BUFRDERR: Buffer Read Error */
#define ENUM_TWI_MSTRSTAT_DNAK_NO            (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  DNAK: No Status */
#define ENUM_TWI_MSTRSTAT_DNAK_YES           (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  DNAK: Data NAK */
#define ENUM_TWI_MSTRSTAT_ANAK_NO            (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  ANAK: No Status */
#define ENUM_TWI_MSTRSTAT_ANAK_YES           (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  ANAK: Address NAK */
#define ENUM_TWI_MSTRSTAT_LOSTARB_NO         (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  LOSTARB: No Status */
#define ENUM_TWI_MSTRSTAT_LOSTARB_YES        (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  LOSTARB: Lost Arbitration */
#define ENUM_TWI_MSTRSTAT_MPROG_NO           (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  MPROG: No Status */
#define ENUM_TWI_MSTRSTAT_MPROG_YES          (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  MPROG: Master Transfer in Progress */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_MSTRADDR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_MSTRADDR_ADDR                0            /*  Master Mode Address */
#define BITM_TWI_MSTRADDR_ADDR               (_ADI_MSK_3(0x0000007F,0x0000007FU, uint16_t  ))    /*  Master Mode Address */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_ISTAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_ISTAT_SCLI                  15            /*  Serial Clock Interrupt */
#define BITP_TWI_ISTAT_SDAI                  14            /*  Serial Data Interrupt */
#define BITP_TWI_ISTAT_RXSERV                 7            /*  Rx FIFO Service */
#define BITP_TWI_ISTAT_TXSERV                 6            /*  Tx FIFO Service */
#define BITP_TWI_ISTAT_MERR                   5            /*  Master Transfer Error */
#define BITP_TWI_ISTAT_MCOMP                  4            /*  Master Transfer Complete */
#define BITP_TWI_ISTAT_SOVF                   3            /*  Slave Overflow */
#define BITP_TWI_ISTAT_SERR                   2            /*  Slave Transfer Error */
#define BITP_TWI_ISTAT_SCOMP                  1            /*  Slave Transfer Complete */
#define BITP_TWI_ISTAT_SINIT                  0            /*  Slave Transfer Initiated */
#define BITM_TWI_ISTAT_SCLI                  (_ADI_MSK_3(0x00008000,0x00008000U, uint16_t  ))    /*  Serial Clock Interrupt */
#define BITM_TWI_ISTAT_SDAI                  (_ADI_MSK_3(0x00004000,0x00004000U, uint16_t  ))    /*  Serial Data Interrupt */
#define BITM_TWI_ISTAT_RXSERV                (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  Rx FIFO Service */
#define BITM_TWI_ISTAT_TXSERV                (_ADI_MSK_3(0x00000040,0x00000040U, uint16_t  ))    /*  Tx FIFO Service */
#define BITM_TWI_ISTAT_MERR                  (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  Master Transfer Error */
#define BITM_TWI_ISTAT_MCOMP                 (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  Master Transfer Complete */
#define BITM_TWI_ISTAT_SOVF                  (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  Slave Overflow */
#define BITM_TWI_ISTAT_SERR                  (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  Slave Transfer Error */
#define BITM_TWI_ISTAT_SCOMP                 (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  Slave Transfer Complete */
#define BITM_TWI_ISTAT_SINIT                 (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Slave Transfer Initiated */
#define ENUM_TWI_ISTAT_SCLI_NO               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCLI: No Interrupt. */
#define ENUM_TWI_ISTAT_SCLI_YES              (_ADI_MSK_3(0x00008000,0x00008000U, uint16_t  ))    /*  SCLI: Interrupt Detected. */
#define ENUM_TWI_ISTAT_SDAI_NO               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SDAI: No Interrupt. */
#define ENUM_TWI_ISTAT_SDAI_YES              (_ADI_MSK_3(0x00004000,0x00004000U, uint16_t  ))    /*  SDAI: Interrupt Detected. */
#define ENUM_TWI_ISTAT_RXSERV_NO             (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  RXSERV: No Interrupt. */
#define ENUM_TWI_ISTAT_RXSERV_YES            (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  RXSERV: Interrupt Detected. */
#define ENUM_TWI_ISTAT_TXSERV_NO             (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  TXSERV: No Interrupt. */
#define ENUM_TWI_ISTAT_TXSERV_YES            (_ADI_MSK_3(0x00000040,0x00000040U, uint16_t  ))    /*  TXSERV: Interrupt Detected. */
#define ENUM_TWI_ISTAT_MERR_NO               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  MERR: No Interrupt */
#define ENUM_TWI_ISTAT_MERR_YES              (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  MERR: Interrupt Detected */
#define ENUM_TWI_ISTAT_MCOMP_NO              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  MCOMP: No Interrupt */
#define ENUM_TWI_ISTAT_MCOMP_YES             (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  MCOMP: Interrupt Detected */
#define ENUM_TWI_ISTAT_SOVF_NO               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SOVF: No Interrupt */
#define ENUM_TWI_ISTAT_SOVF_YES              (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  SOVF: Interrupt Detected */
#define ENUM_TWI_ISTAT_SERR_NO               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SERR: No Interrupt */
#define ENUM_TWI_ISTAT_SERR_YES              (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  SERR: Interrupt Detected */
#define ENUM_TWI_ISTAT_SCOMP_NO              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCOMP: No Interrupt */
#define ENUM_TWI_ISTAT_SCOMP_YES             (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  SCOMP: Interrupt Detected */
#define ENUM_TWI_ISTAT_SINIT_NO              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SINIT: No Interrupt. */
#define ENUM_TWI_ISTAT_SINIT_YES             (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  SINIT: Interrupt Detected. */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_IMSK                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_IMSK_SCLI                   15            /*  Serial Clock Interrupt Mask */
#define BITP_TWI_IMSK_SDAI                   14            /*  Serial Data Interrupt Mask */
#define BITP_TWI_IMSK_RXSERV                  7            /*  Rx FIFO Service Interrupt Mask */
#define BITP_TWI_IMSK_TXSERV                  6            /*  Tx FIFO Service Interrupt Mask */
#define BITP_TWI_IMSK_MERR                    5            /*  Master Transfer Error Interrupt Mask */
#define BITP_TWI_IMSK_MCOMP                   4            /*  Master Transfer Complete Interrupt Mask */
#define BITP_TWI_IMSK_SOVF                    3            /*  Slave Overflow Interrupt Mask */
#define BITP_TWI_IMSK_SERR                    2            /*  Slave Transfer Error Interrupt Mask */
#define BITP_TWI_IMSK_SCOMP                   1            /*  Slave Transfer Complete Interrupt Mask */
#define BITP_TWI_IMSK_SINIT                   0            /*  Slave Transfer Initiated Interrupt Mask */
#define BITM_TWI_IMSK_SCLI                   (_ADI_MSK_3(0x00008000,0x00008000U, uint16_t  ))    /*  Serial Clock Interrupt Mask */
#define BITM_TWI_IMSK_SDAI                   (_ADI_MSK_3(0x00004000,0x00004000U, uint16_t  ))    /*  Serial Data Interrupt Mask */
#define BITM_TWI_IMSK_RXSERV                 (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  Rx FIFO Service Interrupt Mask */
#define BITM_TWI_IMSK_TXSERV                 (_ADI_MSK_3(0x00000040,0x00000040U, uint16_t  ))    /*  Tx FIFO Service Interrupt Mask */
#define BITM_TWI_IMSK_MERR                   (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  Master Transfer Error Interrupt Mask */
#define BITM_TWI_IMSK_MCOMP                  (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  Master Transfer Complete Interrupt Mask */
#define BITM_TWI_IMSK_SOVF                   (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  Slave Overflow Interrupt Mask */
#define BITM_TWI_IMSK_SERR                   (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  Slave Transfer Error Interrupt Mask */
#define BITM_TWI_IMSK_SCOMP                  (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  Slave Transfer Complete Interrupt Mask */
#define BITM_TWI_IMSK_SINIT                  (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Slave Transfer Initiated Interrupt Mask */
#define ENUM_TWI_IMSK_SCLI_MSK               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCLI: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_SCLI_UMSK              (_ADI_MSK_3(0x00008000,0x00008000U, uint16_t  ))    /*  SCLI: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_SDAI_MSK               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SDAI: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_SDAI_UMSK              (_ADI_MSK_3(0x00004000,0x00004000U, uint16_t  ))    /*  SDAI: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_RXSERV_MSK             (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  RXSERV: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_RXSERV_UMSK            (_ADI_MSK_3(0x00000080,0x00000080U, uint16_t  ))    /*  RXSERV: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_TXSERV_MSK             (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  TXSERV: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_TXSERV_UMSK            (_ADI_MSK_3(0x00000040,0x00000040U, uint16_t  ))    /*  TXSERV: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_MERR_MSK               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  MERR: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_MERR_UMSK              (_ADI_MSK_3(0x00000020,0x00000020U, uint16_t  ))    /*  MERR: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_MCOMP_MSK              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  MCOMP: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_MCOMP_UMSK             (_ADI_MSK_3(0x00000010,0x00000010U, uint16_t  ))    /*  MCOMP: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_SOVF_MSK               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SOVF: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_SOVF_UMSK              (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  SOVF: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_SERR_MSK               (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SERR: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_SERR_UMSK              (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  SERR: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_SCOMP_MSK              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SCOMP: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_SCOMP_UMSK             (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  SCOMP: Unmask (Enable) Interrupt */
#define ENUM_TWI_IMSK_SINIT_MSK              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  SINIT: Mask (Disable) Interrupt */
#define ENUM_TWI_IMSK_SINIT_UMSK             (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  SINIT: Unmask (Enable) Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_FIFOCTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_FIFOCTL_RXILEN               3            /*  Rx Buffer Interrupt Length */
#define BITP_TWI_FIFOCTL_TXILEN               2            /*  Tx Buffer Interrupt Length */
#define BITP_TWI_FIFOCTL_RXFLUSH              1            /*  Rx Buffer Flush */
#define BITP_TWI_FIFOCTL_TXFLUSH              0            /*  Tx Buffer Flush */
#define BITM_TWI_FIFOCTL_RXILEN              (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  Rx Buffer Interrupt Length */
#define BITM_TWI_FIFOCTL_TXILEN              (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  Tx Buffer Interrupt Length */
#define BITM_TWI_FIFOCTL_RXFLUSH             (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  Rx Buffer Flush */
#define BITM_TWI_FIFOCTL_TXFLUSH             (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  Tx Buffer Flush */
#define ENUM_TWI_FIFOCTL_RXONEBYTE           (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  RXILEN: RXSERVI on 1 or 2 Bytes in FIFO */
#define ENUM_TWI_FIFOCTL_RXTWOBYTE           (_ADI_MSK_3(0x00000008,0x00000008U, uint16_t  ))    /*  RXILEN: RXSERVI on 2 Bytes in FIFO */
#define ENUM_TWI_FIFOCTL_TXONEBYTE           (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  TXILEN: TXSERVI on 1 Byte of FIFO Empty */
#define ENUM_TWI_FIFOCTL_TXTWOBYTE           (_ADI_MSK_3(0x00000004,0x00000004U, uint16_t  ))    /*  TXILEN: TXSERVI on 2 Bytes of FIFO Empty */
#define ENUM_TWI_FIFOCTL_RXNORM              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  RXFLUSH: Normal Operation of Rx Buffer */
#define ENUM_TWI_FIFOCTL_RXFLUSH             (_ADI_MSK_3(0x00000002,0x00000002U, uint16_t  ))    /*  RXFLUSH: Flush Rx Buffer */
#define ENUM_TWI_FIFOCTL_TXNORM              (_ADI_MSK_3(0x00000000,0x00000000U, uint16_t  ))    /*  TXFLUSH: Normal Operation of Tx Buffer */
#define ENUM_TWI_FIFOCTL_TXFLUSH             (_ADI_MSK_3(0x00000001,0x00000001U, uint16_t  ))    /*  TXFLUSH: Flush Tx Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_FIFOSTAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_FIFOSTAT_RXSTAT              2            /*  Rx FIFO Status */
#define BITP_TWI_FIFOSTAT_TXSTAT              0            /*  Tx FIFO Status */
#define BITM_TWI_FIFOSTAT_RXSTAT             (_ADI_MSK_3(0x0000000C,0x0000000CU, uint16_t  ))    /*  Rx FIFO Status */
#define BITM_TWI_FIFOSTAT_TXSTAT             (_ADI_MSK_3(0x00000003,0x00000003U, uint16_t  ))    /*  Tx FIFO Status */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_TXDATA8                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_TXDATA8_VALUE                0            /*  Tx Data 8-Bit Value */
#define BITM_TWI_TXDATA8_VALUE               (_ADI_MSK_3(0x000000FF,0x000000FFU, uint16_t  ))    /*  Tx Data 8-Bit Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_TXDATA16                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_TXDATA16_VALUE               0            /*  Tx Data 16-Bit Value */
#define BITM_TWI_TXDATA16_VALUE              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFU, uint16_t  ))    /*  Tx Data 16-Bit Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_RXDATA8                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_RXDATA8_VALUE                0            /*  Rx Data 8-Bit Value */
#define BITM_TWI_RXDATA8_VALUE               (_ADI_MSK_3(0x000000FF,0x000000FFU, uint16_t  ))    /*  Rx Data 8-Bit Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TWI_RXDATA16                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TWI_RXDATA16_VALUE               0            /*  Rx Data 16-Bit Value */
#define BITM_TWI_RXDATA16_VALUE              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFU, uint16_t  ))    /*  Rx Data 16-Bit Value */


/* ============================================================================================================================
        Serial Port
   ============================================================================================================================ */

/* ============================================================================================================================
        SPORT0
   ============================================================================================================================ */
#define REG_SPORT0_CTL_A                     0x31002000            /*  SPORT0 Half SPORT 'A' Control Register */
#define REG_SPORT0_DIV_A                     0x31002004            /*  SPORT0 Half SPORT 'A' Divisor Register */
#define REG_SPORT0_MCTL_A                    0x31002008            /*  SPORT0 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT0_CS0_A                     0x3100200C            /*  SPORT0 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT0_CS1_A                     0x31002010            /*  SPORT0 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT0_CS2_A                     0x31002014            /*  SPORT0 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT0_CS3_A                     0x31002018            /*  SPORT0 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT0_ERR_A                     0x31002020            /*  SPORT0 Half SPORT 'A' Error Register */
#define REG_SPORT0_MSTAT_A                   0x31002024            /*  SPORT0 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT0_CTL2_A                    0x31002028            /*  SPORT0 Half SPORT 'A' Control 2 Register */
#define REG_SPORT0_TXPRI_A                   0x31002040            /*  SPORT0 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT0_RXPRI_A                   0x31002044            /*  SPORT0 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT0_TXSEC_A                   0x31002048            /*  SPORT0 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT0_RXSEC_A                   0x3100204C            /*  SPORT0 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT0_CTL_B                     0x31002080            /*  SPORT0 Half SPORT 'B' Control Register */
#define REG_SPORT0_DIV_B                     0x31002084            /*  SPORT0 Half SPORT 'B' Divisor Register */
#define REG_SPORT0_MCTL_B                    0x31002088            /*  SPORT0 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT0_CS0_B                     0x3100208C            /*  SPORT0 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT0_CS1_B                     0x31002090            /*  SPORT0 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT0_CS2_B                     0x31002094            /*  SPORT0 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT0_CS3_B                     0x31002098            /*  SPORT0 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT0_ERR_B                     0x310020A0            /*  SPORT0 Half SPORT 'B' Error Register */
#define REG_SPORT0_MSTAT_B                   0x310020A4            /*  SPORT0 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT0_CTL2_B                    0x310020A8            /*  SPORT0 Half SPORT 'B' Control 2 Register */
#define REG_SPORT0_TXPRI_B                   0x310020C0            /*  SPORT0 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT0_RXPRI_B                   0x310020C4            /*  SPORT0 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT0_TXSEC_B                   0x310020C8            /*  SPORT0 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT0_RXSEC_B                   0x310020CC            /*  SPORT0 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT1
   ============================================================================================================================ */
#define REG_SPORT1_CTL_A                     0x31002100            /*  SPORT1 Half SPORT 'A' Control Register */
#define REG_SPORT1_DIV_A                     0x31002104            /*  SPORT1 Half SPORT 'A' Divisor Register */
#define REG_SPORT1_MCTL_A                    0x31002108            /*  SPORT1 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT1_CS0_A                     0x3100210C            /*  SPORT1 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT1_CS1_A                     0x31002110            /*  SPORT1 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT1_CS2_A                     0x31002114            /*  SPORT1 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT1_CS3_A                     0x31002118            /*  SPORT1 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT1_ERR_A                     0x31002120            /*  SPORT1 Half SPORT 'A' Error Register */
#define REG_SPORT1_MSTAT_A                   0x31002124            /*  SPORT1 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT1_CTL2_A                    0x31002128            /*  SPORT1 Half SPORT 'A' Control 2 Register */
#define REG_SPORT1_TXPRI_A                   0x31002140            /*  SPORT1 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT1_RXPRI_A                   0x31002144            /*  SPORT1 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT1_TXSEC_A                   0x31002148            /*  SPORT1 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT1_RXSEC_A                   0x3100214C            /*  SPORT1 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT1_CTL_B                     0x31002180            /*  SPORT1 Half SPORT 'B' Control Register */
#define REG_SPORT1_DIV_B                     0x31002184            /*  SPORT1 Half SPORT 'B' Divisor Register */
#define REG_SPORT1_MCTL_B                    0x31002188            /*  SPORT1 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT1_CS0_B                     0x3100218C            /*  SPORT1 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT1_CS1_B                     0x31002190            /*  SPORT1 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT1_CS2_B                     0x31002194            /*  SPORT1 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT1_CS3_B                     0x31002198            /*  SPORT1 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT1_ERR_B                     0x310021A0            /*  SPORT1 Half SPORT 'B' Error Register */
#define REG_SPORT1_MSTAT_B                   0x310021A4            /*  SPORT1 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT1_CTL2_B                    0x310021A8            /*  SPORT1 Half SPORT 'B' Control 2 Register */
#define REG_SPORT1_TXPRI_B                   0x310021C0            /*  SPORT1 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT1_RXPRI_B                   0x310021C4            /*  SPORT1 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT1_TXSEC_B                   0x310021C8            /*  SPORT1 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT1_RXSEC_B                   0x310021CC            /*  SPORT1 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT2
   ============================================================================================================================ */
#define REG_SPORT2_CTL_A                     0x31002200            /*  SPORT2 Half SPORT 'A' Control Register */
#define REG_SPORT2_DIV_A                     0x31002204            /*  SPORT2 Half SPORT 'A' Divisor Register */
#define REG_SPORT2_MCTL_A                    0x31002208            /*  SPORT2 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT2_CS0_A                     0x3100220C            /*  SPORT2 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT2_CS1_A                     0x31002210            /*  SPORT2 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT2_CS2_A                     0x31002214            /*  SPORT2 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT2_CS3_A                     0x31002218            /*  SPORT2 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT2_ERR_A                     0x31002220            /*  SPORT2 Half SPORT 'A' Error Register */
#define REG_SPORT2_MSTAT_A                   0x31002224            /*  SPORT2 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT2_CTL2_A                    0x31002228            /*  SPORT2 Half SPORT 'A' Control 2 Register */
#define REG_SPORT2_TXPRI_A                   0x31002240            /*  SPORT2 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT2_RXPRI_A                   0x31002244            /*  SPORT2 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT2_TXSEC_A                   0x31002248            /*  SPORT2 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT2_RXSEC_A                   0x3100224C            /*  SPORT2 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT2_CTL_B                     0x31002280            /*  SPORT2 Half SPORT 'B' Control Register */
#define REG_SPORT2_DIV_B                     0x31002284            /*  SPORT2 Half SPORT 'B' Divisor Register */
#define REG_SPORT2_MCTL_B                    0x31002288            /*  SPORT2 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT2_CS0_B                     0x3100228C            /*  SPORT2 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT2_CS1_B                     0x31002290            /*  SPORT2 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT2_CS2_B                     0x31002294            /*  SPORT2 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT2_CS3_B                     0x31002298            /*  SPORT2 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT2_ERR_B                     0x310022A0            /*  SPORT2 Half SPORT 'B' Error Register */
#define REG_SPORT2_MSTAT_B                   0x310022A4            /*  SPORT2 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT2_CTL2_B                    0x310022A8            /*  SPORT2 Half SPORT 'B' Control 2 Register */
#define REG_SPORT2_TXPRI_B                   0x310022C0            /*  SPORT2 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT2_RXPRI_B                   0x310022C4            /*  SPORT2 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT2_TXSEC_B                   0x310022C8            /*  SPORT2 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT2_RXSEC_B                   0x310022CC            /*  SPORT2 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT3
   ============================================================================================================================ */
#define REG_SPORT3_CTL_A                     0x31002300            /*  SPORT3 Half SPORT 'A' Control Register */
#define REG_SPORT3_DIV_A                     0x31002304            /*  SPORT3 Half SPORT 'A' Divisor Register */
#define REG_SPORT3_MCTL_A                    0x31002308            /*  SPORT3 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT3_CS0_A                     0x3100230C            /*  SPORT3 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT3_CS1_A                     0x31002310            /*  SPORT3 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT3_CS2_A                     0x31002314            /*  SPORT3 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT3_CS3_A                     0x31002318            /*  SPORT3 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT3_ERR_A                     0x31002320            /*  SPORT3 Half SPORT 'A' Error Register */
#define REG_SPORT3_MSTAT_A                   0x31002324            /*  SPORT3 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT3_CTL2_A                    0x31002328            /*  SPORT3 Half SPORT 'A' Control 2 Register */
#define REG_SPORT3_TXPRI_A                   0x31002340            /*  SPORT3 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT3_RXPRI_A                   0x31002344            /*  SPORT3 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT3_TXSEC_A                   0x31002348            /*  SPORT3 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT3_RXSEC_A                   0x3100234C            /*  SPORT3 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT3_CTL_B                     0x31002380            /*  SPORT3 Half SPORT 'B' Control Register */
#define REG_SPORT3_DIV_B                     0x31002384            /*  SPORT3 Half SPORT 'B' Divisor Register */
#define REG_SPORT3_MCTL_B                    0x31002388            /*  SPORT3 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT3_CS0_B                     0x3100238C            /*  SPORT3 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT3_CS1_B                     0x31002390            /*  SPORT3 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT3_CS2_B                     0x31002394            /*  SPORT3 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT3_CS3_B                     0x31002398            /*  SPORT3 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT3_ERR_B                     0x310023A0            /*  SPORT3 Half SPORT 'B' Error Register */
#define REG_SPORT3_MSTAT_B                   0x310023A4            /*  SPORT3 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT3_CTL2_B                    0x310023A8            /*  SPORT3 Half SPORT 'B' Control 2 Register */
#define REG_SPORT3_TXPRI_B                   0x310023C0            /*  SPORT3 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT3_RXPRI_B                   0x310023C4            /*  SPORT3 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT3_TXSEC_B                   0x310023C8            /*  SPORT3 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT3_RXSEC_B                   0x310023CC            /*  SPORT3 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT4
   ============================================================================================================================ */
#define REG_SPORT4_CTL_A                     0x31002400            /*  SPORT4 Half SPORT 'A' Control Register */
#define REG_SPORT4_DIV_A                     0x31002404            /*  SPORT4 Half SPORT 'A' Divisor Register */
#define REG_SPORT4_MCTL_A                    0x31002408            /*  SPORT4 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT4_CS0_A                     0x3100240C            /*  SPORT4 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT4_CS1_A                     0x31002410            /*  SPORT4 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT4_CS2_A                     0x31002414            /*  SPORT4 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT4_CS3_A                     0x31002418            /*  SPORT4 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT4_ERR_A                     0x31002420            /*  SPORT4 Half SPORT 'A' Error Register */
#define REG_SPORT4_MSTAT_A                   0x31002424            /*  SPORT4 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT4_CTL2_A                    0x31002428            /*  SPORT4 Half SPORT 'A' Control 2 Register */
#define REG_SPORT4_TXPRI_A                   0x31002440            /*  SPORT4 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT4_RXPRI_A                   0x31002444            /*  SPORT4 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT4_TXSEC_A                   0x31002448            /*  SPORT4 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT4_RXSEC_A                   0x3100244C            /*  SPORT4 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT4_CTL_B                     0x31002480            /*  SPORT4 Half SPORT 'B' Control Register */
#define REG_SPORT4_DIV_B                     0x31002484            /*  SPORT4 Half SPORT 'B' Divisor Register */
#define REG_SPORT4_MCTL_B                    0x31002488            /*  SPORT4 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT4_CS0_B                     0x3100248C            /*  SPORT4 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT4_CS1_B                     0x31002490            /*  SPORT4 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT4_CS2_B                     0x31002494            /*  SPORT4 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT4_CS3_B                     0x31002498            /*  SPORT4 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT4_ERR_B                     0x310024A0            /*  SPORT4 Half SPORT 'B' Error Register */
#define REG_SPORT4_MSTAT_B                   0x310024A4            /*  SPORT4 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT4_CTL2_B                    0x310024A8            /*  SPORT4 Half SPORT 'B' Control 2 Register */
#define REG_SPORT4_TXPRI_B                   0x310024C0            /*  SPORT4 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT4_RXPRI_B                   0x310024C4            /*  SPORT4 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT4_TXSEC_B                   0x310024C8            /*  SPORT4 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT4_RXSEC_B                   0x310024CC            /*  SPORT4 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT5
   ============================================================================================================================ */
#define REG_SPORT5_CTL_A                     0x31002500            /*  SPORT5 Half SPORT 'A' Control Register */
#define REG_SPORT5_DIV_A                     0x31002504            /*  SPORT5 Half SPORT 'A' Divisor Register */
#define REG_SPORT5_MCTL_A                    0x31002508            /*  SPORT5 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT5_CS0_A                     0x3100250C            /*  SPORT5 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT5_CS1_A                     0x31002510            /*  SPORT5 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT5_CS2_A                     0x31002514            /*  SPORT5 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT5_CS3_A                     0x31002518            /*  SPORT5 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT5_ERR_A                     0x31002520            /*  SPORT5 Half SPORT 'A' Error Register */
#define REG_SPORT5_MSTAT_A                   0x31002524            /*  SPORT5 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT5_CTL2_A                    0x31002528            /*  SPORT5 Half SPORT 'A' Control 2 Register */
#define REG_SPORT5_TXPRI_A                   0x31002540            /*  SPORT5 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT5_RXPRI_A                   0x31002544            /*  SPORT5 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT5_TXSEC_A                   0x31002548            /*  SPORT5 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT5_RXSEC_A                   0x3100254C            /*  SPORT5 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT5_CTL_B                     0x31002580            /*  SPORT5 Half SPORT 'B' Control Register */
#define REG_SPORT5_DIV_B                     0x31002584            /*  SPORT5 Half SPORT 'B' Divisor Register */
#define REG_SPORT5_MCTL_B                    0x31002588            /*  SPORT5 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT5_CS0_B                     0x3100258C            /*  SPORT5 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT5_CS1_B                     0x31002590            /*  SPORT5 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT5_CS2_B                     0x31002594            /*  SPORT5 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT5_CS3_B                     0x31002598            /*  SPORT5 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT5_ERR_B                     0x310025A0            /*  SPORT5 Half SPORT 'B' Error Register */
#define REG_SPORT5_MSTAT_B                   0x310025A4            /*  SPORT5 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT5_CTL2_B                    0x310025A8            /*  SPORT5 Half SPORT 'B' Control 2 Register */
#define REG_SPORT5_TXPRI_B                   0x310025C0            /*  SPORT5 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT5_RXPRI_B                   0x310025C4            /*  SPORT5 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT5_TXSEC_B                   0x310025C8            /*  SPORT5 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT5_RXSEC_B                   0x310025CC            /*  SPORT5 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT6
   ============================================================================================================================ */
#define REG_SPORT6_CTL_A                     0x31002600            /*  SPORT6 Half SPORT 'A' Control Register */
#define REG_SPORT6_DIV_A                     0x31002604            /*  SPORT6 Half SPORT 'A' Divisor Register */
#define REG_SPORT6_MCTL_A                    0x31002608            /*  SPORT6 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT6_CS0_A                     0x3100260C            /*  SPORT6 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT6_CS1_A                     0x31002610            /*  SPORT6 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT6_CS2_A                     0x31002614            /*  SPORT6 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT6_CS3_A                     0x31002618            /*  SPORT6 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT6_ERR_A                     0x31002620            /*  SPORT6 Half SPORT 'A' Error Register */
#define REG_SPORT6_MSTAT_A                   0x31002624            /*  SPORT6 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT6_CTL2_A                    0x31002628            /*  SPORT6 Half SPORT 'A' Control 2 Register */
#define REG_SPORT6_TXPRI_A                   0x31002640            /*  SPORT6 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT6_RXPRI_A                   0x31002644            /*  SPORT6 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT6_TXSEC_A                   0x31002648            /*  SPORT6 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT6_RXSEC_A                   0x3100264C            /*  SPORT6 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT6_CTL_B                     0x31002680            /*  SPORT6 Half SPORT 'B' Control Register */
#define REG_SPORT6_DIV_B                     0x31002684            /*  SPORT6 Half SPORT 'B' Divisor Register */
#define REG_SPORT6_MCTL_B                    0x31002688            /*  SPORT6 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT6_CS0_B                     0x3100268C            /*  SPORT6 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT6_CS1_B                     0x31002690            /*  SPORT6 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT6_CS2_B                     0x31002694            /*  SPORT6 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT6_CS3_B                     0x31002698            /*  SPORT6 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT6_ERR_B                     0x310026A0            /*  SPORT6 Half SPORT 'B' Error Register */
#define REG_SPORT6_MSTAT_B                   0x310026A4            /*  SPORT6 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT6_CTL2_B                    0x310026A8            /*  SPORT6 Half SPORT 'B' Control 2 Register */
#define REG_SPORT6_TXPRI_B                   0x310026C0            /*  SPORT6 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT6_RXPRI_B                   0x310026C4            /*  SPORT6 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT6_TXSEC_B                   0x310026C8            /*  SPORT6 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT6_RXSEC_B                   0x310026CC            /*  SPORT6 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT7
   ============================================================================================================================ */
#define REG_SPORT7_CTL_A                     0x31002700            /*  SPORT7 Half SPORT 'A' Control Register */
#define REG_SPORT7_DIV_A                     0x31002704            /*  SPORT7 Half SPORT 'A' Divisor Register */
#define REG_SPORT7_MCTL_A                    0x31002708            /*  SPORT7 Half SPORT 'A' Multichannel Control Register */
#define REG_SPORT7_CS0_A                     0x3100270C            /*  SPORT7 Half SPORT 'A' Multichannel 0-31 Select Register */
#define REG_SPORT7_CS1_A                     0x31002710            /*  SPORT7 Half SPORT 'A' Multichannel 32-63 Select Register */
#define REG_SPORT7_CS2_A                     0x31002714            /*  SPORT7 Half SPORT 'A' Multichannel 64-95 Select Register */
#define REG_SPORT7_CS3_A                     0x31002718            /*  SPORT7 Half SPORT 'A' Multichannel 96-127 Select Register */
#define REG_SPORT7_ERR_A                     0x31002720            /*  SPORT7 Half SPORT 'A' Error Register */
#define REG_SPORT7_MSTAT_A                   0x31002724            /*  SPORT7 Half SPORT 'A' Multichannel Status Register */
#define REG_SPORT7_CTL2_A                    0x31002728            /*  SPORT7 Half SPORT 'A' Control 2 Register */
#define REG_SPORT7_TXPRI_A                   0x31002740            /*  SPORT7 Half SPORT 'A' Tx Buffer (Primary) Register */
#define REG_SPORT7_RXPRI_A                   0x31002744            /*  SPORT7 Half SPORT 'A' Rx Buffer (Primary) Register */
#define REG_SPORT7_TXSEC_A                   0x31002748            /*  SPORT7 Half SPORT 'A' Tx Buffer (Secondary) Register */
#define REG_SPORT7_RXSEC_A                   0x3100274C            /*  SPORT7 Half SPORT 'A' Rx Buffer (Secondary) Register */
#define REG_SPORT7_CTL_B                     0x31002780            /*  SPORT7 Half SPORT 'B' Control Register */
#define REG_SPORT7_DIV_B                     0x31002784            /*  SPORT7 Half SPORT 'B' Divisor Register */
#define REG_SPORT7_MCTL_B                    0x31002788            /*  SPORT7 Half SPORT 'B' Multichannel Control Register */
#define REG_SPORT7_CS0_B                     0x3100278C            /*  SPORT7 Half SPORT 'B' Multichannel 0-31 Select Register */
#define REG_SPORT7_CS1_B                     0x31002790            /*  SPORT7 Half SPORT 'B' Multichannel 32-63 Select Register */
#define REG_SPORT7_CS2_B                     0x31002794            /*  SPORT7 Half SPORT 'B' Multichannel 64-95 Select Register */
#define REG_SPORT7_CS3_B                     0x31002798            /*  SPORT7 Half SPORT 'B' Multichannel 96-127 Select Register */
#define REG_SPORT7_ERR_B                     0x310027A0            /*  SPORT7 Half SPORT 'B' Error Register */
#define REG_SPORT7_MSTAT_B                   0x310027A4            /*  SPORT7 Half SPORT 'B' Multichannel Status Register */
#define REG_SPORT7_CTL2_B                    0x310027A8            /*  SPORT7 Half SPORT 'B' Control 2 Register */
#define REG_SPORT7_TXPRI_B                   0x310027C0            /*  SPORT7 Half SPORT 'B' Tx Buffer (Primary) Register */
#define REG_SPORT7_RXPRI_B                   0x310027C4            /*  SPORT7 Half SPORT 'B' Rx Buffer (Primary) Register */
#define REG_SPORT7_TXSEC_B                   0x310027C8            /*  SPORT7 Half SPORT 'B' Tx Buffer (Secondary) Register */
#define REG_SPORT7_RXSEC_B                   0x310027CC            /*  SPORT7 Half SPORT 'B' Rx Buffer (Secondary) Register */

/* ============================================================================================================================
        SPORT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CTL_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CTL_A_DXSPRI              30            /*  Data Transfer Buffer Status (Primary) */
#define BITP_SPORT_CTL_A_DERRPRI             29            /*  Data Error Status (Primary) */
#define BITP_SPORT_CTL_A_DXSSEC              27            /*  Data Transfer Buffer Status (Secondary) */
#define BITP_SPORT_CTL_A_DERRSEC             26            /*  Data Error Status (Secondary) */
#define BITP_SPORT_CTL_A_SPTRAN              25            /*  Serial Port Transfer Direction */
#define BITP_SPORT_CTL_A_SPENSEC             24            /*  Serial Port Enable (Secondary) */
#define BITP_SPORT_CTL_A_GCLKEN              21            /*  Gated Clock Enable */
#define BITP_SPORT_CTL_A_TFIEN               20            /*  Transmit Finish Interrupt Enable */
#define BITP_SPORT_CTL_A_FSED                19            /*  Frame Sync Edge Detect */
#define BITP_SPORT_CTL_A_RJUST               18            /*  Right-Justified Operation Mode */
#define BITP_SPORT_CTL_A_LAFS                17            /*  Late Frame Sync / OPMODE2 */
#define BITP_SPORT_CTL_A_LFS                 16            /*  Active-Low Frame Sync / L_FIRST / PLFS */
#define BITP_SPORT_CTL_A_DIFS                15            /*  Data-Independent Frame Sync */
#define BITP_SPORT_CTL_A_IFS                 14            /*  Internal Frame Sync */
#define BITP_SPORT_CTL_A_FSR                 13            /*  Frame Sync Required */
#define BITP_SPORT_CTL_A_CKRE                12            /*  Clock Rising Edge */
#define BITP_SPORT_CTL_A_OPMODE              11            /*  Operation mode */
#define BITP_SPORT_CTL_A_ICLK                10            /*  Internal Clock */
#define BITP_SPORT_CTL_A_PACK                 9            /*  Packing Enable */
#define BITP_SPORT_CTL_A_SLEN                 4            /*  Serial Word Length */
#define BITP_SPORT_CTL_A_LSBF                 3            /*  Least-Significant Bit First */
#define BITP_SPORT_CTL_A_DTYPE                1            /*  Data Type */
#define BITP_SPORT_CTL_A_SPENPRI              0            /*  Serial Port Enable (Primary) */
#define BITM_SPORT_CTL_A_DXSPRI              (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  Data Transfer Buffer Status (Primary) */
#define BITM_SPORT_CTL_A_DERRPRI             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Data Error Status (Primary) */
#define BITM_SPORT_CTL_A_DXSSEC              (_ADI_MSK_3(0x18000000,0x18000000UL, uint32_t  ))    /*  Data Transfer Buffer Status (Secondary) */
#define BITM_SPORT_CTL_A_DERRSEC             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Data Error Status (Secondary) */
#define BITM_SPORT_CTL_A_SPTRAN              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Serial Port Transfer Direction */
#define BITM_SPORT_CTL_A_SPENSEC             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Serial Port Enable (Secondary) */
#define BITM_SPORT_CTL_A_GCLKEN              (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Gated Clock Enable */
#define BITM_SPORT_CTL_A_TFIEN               (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Transmit Finish Interrupt Enable */
#define BITM_SPORT_CTL_A_FSED                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Frame Sync Edge Detect */
#define BITM_SPORT_CTL_A_RJUST               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Right-Justified Operation Mode */
#define BITM_SPORT_CTL_A_LAFS                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Late Frame Sync / OPMODE2 */
#define BITM_SPORT_CTL_A_LFS                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Active-Low Frame Sync / L_FIRST / PLFS */
#define BITM_SPORT_CTL_A_DIFS                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Data-Independent Frame Sync */
#define BITM_SPORT_CTL_A_IFS                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Internal Frame Sync */
#define BITM_SPORT_CTL_A_FSR                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Frame Sync Required */
#define BITM_SPORT_CTL_A_CKRE                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Clock Rising Edge */
#define BITM_SPORT_CTL_A_OPMODE              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Operation mode */
#define BITM_SPORT_CTL_A_ICLK                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Internal Clock */
#define BITM_SPORT_CTL_A_PACK                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Packing Enable */
#define BITM_SPORT_CTL_A_SLEN                (_ADI_MSK_3(0x000001F0,0x000001F0UL, uint32_t  ))    /*  Serial Word Length */
#define BITM_SPORT_CTL_A_LSBF                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Least-Significant Bit First */
#define BITM_SPORT_CTL_A_DTYPE               (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  Data Type */
#define BITM_SPORT_CTL_A_SPENPRI             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Serial Port Enable (Primary) */
#define ENUM_SPORT_CTL_A_CTL_PRM_EMPTY       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DXSPRI: Empty */
#define ENUM_SPORT_CTL_A_CTL_PRM_PART_FULL   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  DXSPRI: Partially full */
#define ENUM_SPORT_CTL_A_CTL_PRM_FULL        (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  DXSPRI: Full */
#define ENUM_SPORT_CTL_A_CTL_PRM_NO_ERR      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DERRPRI: No error */
#define ENUM_SPORT_CTL_A_CTL_PRM_ERR         (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  DERRPRI: Error (Tx underflow or Rx overflow) */
#define ENUM_SPORT_CTL_A_CTL_SEC_EMPTY       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DXSSEC: Empty */
#define ENUM_SPORT_CTL_A_CTL_SEC_PART_FULL   (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  DXSSEC: Partially full */
#define ENUM_SPORT_CTL_A_CTL_SEC_FULL        (_ADI_MSK_3(0x18000000,0x18000000UL, uint32_t  ))    /*  DXSSEC: Full */
#define ENUM_SPORT_CTL_A_CTL_SEC_NO_ERR      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DERRSEC: No error */
#define ENUM_SPORT_CTL_A_CTL_SEC_ERR         (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  DERRSEC: Error (Tx underflow or Rx overflow) */
#define ENUM_SPORT_CTL_A_CTL_RX              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SPTRAN: Receive */
#define ENUM_SPORT_CTL_A_CTL_TX              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  SPTRAN: Transmit */
#define ENUM_SPORT_CTL_A_CTL_SECONDARY_DIS   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SPENSEC: Disable */
#define ENUM_SPORT_CTL_A_CTL_SECONDARY_EN    (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  SPENSEC: Enable */
#define ENUM_SPORT_CTL_A_CTL_GCLK_DIS        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  GCLKEN: Disable */
#define ENUM_SPORT_CTL_A_CTL_GCLK_EN         (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  GCLKEN: Enable */
#define ENUM_SPORT_CTL_A_CTL_TXFIN_DIS       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TFIEN: Last word sent (DMA count done) interrupt */
#define ENUM_SPORT_CTL_A_CTL_TXFIN_EN        (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  TFIEN: Last bit sent (Tx buffer done) interrupt */
#define ENUM_SPORT_CTL_A_CTL_LEVEL_FS        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FSED: Level detect frame sync */
#define ENUM_SPORT_CTL_A_CTL_EDGE_FS         (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  FSED: Edge detect frame sync */
#define ENUM_SPORT_CTL_A_CTL_RJUST_DIS       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RJUST: Disable */
#define ENUM_SPORT_CTL_A_CTL_RJUST_EN        (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  RJUST: Enable */
#define ENUM_SPORT_CTL_A_CTL_EARLY_FS        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LAFS: Early frame sync */
#define ENUM_SPORT_CTL_A_CTL_LATE_FS         (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  LAFS: Late frame sync */
#define ENUM_SPORT_CTL_A_CTL_FS_LO           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LFS: Active high frame sync (DSP standard mode) */
#define ENUM_SPORT_CTL_A_CTL_FS_HI           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  LFS: Active low frame sync (DSP standard mode) */
#define ENUM_SPORT_CTL_A_CTL_DATA_DEP_FS     (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DIFS: Data-dependent frame sync */
#define ENUM_SPORT_CTL_A_CTL_DATA_INDP_FS    (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  DIFS: Data-independent frame sync */
#define ENUM_SPORT_CTL_A_CTL_EXTERNAL_FS     (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IFS: External frame sync */
#define ENUM_SPORT_CTL_A_CTL_INTERNAL_FS     (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  IFS: Internal frame sync */
#define ENUM_SPORT_CTL_A_CTL_FS_NOT_REQ      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FSR: No frame sync required */
#define ENUM_SPORT_CTL_A_CTL_FS_REQ          (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  FSR: Frame sync required */
#define ENUM_SPORT_CTL_A_CTL_CLK_FALL_EDGE   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CKRE: Clock falling edge */
#define ENUM_SPORT_CTL_A_CTL_CLK_RISE_EDGE   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  CKRE: Clock rising edge */
#define ENUM_SPORT_CTL_A_CTL_SERIAL_MC_MODE  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  OPMODE: DSP standard/multichannel mode */
#define ENUM_SPORT_CTL_A_CTL_I2S_MODE        (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  OPMODE: I2S/packed/left-justified mode */
#define ENUM_SPORT_CTL_A_CTL_EXTERNAL_CLK    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ICLK: External clock */
#define ENUM_SPORT_CTL_A_CTL_INTERNAL_CLK    (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  ICLK: Internal clock */
#define ENUM_SPORT_CTL_A_CTL_PACK_DIS        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PACK: Disable */
#define ENUM_SPORT_CTL_A_CTL_PACK_EN         (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  PACK: Enable */
#define ENUM_SPORT_CTL_A_CTL_MSB_FIRST       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LSBF: MSB first sent/received (big endian) */
#define ENUM_SPORT_CTL_A_CTL_LSB_FIRST       (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  LSBF: LSB first sent/received (little endian) */
#define ENUM_SPORT_CTL_A_CTL_RJUSTIFY_ZFILL  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DTYPE: Right-justify data, zero-fill unused MSBs */
#define ENUM_SPORT_CTL_A_CTL_RJUSTIFY_SFILL  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DTYPE: Right-justify data, sign-extend unused MSBs */
#define ENUM_SPORT_CTL_A_CTL_USE_U_LAW       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  DTYPE: u-law compand data */
#define ENUM_SPORT_CTL_A_CTL_USE_A_LAW       (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  DTYPE: A-law compand data */
#define ENUM_SPORT_CTL_A_CTL_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SPENPRI: Disable */
#define ENUM_SPORT_CTL_A_CTL_EN              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SPENPRI: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_DIV_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_DIV_A_FSDIV               16            /*  Frame Sync Divisor */
#define BITP_SPORT_DIV_A_CLKDIV               0            /*  Clock Divisor */
#define BITM_SPORT_DIV_A_FSDIV               (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Frame Sync Divisor */
#define BITM_SPORT_DIV_A_CLKDIV              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_MCTL_A                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_MCTL_A_WOFFSET            16            /*  Window Offset */
#define BITP_SPORT_MCTL_A_WSIZE               8            /*  Window Size */
#define BITP_SPORT_MCTL_A_MFD                 4            /*  Multichannel Frame Delay */
#define BITP_SPORT_MCTL_A_MCPDE               2            /*  Multichannel Packing DMA Enable */
#define BITP_SPORT_MCTL_A_MCE                 0            /*  Multichannel enable */
#define BITM_SPORT_MCTL_A_WOFFSET            (_ADI_MSK_3(0x03FF0000,0x03FF0000UL, uint32_t  ))    /*  Window Offset */
#define BITM_SPORT_MCTL_A_WSIZE              (_ADI_MSK_3(0x00007F00,0x00007F00UL, uint32_t  ))    /*  Window Size */
#define BITM_SPORT_MCTL_A_MFD                (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Multichannel Frame Delay */
#define BITM_SPORT_MCTL_A_MCPDE              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Multichannel Packing DMA Enable */
#define BITM_SPORT_MCTL_A_MCE                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Multichannel enable */
#define ENUM_SPORT_MCTL_A_MCTL_MCPD_DIS      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MCPDE: Disable */
#define ENUM_SPORT_MCTL_A_MCTL_MCPD_EN       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  MCPDE: Enable */
#define ENUM_SPORT_MCTL_A_MCTL_DIS           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MCE: Disable */
#define ENUM_SPORT_MCTL_A_MCTL_EN            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  MCE: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS0_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS0_A_VALUE                0            /*  Channel Enable 0-31 */
#define BITM_SPORT_CS0_A_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 0-31 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS1_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS1_A_VALUE                0            /*  Channel Enable 32-63 */
#define BITM_SPORT_CS1_A_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 32-63 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS2_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS2_A_VALUE                0            /*  Channel Enable 64-95 */
#define BITM_SPORT_CS2_A_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 64-95 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS3_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS3_A_VALUE                0            /*  Channel Enable 96-127 */
#define BITM_SPORT_CS3_A_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 96-127 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_ERR_A                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_ERR_A_FSERRSTAT            6            /*  Frame Sync Error Status */
#define BITP_SPORT_ERR_A_DERRSSTAT            5            /*  Data Error Secondary Status */
#define BITP_SPORT_ERR_A_DERRPSTAT            4            /*  Data Error Primary Status */
#define BITP_SPORT_ERR_A_FSERRMSK             2            /*  Frame Sync Error (Interrupt) Mask */
#define BITP_SPORT_ERR_A_DERRSMSK             1            /*  Data Error Secondary (Interrupt) Mask */
#define BITP_SPORT_ERR_A_DERRPMSK             0            /*  Data Error Primary (Interrupt) Mask */
#define BITM_SPORT_ERR_A_FSERRSTAT           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Frame Sync Error Status */
#define BITM_SPORT_ERR_A_DERRSSTAT           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Data Error Secondary Status */
#define BITM_SPORT_ERR_A_DERRPSTAT           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Error Primary Status */
#define BITM_SPORT_ERR_A_FSERRMSK            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Frame Sync Error (Interrupt) Mask */
#define BITM_SPORT_ERR_A_DERRSMSK            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Data Error Secondary (Interrupt) Mask */
#define BITM_SPORT_ERR_A_DERRPMSK            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Data Error Primary (Interrupt) Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_MSTAT_A                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_MSTAT_A_CURCHAN            0            /*  Current Channel */
#define BITM_SPORT_MSTAT_A_CURCHAN           (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Current Channel */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CTL2_A                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CTL2_A_CKMUXSEL            1            /*  Clock Multiplexer Select */
#define BITP_SPORT_CTL2_A_FSMUXSEL            0            /*  Frame Sync Multiplexer Select */
#define BITM_SPORT_CTL2_A_CKMUXSEL           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock Multiplexer Select */
#define BITM_SPORT_CTL2_A_FSMUXSEL           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Sync Multiplexer Select */
#define ENUM_SPORT_CTL2_A_CTL2_CLK_MUX_DIS   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CKMUXSEL: Disable serial clock multiplexing */
#define ENUM_SPORT_CTL2_A_CTL2_CLK_MUX_EN    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CKMUXSEL: Enable serial clock multiplexing */
#define ENUM_SPORT_CTL2_A_CTL2_FS_MUX_DIS    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FSMUXSEL: Disable frame sync multiplexing */
#define ENUM_SPORT_CTL2_A_CTL2_FS_MUX_EN     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  FSMUXSEL: Enable frame sync multiplexing */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_TXPRI_A                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_TXPRI_A_VALUE              0            /*  Transmit Buffer (Primary) */
#define BITM_SPORT_TXPRI_A_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Buffer (Primary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_RXPRI_A                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_RXPRI_A_VALUE              0            /*  Receive Buffer (Primary) */
#define BITM_SPORT_RXPRI_A_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Buffer (Primary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_TXSEC_A                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_TXSEC_A_VALUE              0            /*  Transmit Buffer (Secondary) */
#define BITM_SPORT_TXSEC_A_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Buffer (Secondary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_RXSEC_A                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_RXSEC_A_VALUE              0            /*  Receive Buffer (Secondary) */
#define BITM_SPORT_RXSEC_A_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Buffer (Secondary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CTL_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CTL_B_DXSPRI              30            /*  Data Transfer Buffer Status (Primary) */
#define BITP_SPORT_CTL_B_DERRPRI             29            /*  Data Error Status (Primary) */
#define BITP_SPORT_CTL_B_DXSSEC              27            /*  Data Transfer Buffer Status (Secondary) */
#define BITP_SPORT_CTL_B_DERRSEC             26            /*  Data Error Status (Secondary) */
#define BITP_SPORT_CTL_B_SPTRAN              25            /*  Serial Port Transfer Direction */
#define BITP_SPORT_CTL_B_SPENSEC             24            /*  Serial Port Enable (Secondary) */
#define BITP_SPORT_CTL_B_GCLKEN              21            /*  Gated Clock Enable */
#define BITP_SPORT_CTL_B_TFIEN               20            /*  Transmit Finish Interrupt Enable */
#define BITP_SPORT_CTL_B_FSED                19            /*  Frame Sync Edge Detect */
#define BITP_SPORT_CTL_B_RJUST               18            /*  Right-Justified Operation Mode */
#define BITP_SPORT_CTL_B_LAFS                17            /*  Late Frame Sync / OPMODE2 */
#define BITP_SPORT_CTL_B_LFS                 16            /*  Active-Low Frame Sync / L_FIRST / PLFS */
#define BITP_SPORT_CTL_B_DIFS                15            /*  Data-Independent Frame Sync */
#define BITP_SPORT_CTL_B_IFS                 14            /*  Internal Frame Sync */
#define BITP_SPORT_CTL_B_FSR                 13            /*  Frame Sync Required */
#define BITP_SPORT_CTL_B_CKRE                12            /*  Clock Rising Edge */
#define BITP_SPORT_CTL_B_OPMODE              11            /*  Operation Mode */
#define BITP_SPORT_CTL_B_ICLK                10            /*  Internal Clock */
#define BITP_SPORT_CTL_B_PACK                 9            /*  Packing Enable */
#define BITP_SPORT_CTL_B_SLEN                 4            /*  Serial Word Length */
#define BITP_SPORT_CTL_B_LSBF                 3            /*  Least-Significant Bit First */
#define BITP_SPORT_CTL_B_DTYPE                1            /*  Data Type */
#define BITP_SPORT_CTL_B_SPENPRI              0            /*  Serial Port Enable (Primary) */
#define BITM_SPORT_CTL_B_DXSPRI              (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  Data Transfer Buffer Status (Primary) */
#define BITM_SPORT_CTL_B_DERRPRI             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Data Error Status (Primary) */
#define BITM_SPORT_CTL_B_DXSSEC              (_ADI_MSK_3(0x18000000,0x18000000UL, uint32_t  ))    /*  Data Transfer Buffer Status (Secondary) */
#define BITM_SPORT_CTL_B_DERRSEC             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Data Error Status (Secondary) */
#define BITM_SPORT_CTL_B_SPTRAN              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Serial Port Transfer Direction */
#define BITM_SPORT_CTL_B_SPENSEC             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Serial Port Enable (Secondary) */
#define BITM_SPORT_CTL_B_GCLKEN              (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Gated Clock Enable */
#define BITM_SPORT_CTL_B_TFIEN               (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Transmit Finish Interrupt Enable */
#define BITM_SPORT_CTL_B_FSED                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Frame Sync Edge Detect */
#define BITM_SPORT_CTL_B_RJUST               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Right-Justified Operation Mode */
#define BITM_SPORT_CTL_B_LAFS                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Late Frame Sync / OPMODE2 */
#define BITM_SPORT_CTL_B_LFS                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Active-Low Frame Sync / L_FIRST / PLFS */
#define BITM_SPORT_CTL_B_DIFS                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Data-Independent Frame Sync */
#define BITM_SPORT_CTL_B_IFS                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Internal Frame Sync */
#define BITM_SPORT_CTL_B_FSR                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Frame Sync Required */
#define BITM_SPORT_CTL_B_CKRE                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Clock Rising Edge */
#define BITM_SPORT_CTL_B_OPMODE              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Operation Mode */
#define BITM_SPORT_CTL_B_ICLK                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Internal Clock */
#define BITM_SPORT_CTL_B_PACK                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Packing Enable */
#define BITM_SPORT_CTL_B_SLEN                (_ADI_MSK_3(0x000001F0,0x000001F0UL, uint32_t  ))    /*  Serial Word Length */
#define BITM_SPORT_CTL_B_LSBF                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Least-Significant Bit First */
#define BITM_SPORT_CTL_B_DTYPE               (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  Data Type */
#define BITM_SPORT_CTL_B_SPENPRI             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Serial Port Enable (Primary) */

/* The fields and enumerations for ENUM_SPORT are also in SPORT - see the common set of ENUM_SPORT_* #defines located with register SPORT_CTL_A */


/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_DIV_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_DIV_B_FSDIV               16            /*  Frame Sync Divisor */
#define BITP_SPORT_DIV_B_CLKDIV               0            /*  Clock Divisor */
#define BITM_SPORT_DIV_B_FSDIV               (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Frame Sync Divisor */
#define BITM_SPORT_DIV_B_CLKDIV              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Clock Divisor */

/* The fields and enumerations for ENUM_SPORT are also in SPORT - see the common set of ENUM_SPORT_* #defines located with register SPORT_DIV_A */


/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_MCTL_B                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_MCTL_B_WOFFSET            16            /*  Window Offset */
#define BITP_SPORT_MCTL_B_WSIZE               8            /*  Window Size */
#define BITP_SPORT_MCTL_B_MFD                 4            /*  Multichannel Frame Delay */
#define BITP_SPORT_MCTL_B_MCPDE               2            /*  Multichannel Packing DMA Enable */
#define BITP_SPORT_MCTL_B_MCE                 0            /*  Multichannel Enable */
#define BITM_SPORT_MCTL_B_WOFFSET            (_ADI_MSK_3(0x03FF0000,0x03FF0000UL, uint32_t  ))    /*  Window Offset */
#define BITM_SPORT_MCTL_B_WSIZE              (_ADI_MSK_3(0x00007F00,0x00007F00UL, uint32_t  ))    /*  Window Size */
#define BITM_SPORT_MCTL_B_MFD                (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Multichannel Frame Delay */
#define BITM_SPORT_MCTL_B_MCPDE              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Multichannel Packing DMA Enable */
#define BITM_SPORT_MCTL_B_MCE                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Multichannel Enable */

/* The fields and enumerations for ENUM_SPORT are also in SPORT - see the common set of ENUM_SPORT_* #defines located with register SPORT_MCTL_A */


/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS0_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS0_B_VALUE                0            /*  Channel Enable 0-31 */
#define BITM_SPORT_CS0_B_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 0-31 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS1_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS1_B_VALUE                0            /*  Channel Enable 32-63 */
#define BITM_SPORT_CS1_B_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 32-63 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS2_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS2_B_VALUE                0            /*  Channel Enable 64-95 */
#define BITM_SPORT_CS2_B_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 64-95 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CS3_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CS3_B_VALUE                0            /*  Channel Enable 96-127 */
#define BITM_SPORT_CS3_B_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Channel Enable 96-127 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_ERR_B                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_ERR_B_FSERRSTAT            6            /*  Frame Sync Error Status */
#define BITP_SPORT_ERR_B_DERRSSTAT            5            /*  Data Error Secondary Status */
#define BITP_SPORT_ERR_B_DERRPSTAT            4            /*  Data Error Primary Status */
#define BITP_SPORT_ERR_B_FSERRMSK             2            /*  Frame Sync Error (Interrupt) Mask */
#define BITP_SPORT_ERR_B_DERRSMSK             1            /*  Data Error Secondary (Interrupt) Mask */
#define BITP_SPORT_ERR_B_DERRPMSK             0            /*  Data Error Primary (Interrupt) Mask */
#define BITM_SPORT_ERR_B_FSERRSTAT           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Frame Sync Error Status */
#define BITM_SPORT_ERR_B_DERRSSTAT           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Data Error Secondary Status */
#define BITM_SPORT_ERR_B_DERRPSTAT           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Error Primary Status */
#define BITM_SPORT_ERR_B_FSERRMSK            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Frame Sync Error (Interrupt) Mask */
#define BITM_SPORT_ERR_B_DERRSMSK            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Data Error Secondary (Interrupt) Mask */
#define BITM_SPORT_ERR_B_DERRPMSK            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Data Error Primary (Interrupt) Mask */

/* The fields and enumerations for ENUM_SPORT are also in SPORT - see the common set of ENUM_SPORT_* #defines located with register SPORT_ERR_A */


/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_MSTAT_B                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_MSTAT_B_CURCHAN            0            /*  Current Channel */
#define BITM_SPORT_MSTAT_B_CURCHAN           (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Current Channel */

/* The fields and enumerations for ENUM_SPORT are also in SPORT - see the common set of ENUM_SPORT_* #defines located with register SPORT_MSTAT_A */


/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_CTL2_B                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_CTL2_B_CKMUXSEL            1            /*  Clock Multiplexer Select */
#define BITP_SPORT_CTL2_B_FSMUXSEL            0            /*  Frame Sync Multiplexer Select */
#define BITM_SPORT_CTL2_B_CKMUXSEL           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock Multiplexer Select */
#define BITM_SPORT_CTL2_B_FSMUXSEL           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Sync Multiplexer Select */

/* The fields and enumerations for ENUM_SPORT are also in SPORT - see the common set of ENUM_SPORT_* #defines located with register SPORT_CTL2_A */


/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_TXPRI_B                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_TXPRI_B_VALUE              0            /*  Transmit Buffer (Primary) */
#define BITM_SPORT_TXPRI_B_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Buffer (Primary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_RXPRI_B                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_RXPRI_B_VALUE              0            /*  Receive Buffer (Primary) */
#define BITM_SPORT_RXPRI_B_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Buffer (Primary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_TXSEC_B                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_TXSEC_B_VALUE              0            /*  Transmit Buffer (Secondary) */
#define BITM_SPORT_TXSEC_B_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Buffer (Secondary) */

/* -------------------------------------------------------------------------------------------------------------------------
          SPORT_RXSEC_B                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPORT_RXSEC_B_VALUE              0            /*  Receive Buffer (Secondary) */
#define BITM_SPORT_RXSEC_B_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Buffer (Secondary) */


/* ============================================================================================================================
        UART
   ============================================================================================================================ */

/* ============================================================================================================================
        UART0
   ============================================================================================================================ */
#define REG_UART0_CTL                        0x31003004            /*  UART0 Control Register */
#define REG_UART0_STAT                       0x31003008            /*  UART0 Status Register */
#define REG_UART0_SCR                        0x3100300C            /*  UART0 Scratch Register */
#define REG_UART0_CLK                        0x31003010            /*  UART0 Clock Rate Register */
#define REG_UART0_IMSK                       0x31003014            /*  UART0 Interrupt Mask Register */
#define REG_UART0_IMSK_SET                   0x31003018            /*  UART0 Interrupt Mask Set Register */
#define REG_UART0_IMSK_CLR                   0x3100301C            /*  UART0 Interrupt Mask Clear Register */
#define REG_UART0_RBR                        0x31003020            /*  UART0 Receive Buffer Register */
#define REG_UART0_THR                        0x31003024            /*  UART0 Transmit Hold Register */
#define REG_UART0_TAIP                       0x31003028            /*  UART0 Transmit Address/Insert Pulse Register */
#define REG_UART0_TSR                        0x3100302C            /*  UART0 Transmit Shift Register */
#define REG_UART0_RSR                        0x31003030            /*  UART0 Receive Shift Register */
#define REG_UART0_TXCNT                      0x31003034            /*  UART0 Transmit Counter Register */
#define REG_UART0_RXCNT                      0x31003038            /*  UART0 Receive Counter Register */

/* ============================================================================================================================
        UART1
   ============================================================================================================================ */
#define REG_UART1_CTL                        0x31003404            /*  UART1 Control Register */
#define REG_UART1_STAT                       0x31003408            /*  UART1 Status Register */
#define REG_UART1_SCR                        0x3100340C            /*  UART1 Scratch Register */
#define REG_UART1_CLK                        0x31003410            /*  UART1 Clock Rate Register */
#define REG_UART1_IMSK                       0x31003414            /*  UART1 Interrupt Mask Register */
#define REG_UART1_IMSK_SET                   0x31003418            /*  UART1 Interrupt Mask Set Register */
#define REG_UART1_IMSK_CLR                   0x3100341C            /*  UART1 Interrupt Mask Clear Register */
#define REG_UART1_RBR                        0x31003420            /*  UART1 Receive Buffer Register */
#define REG_UART1_THR                        0x31003424            /*  UART1 Transmit Hold Register */
#define REG_UART1_TAIP                       0x31003428            /*  UART1 Transmit Address/Insert Pulse Register */
#define REG_UART1_TSR                        0x3100342C            /*  UART1 Transmit Shift Register */
#define REG_UART1_RSR                        0x31003430            /*  UART1 Receive Shift Register */
#define REG_UART1_TXCNT                      0x31003434            /*  UART1 Transmit Counter Register */
#define REG_UART1_RXCNT                      0x31003438            /*  UART1 Receive Counter Register */

/* ============================================================================================================================
        UART2
   ============================================================================================================================ */
#define REG_UART2_CTL                        0x31003804            /*  UART2 Control Register */
#define REG_UART2_STAT                       0x31003808            /*  UART2 Status Register */
#define REG_UART2_SCR                        0x3100380C            /*  UART2 Scratch Register */
#define REG_UART2_CLK                        0x31003810            /*  UART2 Clock Rate Register */
#define REG_UART2_IMSK                       0x31003814            /*  UART2 Interrupt Mask Register */
#define REG_UART2_IMSK_SET                   0x31003818            /*  UART2 Interrupt Mask Set Register */
#define REG_UART2_IMSK_CLR                   0x3100381C            /*  UART2 Interrupt Mask Clear Register */
#define REG_UART2_RBR                        0x31003820            /*  UART2 Receive Buffer Register */
#define REG_UART2_THR                        0x31003824            /*  UART2 Transmit Hold Register */
#define REG_UART2_TAIP                       0x31003828            /*  UART2 Transmit Address/Insert Pulse Register */
#define REG_UART2_TSR                        0x3100382C            /*  UART2 Transmit Shift Register */
#define REG_UART2_RSR                        0x31003830            /*  UART2 Receive Shift Register */
#define REG_UART2_TXCNT                      0x31003834            /*  UART2 Transmit Counter Register */
#define REG_UART2_RXCNT                      0x31003838            /*  UART2 Receive Counter Register */

/* ============================================================================================================================
        UART3
   ============================================================================================================================ */
#define REG_UART3_CTL                        0x31003C04            /*  UART3 Control Register */
#define REG_UART3_STAT                       0x31003C08            /*  UART3 Status Register */
#define REG_UART3_SCR                        0x31003C0C            /*  UART3 Scratch Register */
#define REG_UART3_CLK                        0x31003C10            /*  UART3 Clock Rate Register */
#define REG_UART3_IMSK                       0x31003C14            /*  UART3 Interrupt Mask Register */
#define REG_UART3_IMSK_SET                   0x31003C18            /*  UART3 Interrupt Mask Set Register */
#define REG_UART3_IMSK_CLR                   0x31003C1C            /*  UART3 Interrupt Mask Clear Register */
#define REG_UART3_RBR                        0x31003C20            /*  UART3 Receive Buffer Register */
#define REG_UART3_THR                        0x31003C24            /*  UART3 Transmit Hold Register */
#define REG_UART3_TAIP                       0x31003C28            /*  UART3 Transmit Address/Insert Pulse Register */
#define REG_UART3_TSR                        0x31003C2C            /*  UART3 Transmit Shift Register */
#define REG_UART3_RSR                        0x31003C30            /*  UART3 Receive Shift Register */
#define REG_UART3_TXCNT                      0x31003C34            /*  UART3 Transmit Counter Register */
#define REG_UART3_RXCNT                      0x31003C38            /*  UART3 Receive Counter Register */

/* ============================================================================================================================
        UART Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          UART_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_CTL_RFRT                   30            /*  Receive FIFO RTS Threshold */
#define BITP_UART_CTL_RFIT                   29            /*  Receive FIFO IRQ Threshold */
#define BITP_UART_CTL_ACTS                   28            /*  Automatic CTS */
#define BITP_UART_CTL_ARTS                   27            /*  Automatic RTS */
#define BITP_UART_CTL_XOFF                   26            /*  Transmitter off */
#define BITP_UART_CTL_MRTS                   25            /*  Manual Request to Send */
#define BITP_UART_CTL_TPOLC                  24            /*  IrDA TX Polarity Change */
#define BITP_UART_CTL_RPOLC                  23            /*  IrDA RX Polarity Change */
#define BITP_UART_CTL_FCPOL                  22            /*  Flow Control Pin Polarity */
#define BITP_UART_CTL_SB                     19            /*  Set Break */
#define BITP_UART_CTL_FFE                    18            /*  Force Framing Error on Transmit */
#define BITP_UART_CTL_FPE                    17            /*  Force Parity Error on Transmit */
#define BITP_UART_CTL_STP                    16            /*  Sticky Parity */
#define BITP_UART_CTL_EPS                    15            /*  Even Parity Select */
#define BITP_UART_CTL_PEN                    14            /*  Parity Enable */
#define BITP_UART_CTL_STBH                   13            /*  Stop Bits (Half Bit Time) */
#define BITP_UART_CTL_STB                    12            /*  Stop Bits */
#define BITP_UART_CTL_WLS                     8            /*  Word Length Select */
#define BITP_UART_CTL_MOD                     4            /*  Mode of Operation */
#define BITP_UART_CTL_LOOP_EN                 1            /*  Loopback Enable */
#define BITP_UART_CTL_EN                      0            /*  Enable UART */
#define BITM_UART_CTL_RFRT                   (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Receive FIFO RTS Threshold */
#define BITM_UART_CTL_RFIT                   (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Receive FIFO IRQ Threshold */
#define BITM_UART_CTL_ACTS                   (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Automatic CTS */
#define BITM_UART_CTL_ARTS                   (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Automatic RTS */
#define BITM_UART_CTL_XOFF                   (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Transmitter off */
#define BITM_UART_CTL_MRTS                   (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Manual Request to Send */
#define BITM_UART_CTL_TPOLC                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  IrDA TX Polarity Change */
#define BITM_UART_CTL_RPOLC                  (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  IrDA RX Polarity Change */
#define BITM_UART_CTL_FCPOL                  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Flow Control Pin Polarity */
#define BITM_UART_CTL_SB                     (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Set Break */
#define BITM_UART_CTL_FFE                    (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Force Framing Error on Transmit */
#define BITM_UART_CTL_FPE                    (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Force Parity Error on Transmit */
#define BITM_UART_CTL_STP                    (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Sticky Parity */
#define BITM_UART_CTL_EPS                    (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Even Parity Select */
#define BITM_UART_CTL_PEN                    (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Parity Enable */
#define BITM_UART_CTL_STBH                   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Stop Bits (Half Bit Time) */
#define BITM_UART_CTL_STB                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Stop Bits */
#define BITM_UART_CTL_WLS                    (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Word Length Select */
#define BITM_UART_CTL_MOD                    (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Mode of Operation */
#define BITM_UART_CTL_LOOP_EN                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Loopback Enable */
#define BITM_UART_CTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable UART */
#define ENUM_UART_CTL_RX_RTS_TH4             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RFRT: Deassert RTS if RX FIFO word count > 4; assert if <= 4 */
#define ENUM_UART_CTL_RX_RTS_TH7             (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  RFRT: Deassert RTS if RX FIFO word count > 7; assert if <= 7 */
#define ENUM_UART_CTL_RX_IRQ_TH4             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RFIT: Set RFCS=1 if RX FIFO count >= 4 */
#define ENUM_UART_CTL_RX_IRQ_TH7             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  RFIT: Set RFCS=1 if RX FIFO count >= 7 */
#define ENUM_UART_CTL_CTS_MAN                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ACTS: Disable TX handshaking protocol */
#define ENUM_UART_CTL_CTS_AUTO               (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  ACTS: Enable TX handshaking protocol */
#define ENUM_UART_CTL_RTS_MAN                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ARTS: Disable RX handshaking protocol. */
#define ENUM_UART_CTL_RTS_AUTO               (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  ARTS: Enable RX handshaking protocol. */
#define ENUM_UART_CTL_TX_ON                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  XOFF: Transmission ON, if ACTS=0 */
#define ENUM_UART_CTL_TX_OFF                 (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  XOFF: Transmission OFF, if ACTS=0 */
#define ENUM_UART_CTL_RTS_DEASSERT           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MRTS: Deassert RTS pin when ARTS=0 */
#define ENUM_UART_CTL_RTS_ASSERT             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  MRTS: Assert RTS pin  when ARTS=0 */
#define ENUM_UART_CTL_TPOLC_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TPOLC: Active-low TX polarity setting */
#define ENUM_UART_CTL_TPOLC_HI               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  TPOLC: Active-high TX polarity setting */
#define ENUM_UART_CTL_RPOLC_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RPOLC: Active-low RX polarity setting */
#define ENUM_UART_CTL_RPOLC_HI               (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  RPOLC: Active-high RX polarity setting */
#define ENUM_UART_CTL_FCPOL_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FCPOL: Active low CTS/RTS */
#define ENUM_UART_CTL_FCPOL_HI               (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  FCPOL: Active high CTS/RTS */
#define ENUM_UART_CTL_NORM_BREAK             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SB: No force */
#define ENUM_UART_CTL_FORCE_BREAK            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SB: Force TX pin to 0 */
#define ENUM_UART_CTL_NORM_FRM_ERR           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FFE: Normal operation */
#define ENUM_UART_CTL_FORCE_FRM_ERR          (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  FFE: Force error */
#define ENUM_UART_CTL_NORM_PARITY_ERR        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FPE: Normal operation */
#define ENUM_UART_CTL_FORCE_PARITY_ERR       (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  FPE: Force parity error */
#define ENUM_UART_CTL_NORM_PARITY            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  STP: No forced parity */
#define ENUM_UART_CTL_STICKY_PARITY          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  STP: Force (Stick) parity to defined value (if PEN=1) */
#define ENUM_UART_CTL_ODD_PARITY             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EPS: Odd parity */
#define ENUM_UART_CTL_EVEN_PARITY            (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  EPS: Even parity */
#define ENUM_UART_CTL_PARITY_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PEN: Disable */
#define ENUM_UART_CTL_PARITY_EN              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  PEN: Enable parity transmit and check */
#define ENUM_UART_CTL_NO_EXTRA_STBH          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  STBH: 0 half-bit-time stop bit */
#define ENUM_UART_CTL_ONE_EXTRA_STBH         (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  STBH: 1 half-bit-time stop bit */
#define ENUM_UART_CTL_NO_EXTRA_STB           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  STB: 1 stop bit */
#define ENUM_UART_CTL_ONE_EXTRA_STB          (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  STB: 2 stop bits */
#define ENUM_UART_CTL_WL5BITS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WLS: 5-bit word */
#define ENUM_UART_CTL_WL6BITS                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  WLS: 6-bit word */
#define ENUM_UART_CTL_WL7BITS                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  WLS: 7-bit word */
#define ENUM_UART_CTL_WL8BITS                (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  WLS: 8-bit word */
#define ENUM_UART_CTL_UART_MODE              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MOD: UART mode */
#define ENUM_UART_CTL_MDB_MODE               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  MOD: MDB mode */
#define ENUM_UART_CTL_IRDA_MODE              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  MOD: IrDA SIR mode */
#define ENUM_UART_CTL_LOOP_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOOP_EN: Disable */
#define ENUM_UART_CTL_LOOP_EN                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  LOOP_EN: Enable */
#define ENUM_UART_CTL_CLK_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_UART_CTL_CLK_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_STAT_RFCS                  17            /*  Receive FIFO Count Status */
#define BITP_UART_STAT_CTS                   16            /*  Clear to Send */
#define BITP_UART_STAT_SCTS                  12            /*  Sticky CTS */
#define BITP_UART_STAT_RO                    11            /*  Reception On-going */
#define BITP_UART_STAT_ADDR                  10            /*  Address Bit Status */
#define BITP_UART_STAT_ASTKY                  9            /*  Address Sticky */
#define BITP_UART_STAT_TFI                    8            /*  Transmission Finished Indicator */
#define BITP_UART_STAT_TEMT                   7            /*  TSR and THR Empty */
#define BITP_UART_STAT_THRE                   5            /*  Transmit Hold Register Empty */
#define BITP_UART_STAT_BI                     4            /*  Break Indicator */
#define BITP_UART_STAT_FE                     3            /*  Framing Error */
#define BITP_UART_STAT_PE                     2            /*  Parity Error */
#define BITP_UART_STAT_OE                     1            /*  Overrun Error */
#define BITP_UART_STAT_DR                     0            /*  Data Ready */
#define BITM_UART_STAT_RFCS                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Receive FIFO Count Status */
#define BITM_UART_STAT_CTS                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Clear to Send */
#define BITM_UART_STAT_SCTS                  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Sticky CTS */
#define BITM_UART_STAT_RO                    (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Reception On-going */
#define BITM_UART_STAT_ADDR                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Address Bit Status */
#define BITM_UART_STAT_ASTKY                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Address Sticky */
#define BITM_UART_STAT_TFI                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Transmission Finished Indicator */
#define BITM_UART_STAT_TEMT                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  TSR and THR Empty */
#define BITM_UART_STAT_THRE                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Hold Register Empty */
#define BITM_UART_STAT_BI                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Break Indicator */
#define BITM_UART_STAT_FE                    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Framing Error */
#define BITM_UART_STAT_PE                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Parity Error */
#define BITM_UART_STAT_OE                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Overrun Error */
#define BITM_UART_STAT_DR                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Data Ready */
#define ENUM_UART_STAT_RFCS_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RFCS: RX FIFO has less than 4 (7) entries when RFIT=0 (1) */
#define ENUM_UART_STAT_RFCS_HI               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  RFCS: RX FIFO has at least 4 (7) entries when RFIT=0 (1) */
#define ENUM_UART_STAT_CTS_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CTS: Not clear to send (External device not ready to receive) */
#define ENUM_UART_STAT_CTS_HI                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  CTS: Clear to send (External device ready to receive) */
#define ENUM_UART_STAT_CTS_LO_STKY           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SCTS: CTS has not transitioned from low to high */
#define ENUM_UART_STAT_CTS_HI_STKY           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  SCTS: CTS has transitioned from low to high */
#define ENUM_UART_STAT_NO_RX_PROGRESS        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RO: No data reception in progress */
#define ENUM_UART_STAT_RX_PROGRESS           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  RO: Data reception in progress */
#define ENUM_UART_STAT_ADDR_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ADDR: Address bit is low */
#define ENUM_UART_STAT_ADDR_HI               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  ADDR: Address bit is high */
#define ENUM_UART_STAT_ADDR_LO_STKY          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ASTKY: ADDR bit has not been set */
#define ENUM_UART_STAT_ADDR_HI_STKY          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ASTKY: ADDR bit has been set */
#define ENUM_UART_STAT_TX_NOT_DONE           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TFI: TEMT did not transition from 0 to 1 */
#define ENUM_UART_STAT_TX_DONE               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  TFI: TEMT transition from 0 to 1 */
#define ENUM_UART_STAT_TX_NOT_EMPTY          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TEMT: Not empty TSR/THR */
#define ENUM_UART_STAT_TX_EMPTY              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  TEMT: TSR/THR Empty */
#define ENUM_UART_STAT_THR_NOT_EMPTY         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  THRE: Not empty THR/TAIP */
#define ENUM_UART_STAT_THR_EMPTY             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  THRE: Empty THR/TAIP */
#define ENUM_UART_STAT_NO_BREAK_INT          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BI: No break interrupt */
#define ENUM_UART_STAT_BREAK_INT             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  BI: Break interrupt */
#define ENUM_UART_STAT_NO_FRAMING_ERR        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FE: No error */
#define ENUM_UART_STAT_FRAMING_ERR           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  FE: Invalid stop bit error */
#define ENUM_UART_STAT_NO_PARITY_ERR         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PE: No parity error */
#define ENUM_UART_STAT_PARITY_ERR            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PE: Parity error */
#define ENUM_UART_STAT_NO_OVR_ERR            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  OE: No overrun */
#define ENUM_UART_STAT_OVR_ERR               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  OE: Overrun error */
#define ENUM_UART_STAT_NO_DATA               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DR: No new data */
#define ENUM_UART_STAT_NEW_DATA              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  DR: New data in RBR */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_SCR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_SCR_VALUE                   0            /*  Stored 8-bit Data */
#define BITM_UART_SCR_VALUE                  (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Stored 8-bit Data */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_CLK                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_CLK_EDBO                   31            /*  Enable Divide By One */
#define BITP_UART_CLK_DIV                     0            /*  Divisor */
#define BITM_UART_CLK_EDBO                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Enable Divide By One */
#define BITM_UART_CLK_DIV                    (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Divisor */
#define ENUM_UART_CLK_DIS_DIV_BY_ONE         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EDBO: Bit clock prescaler = 16 */
#define ENUM_UART_CLK_EN_DIV_BY_ONE          (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  EDBO: Bit clock prescaler = 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_IMSK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_IMSK_ETXS                   9            /*  Enable TX to Status Interrupt Mask Status */
#define BITP_UART_IMSK_ERXS                   8            /*  Enable RX to Status Interrupt Mask Status */
#define BITP_UART_IMSK_EAWI                   7            /*  Enable Address Word Interrupt Mask Status */
#define BITP_UART_IMSK_ERFCI                  6            /*  Enable Receive FIFO Count Interrupt Mask Status */
#define BITP_UART_IMSK_ETFI                   5            /*  Enable Transmission Finished Interrupt Mask Status */
#define BITP_UART_IMSK_EDTPTI                 4            /*  Enable DMA TX Peripheral Triggered Interrupt Mask Status */
#define BITP_UART_IMSK_EDSSI                  3            /*  Enable Modem Status Interrupt Mask Status */
#define BITP_UART_IMSK_ELSI                   2            /*  Enable Line Status Interrupt Mask Status */
#define BITP_UART_IMSK_ETBEI                  1            /*  Enable Transmit Buffer Empty Interrupt Mask Status */
#define BITP_UART_IMSK_ERBFI                  0            /*  Enable Receive Buffer Full Interrupt Mask Status */
#define BITM_UART_IMSK_ETXS                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Enable TX to Status Interrupt Mask Status */
#define BITM_UART_IMSK_ERXS                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Enable RX to Status Interrupt Mask Status */
#define BITM_UART_IMSK_EAWI                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Enable Address Word Interrupt Mask Status */
#define BITM_UART_IMSK_ERFCI                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Enable Receive FIFO Count Interrupt Mask Status */
#define BITM_UART_IMSK_ETFI                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Enable Transmission Finished Interrupt Mask Status */
#define BITM_UART_IMSK_EDTPTI                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Enable DMA TX Peripheral Triggered Interrupt Mask Status */
#define BITM_UART_IMSK_EDSSI                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Enable Modem Status Interrupt Mask Status */
#define BITM_UART_IMSK_ELSI                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Enable Line Status Interrupt Mask Status */
#define BITM_UART_IMSK_ETBEI                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Enable Transmit Buffer Empty Interrupt Mask Status */
#define BITM_UART_IMSK_ERBFI                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Receive Buffer Full Interrupt Mask Status */
#define ENUM_UART_IMSK_ETXS_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ETXS: Interrupt is masked */
#define ENUM_UART_IMSK_ETXS_HI               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ETXS: Interrupt is unmasked */
#define ENUM_UART_IMSK_ERXS_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERXS: Interrupt is masked */
#define ENUM_UART_IMSK_ERXS_HI               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  ERXS: Interrupt is unmasked */
#define ENUM_UART_IMSK_EAWI_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EAWI: Interrupt is masked */
#define ENUM_UART_IMSK_EAWI_HI               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  EAWI: Interrupt is unmasked */
#define ENUM_UART_IMSK_ERFCI_LO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERFCI: Interrupt is masked */
#define ENUM_UART_IMSK_ERFCI_HI              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  ERFCI: Interrupt is unmasked */
#define ENUM_UART_IMSK_ETFI_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ETFI: Interrupt is masked */
#define ENUM_UART_IMSK_ETFI_HI               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  ETFI: Interrupt is unmasked */
#define ENUM_UART_IMSK_EDTPTI_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EDTPTI: Interrupt is masked */
#define ENUM_UART_IMSK_EDTPTI_HI             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  EDTPTI: Interrupt is unmasked */
#define ENUM_UART_IMSK_EDSSI_LO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EDSSI: Interrupt is masked */
#define ENUM_UART_IMSK_EDSSI_HI              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  EDSSI: Interrupt is unmasked */
#define ENUM_UART_IMSK_ELSI_LO               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ELSI: Interrupt is masked */
#define ENUM_UART_IMSK_ELSI_HI               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  ELSI: Interrupt is unmasked */
#define ENUM_UART_IMSK_ETBEI_LO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ETBEI: Interrupt is masked */
#define ENUM_UART_IMSK_ETBEI_HI              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  ETBEI: Interrupt is unmasked */
#define ENUM_UART_IMSK_ERBFI_LO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERBFI: Interrupt is masked */
#define ENUM_UART_IMSK_ERBFI_HI              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ERBFI: Interrupt is unmasked */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_IMSK_SET                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_IMSK_SET_ETXS               9            /*  Enable TX to Status Interrupt Mask Set */
#define BITP_UART_IMSK_SET_ERXS               8            /*  Enable RX to Status Interrupt Mask Set */
#define BITP_UART_IMSK_SET_EAWI               7            /*  Enable Address Word Interrupt Mask Set */
#define BITP_UART_IMSK_SET_ERFCI              6            /*  Enable Receive FIFO Count Interrupt Mask Set */
#define BITP_UART_IMSK_SET_ETFI               5            /*  Enable Transmission Finished Interrupt Mask Set */
#define BITP_UART_IMSK_SET_EDTPTI             4            /*  Enable DMA TX Peripheral Triggered Interrupt Mask Set */
#define BITP_UART_IMSK_SET_EDSSI              3            /*  Enable Modem Status Interrupt Mask Set */
#define BITP_UART_IMSK_SET_ELSI               2            /*  Enable Line Status Interrupt Mask Set */
#define BITP_UART_IMSK_SET_ETBEI              1            /*  Enable Transmit Buffer Empty Interrupt Mask Set */
#define BITP_UART_IMSK_SET_ERBFI              0            /*  Enable Receive Buffer Full Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ETXS              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Enable TX to Status Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ERXS              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Enable RX to Status Interrupt Mask Set */
#define BITM_UART_IMSK_SET_EAWI              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Enable Address Word Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ERFCI             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Enable Receive FIFO Count Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ETFI              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Enable Transmission Finished Interrupt Mask Set */
#define BITM_UART_IMSK_SET_EDTPTI            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Enable DMA TX Peripheral Triggered Interrupt Mask Set */
#define BITM_UART_IMSK_SET_EDSSI             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Enable Modem Status Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ELSI              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Enable Line Status Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ETBEI             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Enable Transmit Buffer Empty Interrupt Mask Set */
#define BITM_UART_IMSK_SET_ERBFI             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Receive Buffer Full Interrupt Mask Set */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_IMSK_CLR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_IMSK_CLR_ETXS               9            /*  Enable TX to Status Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_ERXS               8            /*  Enable RX to Status Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_EAWI               7            /*  Enable Address Word Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_ERFCI              6            /*  Enable Receive FIFO Count Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_ETFI               5            /*  Enable Transmission Finished Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_EDTPTI             4            /*  Enable DMA TX Peripheral Triggered Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_EDSSI              3            /*  Enable Modem Status Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_ELSI               2            /*  Enable Line Status Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_ETBEI              1            /*  Enable Transmit Buffer Empty Interrupt Mask Clear */
#define BITP_UART_IMSK_CLR_ERBFI              0            /*  Enable Receive Buffer Full Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ETXS              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Enable TX to Status Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ERXS              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Enable RX to Status Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_EAWI              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Enable Address Word Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ERFCI             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Enable Receive FIFO Count Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ETFI              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Enable Transmission Finished Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_EDTPTI            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Enable DMA TX Peripheral Triggered Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_EDSSI             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Enable Modem Status Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ELSI              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Enable Line Status Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ETBEI             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Enable Transmit Buffer Empty Interrupt Mask Clear */
#define BITM_UART_IMSK_CLR_ERBFI             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Receive Buffer Full Interrupt Mask Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_RBR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_RBR_VALUE                   0            /*  8-bit data */
#define BITM_UART_RBR_VALUE                  (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  8-bit data */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_THR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_THR_VALUE                   0            /*  8 bit data */
#define BITM_UART_THR_VALUE                  (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  8 bit data */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_TAIP                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_TAIP_VALUE                  0            /*  8-bit data */
#define BITM_UART_TAIP_VALUE                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  8-bit data */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_TSR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_TSR_VALUE                   0            /*  Contents of TSR */
#define BITM_UART_TSR_VALUE                  (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Contents of TSR */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_RSR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_RSR_VALUE                   0            /*  Contents of RSR */
#define BITM_UART_RSR_VALUE                  (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Contents of RSR */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_TXCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_TXCNT_VALUE                 0            /*  16-bit Counter Value */
#define BITM_UART_TXCNT_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Counter Value */

/* -------------------------------------------------------------------------------------------------------------------------
          UART_RXCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_UART_RXCNT_VALUE                 0            /*  16-bit Counter Value */
#define BITM_UART_RXCNT_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Counter Value */


/* ============================================================================================================================
        The General-Purpose Input/Output Port
   ============================================================================================================================ */

/* ============================================================================================================================
        PORTA
   ============================================================================================================================ */
#define REG_PORTA_FER                        0x31004000            /*  PORTA Port x Function Enable Register */
#define REG_PORTA_FER_SET                    0x31004004            /*  PORTA Port x Function Enable Set Register */
#define REG_PORTA_FER_CLR                    0x31004008            /*  PORTA Port x Function Enable Clear Register */
#define REG_PORTA_DATA                       0x3100400C            /*  PORTA Port x GPIO Data Register */
#define REG_PORTA_DATA_SET                   0x31004010            /*  PORTA Port x GPIO Data Set Register */
#define REG_PORTA_DATA_CLR                   0x31004014            /*  PORTA Port x GPIO Data Clear Register */
#define REG_PORTA_DIR                        0x31004018            /*  PORTA Port x GPIO Direction Register */
#define REG_PORTA_DIR_SET                    0x3100401C            /*  PORTA Port x GPIO Direction Set Register */
#define REG_PORTA_DIR_CLR                    0x31004020            /*  PORTA Port x GPIO Direction Clear Register */
#define REG_PORTA_INEN                       0x31004024            /*  PORTA Port x GPIO Input Enable Register */
#define REG_PORTA_INEN_SET                   0x31004028            /*  PORTA Port x GPIO Input Enable Set Register */
#define REG_PORTA_INEN_CLR                   0x3100402C            /*  PORTA Port x GPIO Input Enable Clear Register */
#define REG_PORTA_MUX                        0x31004030            /*  PORTA Port x Multiplexer Control Register */
#define REG_PORTA_DATA_TGL                   0x31004034            /*  PORTA Port x GPIO Output Toggle Register */
#define REG_PORTA_POL                        0x31004038            /*  PORTA Port x GPIO Polarity Invert Register */
#define REG_PORTA_POL_SET                    0x3100403C            /*  PORTA Port x GPIO Polarity Invert Set Register */
#define REG_PORTA_POL_CLR                    0x31004040            /*  PORTA Port x GPIO Polarity Invert Clear Register */
#define REG_PORTA_LOCK                       0x31004044            /*  PORTA Port x GPIO Lock Register */
#define REG_PORTA_TRIG_TGL                   0x31004048            /*  PORTA Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORTB
   ============================================================================================================================ */
#define REG_PORTB_FER                        0x31004080            /*  PORTB Port x Function Enable Register */
#define REG_PORTB_FER_SET                    0x31004084            /*  PORTB Port x Function Enable Set Register */
#define REG_PORTB_FER_CLR                    0x31004088            /*  PORTB Port x Function Enable Clear Register */
#define REG_PORTB_DATA                       0x3100408C            /*  PORTB Port x GPIO Data Register */
#define REG_PORTB_DATA_SET                   0x31004090            /*  PORTB Port x GPIO Data Set Register */
#define REG_PORTB_DATA_CLR                   0x31004094            /*  PORTB Port x GPIO Data Clear Register */
#define REG_PORTB_DIR                        0x31004098            /*  PORTB Port x GPIO Direction Register */
#define REG_PORTB_DIR_SET                    0x3100409C            /*  PORTB Port x GPIO Direction Set Register */
#define REG_PORTB_DIR_CLR                    0x310040A0            /*  PORTB Port x GPIO Direction Clear Register */
#define REG_PORTB_INEN                       0x310040A4            /*  PORTB Port x GPIO Input Enable Register */
#define REG_PORTB_INEN_SET                   0x310040A8            /*  PORTB Port x GPIO Input Enable Set Register */
#define REG_PORTB_INEN_CLR                   0x310040AC            /*  PORTB Port x GPIO Input Enable Clear Register */
#define REG_PORTB_MUX                        0x310040B0            /*  PORTB Port x Multiplexer Control Register */
#define REG_PORTB_DATA_TGL                   0x310040B4            /*  PORTB Port x GPIO Output Toggle Register */
#define REG_PORTB_POL                        0x310040B8            /*  PORTB Port x GPIO Polarity Invert Register */
#define REG_PORTB_POL_SET                    0x310040BC            /*  PORTB Port x GPIO Polarity Invert Set Register */
#define REG_PORTB_POL_CLR                    0x310040C0            /*  PORTB Port x GPIO Polarity Invert Clear Register */
#define REG_PORTB_LOCK                       0x310040C4            /*  PORTB Port x GPIO Lock Register */
#define REG_PORTB_TRIG_TGL                   0x310040C8            /*  PORTB Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORTD
   ============================================================================================================================ */
#define REG_PORTD_FER                        0x31004180            /*  PORTD Port x Function Enable Register */
#define REG_PORTD_FER_SET                    0x31004184            /*  PORTD Port x Function Enable Set Register */
#define REG_PORTD_FER_CLR                    0x31004188            /*  PORTD Port x Function Enable Clear Register */
#define REG_PORTD_DATA                       0x3100418C            /*  PORTD Port x GPIO Data Register */
#define REG_PORTD_DATA_SET                   0x31004190            /*  PORTD Port x GPIO Data Set Register */
#define REG_PORTD_DATA_CLR                   0x31004194            /*  PORTD Port x GPIO Data Clear Register */
#define REG_PORTD_DIR                        0x31004198            /*  PORTD Port x GPIO Direction Register */
#define REG_PORTD_DIR_SET                    0x3100419C            /*  PORTD Port x GPIO Direction Set Register */
#define REG_PORTD_DIR_CLR                    0x310041A0            /*  PORTD Port x GPIO Direction Clear Register */
#define REG_PORTD_INEN                       0x310041A4            /*  PORTD Port x GPIO Input Enable Register */
#define REG_PORTD_INEN_SET                   0x310041A8            /*  PORTD Port x GPIO Input Enable Set Register */
#define REG_PORTD_INEN_CLR                   0x310041AC            /*  PORTD Port x GPIO Input Enable Clear Register */
#define REG_PORTD_MUX                        0x310041B0            /*  PORTD Port x Multiplexer Control Register */
#define REG_PORTD_DATA_TGL                   0x310041B4            /*  PORTD Port x GPIO Output Toggle Register */
#define REG_PORTD_POL                        0x310041B8            /*  PORTD Port x GPIO Polarity Invert Register */
#define REG_PORTD_POL_SET                    0x310041BC            /*  PORTD Port x GPIO Polarity Invert Set Register */
#define REG_PORTD_POL_CLR                    0x310041C0            /*  PORTD Port x GPIO Polarity Invert Clear Register */
#define REG_PORTD_LOCK                       0x310041C4            /*  PORTD Port x GPIO Lock Register */
#define REG_PORTD_TRIG_TGL                   0x310041C8            /*  PORTD Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORTE
   ============================================================================================================================ */
#define REG_PORTE_FER                        0x31004200            /*  PORTE Port x Function Enable Register */
#define REG_PORTE_FER_SET                    0x31004204            /*  PORTE Port x Function Enable Set Register */
#define REG_PORTE_FER_CLR                    0x31004208            /*  PORTE Port x Function Enable Clear Register */
#define REG_PORTE_DATA                       0x3100420C            /*  PORTE Port x GPIO Data Register */
#define REG_PORTE_DATA_SET                   0x31004210            /*  PORTE Port x GPIO Data Set Register */
#define REG_PORTE_DATA_CLR                   0x31004214            /*  PORTE Port x GPIO Data Clear Register */
#define REG_PORTE_DIR                        0x31004218            /*  PORTE Port x GPIO Direction Register */
#define REG_PORTE_DIR_SET                    0x3100421C            /*  PORTE Port x GPIO Direction Set Register */
#define REG_PORTE_DIR_CLR                    0x31004220            /*  PORTE Port x GPIO Direction Clear Register */
#define REG_PORTE_INEN                       0x31004224            /*  PORTE Port x GPIO Input Enable Register */
#define REG_PORTE_INEN_SET                   0x31004228            /*  PORTE Port x GPIO Input Enable Set Register */
#define REG_PORTE_INEN_CLR                   0x3100422C            /*  PORTE Port x GPIO Input Enable Clear Register */
#define REG_PORTE_MUX                        0x31004230            /*  PORTE Port x Multiplexer Control Register */
#define REG_PORTE_DATA_TGL                   0x31004234            /*  PORTE Port x GPIO Output Toggle Register */
#define REG_PORTE_POL                        0x31004238            /*  PORTE Port x GPIO Polarity Invert Register */
#define REG_PORTE_POL_SET                    0x3100423C            /*  PORTE Port x GPIO Polarity Invert Set Register */
#define REG_PORTE_POL_CLR                    0x31004240            /*  PORTE Port x GPIO Polarity Invert Clear Register */
#define REG_PORTE_LOCK                       0x31004244            /*  PORTE Port x GPIO Lock Register */
#define REG_PORTE_TRIG_TGL                   0x31004248            /*  PORTE Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORTF
   ============================================================================================================================ */
#define REG_PORTF_FER                        0x31004280            /*  PORTF Port x Function Enable Register */
#define REG_PORTF_FER_SET                    0x31004284            /*  PORTF Port x Function Enable Set Register */
#define REG_PORTF_FER_CLR                    0x31004288            /*  PORTF Port x Function Enable Clear Register */
#define REG_PORTF_DATA                       0x3100428C            /*  PORTF Port x GPIO Data Register */
#define REG_PORTF_DATA_SET                   0x31004290            /*  PORTF Port x GPIO Data Set Register */
#define REG_PORTF_DATA_CLR                   0x31004294            /*  PORTF Port x GPIO Data Clear Register */
#define REG_PORTF_DIR                        0x31004298            /*  PORTF Port x GPIO Direction Register */
#define REG_PORTF_DIR_SET                    0x3100429C            /*  PORTF Port x GPIO Direction Set Register */
#define REG_PORTF_DIR_CLR                    0x310042A0            /*  PORTF Port x GPIO Direction Clear Register */
#define REG_PORTF_INEN                       0x310042A4            /*  PORTF Port x GPIO Input Enable Register */
#define REG_PORTF_INEN_SET                   0x310042A8            /*  PORTF Port x GPIO Input Enable Set Register */
#define REG_PORTF_INEN_CLR                   0x310042AC            /*  PORTF Port x GPIO Input Enable Clear Register */
#define REG_PORTF_MUX                        0x310042B0            /*  PORTF Port x Multiplexer Control Register */
#define REG_PORTF_DATA_TGL                   0x310042B4            /*  PORTF Port x GPIO Output Toggle Register */
#define REG_PORTF_POL                        0x310042B8            /*  PORTF Port x GPIO Polarity Invert Register */
#define REG_PORTF_POL_SET                    0x310042BC            /*  PORTF Port x GPIO Polarity Invert Set Register */
#define REG_PORTF_POL_CLR                    0x310042C0            /*  PORTF Port x GPIO Polarity Invert Clear Register */
#define REG_PORTF_LOCK                       0x310042C4            /*  PORTF Port x GPIO Lock Register */
#define REG_PORTF_TRIG_TGL                   0x310042C8            /*  PORTF Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORTG
   ============================================================================================================================ */
#define REG_PORTG_FER                        0x31004300            /*  PORTG Port x Function Enable Register */
#define REG_PORTG_FER_SET                    0x31004304            /*  PORTG Port x Function Enable Set Register */
#define REG_PORTG_FER_CLR                    0x31004308            /*  PORTG Port x Function Enable Clear Register */
#define REG_PORTG_DATA                       0x3100430C            /*  PORTG Port x GPIO Data Register */
#define REG_PORTG_DATA_SET                   0x31004310            /*  PORTG Port x GPIO Data Set Register */
#define REG_PORTG_DATA_CLR                   0x31004314            /*  PORTG Port x GPIO Data Clear Register */
#define REG_PORTG_DIR                        0x31004318            /*  PORTG Port x GPIO Direction Register */
#define REG_PORTG_DIR_SET                    0x3100431C            /*  PORTG Port x GPIO Direction Set Register */
#define REG_PORTG_DIR_CLR                    0x31004320            /*  PORTG Port x GPIO Direction Clear Register */
#define REG_PORTG_INEN                       0x31004324            /*  PORTG Port x GPIO Input Enable Register */
#define REG_PORTG_INEN_SET                   0x31004328            /*  PORTG Port x GPIO Input Enable Set Register */
#define REG_PORTG_INEN_CLR                   0x3100432C            /*  PORTG Port x GPIO Input Enable Clear Register */
#define REG_PORTG_MUX                        0x31004330            /*  PORTG Port x Multiplexer Control Register */
#define REG_PORTG_DATA_TGL                   0x31004334            /*  PORTG Port x GPIO Output Toggle Register */
#define REG_PORTG_POL                        0x31004338            /*  PORTG Port x GPIO Polarity Invert Register */
#define REG_PORTG_POL_SET                    0x3100433C            /*  PORTG Port x GPIO Polarity Invert Set Register */
#define REG_PORTG_POL_CLR                    0x31004340            /*  PORTG Port x GPIO Polarity Invert Clear Register */
#define REG_PORTG_LOCK                       0x31004344            /*  PORTG Port x GPIO Lock Register */
#define REG_PORTG_TRIG_TGL                   0x31004348            /*  PORTG Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORTH
   ============================================================================================================================ */
#define REG_PORTH_FER                        0x31004380            /*  PORTH Port x Function Enable Register */
#define REG_PORTH_FER_SET                    0x31004384            /*  PORTH Port x Function Enable Set Register */
#define REG_PORTH_FER_CLR                    0x31004388            /*  PORTH Port x Function Enable Clear Register */
#define REG_PORTH_DATA                       0x3100438C            /*  PORTH Port x GPIO Data Register */
#define REG_PORTH_DATA_SET                   0x31004390            /*  PORTH Port x GPIO Data Set Register */
#define REG_PORTH_DATA_CLR                   0x31004394            /*  PORTH Port x GPIO Data Clear Register */
#define REG_PORTH_DIR                        0x31004398            /*  PORTH Port x GPIO Direction Register */
#define REG_PORTH_DIR_SET                    0x3100439C            /*  PORTH Port x GPIO Direction Set Register */
#define REG_PORTH_DIR_CLR                    0x310043A0            /*  PORTH Port x GPIO Direction Clear Register */
#define REG_PORTH_INEN                       0x310043A4            /*  PORTH Port x GPIO Input Enable Register */
#define REG_PORTH_INEN_SET                   0x310043A8            /*  PORTH Port x GPIO Input Enable Set Register */
#define REG_PORTH_INEN_CLR                   0x310043AC            /*  PORTH Port x GPIO Input Enable Clear Register */
#define REG_PORTH_MUX                        0x310043B0            /*  PORTH Port x Multiplexer Control Register */
#define REG_PORTH_DATA_TGL                   0x310043B4            /*  PORTH Port x GPIO Output Toggle Register */
#define REG_PORTH_POL                        0x310043B8            /*  PORTH Port x GPIO Polarity Invert Register */
#define REG_PORTH_POL_SET                    0x310043BC            /*  PORTH Port x GPIO Polarity Invert Set Register */
#define REG_PORTH_POL_CLR                    0x310043C0            /*  PORTH Port x GPIO Polarity Invert Clear Register */
#define REG_PORTH_LOCK                       0x310043C4            /*  PORTH Port x GPIO Lock Register */
#define REG_PORTH_TRIG_TGL                   0x310043C8            /*  PORTH Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PORT_FER                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_FER_PX15                   15            /*  Port x Bit 15 Mode */
#define BITP_PORT_FER_PX14                   14            /*  Port x Bit 14 Mode */
#define BITP_PORT_FER_PX13                   13            /*  Port x Bit 13 Mode */
#define BITP_PORT_FER_PX12                   12            /*  Port x Bit 12 Mode */
#define BITP_PORT_FER_PX11                   11            /*  Port x Bit 11 Mode */
#define BITP_PORT_FER_PX10                   10            /*  Port x Bit 10 Mode */
#define BITP_PORT_FER_PX9                     9            /*  Port x Bit 9 Mode */
#define BITP_PORT_FER_PX8                     8            /*  Port x Bit 8 Mode */
#define BITP_PORT_FER_PX7                     7            /*  Port x Bit 7 Mode */
#define BITP_PORT_FER_PX6                     6            /*  Port x Bit 6 Mode */
#define BITP_PORT_FER_PX5                     5            /*  Port x Bit 5 Mode */
#define BITP_PORT_FER_PX4                     4            /*  Port x Bit 4 Mode */
#define BITP_PORT_FER_PX3                     3            /*  Port x Bit 3 Mode */
#define BITP_PORT_FER_PX2                     2            /*  Port x Bit 2 Mode */
#define BITP_PORT_FER_PX1                     1            /*  Port x Bit 1 Mode */
#define BITP_PORT_FER_PX0                     0            /*  Port x Bit 0 Mode */
#define BITM_PORT_FER_PX15                   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Mode */
#define BITM_PORT_FER_PX14                   (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Mode */
#define BITM_PORT_FER_PX13                   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Mode */
#define BITM_PORT_FER_PX12                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Mode */
#define BITM_PORT_FER_PX11                   (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Mode */
#define BITM_PORT_FER_PX10                   (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Mode */
#define BITM_PORT_FER_PX9                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Mode */
#define BITM_PORT_FER_PX8                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Mode */
#define BITM_PORT_FER_PX7                    (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Mode */
#define BITM_PORT_FER_PX6                    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Mode */
#define BITM_PORT_FER_PX5                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Mode */
#define BITM_PORT_FER_PX4                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Mode */
#define BITM_PORT_FER_PX3                    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Mode */
#define BITM_PORT_FER_PX2                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Mode */
#define BITM_PORT_FER_PX1                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Mode */
#define BITM_PORT_FER_PX0                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_FER_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_FER_SET_PX15               15            /*  Port x Bit 15 Mode Set */
#define BITP_PORT_FER_SET_PX14               14            /*  Port x Bit 14 Mode Set */
#define BITP_PORT_FER_SET_PX13               13            /*  Port x Bit 13 Mode Set */
#define BITP_PORT_FER_SET_PX12               12            /*  Port x Bit 12 Mode Set */
#define BITP_PORT_FER_SET_PX11               11            /*  Port x Bit 11 Mode Set */
#define BITP_PORT_FER_SET_PX10               10            /*  Port x Bit 10 Mode Set */
#define BITP_PORT_FER_SET_PX9                 9            /*  Port x Bit 9 Mode Set */
#define BITP_PORT_FER_SET_PX8                 8            /*  Port x Bit 8 Mode Set */
#define BITP_PORT_FER_SET_PX7                 7            /*  Port x Bit 7 Mode Set */
#define BITP_PORT_FER_SET_PX6                 6            /*  Port x Bit 6 Mode Set */
#define BITP_PORT_FER_SET_PX5                 5            /*  Port x Bit 5 Mode Set */
#define BITP_PORT_FER_SET_PX4                 4            /*  Port x Bit 4 Mode Set */
#define BITP_PORT_FER_SET_PX3                 3            /*  Port x Bit 3 Mode Set */
#define BITP_PORT_FER_SET_PX2                 2            /*  Port x Bit 2 Mode Set */
#define BITP_PORT_FER_SET_PX1                 1            /*  Port x Bit 1 Mode Set */
#define BITP_PORT_FER_SET_PX0                 0            /*  Port x Bit 0 Mode Set */
#define BITM_PORT_FER_SET_PX15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Mode Set */
#define BITM_PORT_FER_SET_PX14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Mode Set */
#define BITM_PORT_FER_SET_PX13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Mode Set */
#define BITM_PORT_FER_SET_PX12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Mode Set */
#define BITM_PORT_FER_SET_PX11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Mode Set */
#define BITM_PORT_FER_SET_PX10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Mode Set */
#define BITM_PORT_FER_SET_PX9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Mode Set */
#define BITM_PORT_FER_SET_PX8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Mode Set */
#define BITM_PORT_FER_SET_PX7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Mode Set */
#define BITM_PORT_FER_SET_PX6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Mode Set */
#define BITM_PORT_FER_SET_PX5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Mode Set */
#define BITM_PORT_FER_SET_PX4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Mode Set */
#define BITM_PORT_FER_SET_PX3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Mode Set */
#define BITM_PORT_FER_SET_PX2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Mode Set */
#define BITM_PORT_FER_SET_PX1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Mode Set */
#define BITM_PORT_FER_SET_PX0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Mode Set */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_FER_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_FER_CLR_PX15               15            /*  Port x Bit 15 Mode Clear */
#define BITP_PORT_FER_CLR_PX14               14            /*  Port x Bit 14 Mode Clear */
#define BITP_PORT_FER_CLR_PX13               13            /*  Port x Bit 13 Mode Clear */
#define BITP_PORT_FER_CLR_PX12               12            /*  Port x Bit 12 Mode Clear */
#define BITP_PORT_FER_CLR_PX11               11            /*  Port x Bit 11 Mode Clear */
#define BITP_PORT_FER_CLR_PX10               10            /*  Port x Bit 10 Mode Clear */
#define BITP_PORT_FER_CLR_PX9                 9            /*  Port x Bit 9 Mode Clear */
#define BITP_PORT_FER_CLR_PX8                 8            /*  Port x Bit 8 Mode Clear */
#define BITP_PORT_FER_CLR_PX7                 7            /*  Port x Bit 7 Mode Clear */
#define BITP_PORT_FER_CLR_PX6                 6            /*  Port x Bit 6 Mode Clear */
#define BITP_PORT_FER_CLR_PX5                 5            /*  Port x Bit 5 Mode Clear */
#define BITP_PORT_FER_CLR_PX4                 4            /*  Port x Bit 4 Mode Clear */
#define BITP_PORT_FER_CLR_PX3                 3            /*  Port x Bit 3 Mode Clear */
#define BITP_PORT_FER_CLR_PX2                 2            /*  Port x Bit 2 Mode Clear */
#define BITP_PORT_FER_CLR_PX1                 1            /*  Port x Bit 1 Mode Clear */
#define BITP_PORT_FER_CLR_PX0                 0            /*  Port x Bit 0 Mode Clear */
#define BITM_PORT_FER_CLR_PX15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Mode Clear */
#define BITM_PORT_FER_CLR_PX14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Mode Clear */
#define BITM_PORT_FER_CLR_PX13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Mode Clear */
#define BITM_PORT_FER_CLR_PX12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Mode Clear */
#define BITM_PORT_FER_CLR_PX11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Mode Clear */
#define BITM_PORT_FER_CLR_PX10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Mode Clear */
#define BITM_PORT_FER_CLR_PX9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Mode Clear */
#define BITM_PORT_FER_CLR_PX8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Mode Clear */
#define BITM_PORT_FER_CLR_PX7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Mode Clear */
#define BITM_PORT_FER_CLR_PX6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Mode Clear */
#define BITM_PORT_FER_CLR_PX5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Mode Clear */
#define BITM_PORT_FER_CLR_PX4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Mode Clear */
#define BITM_PORT_FER_CLR_PX3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Mode Clear */
#define BITM_PORT_FER_CLR_PX2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Mode Clear */
#define BITM_PORT_FER_CLR_PX1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Mode Clear */
#define BITM_PORT_FER_CLR_PX0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Mode Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DATA                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DATA_PX15                  15            /*  Port x Bit 15 Data */
#define BITP_PORT_DATA_PX14                  14            /*  Port x Bit 14 Data */
#define BITP_PORT_DATA_PX13                  13            /*  Port x Bit 13 Data */
#define BITP_PORT_DATA_PX12                  12            /*  Port x Bit 12 Data */
#define BITP_PORT_DATA_PX11                  11            /*  Port x Bit 11 Data */
#define BITP_PORT_DATA_PX10                  10            /*  Port x Bit 10 Data */
#define BITP_PORT_DATA_PX9                    9            /*  Port x Bit 9 Data */
#define BITP_PORT_DATA_PX8                    8            /*  Port x Bit 8 Data */
#define BITP_PORT_DATA_PX7                    7            /*  Port x Bit 7 Data */
#define BITP_PORT_DATA_PX6                    6            /*  Port x Bit 6 Data */
#define BITP_PORT_DATA_PX5                    5            /*  Port x Bit 5 Data */
#define BITP_PORT_DATA_PX4                    4            /*  Port x Bit 4 Data */
#define BITP_PORT_DATA_PX3                    3            /*  Port x Bit 3 Data */
#define BITP_PORT_DATA_PX2                    2            /*  Port x Bit 2 Data */
#define BITP_PORT_DATA_PX1                    1            /*  Port x Bit 1 Data */
#define BITP_PORT_DATA_PX0                    0            /*  Port x Bit 0 Data */
#define BITM_PORT_DATA_PX15                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Data */
#define BITM_PORT_DATA_PX14                  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Data */
#define BITM_PORT_DATA_PX13                  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Data */
#define BITM_PORT_DATA_PX12                  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Data */
#define BITM_PORT_DATA_PX11                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Data */
#define BITM_PORT_DATA_PX10                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Data */
#define BITM_PORT_DATA_PX9                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Data */
#define BITM_PORT_DATA_PX8                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Data */
#define BITM_PORT_DATA_PX7                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Data */
#define BITM_PORT_DATA_PX6                   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Data */
#define BITM_PORT_DATA_PX5                   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Data */
#define BITM_PORT_DATA_PX4                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Data */
#define BITM_PORT_DATA_PX3                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Data */
#define BITM_PORT_DATA_PX2                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Data */
#define BITM_PORT_DATA_PX1                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Data */
#define BITM_PORT_DATA_PX0                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Data */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DATA_SET                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DATA_SET_PX15              15            /*  Port x Bit 15 Data Set */
#define BITP_PORT_DATA_SET_PX14              14            /*  Port x Bit 14 Data Set */
#define BITP_PORT_DATA_SET_PX13              13            /*  Port x Bit 13 Data Set */
#define BITP_PORT_DATA_SET_PX12              12            /*  Port x Bit 12 Data Set */
#define BITP_PORT_DATA_SET_PX11              11            /*  Port x Bit 11 Data Set */
#define BITP_PORT_DATA_SET_PX10              10            /*  Port x Bit 10 Data Set */
#define BITP_PORT_DATA_SET_PX9                9            /*  Port x Bit 9 Data Set */
#define BITP_PORT_DATA_SET_PX8                8            /*  Port x Bit 8 Data Set */
#define BITP_PORT_DATA_SET_PX7                7            /*  Port x Bit 7 Data Set */
#define BITP_PORT_DATA_SET_PX6                6            /*  Port x Bit 6 Data Set */
#define BITP_PORT_DATA_SET_PX5                5            /*  Port x Bit 5 Data Set */
#define BITP_PORT_DATA_SET_PX4                4            /*  Port x Bit 4 Data Set */
#define BITP_PORT_DATA_SET_PX3                3            /*  Port x Bit 3 Data Set */
#define BITP_PORT_DATA_SET_PX2                2            /*  Port x Bit 2 Data Set */
#define BITP_PORT_DATA_SET_PX1                1            /*  Port x Bit 1 Data Set */
#define BITP_PORT_DATA_SET_PX0                0            /*  Port x Bit 0 Data Set */
#define BITM_PORT_DATA_SET_PX15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Data Set */
#define BITM_PORT_DATA_SET_PX14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Data Set */
#define BITM_PORT_DATA_SET_PX13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Data Set */
#define BITM_PORT_DATA_SET_PX12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Data Set */
#define BITM_PORT_DATA_SET_PX11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Data Set */
#define BITM_PORT_DATA_SET_PX10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Data Set */
#define BITM_PORT_DATA_SET_PX9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Data Set */
#define BITM_PORT_DATA_SET_PX8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Data Set */
#define BITM_PORT_DATA_SET_PX7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Data Set */
#define BITM_PORT_DATA_SET_PX6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Data Set */
#define BITM_PORT_DATA_SET_PX5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Data Set */
#define BITM_PORT_DATA_SET_PX4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Data Set */
#define BITM_PORT_DATA_SET_PX3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Data Set */
#define BITM_PORT_DATA_SET_PX2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Data Set */
#define BITM_PORT_DATA_SET_PX1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Data Set */
#define BITM_PORT_DATA_SET_PX0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Data Set */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DATA_CLR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DATA_CLR_PX15              15            /*  Port x Bit 15 Data Clear */
#define BITP_PORT_DATA_CLR_PX14              14            /*  Port x Bit 14 Data Clear */
#define BITP_PORT_DATA_CLR_PX13              13            /*  Port x Bit 13 Data Clear */
#define BITP_PORT_DATA_CLR_PX12              12            /*  Port x Bit 12 Data Clear */
#define BITP_PORT_DATA_CLR_PX11              11            /*  Port x Bit 11 Data Clear */
#define BITP_PORT_DATA_CLR_PX10              10            /*  Port x Bit 10 Data Clear */
#define BITP_PORT_DATA_CLR_PX9                9            /*  Port x Bit 9 Data Clear */
#define BITP_PORT_DATA_CLR_PX8                8            /*  Port x Bit 8 Data Clear */
#define BITP_PORT_DATA_CLR_PX7                7            /*  Port x Bit 7 Data Clear */
#define BITP_PORT_DATA_CLR_PX6                6            /*  Port x Bit 6 Data Clear */
#define BITP_PORT_DATA_CLR_PX5                5            /*  Port x Bit 5 Data Clear */
#define BITP_PORT_DATA_CLR_PX4                4            /*  Port x Bit 4 Data Clear */
#define BITP_PORT_DATA_CLR_PX3                3            /*  Port x Bit 3 Data Clear */
#define BITP_PORT_DATA_CLR_PX2                2            /*  Port x Bit 2 Data Clear */
#define BITP_PORT_DATA_CLR_PX1                1            /*  Port x Bit 1 Data Clear */
#define BITP_PORT_DATA_CLR_PX0                0            /*  Port x Bit 0 Data Clear */
#define BITM_PORT_DATA_CLR_PX15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Data Clear */
#define BITM_PORT_DATA_CLR_PX14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Data Clear */
#define BITM_PORT_DATA_CLR_PX13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Data Clear */
#define BITM_PORT_DATA_CLR_PX12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Data Clear */
#define BITM_PORT_DATA_CLR_PX11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Data Clear */
#define BITM_PORT_DATA_CLR_PX10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Data Clear */
#define BITM_PORT_DATA_CLR_PX9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Data Clear */
#define BITM_PORT_DATA_CLR_PX8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Data Clear */
#define BITM_PORT_DATA_CLR_PX7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Data Clear */
#define BITM_PORT_DATA_CLR_PX6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Data Clear */
#define BITM_PORT_DATA_CLR_PX5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Data Clear */
#define BITM_PORT_DATA_CLR_PX4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Data Clear */
#define BITM_PORT_DATA_CLR_PX3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Data Clear */
#define BITM_PORT_DATA_CLR_PX2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Data Clear */
#define BITM_PORT_DATA_CLR_PX1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Data Clear */
#define BITM_PORT_DATA_CLR_PX0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Data Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DIR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DIR_PX15                   15            /*  Port x Bit 15 Direction */
#define BITP_PORT_DIR_PX14                   14            /*  Port x Bit 14 Direction */
#define BITP_PORT_DIR_PX13                   13            /*  Port x Bit 13 Direction */
#define BITP_PORT_DIR_PX12                   12            /*  Port x Bit 12 Direction */
#define BITP_PORT_DIR_PX11                   11            /*  Port x Bit 11 Direction */
#define BITP_PORT_DIR_PX10                   10            /*  Port x Bit 10 Direction */
#define BITP_PORT_DIR_PX9                     9            /*  Port x Bit 9 Direction */
#define BITP_PORT_DIR_PX8                     8            /*  Port x Bit 8 Direction */
#define BITP_PORT_DIR_PX7                     7            /*  Port x Bit 7 Direction */
#define BITP_PORT_DIR_PX6                     6            /*  Port x Bit 6 Direction */
#define BITP_PORT_DIR_PX5                     5            /*  Port x Bit 5 Direction */
#define BITP_PORT_DIR_PX4                     4            /*  Port x Bit 4 Direction */
#define BITP_PORT_DIR_PX3                     3            /*  Port x Bit 3 Direction */
#define BITP_PORT_DIR_PX2                     2            /*  Port x Bit 2 Direction */
#define BITP_PORT_DIR_PX1                     1            /*  Port x Bit 1 Direction */
#define BITP_PORT_DIR_PX0                     0            /*  Port x Bit 0 Direction */
#define BITM_PORT_DIR_PX15                   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Direction */
#define BITM_PORT_DIR_PX14                   (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Direction */
#define BITM_PORT_DIR_PX13                   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Direction */
#define BITM_PORT_DIR_PX12                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Direction */
#define BITM_PORT_DIR_PX11                   (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Direction */
#define BITM_PORT_DIR_PX10                   (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Direction */
#define BITM_PORT_DIR_PX9                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Direction */
#define BITM_PORT_DIR_PX8                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Direction */
#define BITM_PORT_DIR_PX7                    (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Direction */
#define BITM_PORT_DIR_PX6                    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Direction */
#define BITM_PORT_DIR_PX5                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Direction */
#define BITM_PORT_DIR_PX4                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Direction */
#define BITM_PORT_DIR_PX3                    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Direction */
#define BITM_PORT_DIR_PX2                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Direction */
#define BITM_PORT_DIR_PX1                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Direction */
#define BITM_PORT_DIR_PX0                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Direction */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DIR_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DIR_SET_PX15               15            /*  Port x Bit 15 Direction Set */
#define BITP_PORT_DIR_SET_PX14               14            /*  Port x Bit 14 Direction Set */
#define BITP_PORT_DIR_SET_PX13               13            /*  Port x Bit 13 Direction Set */
#define BITP_PORT_DIR_SET_PX12               12            /*  Port x Bit 12 Direction Set */
#define BITP_PORT_DIR_SET_PX11               11            /*  Port x Bit 11 Direction Set */
#define BITP_PORT_DIR_SET_PX10               10            /*  Port x Bit 10 Direction Set */
#define BITP_PORT_DIR_SET_PX9                 9            /*  Port x Bit 9 Direction Set */
#define BITP_PORT_DIR_SET_PX8                 8            /*  Port x Bit 8 Direction Set */
#define BITP_PORT_DIR_SET_PX7                 7            /*  Port x Bit 7 Direction Set */
#define BITP_PORT_DIR_SET_PX6                 6            /*  Port x Bit 6 Direction Set */
#define BITP_PORT_DIR_SET_PX5                 5            /*  Port x Bit 5 Direction Set */
#define BITP_PORT_DIR_SET_PX4                 4            /*  Port x Bit 4 Direction Set */
#define BITP_PORT_DIR_SET_PX3                 3            /*  Port x Bit 3 Direction Set */
#define BITP_PORT_DIR_SET_PX2                 2            /*  Port x Bit 2 Direction Set */
#define BITP_PORT_DIR_SET_PX1                 1            /*  Port x Bit 1 Direction Set */
#define BITP_PORT_DIR_SET_PX0                 0            /*  Port x Bit 0 Direction Set */
#define BITM_PORT_DIR_SET_PX15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Direction Set */
#define BITM_PORT_DIR_SET_PX14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Direction Set */
#define BITM_PORT_DIR_SET_PX13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Direction Set */
#define BITM_PORT_DIR_SET_PX12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Direction Set */
#define BITM_PORT_DIR_SET_PX11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Direction Set */
#define BITM_PORT_DIR_SET_PX10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Direction Set */
#define BITM_PORT_DIR_SET_PX9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Direction Set */
#define BITM_PORT_DIR_SET_PX8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Direction Set */
#define BITM_PORT_DIR_SET_PX7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Direction Set */
#define BITM_PORT_DIR_SET_PX6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Direction Set */
#define BITM_PORT_DIR_SET_PX5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Direction Set */
#define BITM_PORT_DIR_SET_PX4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Direction Set */
#define BITM_PORT_DIR_SET_PX3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Direction Set */
#define BITM_PORT_DIR_SET_PX2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Direction Set */
#define BITM_PORT_DIR_SET_PX1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Direction Set */
#define BITM_PORT_DIR_SET_PX0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Direction Set */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DIR_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DIR_CLR_PX15               15            /*  Port x Bit 15 Direction Clear */
#define BITP_PORT_DIR_CLR_PX14               14            /*  Port x Bit 14 Direction Clear */
#define BITP_PORT_DIR_CLR_PX13               13            /*  Port x Bit 13 Direction Clear */
#define BITP_PORT_DIR_CLR_PX12               12            /*  Port x Bit 12 Direction Clear */
#define BITP_PORT_DIR_CLR_PX11               11            /*  Port x Bit 11 Direction Clear */
#define BITP_PORT_DIR_CLR_PX10               10            /*  Port x Bit 10 Direction Clear */
#define BITP_PORT_DIR_CLR_PX9                 9            /*  Port x Bit 9 Direction Clear */
#define BITP_PORT_DIR_CLR_PX8                 8            /*  Port x Bit 8 Direction Clear */
#define BITP_PORT_DIR_CLR_PX7                 7            /*  Port x Bit 7 Direction Clear */
#define BITP_PORT_DIR_CLR_PX6                 6            /*  Port x Bit 6 Direction Clear */
#define BITP_PORT_DIR_CLR_PX5                 5            /*  Port x Bit 5 Direction Clear */
#define BITP_PORT_DIR_CLR_PX4                 4            /*  Port x Bit 4 Direction Clear */
#define BITP_PORT_DIR_CLR_PX3                 3            /*  Port x Bit 3 Direction Clear */
#define BITP_PORT_DIR_CLR_PX2                 2            /*  Port x Bit 2 Direction Clear */
#define BITP_PORT_DIR_CLR_PX1                 1            /*  Port x Bit 1 Direction Clear */
#define BITP_PORT_DIR_CLR_PX0                 0            /*  Port x Bit 0 Direction Clear */
#define BITM_PORT_DIR_CLR_PX15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Direction Clear */
#define BITM_PORT_DIR_CLR_PX14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Direction Clear */
#define BITM_PORT_DIR_CLR_PX13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Direction Clear */
#define BITM_PORT_DIR_CLR_PX12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Direction Clear */
#define BITM_PORT_DIR_CLR_PX11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Direction Clear */
#define BITM_PORT_DIR_CLR_PX10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Direction Clear */
#define BITM_PORT_DIR_CLR_PX9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Direction Clear */
#define BITM_PORT_DIR_CLR_PX8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Direction Clear */
#define BITM_PORT_DIR_CLR_PX7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Direction Clear */
#define BITM_PORT_DIR_CLR_PX6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Direction Clear */
#define BITM_PORT_DIR_CLR_PX5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Direction Clear */
#define BITM_PORT_DIR_CLR_PX4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Direction Clear */
#define BITM_PORT_DIR_CLR_PX3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Direction Clear */
#define BITM_PORT_DIR_CLR_PX2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Direction Clear */
#define BITM_PORT_DIR_CLR_PX1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Direction Clear */
#define BITM_PORT_DIR_CLR_PX0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Direction Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_INEN                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_INEN_PX15                  15            /*  Port x Bit 15 Input Enable */
#define BITP_PORT_INEN_PX14                  14            /*  Port x Bit 14 Input Enable */
#define BITP_PORT_INEN_PX13                  13            /*  Port x Bit 13 Input Enable */
#define BITP_PORT_INEN_PX12                  12            /*  Port x Bit 12 Input Enable */
#define BITP_PORT_INEN_PX11                  11            /*  Port x Bit 11 Input Enable */
#define BITP_PORT_INEN_PX10                  10            /*  Port x Bit 10 Input Enable */
#define BITP_PORT_INEN_PX9                    9            /*  Port x Bit 9 Input Enable */
#define BITP_PORT_INEN_PX8                    8            /*  Port x Bit 8 Input Enable */
#define BITP_PORT_INEN_PX7                    7            /*  Port x Bit 7 Input Enable */
#define BITP_PORT_INEN_PX6                    6            /*  Port x Bit 6 Input Enable */
#define BITP_PORT_INEN_PX5                    5            /*  Port x Bit 5 Input Enable */
#define BITP_PORT_INEN_PX4                    4            /*  Port x Bit 4 Input Enable */
#define BITP_PORT_INEN_PX3                    3            /*  Port x Bit 3 Input Enable */
#define BITP_PORT_INEN_PX2                    2            /*  Port x Bit 2 Input Enable */
#define BITP_PORT_INEN_PX1                    1            /*  Port x Bit 1 Input Enable */
#define BITP_PORT_INEN_PX0                    0            /*  Port x Bit 0 Input Enable */
#define BITM_PORT_INEN_PX15                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Input Enable */
#define BITM_PORT_INEN_PX14                  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Input Enable */
#define BITM_PORT_INEN_PX13                  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Input Enable */
#define BITM_PORT_INEN_PX12                  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Input Enable */
#define BITM_PORT_INEN_PX11                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Input Enable */
#define BITM_PORT_INEN_PX10                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Input Enable */
#define BITM_PORT_INEN_PX9                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Input Enable */
#define BITM_PORT_INEN_PX8                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Input Enable */
#define BITM_PORT_INEN_PX7                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Input Enable */
#define BITM_PORT_INEN_PX6                   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Input Enable */
#define BITM_PORT_INEN_PX5                   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Input Enable */
#define BITM_PORT_INEN_PX4                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Input Enable */
#define BITM_PORT_INEN_PX3                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Input Enable */
#define BITM_PORT_INEN_PX2                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Input Enable */
#define BITM_PORT_INEN_PX1                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Input Enable */
#define BITM_PORT_INEN_PX0                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_INEN_SET                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_INEN_SET_PX15              15            /*  Port x Bit 15 Input Enable Set */
#define BITP_PORT_INEN_SET_PX14              14            /*  Port x Bit 14 Input Enable Set */
#define BITP_PORT_INEN_SET_PX13              13            /*  Port x Bit 13 Input Enable Set */
#define BITP_PORT_INEN_SET_PX12              12            /*  Port x Bit 12 Input Enable Set */
#define BITP_PORT_INEN_SET_PX11              11            /*  Port x Bit 11 Input Enable Set */
#define BITP_PORT_INEN_SET_PX10              10            /*  Port x Bit 10 Input Enable Set */
#define BITP_PORT_INEN_SET_PX9                9            /*  Port x Bit 9 Input Enable Set */
#define BITP_PORT_INEN_SET_PX8                8            /*  Port x Bit 8 Input Enable Set */
#define BITP_PORT_INEN_SET_PX7                7            /*  Port x Bit 7 Input Enable Set */
#define BITP_PORT_INEN_SET_PX6                6            /*  Port x Bit 6 Input Enable Set */
#define BITP_PORT_INEN_SET_PX5                5            /*  Port x Bit 5 Input Enable Set */
#define BITP_PORT_INEN_SET_PX4                4            /*  Port x Bit 4 Input Enable Set */
#define BITP_PORT_INEN_SET_PX3                3            /*  Port x Bit 3 Input Enable Set */
#define BITP_PORT_INEN_SET_PX2                2            /*  Port x Bit 2 Input Enable Set */
#define BITP_PORT_INEN_SET_PX1                1            /*  Port x Bit 1 Input Enable Set */
#define BITP_PORT_INEN_SET_PX0                0            /*  Port x Bit 0 Input Enable Set */
#define BITM_PORT_INEN_SET_PX15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Input Enable Set */
#define BITM_PORT_INEN_SET_PX14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Input Enable Set */
#define BITM_PORT_INEN_SET_PX13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Input Enable Set */
#define BITM_PORT_INEN_SET_PX12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Input Enable Set */
#define BITM_PORT_INEN_SET_PX11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Input Enable Set */
#define BITM_PORT_INEN_SET_PX10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Input Enable Set */
#define BITM_PORT_INEN_SET_PX9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Input Enable Set */
#define BITM_PORT_INEN_SET_PX8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Input Enable Set */
#define BITM_PORT_INEN_SET_PX7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Input Enable Set */
#define BITM_PORT_INEN_SET_PX6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Input Enable Set */
#define BITM_PORT_INEN_SET_PX5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Input Enable Set */
#define BITM_PORT_INEN_SET_PX4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Input Enable Set */
#define BITM_PORT_INEN_SET_PX3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Input Enable Set */
#define BITM_PORT_INEN_SET_PX2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Input Enable Set */
#define BITM_PORT_INEN_SET_PX1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Input Enable Set */
#define BITM_PORT_INEN_SET_PX0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Input Enable Set */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_INEN_CLR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_INEN_CLR_PX15              15            /*  Port x Bit 15 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX14              14            /*  Port x Bit 14 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX13              13            /*  Port x Bit 13 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX12              12            /*  Port x Bit 12 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX11              11            /*  Port x Bit 11 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX10              10            /*  Port x Bit 10 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX9                9            /*  Port x Bit 9 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX8                8            /*  Port x Bit 8 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX7                7            /*  Port x Bit 7 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX6                6            /*  Port x Bit 6 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX5                5            /*  Port x Bit 5 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX4                4            /*  Port x Bit 4 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX3                3            /*  Port x Bit 3 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX2                2            /*  Port x Bit 2 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX1                1            /*  Port x Bit 1 Input Enable Clear */
#define BITP_PORT_INEN_CLR_PX0                0            /*  Port x Bit 0 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Input Enable Clear */
#define BITM_PORT_INEN_CLR_PX0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Input Enable Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_MUX                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_MUX_MUX15                  30            /*  Mux for Port x Bit 15 */
#define BITP_PORT_MUX_MUX14                  28            /*  Mux for Port x Bit 14 */
#define BITP_PORT_MUX_MUX13                  26            /*  Mux for Port x Bit 13 */
#define BITP_PORT_MUX_MUX12                  24            /*  Mux for Port x Bit 12 */
#define BITP_PORT_MUX_MUX11                  22            /*  Mux for Port x Bit 11 */
#define BITP_PORT_MUX_MUX10                  20            /*  Mux for Port x Bit 10 */
#define BITP_PORT_MUX_MUX9                   18            /*  Mux for Port x Bit 9 */
#define BITP_PORT_MUX_MUX8                   16            /*  Mux for Port x Bit 8 */
#define BITP_PORT_MUX_MUX7                   14            /*  Mux for Port x Bit 7 */
#define BITP_PORT_MUX_MUX6                   12            /*  Mux for Port x Bit 6 */
#define BITP_PORT_MUX_MUX5                   10            /*  Mux for Port x Bit 5 */
#define BITP_PORT_MUX_MUX4                    8            /*  Mux for Port x Bit 4 */
#define BITP_PORT_MUX_MUX3                    6            /*  Mux for Port x Bit 3 */
#define BITP_PORT_MUX_MUX2                    4            /*  Mux for Port x Bit 2 */
#define BITP_PORT_MUX_MUX1                    2            /*  Mux for Port x Bit 1 */
#define BITP_PORT_MUX_MUX0                    0            /*  Mux for Port x Bit 0 */
#define BITM_PORT_MUX_MUX15                  (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  Mux for Port x Bit 15 */
#define BITM_PORT_MUX_MUX14                  (_ADI_MSK_3(0x30000000,0x30000000UL, uint32_t  ))    /*  Mux for Port x Bit 14 */
#define BITM_PORT_MUX_MUX13                  (_ADI_MSK_3(0x0C000000,0x0C000000UL, uint32_t  ))    /*  Mux for Port x Bit 13 */
#define BITM_PORT_MUX_MUX12                  (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  Mux for Port x Bit 12 */
#define BITM_PORT_MUX_MUX11                  (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  Mux for Port x Bit 11 */
#define BITM_PORT_MUX_MUX10                  (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Mux for Port x Bit 10 */
#define BITM_PORT_MUX_MUX9                   (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))    /*  Mux for Port x Bit 9 */
#define BITM_PORT_MUX_MUX8                   (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Mux for Port x Bit 8 */
#define BITM_PORT_MUX_MUX7                   (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  Mux for Port x Bit 7 */
#define BITM_PORT_MUX_MUX6                   (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Mux for Port x Bit 6 */
#define BITM_PORT_MUX_MUX5                   (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))    /*  Mux for Port x Bit 5 */
#define BITM_PORT_MUX_MUX4                   (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Mux for Port x Bit 4 */
#define BITM_PORT_MUX_MUX3                   (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  Mux for Port x Bit 3 */
#define BITM_PORT_MUX_MUX2                   (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Mux for Port x Bit 2 */
#define BITM_PORT_MUX_MUX1                   (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  Mux for Port x Bit 1 */
#define BITM_PORT_MUX_MUX0                   (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Mux for Port x Bit 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_DATA_TGL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_DATA_TGL_PX15              15            /*  Port x Bit 15 Toggle */
#define BITP_PORT_DATA_TGL_PX14              14            /*  Port x Bit 14 Toggle */
#define BITP_PORT_DATA_TGL_PX13              13            /*  Port x Bit 13 Toggle */
#define BITP_PORT_DATA_TGL_PX12              12            /*  Port x Bit 12 Toggle */
#define BITP_PORT_DATA_TGL_PX11              11            /*  Port x Bit 11 Toggle */
#define BITP_PORT_DATA_TGL_PX10              10            /*  Port x Bit 10 Toggle */
#define BITP_PORT_DATA_TGL_PX9                9            /*  Port x Bit 9 Toggle */
#define BITP_PORT_DATA_TGL_PX8                8            /*  Port x Bit 8 Toggle */
#define BITP_PORT_DATA_TGL_PX7                7            /*  Port x Bit 7 Toggle */
#define BITP_PORT_DATA_TGL_PX6                6            /*  Port x Bit 6 Toggle */
#define BITP_PORT_DATA_TGL_PX5                5            /*  Port x Bit 5 Toggle */
#define BITP_PORT_DATA_TGL_PX4                4            /*  Port x Bit 4 Toggle */
#define BITP_PORT_DATA_TGL_PX3                3            /*  Port x Bit 3 Toggle */
#define BITP_PORT_DATA_TGL_PX2                2            /*  Port x Bit 2 Toggle */
#define BITP_PORT_DATA_TGL_PX1                1            /*  Port x Bit 1 Toggle */
#define BITP_PORT_DATA_TGL_PX0                0            /*  Port x Bit 0 Toggle */
#define BITM_PORT_DATA_TGL_PX15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Toggle */
#define BITM_PORT_DATA_TGL_PX14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Toggle */
#define BITM_PORT_DATA_TGL_PX13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Toggle */
#define BITM_PORT_DATA_TGL_PX12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Toggle */
#define BITM_PORT_DATA_TGL_PX11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Toggle */
#define BITM_PORT_DATA_TGL_PX10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Toggle */
#define BITM_PORT_DATA_TGL_PX9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Toggle */
#define BITM_PORT_DATA_TGL_PX8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Toggle */
#define BITM_PORT_DATA_TGL_PX7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Toggle */
#define BITM_PORT_DATA_TGL_PX6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Toggle */
#define BITM_PORT_DATA_TGL_PX5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Toggle */
#define BITM_PORT_DATA_TGL_PX4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Toggle */
#define BITM_PORT_DATA_TGL_PX3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Toggle */
#define BITM_PORT_DATA_TGL_PX2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Toggle */
#define BITM_PORT_DATA_TGL_PX1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Toggle */
#define BITM_PORT_DATA_TGL_PX0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Toggle */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_POL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_POL_PX15                   15            /*  Port x Bit 15 Polarity Invert */
#define BITP_PORT_POL_PX14                   14            /*  Port x Bit 14 Polarity Invert */
#define BITP_PORT_POL_PX13                   13            /*  Port x Bit 13 Polarity Invert */
#define BITP_PORT_POL_PX12                   12            /*  Port x Bit 12 Polarity Invert */
#define BITP_PORT_POL_PX11                   11            /*  Port x Bit 11 Polarity Invert */
#define BITP_PORT_POL_PX10                   10            /*  Port x Bit 10 Polarity Invert */
#define BITP_PORT_POL_PX9                     9            /*  Port x Bit 9 Polarity Invert */
#define BITP_PORT_POL_PX8                     8            /*  Port x Bit 8 Polarity Invert */
#define BITP_PORT_POL_PX7                     7            /*  Port x Bit 7 Polarity Invert */
#define BITP_PORT_POL_PX6                     6            /*  Port x Bit 6 Polarity Invert */
#define BITP_PORT_POL_PX5                     5            /*  Port x Bit 5 Polarity Invert */
#define BITP_PORT_POL_PX4                     4            /*  Port x Bit 4 Polarity Invert */
#define BITP_PORT_POL_PX3                     3            /*  Port x Bit 3 Polarity Invert */
#define BITP_PORT_POL_PX2                     2            /*  Port x Bit 2 Polarity Invert */
#define BITP_PORT_POL_PX1                     1            /*  Port x Bit 1 Polarity Invert */
#define BITP_PORT_POL_PX0                     0            /*  Port x Bit 0 Polarity Invert */
#define BITM_PORT_POL_PX15                   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Polarity Invert */
#define BITM_PORT_POL_PX14                   (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Polarity Invert */
#define BITM_PORT_POL_PX13                   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Polarity Invert */
#define BITM_PORT_POL_PX12                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Polarity Invert */
#define BITM_PORT_POL_PX11                   (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Polarity Invert */
#define BITM_PORT_POL_PX10                   (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Polarity Invert */
#define BITM_PORT_POL_PX9                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Polarity Invert */
#define BITM_PORT_POL_PX8                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Polarity Invert */
#define BITM_PORT_POL_PX7                    (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Polarity Invert */
#define BITM_PORT_POL_PX6                    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Polarity Invert */
#define BITM_PORT_POL_PX5                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Polarity Invert */
#define BITM_PORT_POL_PX4                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Polarity Invert */
#define BITM_PORT_POL_PX3                    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Polarity Invert */
#define BITM_PORT_POL_PX2                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Polarity Invert */
#define BITM_PORT_POL_PX1                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Polarity Invert */
#define BITM_PORT_POL_PX0                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Polarity Invert */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_POL_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_POL_SET_PX15               15            /*  Port x Bit 15 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX14               14            /*  Port x Bit 14 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX13               13            /*  Port x Bit 13 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX12               12            /*  Port x Bit 12 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX11               11            /*  Port x Bit 11 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX10               10            /*  Port x Bit 10 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX9                 9            /*  Port x Bit 9 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX8                 8            /*  Port x Bit 8 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX7                 7            /*  Port x Bit 7 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX6                 6            /*  Port x Bit 6 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX5                 5            /*  Port x Bit 5 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX4                 4            /*  Port x Bit 4 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX3                 3            /*  Port x Bit 3 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX2                 2            /*  Port x Bit 2 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX1                 1            /*  Port x Bit 1 Polarity Invert Set */
#define BITP_PORT_POL_SET_PX0                 0            /*  Port x Bit 0 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Polarity Invert Set */
#define BITM_PORT_POL_SET_PX0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Polarity Invert Set */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_POL_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_POL_CLR_PX15               15            /*  Port x Bit 15 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX14               14            /*  Port x Bit 14 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX13               13            /*  Port x Bit 13 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX12               12            /*  Port x Bit 12 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX11               11            /*  Port x Bit 11 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX10               10            /*  Port x Bit 10 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX9                 9            /*  Port x Bit 9 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX8                 8            /*  Port x Bit 8 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX7                 7            /*  Port x Bit 7 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX6                 6            /*  Port x Bit 6 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX5                 5            /*  Port x Bit 5 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX4                 4            /*  Port x Bit 4 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX3                 3            /*  Port x Bit 3 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX2                 2            /*  Port x Bit 2 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX1                 1            /*  Port x Bit 1 Polarity Invert Clear */
#define BITP_PORT_POL_CLR_PX0                 0            /*  Port x Bit 0 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port x Bit 15 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Port x Bit 14 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Port x Bit 13 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Port x Bit 12 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Port x Bit 11 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Port x Bit 10 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Port x Bit 9 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Port x Bit 8 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Port x Bit 7 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Port x Bit 6 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Port x Bit 5 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Port x Bit 4 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Port x Bit 3 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Port x Bit 2 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Port x Bit 1 Polarity Invert Clear */
#define BITM_PORT_POL_CLR_PX0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Port x Bit 0 Polarity Invert Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_LOCK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_LOCK_LOCK                  31            /*  Lock */
#define BITP_PORT_LOCK_POLAR                  5            /*  Polarity Lock */
#define BITP_PORT_LOCK_INEN                   4            /*  Input Enable Lock */
#define BITP_PORT_LOCK_DIR                    3            /*  Direction Lock */
#define BITP_PORT_LOCK_DATA                   2            /*  Data, TGL Lock */
#define BITP_PORT_LOCK_MUX                    1            /*  Function Multiplexer Lock */
#define BITP_PORT_LOCK_FER                    0            /*  Function Enable Lock */
#define BITM_PORT_LOCK_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_PORT_LOCK_POLAR                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Polarity Lock */
#define BITM_PORT_LOCK_INEN                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Input Enable Lock */
#define BITM_PORT_LOCK_DIR                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Direction Lock */
#define BITM_PORT_LOCK_DATA                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Data, TGL Lock */
#define BITM_PORT_LOCK_MUX                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Function Multiplexer Lock */
#define BITM_PORT_LOCK_FER                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Function Enable Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          PORT_TRIG_TGL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PORT_TRIG_TGL_PX15              15            /*  PX15 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX14              14            /*  PX14 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX13              13            /*  PX13 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX12              12            /*  PX12 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX11              11            /*  PX11 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX10              10            /*  PX10 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX9                9            /*  PX9 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX8                8            /*  PX8 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX7                7            /*  PX7 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX6                6            /*  PX6 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX5                5            /*  PX5 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX4                4            /*  PX4 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX3                3            /*  PX3 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX2                2            /*  PX2 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX1                1            /*  PX1 Data Toggle on Trigger */
#define BITP_PORT_TRIG_TGL_PX0                0            /*  PX0 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  PX15 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  PX14 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  PX13 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  PX12 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  PX11 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  PX10 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  PX9 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  PX8 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  PX7 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  PX6 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  PX5 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  PX4 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  PX3 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PX2 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PX1 Data Toggle on Trigger */
#define BITM_PORT_TRIG_TGL_PX0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  PX0 Data Toggle on Trigger */


/* ============================================================================================================================
        The General-Purpose Input/Output Port
   ============================================================================================================================ */

/* ============================================================================================================================
        PORTC
   ============================================================================================================================ */
#define REG_PORTC_FER                        0x31004100            /*  PORTC Port x Function Enable Register */
#define REG_PORTC_FER_SET                    0x31004104            /*  PORTC Port x Function Enable Set Register */
#define REG_PORTC_FER_CLR                    0x31004108            /*  PORTC Port x Function Enable Clear Register */
#define REG_PORTC_DATA                       0x3100410C            /*  PORTC Port x GPIO Data Register */
#define REG_PORTC_DATA_SET                   0x31004110            /*  PORTC Port x GPIO Data Set Register */
#define REG_PORTC_DATA_CLR                   0x31004114            /*  PORTC Port x GPIO Data Clear Register */
#define REG_PORTC_DIR                        0x31004118            /*  PORTC Port x GPIO Direction Register */
#define REG_PORTC_DIR_SET                    0x3100411C            /*  PORTC Port x GPIO Direction Set Register */
#define REG_PORTC_DIR_CLR                    0x31004120            /*  PORTC Port x GPIO Direction Clear Register */
#define REG_PORTC_INEN                       0x31004124            /*  PORTC Port x GPIO Input Enable Register */
#define REG_PORTC_INEN_SET                   0x31004128            /*  PORTC Port x GPIO Input Enable Set Register */
#define REG_PORTC_INEN_CLR                   0x3100412C            /*  PORTC Port x GPIO Input Enable Clear Register */
#define REG_PORTC_MUX                        0x31004130            /*  PORTC Port x Multiplexer Control Register */
#define REG_PORTC_DATA_TGL                   0x31004134            /*  PORTC Port x GPIO Output Toggle Register */
#define REG_PORTC_POL                        0x31004138            /*  PORTC Port x GPIO Polarity Invert Register */
#define REG_PORTC_POL_SET                    0x3100413C            /*  PORTC Port x GPIO Polarity Invert Set Register */
#define REG_PORTC_POL_CLR                    0x31004140            /*  PORTC Port x GPIO Polarity Invert Clear Register */
#define REG_PORTC_LOCK                       0x31004144            /*  PORTC Port x GPIO Lock Register */
#define REG_PORTC_TRIG_TGL                   0x31004148            /*  PORTC Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The General-Purpose Input/Output Port
   ============================================================================================================================ */

/* ============================================================================================================================
        PORTI
   ============================================================================================================================ */
#define REG_PORTI_FER                        0x31004400            /*  PORTI Port x Function Enable Register */
#define REG_PORTI_FER_SET                    0x31004404            /*  PORTI Port x Function Enable Set Register */
#define REG_PORTI_FER_CLR                    0x31004408            /*  PORTI Port x Function Enable Clear Register */
#define REG_PORTI_DATA                       0x3100440C            /*  PORTI Port x GPIO Data Register */
#define REG_PORTI_DATA_SET                   0x31004410            /*  PORTI Port x GPIO Data Set Register */
#define REG_PORTI_DATA_CLR                   0x31004414            /*  PORTI Port x GPIO Data Clear Register */
#define REG_PORTI_DIR                        0x31004418            /*  PORTI Port x GPIO Direction Register */
#define REG_PORTI_DIR_SET                    0x3100441C            /*  PORTI Port x GPIO Direction Set Register */
#define REG_PORTI_DIR_CLR                    0x31004420            /*  PORTI Port x GPIO Direction Clear Register */
#define REG_PORTI_INEN                       0x31004424            /*  PORTI Port x GPIO Input Enable Register */
#define REG_PORTI_INEN_SET                   0x31004428            /*  PORTI Port x GPIO Input Enable Set Register */
#define REG_PORTI_INEN_CLR                   0x3100442C            /*  PORTI Port x GPIO Input Enable Clear Register */
#define REG_PORTI_MUX                        0x31004430            /*  PORTI Port x Multiplexer Control Register */
#define REG_PORTI_DATA_TGL                   0x31004434            /*  PORTI Port x GPIO Output Toggle Register */
#define REG_PORTI_POL                        0x31004438            /*  PORTI Port x GPIO Polarity Invert Register */
#define REG_PORTI_POL_SET                    0x3100443C            /*  PORTI Port x GPIO Polarity Invert Set Register */
#define REG_PORTI_POL_CLR                    0x31004440            /*  PORTI Port x GPIO Polarity Invert Clear Register */
#define REG_PORTI_LOCK                       0x31004444            /*  PORTI Port x GPIO Lock Register */
#define REG_PORTI_TRIG_TGL                   0x31004448            /*  PORTI Port x GPIO Trigger Toggle Register */

/* ============================================================================================================================
        PORT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Pads Controller
   ============================================================================================================================ */

/* ============================================================================================================================
        PADS0
   ============================================================================================================================ */
#define REG_PADS0_PCFG0                      0x31004604            /*  PADS0 Peripheral PAD Configuration0 Register */
#define REG_PADS0_PCFG1                      0x31004608            /*  PADS0 Peripheral Configuration1 Register */
#define REG_PADS0_PORTA0_DS                  0x3100460C            /*  PADS0 PORTA 0 to 7 pins DS control */
#define REG_PADS0_PORTA1_DS                  0x31004610            /*  PADS0 PORTA 8 - 15 pins DS control */
#define REG_PADS0_PORTB0_DS                  0x31004614            /*  PADS0 PORTB 0 to 7 pins DS control */
#define REG_PADS0_PORTB1_DS                  0x31004618            /*  PADS0 PORTB 8 - 15 pins DS control */
#define REG_PADS0_PORTC0_DS                  0x3100461C            /*  PADS0 PORTC 0 to 7 pins DS control */
#define REG_PADS0_PORTC1_DS                  0x31004620            /*  PADS0 PORTC 8 - 15 pins DS control */
#define REG_PADS0_PORTD0_DS                  0x31004624            /*  PADS0 PORTD 0 to 7 pins DS control */
#define REG_PADS0_PORTD1_DS                  0x31004628            /*  PADS0 PORTD 8 to 15 pins DS control */
#define REG_PADS0_PORTE0_DS                  0x3100462C            /*  PADS0 PORTE 0 to 7 pins DS control */
#define REG_PADS0_PORTE1_DS                  0x31004630            /*  PADS0 PORTE 8 to 15 pins DS control */
#define REG_PADS0_PORTF0_DS                  0x31004634            /*  PADS0 PORTF 0 to 7 pins DS control */
#define REG_PADS0_PORTF1_DS                  0x31004638            /*  PADS0 PORTF 8 to 15 pins DS control */
#define REG_PADS0_PORTG0_DS                  0x3100463C            /*  PADS0 PORTG 0 to 7 pins DS control */
#define REG_PADS0_PORTG1_DS                  0x31004640            /*  PADS0 PORTG 8 to 15 pins DS control */
#define REG_PADS0_PORTH0_DS                  0x31004644            /*  PADS0 PORTH 0 to 7 pins DS control */
#define REG_PADS0_PORTH1_DS                  0x31004648            /*  PADS0 PORTH 8 to 15 pins DS control */
#define REG_PADS0_PORTI0_DS                  0x3100464C            /*  PADS0 PORTI 0 to 7 pins DS control */
#define REG_PADS0_NONPORTS_DS                0x31004650            /*  PADS0 Non-GPIO Drive Strength Register */
#define REG_PADS0_DAI0_0_DS                  0x31004678            /*  PADS0 DAI0 1 to 10 pins DS control */
#define REG_PADS0_DAI0_1_DS                  0x3100467C            /*  PADS0 DAI0 11 to 20 pins DS control */
#define REG_PADS0_DAI1_0_DS                  0x31004680            /*  PADS0 DAI1 1 to 10 pins DS control */
#define REG_PADS0_DAI1_1_DS                  0x31004684            /*  PADS0 DAI1 11 to 20 pins DS control */
#define REG_PADS0_DAI0_IE                    0x31004690            /*  PADS0 DAI0 Port Input Enable Control Register */
#define REG_PADS0_DAI1_IE                    0x31004694            /*  PADS0 DAI1 Port Input Enable Control Register */
#define REG_PADS0_PORTA_PUE                  0x31004698            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTB_PUE                  0x3100469C            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTC_PUE                  0x310046A0            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTD_PUE                  0x310046A4            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTE_PUE                  0x310046A8            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTF_PUE                  0x310046AC            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTG_PUE                  0x310046B0            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTH_PUE                  0x310046B4            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTI_PUE                  0x310046B8            /*  PADS0 PORTx Pull-Up Enable */
#define REG_PADS0_PORTn_PUE(i)               (REG_PADS0_PORTA_PUE + ((i) * 4))
#define REG_PADS0_PORTn_PUE_COUNT            9
#define REG_PADS0_DAI0_PUE                   0x310046BC            /*  PADS0 DAIx Pull-Up Enable */
#define REG_PADS0_DAI1_PUE                   0x310046C0            /*  PADS0 DAIx Pull-Up Enable */
#define REG_PADS0_DAIn_PUE(i)                (REG_PADS0_DAI0_PUE + ((i) * 4))
#define REG_PADS0_DAIn_PUE_COUNT             2
#define REG_PADS0_PORTA_PDE                  0x310046C4            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTB_PDE                  0x310046C8            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTC_PDE                  0x310046CC            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTD_PDE                  0x310046D0            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTE_PDE                  0x310046D4            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTF_PDE                  0x310046D8            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTG_PDE                  0x310046DC            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTH_PDE                  0x310046E0            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTI_PDE                  0x310046E4            /*  PADS0 PORTx Pull-Down Enable */
#define REG_PADS0_PORTn_PDE(i)               (REG_PADS0_PORTA_PDE + ((i) * 4))
#define REG_PADS0_PORTn_PDE_COUNT            9
#define REG_PADS0_DAI0_PDE                   0x310046FC            /*  PADS0 DAIx Pull-Down Enable */
#define REG_PADS0_DAI1_PDE                   0x31004700            /*  PADS0 DAIx Pull-Down Enable */
#define REG_PADS0_DAIn_PDE(i)                (REG_PADS0_DAI0_PDE + ((i) * 4))
#define REG_PADS0_DAIn_PDE_COUNT             2

/* ============================================================================================================================
        PADS Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PCFG0                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PCFG0_FAULT_DIS            18            /*  FAULT does not exist */
#define BITP_PADS_PCFG0_EMACAUXIE            17            /*  Input enable control for PTP_AUXIN pins */
#define BITP_PADS_PCFG0_PUTMS                16            /*  Pull-Up Enable for TMS/SWDIO (debug port) */
#define BITP_PADS_PCFG0_CNT0DGSEL             7            /*  CNT0 Down Input Select */
#define BITP_PADS_PCFG0_CNT0UDSEL             6            /*  CNT0 Up Input Select */
#define BITP_PADS_PCFG0_EMACPHYISEL           3            /*  Select PHY Interface RGMII/RMII/MII */
#define BITP_PADS_PCFG0_EMACRESET             2            /*  Reset Enable for RGMII */
#define BITP_PADS_PCFG0_EMAC0                 0            /*  PTP Clock Source 0 */
#define BITM_PADS_PCFG0_FAULT_DIS            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  FAULT does not exist */
#define BITM_PADS_PCFG0_EMACAUXIE            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Input enable control for PTP_AUXIN pins */
#define BITM_PADS_PCFG0_PUTMS                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pull-Up Enable for TMS/SWDIO (debug port) */
#define BITM_PADS_PCFG0_CNT0DGSEL            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CNT0 Down Input Select */
#define BITM_PADS_PCFG0_CNT0UDSEL            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  CNT0 Up Input Select */
#define BITM_PADS_PCFG0_EMACPHYISEL          (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  Select PHY Interface RGMII/RMII/MII */
#define BITM_PADS_PCFG0_EMACRESET            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Reset Enable for RGMII */
#define BITM_PADS_PCFG0_EMAC0                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  PTP Clock Source 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PCFG1                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PCFG1_TIMER_SEC_INP        16            /*  Selects secondary inputs to timers. */
#define BITM_PADS_PCFG1_TIMER_SEC_INP        (_ADI_MSK_3(0x03FF0000,0x03FF0000UL, uint32_t  ))    /*  Selects secondary inputs to timers. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTA0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTA0_DS_PA7              21            /*  DS control for PA7 IO. */
#define BITP_PADS_PORTA0_DS_PA6              18            /*  DS control for PA6 IO. */
#define BITP_PADS_PORTA0_DS_PA5              15            /*  DS control for PA5 IO. */
#define BITP_PADS_PORTA0_DS_PA4              12            /*  DS control for PA4 IO. */
#define BITP_PADS_PORTA0_DS_PA3               9            /*  DS control for PA3 IO. */
#define BITP_PADS_PORTA0_DS_PA2               6            /*  DS control for PA2 IO */
#define BITP_PADS_PORTA0_DS_PA1               3            /*  DS control for PA1 IO. */
#define BITP_PADS_PORTA0_DS_PA0               0            /*  DS control for PA0 IO. */
#define BITM_PADS_PORTA0_DS_PA7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PA7 IO. */
#define BITM_PADS_PORTA0_DS_PA6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PA6 IO. */
#define BITM_PADS_PORTA0_DS_PA5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PA5 IO. */
#define BITM_PADS_PORTA0_DS_PA4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PA4 IO. */
#define BITM_PADS_PORTA0_DS_PA3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PA3 IO. */
#define BITM_PADS_PORTA0_DS_PA2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PA2 IO */
#define BITM_PADS_PORTA0_DS_PA1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PA1 IO. */
#define BITM_PADS_PORTA0_DS_PA0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PA0 IO. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTA1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTA1_DS_PA15             21            /*  DS control for PA15 IO. */
#define BITP_PADS_PORTA1_DS_PA14             18            /*  DS control for PA14 IO. */
#define BITP_PADS_PORTA1_DS_PA13             15            /*  DS control for PA13 IO. */
#define BITP_PADS_PORTA1_DS_PA12             12            /*  DS control for PA12 IO. */
#define BITP_PADS_PORTA1_DS_PA11              9            /*  DS control for PA11 IO. */
#define BITP_PADS_PORTA1_DS_PA10              6            /*  DS control for PA10 IO. */
#define BITP_PADS_PORTA1_DS_PA9               3            /*  DS control for PA9 IO. */
#define BITP_PADS_PORTA1_DS_PA8               0            /*  DS control for PA8 IO. */
#define BITM_PADS_PORTA1_DS_PA15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PA15 IO. */
#define BITM_PADS_PORTA1_DS_PA14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PA14 IO. */
#define BITM_PADS_PORTA1_DS_PA13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PA13 IO. */
#define BITM_PADS_PORTA1_DS_PA12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PA12 IO. */
#define BITM_PADS_PORTA1_DS_PA11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PA11 IO. */
#define BITM_PADS_PORTA1_DS_PA10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PA10 IO. */
#define BITM_PADS_PORTA1_DS_PA9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PA9 IO. */
#define BITM_PADS_PORTA1_DS_PA8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PA8 IO. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTB0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTB0_DS_PB7              21            /*  DS control for PB7 IO. */
#define BITP_PADS_PORTB0_DS_PB6              18            /*  DS control for PB6 IO. */
#define BITP_PADS_PORTB0_DS_PB5              15            /*  DS control for PB5 IO. */
#define BITP_PADS_PORTB0_DS_PB4              12            /*  DS control for PB4 IO. */
#define BITP_PADS_PORTB0_DS_PB3               9            /*  DS control for PB3 IO. */
#define BITP_PADS_PORTB0_DS_PB2               6            /*  DS control for PB2 IO. */
#define BITP_PADS_PORTB0_DS_PB1               3            /*  DS control for PB1 IO. */
#define BITP_PADS_PORTB0_DS_PB0               0            /*  DS control for PB0 IO. */
#define BITM_PADS_PORTB0_DS_PB7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PB7 IO. */
#define BITM_PADS_PORTB0_DS_PB6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PB6 IO. */
#define BITM_PADS_PORTB0_DS_PB5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PB5 IO. */
#define BITM_PADS_PORTB0_DS_PB4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PB4 IO. */
#define BITM_PADS_PORTB0_DS_PB3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PB3 IO. */
#define BITM_PADS_PORTB0_DS_PB2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PB2 IO. */
#define BITM_PADS_PORTB0_DS_PB1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PB1 IO. */
#define BITM_PADS_PORTB0_DS_PB0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PB0 IO. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTB1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTB1_DS_PB15             21            /*  DS control for PB15 IO. */
#define BITP_PADS_PORTB1_DS_PB14             18            /*  DS control for PB14 IO. */
#define BITP_PADS_PORTB1_DS_PB13             15            /*  DS control for PB13 IO. */
#define BITP_PADS_PORTB1_DS_PB12             12            /*  DS control for PB12 IO. */
#define BITP_PADS_PORTB1_DS_PB11              9            /*  DS control for PB11 IO. */
#define BITP_PADS_PORTB1_DS_PB10              6            /*  DS control for PB10 IO. */
#define BITP_PADS_PORTB1_DS_PB9               3            /*  DS control for PB9 IO. */
#define BITP_PADS_PORTB1_DS_PB8               0            /*  DS control for PB8 IO. */
#define BITM_PADS_PORTB1_DS_PB15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PB15 IO. */
#define BITM_PADS_PORTB1_DS_PB14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PB14 IO. */
#define BITM_PADS_PORTB1_DS_PB13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PB13 IO. */
#define BITM_PADS_PORTB1_DS_PB12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PB12 IO. */
#define BITM_PADS_PORTB1_DS_PB11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PB11 IO. */
#define BITM_PADS_PORTB1_DS_PB10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PB10 IO. */
#define BITM_PADS_PORTB1_DS_PB9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PB9 IO. */
#define BITM_PADS_PORTB1_DS_PB8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PB8 IO. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTC0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTC0_DS_PC7              21            /*  DS control for PC7 IO. */
#define BITP_PADS_PORTC0_DS_PC6              18            /*  DS control for PC6 IO. */
#define BITP_PADS_PORTC0_DS_PC5              15            /*  DS control for PC5 IO. */
#define BITP_PADS_PORTC0_DS_PC4              12            /*  DS control for PC4 IO. */
#define BITP_PADS_PORTC0_DS_PC3               9            /*  DS control for PC3 IO. */
#define BITP_PADS_PORTC0_DS_PC2               6            /*  DS control for PC2 IO. */
#define BITP_PADS_PORTC0_DS_PC1               3            /*  DS control for PC1 IO. */
#define BITP_PADS_PORTC0_DS_PC0               0            /*  DS control for PC0 IO. */
#define BITM_PADS_PORTC0_DS_PC7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PC7 IO. */
#define BITM_PADS_PORTC0_DS_PC6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PC6 IO. */
#define BITM_PADS_PORTC0_DS_PC5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PC5 IO. */
#define BITM_PADS_PORTC0_DS_PC4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PC4 IO. */
#define BITM_PADS_PORTC0_DS_PC3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PC3 IO. */
#define BITM_PADS_PORTC0_DS_PC2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PC2 IO. */
#define BITM_PADS_PORTC0_DS_PC1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PC1 IO. */
#define BITM_PADS_PORTC0_DS_PC0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PC0 IO. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTC1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTC1_DS_PC15             21            /*  DS control for PC15 IO */
#define BITP_PADS_PORTC1_DS_PC14             18            /*  DS control for PC14 IO */
#define BITP_PADS_PORTC1_DS_PC13             15            /*  DS control for PC13 IO */
#define BITP_PADS_PORTC1_DS_PC12             12            /*  DS control for PC12 IO */
#define BITP_PADS_PORTC1_DS_PC11              9            /*  DS control for PC11 IO */
#define BITP_PADS_PORTC1_DS_PC10              6            /*  DS control for PC10 IO */
#define BITP_PADS_PORTC1_DS_PC9               3            /*  DS control for PC9 IO */
#define BITP_PADS_PORTC1_DS_PC8               0            /*  DS control for PC8 IO */
#define BITM_PADS_PORTC1_DS_PC15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PC15 IO */
#define BITM_PADS_PORTC1_DS_PC14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PC14 IO */
#define BITM_PADS_PORTC1_DS_PC13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PC13 IO */
#define BITM_PADS_PORTC1_DS_PC12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PC12 IO */
#define BITM_PADS_PORTC1_DS_PC11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PC11 IO */
#define BITM_PADS_PORTC1_DS_PC10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PC10 IO */
#define BITM_PADS_PORTC1_DS_PC9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PC9 IO */
#define BITM_PADS_PORTC1_DS_PC8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PC8 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTD0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTD0_DS_PD7              21            /*  DS control for PD7 IO */
#define BITP_PADS_PORTD0_DS_PD6              18            /*  DS control for PD6 IO */
#define BITP_PADS_PORTD0_DS_PD5              15            /*  DS control for PD5 IO */
#define BITP_PADS_PORTD0_DS_PD4              12            /*  DS control for PD4 IO */
#define BITP_PADS_PORTD0_DS_PD3               9            /*  DS control for PD3 IO */
#define BITP_PADS_PORTD0_DS_PD2               6            /*  DS control for PD2 IO */
#define BITP_PADS_PORTD0_DS_PD1               3            /*  DS control for PD1 IO */
#define BITP_PADS_PORTD0_DS_PD0               0            /*  DS control for PD0 IO */
#define BITM_PADS_PORTD0_DS_PD7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PD7 IO */
#define BITM_PADS_PORTD0_DS_PD6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PD6 IO */
#define BITM_PADS_PORTD0_DS_PD5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PD5 IO */
#define BITM_PADS_PORTD0_DS_PD4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PD4 IO */
#define BITM_PADS_PORTD0_DS_PD3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PD3 IO */
#define BITM_PADS_PORTD0_DS_PD2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PD2 IO */
#define BITM_PADS_PORTD0_DS_PD1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PD1 IO */
#define BITM_PADS_PORTD0_DS_PD0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PD0 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTD1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTD1_DS_PD15             21            /*  DS control for PD15 IO */
#define BITP_PADS_PORTD1_DS_PD14             18            /*  DS control for PD14 IO */
#define BITP_PADS_PORTD1_DS_PD13             15            /*  DS control for PD13 IO */
#define BITP_PADS_PORTD1_DS_PD12             12            /*  DS control for PD12 IO */
#define BITP_PADS_PORTD1_DS_PD11              9            /*  DS control for PD11 IO */
#define BITP_PADS_PORTD1_DS_PD10              6            /*  DS control for PD10 IO */
#define BITP_PADS_PORTD1_DS_PD9               3            /*  DS control for PD9 IO */
#define BITP_PADS_PORTD1_DS_PD8               0            /*  DS control for PD8 IO */
#define BITM_PADS_PORTD1_DS_PD15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PD15 IO */
#define BITM_PADS_PORTD1_DS_PD14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PD14 IO */
#define BITM_PADS_PORTD1_DS_PD13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PD13 IO */
#define BITM_PADS_PORTD1_DS_PD12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PD12 IO */
#define BITM_PADS_PORTD1_DS_PD11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PD11 IO */
#define BITM_PADS_PORTD1_DS_PD10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PD10 IO */
#define BITM_PADS_PORTD1_DS_PD9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PD9 IO */
#define BITM_PADS_PORTD1_DS_PD8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PD8 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTE0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTE0_DS_PE7              21            /*  DS control for PE7 IO */
#define BITP_PADS_PORTE0_DS_PE6              18            /*  DS control for PE6 IO */
#define BITP_PADS_PORTE0_DS_PE5              15            /*  DS control for PE5 IO */
#define BITP_PADS_PORTE0_DS_PE4              12            /*  DS control for PE4 IO */
#define BITP_PADS_PORTE0_DS_PE3               9            /*  DS control for PE3 IO */
#define BITP_PADS_PORTE0_DS_PE2               6            /*  DS control for PE2 IO */
#define BITP_PADS_PORTE0_DS_PE1               3            /*  DS control for PE1 IO */
#define BITP_PADS_PORTE0_DS_PE0               0            /*  DS control for PE0 IO */
#define BITM_PADS_PORTE0_DS_PE7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PE7 IO */
#define BITM_PADS_PORTE0_DS_PE6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PE6 IO */
#define BITM_PADS_PORTE0_DS_PE5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PE5 IO */
#define BITM_PADS_PORTE0_DS_PE4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PE4 IO */
#define BITM_PADS_PORTE0_DS_PE3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PE3 IO */
#define BITM_PADS_PORTE0_DS_PE2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PE2 IO */
#define BITM_PADS_PORTE0_DS_PE1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PE1 IO */
#define BITM_PADS_PORTE0_DS_PE0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PE0 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTE1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTE1_DS_PE15             21            /*  DS control for PE15 IO */
#define BITP_PADS_PORTE1_DS_PE14             18            /*  DS control for PE14 IO */
#define BITP_PADS_PORTE1_DS_PE13             15            /*  DS control for PE13 IO */
#define BITP_PADS_PORTE1_DS_PE12             12            /*  DS control for PE12 IO */
#define BITP_PADS_PORTE1_DS_PE11              9            /*  DS control for PE11 IO */
#define BITP_PADS_PORTE1_DS_PE10              6            /*  DS control for PE10 IO */
#define BITP_PADS_PORTE1_DS_PE9               3            /*  DS control for PE9 IO */
#define BITP_PADS_PORTE1_DS_PE8               0            /*  DS control for PE8 IO */
#define BITM_PADS_PORTE1_DS_PE15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PE15 IO */
#define BITM_PADS_PORTE1_DS_PE14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PE14 IO */
#define BITM_PADS_PORTE1_DS_PE13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PE13 IO */
#define BITM_PADS_PORTE1_DS_PE12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PE12 IO */
#define BITM_PADS_PORTE1_DS_PE11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PE11 IO */
#define BITM_PADS_PORTE1_DS_PE10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PE10 IO */
#define BITM_PADS_PORTE1_DS_PE9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PE9 IO */
#define BITM_PADS_PORTE1_DS_PE8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PE8 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTF0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTF0_DS_PF7              21            /*  DS control for PF7 IO */
#define BITP_PADS_PORTF0_DS_PF6              18            /*  DS control for PF6 IO */
#define BITP_PADS_PORTF0_DS_PF5              15            /*  DS control for PF5 IO */
#define BITP_PADS_PORTF0_DS_PF4              12            /*  DS control for PF4 IO */
#define BITP_PADS_PORTF0_DS_PF3               9            /*  DS control for PF3 IO */
#define BITP_PADS_PORTF0_DS_PF2               6            /*  DS control for PF2 IO */
#define BITP_PADS_PORTF0_DS_PF1               3            /*  DS control for PF1 IO */
#define BITP_PADS_PORTF0_DS_PF0               0            /*  DS control for PF0 IO */
#define BITM_PADS_PORTF0_DS_PF7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PF7 IO */
#define BITM_PADS_PORTF0_DS_PF6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PF6 IO */
#define BITM_PADS_PORTF0_DS_PF5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PF5 IO */
#define BITM_PADS_PORTF0_DS_PF4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PF4 IO */
#define BITM_PADS_PORTF0_DS_PF3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PF3 IO */
#define BITM_PADS_PORTF0_DS_PF2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PF2 IO */
#define BITM_PADS_PORTF0_DS_PF1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PF1 IO */
#define BITM_PADS_PORTF0_DS_PF0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PF0 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTF1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTF1_DS_PF15             21            /*  DS control for PF15 IO */
#define BITP_PADS_PORTF1_DS_PF14             18            /*  DS control for PF14 IO */
#define BITP_PADS_PORTF1_DS_PF13             15            /*  DS control for PF13 IO */
#define BITP_PADS_PORTF1_DS_PF12             12            /*  DS control for PF12 IO */
#define BITP_PADS_PORTF1_DS_PF11              9            /*  DS control for PF11 IO */
#define BITP_PADS_PORTF1_DS_PF10              6            /*  DS control for PF10 IO */
#define BITP_PADS_PORTF1_DS_PF9               3            /*  DS control for PF9 IO */
#define BITP_PADS_PORTF1_DS_PF8               0            /*  DS control for PF8 IO */
#define BITM_PADS_PORTF1_DS_PF15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PF15 IO */
#define BITM_PADS_PORTF1_DS_PF14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PF14 IO */
#define BITM_PADS_PORTF1_DS_PF13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PF13 IO */
#define BITM_PADS_PORTF1_DS_PF12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PF12 IO */
#define BITM_PADS_PORTF1_DS_PF11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PF11 IO */
#define BITM_PADS_PORTF1_DS_PF10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PF10 IO */
#define BITM_PADS_PORTF1_DS_PF9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PF9 IO */
#define BITM_PADS_PORTF1_DS_PF8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PF8 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTG0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTG0_DS_PG7              21            /*  DS control for PG7 IO */
#define BITP_PADS_PORTG0_DS_PG6              18            /*  DS control for PG6 IO */
#define BITP_PADS_PORTG0_DS_PG5              15            /*  DS control for PG5 IO */
#define BITP_PADS_PORTG0_DS_PG4              12            /*  DS control for PG4 IO */
#define BITP_PADS_PORTG0_DS_PG3               9            /*  DS control for PG3 IO */
#define BITP_PADS_PORTG0_DS_PG2               6            /*  DS control for PG2 IO */
#define BITP_PADS_PORTG0_DS_PG1               3            /*  DS control for PG1 IO */
#define BITP_PADS_PORTG0_DS_PG0               0            /*  DS control for PG0 IO */
#define BITM_PADS_PORTG0_DS_PG7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PG7 IO */
#define BITM_PADS_PORTG0_DS_PG6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PG6 IO */
#define BITM_PADS_PORTG0_DS_PG5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PG5 IO */
#define BITM_PADS_PORTG0_DS_PG4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PG4 IO */
#define BITM_PADS_PORTG0_DS_PG3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PG3 IO */
#define BITM_PADS_PORTG0_DS_PG2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PG2 IO */
#define BITM_PADS_PORTG0_DS_PG1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PG1 IO */
#define BITM_PADS_PORTG0_DS_PG0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PG0 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTG1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTG1_DS_PG15             21            /*  DS control for PG15 IO */
#define BITP_PADS_PORTG1_DS_PG14             18            /*  DS control for PG14 IO */
#define BITP_PADS_PORTG1_DS_PG13             15            /*  DS control for PG13 IO */
#define BITP_PADS_PORTG1_DS_PG12             12            /*  DS control for PG12 IO */
#define BITP_PADS_PORTG1_DS_PG11              9            /*  DS control for PG11 IO */
#define BITP_PADS_PORTG1_DS_PG10              6            /*  DS control for PG10 IO */
#define BITP_PADS_PORTG1_DS_PG9               3            /*  DS control for PG9 IO */
#define BITP_PADS_PORTG1_DS_PG8               0            /*  DS control for PG8 IO */
#define BITM_PADS_PORTG1_DS_PG15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PG15 IO */
#define BITM_PADS_PORTG1_DS_PG14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PG14 IO */
#define BITM_PADS_PORTG1_DS_PG13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PG13 IO */
#define BITM_PADS_PORTG1_DS_PG12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PG12 IO */
#define BITM_PADS_PORTG1_DS_PG11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PG11 IO */
#define BITM_PADS_PORTG1_DS_PG10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PG10 IO */
#define BITM_PADS_PORTG1_DS_PG9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PG9 IO */
#define BITM_PADS_PORTG1_DS_PG8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PG8 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTH0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTH0_DS_PH7              21            /*  DS control for PH7 IO */
#define BITP_PADS_PORTH0_DS_PH6              18            /*  DS control for PH6 IO */
#define BITP_PADS_PORTH0_DS_PH5              15            /*  DS control for PH5 IO */
#define BITP_PADS_PORTH0_DS_PH4              12            /*  DS control for PH4 IO */
#define BITP_PADS_PORTH0_DS_PH3               9            /*  DS control for PH3 IO */
#define BITP_PADS_PORTH0_DS_PH2               6            /*  DS control for PH2 IO */
#define BITP_PADS_PORTH0_DS_PH1               3            /*  DS control for PH1 IO */
#define BITP_PADS_PORTH0_DS_PH0               0            /*  DS control for PH0 IO */
#define BITM_PADS_PORTH0_DS_PH7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PH7 IO */
#define BITM_PADS_PORTH0_DS_PH6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PH6 IO */
#define BITM_PADS_PORTH0_DS_PH5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PH5 IO */
#define BITM_PADS_PORTH0_DS_PH4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PH4 IO */
#define BITM_PADS_PORTH0_DS_PH3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PH3 IO */
#define BITM_PADS_PORTH0_DS_PH2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PH2 IO */
#define BITM_PADS_PORTH0_DS_PH1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PH1 IO */
#define BITM_PADS_PORTH0_DS_PH0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PH0 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTH1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTH1_DS_PH15             21            /*  DS control for PH15 IO */
#define BITP_PADS_PORTH1_DS_PH14             18            /*  DS control for PH14 IO */
#define BITP_PADS_PORTH1_DS_PH13             15            /*  DS control for PH13 IO */
#define BITP_PADS_PORTH1_DS_PH12             12            /*  DS control for PH12 IO */
#define BITP_PADS_PORTH1_DS_PH11              9            /*  DS control for PH11 IO */
#define BITP_PADS_PORTH1_DS_PH10              6            /*  DS control for PH10 IO */
#define BITP_PADS_PORTH1_DS_PH9               3            /*  DS control for PH9 IO */
#define BITP_PADS_PORTH1_DS_PH8               0            /*  DS control for PH8 IO */
#define BITM_PADS_PORTH1_DS_PH15             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PH15 IO */
#define BITM_PADS_PORTH1_DS_PH14             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PH14 IO */
#define BITM_PADS_PORTH1_DS_PH13             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PH13 IO */
#define BITM_PADS_PORTH1_DS_PH12             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PH12 IO */
#define BITM_PADS_PORTH1_DS_PH11             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PH11 IO */
#define BITM_PADS_PORTH1_DS_PH10             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PH10 IO */
#define BITM_PADS_PORTH1_DS_PH9              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PH9 IO */
#define BITM_PADS_PORTH1_DS_PH8              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PH8 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORTI0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORTI0_DS_PI7              21            /*  DS control for PI7 IO */
#define BITP_PADS_PORTI0_DS_PI6              18            /*  DS control for PI6 IO */
#define BITP_PADS_PORTI0_DS_PI5              15            /*  DS control for PI5 IO */
#define BITP_PADS_PORTI0_DS_PI4              12            /*  DS control for PI4 IO */
#define BITP_PADS_PORTI0_DS_PI3               9            /*  DS control for PI3 IO */
#define BITP_PADS_PORTI0_DS_PI2               6            /*  DS control for PI2 IO */
#define BITP_PADS_PORTI0_DS_PI1               3            /*  DS control for PI1 IO */
#define BITP_PADS_PORTI0_DS_PI0               0            /*  DS control for PI0 IO */
#define BITM_PADS_PORTI0_DS_PI7              (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for PI7 IO */
#define BITM_PADS_PORTI0_DS_PI6              (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for PI6 IO */
#define BITM_PADS_PORTI0_DS_PI5              (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for PI5 IO */
#define BITM_PADS_PORTI0_DS_PI4              (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for PI4 IO */
#define BITM_PADS_PORTI0_DS_PI3              (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for PI3 IO */
#define BITM_PADS_PORTI0_DS_PI2              (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for PI2 IO */
#define BITM_PADS_PORTI0_DS_PI1              (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for PI1 IO */
#define BITM_PADS_PORTI0_DS_PI0              (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for PI0 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_NONPORTS_DS                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_NONPORTS_DS_FAULT          18            /*  FAULT DS control. */
#define BITP_PADS_NONPORTS_DS_OSPI           15            /*  OSPI pins DS control. */
#define BITP_PADS_NONPORTS_DS_LP0CK          12            /*  LP0 Clock Drive Strength Control. */
#define BITP_PADS_NONPORTS_DS_LP1CK           9            /*  LP1 Clock Drive Strength Control. */
#define BITP_PADS_NONPORTS_DS_FAULTB          6            /*  FAULTB DS control. */
#define BITP_PADS_NONPORTS_DS_RESOUTB         3            /*  RESOUTB DS control. */
#define BITP_PADS_NONPORTS_DS_CKOUT           0            /*  CLKOUT DS control. */
#define BITM_PADS_NONPORTS_DS_FAULT          (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  FAULT DS control. */
#define BITM_PADS_NONPORTS_DS_OSPI           (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  OSPI pins DS control. */
#define BITM_PADS_NONPORTS_DS_LP0CK          (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  LP0 Clock Drive Strength Control. */
#define BITM_PADS_NONPORTS_DS_LP1CK          (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  LP1 Clock Drive Strength Control. */
#define BITM_PADS_NONPORTS_DS_FAULTB         (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  FAULTB DS control. */
#define BITM_PADS_NONPORTS_DS_RESOUTB        (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  RESOUTB DS control. */
#define BITM_PADS_NONPORTS_DS_CKOUT          (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  CLKOUT DS control. */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI0_0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI0_0_DS_DAI10            27            /*  DS control for DAI10 IO */
#define BITP_PADS_DAI0_0_DS_DAI9             24            /*  DS control for DAI9 IO */
#define BITP_PADS_DAI0_0_DS_DAI8             21            /*  DS control for DAI8 IO */
#define BITP_PADS_DAI0_0_DS_DAI7             18            /*  DS control for DAI7 IO. */
#define BITP_PADS_DAI0_0_DS_DAI6             15            /*  DS control for DAI6 IO */
#define BITP_PADS_DAI0_0_DS_DAI5             12            /*  DS control for DAI5 IO */
#define BITP_PADS_DAI0_0_DS_DAI4              9            /*  DS control for DAI4 IO */
#define BITP_PADS_DAI0_0_DS_DAI3              6            /*  DS control for DAI3 IO */
#define BITP_PADS_DAI0_0_DS_DAI2              3            /*  DS control for DAI2 IO */
#define BITP_PADS_DAI0_0_DS_DAI1              0            /*  DS control for DAI1 IO */
#define BITM_PADS_DAI0_0_DS_DAI10            (_ADI_MSK_3(0x38000000,0x38000000UL, uint32_t  ))    /*  DS control for DAI10 IO */
#define BITM_PADS_DAI0_0_DS_DAI9             (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  DS control for DAI9 IO */
#define BITM_PADS_DAI0_0_DS_DAI8             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for DAI8 IO */
#define BITM_PADS_DAI0_0_DS_DAI7             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for DAI7 IO. */
#define BITM_PADS_DAI0_0_DS_DAI6             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for DAI6 IO */
#define BITM_PADS_DAI0_0_DS_DAI5             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for DAI5 IO */
#define BITM_PADS_DAI0_0_DS_DAI4             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for DAI4 IO */
#define BITM_PADS_DAI0_0_DS_DAI3             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for DAI3 IO */
#define BITM_PADS_DAI0_0_DS_DAI2             (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for DAI2 IO */
#define BITM_PADS_DAI0_0_DS_DAI1             (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for DAI1 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI0_1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI0_1_DS_DAI20            27            /*  DS control for DAI20 IO */
#define BITP_PADS_DAI0_1_DS_DAI19            24            /*  DS control for DAI19 IO */
#define BITP_PADS_DAI0_1_DS_DAI18            21            /*  DS control for DAI18 IO */
#define BITP_PADS_DAI0_1_DS_DAI17            18            /*  DS control for DAI17 IO */
#define BITP_PADS_DAI0_1_DS_DAI16            15            /*  DS control for DAI16 IO */
#define BITP_PADS_DAI0_1_DS_DAI15            12            /*  DS control for DAI15 IO */
#define BITP_PADS_DAI0_1_DS_DAI14             9            /*  DS control for DAI14 IO */
#define BITP_PADS_DAI0_1_DS_DAI13             6            /*  DS control for DAI13 IO */
#define BITP_PADS_DAI0_1_DS_DAI12             3            /*  DS control for DAI12 IO */
#define BITP_PADS_DAI0_1_DS_DAI11             0            /*  DS control for DAI11 IO */
#define BITM_PADS_DAI0_1_DS_DAI20            (_ADI_MSK_3(0x38000000,0x38000000UL, uint32_t  ))    /*  DS control for DAI20 IO */
#define BITM_PADS_DAI0_1_DS_DAI19            (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  DS control for DAI19 IO */
#define BITM_PADS_DAI0_1_DS_DAI18            (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for DAI18 IO */
#define BITM_PADS_DAI0_1_DS_DAI17            (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for DAI17 IO */
#define BITM_PADS_DAI0_1_DS_DAI16            (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for DAI16 IO */
#define BITM_PADS_DAI0_1_DS_DAI15            (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for DAI15 IO */
#define BITM_PADS_DAI0_1_DS_DAI14            (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for DAI14 IO */
#define BITM_PADS_DAI0_1_DS_DAI13            (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for DAI13 IO */
#define BITM_PADS_DAI0_1_DS_DAI12            (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for DAI12 IO */
#define BITM_PADS_DAI0_1_DS_DAI11            (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for DAI11 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI1_0_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI1_0_DS_DAI10            27            /*  DS control for DAI10 IO */
#define BITP_PADS_DAI1_0_DS_DAI9             24            /*  DS control for DAI9 IO */
#define BITP_PADS_DAI1_0_DS_DAI8             21            /*  DS control for DAI8 IO */
#define BITP_PADS_DAI1_0_DS_DAI7             18            /*  DS control for DAI7 IO */
#define BITP_PADS_DAI1_0_DS_DAI6             15            /*  DS control for DAI6 IO */
#define BITP_PADS_DAI1_0_DS_DAI5             12            /*  DS control for DAI5 IO */
#define BITP_PADS_DAI1_0_DS_DAI4              9            /*  DS control for DAI4 IO */
#define BITP_PADS_DAI1_0_DS_DAI3              6            /*  DS control for DAI3 IO */
#define BITP_PADS_DAI1_0_DS_DAI2              3            /*  DS control for DAI2 IO */
#define BITP_PADS_DAI1_0_DS_DAI1              0            /*  DS control for DAI1 IO */
#define BITM_PADS_DAI1_0_DS_DAI10            (_ADI_MSK_3(0x38000000,0x38000000UL, uint32_t  ))    /*  DS control for DAI10 IO */
#define BITM_PADS_DAI1_0_DS_DAI9             (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  DS control for DAI9 IO */
#define BITM_PADS_DAI1_0_DS_DAI8             (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for DAI8 IO */
#define BITM_PADS_DAI1_0_DS_DAI7             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for DAI7 IO */
#define BITM_PADS_DAI1_0_DS_DAI6             (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for DAI6 IO */
#define BITM_PADS_DAI1_0_DS_DAI5             (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for DAI5 IO */
#define BITM_PADS_DAI1_0_DS_DAI4             (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for DAI4 IO */
#define BITM_PADS_DAI1_0_DS_DAI3             (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for DAI3 IO */
#define BITM_PADS_DAI1_0_DS_DAI2             (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for DAI2 IO */
#define BITM_PADS_DAI1_0_DS_DAI1             (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for DAI1 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI1_1_DS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI1_1_DS_DAI20            27            /*  DS control for DAI20 IO */
#define BITP_PADS_DAI1_1_DS_DAI19            24            /*  DS control for DAI19 IO */
#define BITP_PADS_DAI1_1_DS_DAI18            21            /*  DS control for DAI18 IO */
#define BITP_PADS_DAI1_1_DS_DAI17            18            /*  DS control for DAI17 IO */
#define BITP_PADS_DAI1_1_DS_DAI16            15            /*  DS control for DAI16 IO */
#define BITP_PADS_DAI1_1_DS_DAI15            12            /*  DS control for DAI15 IO */
#define BITP_PADS_DAI1_1_DS_DAI14             9            /*  DS control for DAI14 IO */
#define BITP_PADS_DAI1_1_DS_DAI13             6            /*  DS control for DAI13 IO */
#define BITP_PADS_DAI1_1_DS_DAI12             3            /*  DS control for DAI12 IO */
#define BITP_PADS_DAI1_1_DS_DAI11             0            /*  DS control for DAI11 IO */
#define BITM_PADS_DAI1_1_DS_DAI20            (_ADI_MSK_3(0x38000000,0x38000000UL, uint32_t  ))    /*  DS control for DAI20 IO */
#define BITM_PADS_DAI1_1_DS_DAI19            (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  DS control for DAI19 IO */
#define BITM_PADS_DAI1_1_DS_DAI18            (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  DS control for DAI18 IO */
#define BITM_PADS_DAI1_1_DS_DAI17            (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  DS control for DAI17 IO */
#define BITM_PADS_DAI1_1_DS_DAI16            (_ADI_MSK_3(0x00038000,0x00038000UL, uint32_t  ))    /*  DS control for DAI16 IO */
#define BITM_PADS_DAI1_1_DS_DAI15            (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  DS control for DAI15 IO */
#define BITM_PADS_DAI1_1_DS_DAI14            (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  DS control for DAI14 IO */
#define BITM_PADS_DAI1_1_DS_DAI13            (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  DS control for DAI13 IO */
#define BITM_PADS_DAI1_1_DS_DAI12            (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  DS control for DAI12 IO */
#define BITM_PADS_DAI1_1_DS_DAI11            (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  DS control for DAI11 IO */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI0_IE                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI0_IE_VALUE               0            /*  DAI0 Input Enable Control */
#define BITM_PADS_DAI0_IE_VALUE              (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  DAI0 Input Enable Control */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI1_IE                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI1_IE_VALUE               0            /*  DAI1 Input Enable Control */
#define BITM_PADS_DAI1_IE_VALUE              (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  DAI1 Input Enable Control */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORT[n]_PUE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORT_PUE_PUE                0            /*  Pull-Up Enable */
#define BITM_PADS_PORT_PUE_PUE               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Pull-Up Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI[n]_PUE                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI_PUE_PUE                 0            /*  Pull-Up Enable */
#define BITM_PADS_DAI_PUE_PUE                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Pull-Up Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_PORT[n]_PDE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_PORT_PDE_PUD                0            /*  Pull-Up Disable */
#define BITM_PADS_PORT_PDE_PUD               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Pull-Up Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          PADS_DAI[n]_PDE                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PADS_DAI_PDE_PUD                 0            /*  Pull-Up Disable */
#define BITM_PADS_DAI_PDE_PUD                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Pull-Up Disable */


/* ============================================================================================================================
        The Pin Interrupt module
   ============================================================================================================================ */

/* ============================================================================================================================
        PINT0
   ============================================================================================================================ */
#define REG_PINT0_MSK_SET                    0x31005000            /*  PINT0 PINT Mask Set Register */
#define REG_PINT0_MSK_CLR                    0x31005004            /*  PINT0 PINT Mask Clear Register */
#define REG_PINT0_REQ                        0x31005008            /*  PINT0 PINT Request Register */
#define REG_PINT0_ASSIGN                     0x3100500C            /*  PINT0 PINT Assign Register */
#define REG_PINT0_EDGE_SET                   0x31005010            /*  PINT0 PINT Edge Set Register */
#define REG_PINT0_EDGE_CLR                   0x31005014            /*  PINT0 PINT Edge Clear Register */
#define REG_PINT0_INV_SET                    0x31005018            /*  PINT0 PINT Invert Set Register */
#define REG_PINT0_INV_CLR                    0x3100501C            /*  PINT0 PINT Invert Clear Register */
#define REG_PINT0_PINSTATE                   0x31005020            /*  PINT0 PINT Pin State Register */
#define REG_PINT0_LATCH                      0x31005024            /*  PINT0 PINT Latch Register */

/* ============================================================================================================================
        PINT1
   ============================================================================================================================ */
#define REG_PINT1_MSK_SET                    0x31005100            /*  PINT1 PINT Mask Set Register */
#define REG_PINT1_MSK_CLR                    0x31005104            /*  PINT1 PINT Mask Clear Register */
#define REG_PINT1_REQ                        0x31005108            /*  PINT1 PINT Request Register */
#define REG_PINT1_ASSIGN                     0x3100510C            /*  PINT1 PINT Assign Register */
#define REG_PINT1_EDGE_SET                   0x31005110            /*  PINT1 PINT Edge Set Register */
#define REG_PINT1_EDGE_CLR                   0x31005114            /*  PINT1 PINT Edge Clear Register */
#define REG_PINT1_INV_SET                    0x31005118            /*  PINT1 PINT Invert Set Register */
#define REG_PINT1_INV_CLR                    0x3100511C            /*  PINT1 PINT Invert Clear Register */
#define REG_PINT1_PINSTATE                   0x31005120            /*  PINT1 PINT Pin State Register */
#define REG_PINT1_LATCH                      0x31005124            /*  PINT1 PINT Latch Register */

/* ============================================================================================================================
        PINT2
   ============================================================================================================================ */
#define REG_PINT2_MSK_SET                    0x31005200            /*  PINT2 PINT Mask Set Register */
#define REG_PINT2_MSK_CLR                    0x31005204            /*  PINT2 PINT Mask Clear Register */
#define REG_PINT2_REQ                        0x31005208            /*  PINT2 PINT Request Register */
#define REG_PINT2_ASSIGN                     0x3100520C            /*  PINT2 PINT Assign Register */
#define REG_PINT2_EDGE_SET                   0x31005210            /*  PINT2 PINT Edge Set Register */
#define REG_PINT2_EDGE_CLR                   0x31005214            /*  PINT2 PINT Edge Clear Register */
#define REG_PINT2_INV_SET                    0x31005218            /*  PINT2 PINT Invert Set Register */
#define REG_PINT2_INV_CLR                    0x3100521C            /*  PINT2 PINT Invert Clear Register */
#define REG_PINT2_PINSTATE                   0x31005220            /*  PINT2 PINT Pin State Register */
#define REG_PINT2_LATCH                      0x31005224            /*  PINT2 PINT Latch Register */

/* ============================================================================================================================
        PINT3
   ============================================================================================================================ */
#define REG_PINT3_MSK_SET                    0x31005300            /*  PINT3 PINT Mask Set Register */
#define REG_PINT3_MSK_CLR                    0x31005304            /*  PINT3 PINT Mask Clear Register */
#define REG_PINT3_REQ                        0x31005308            /*  PINT3 PINT Request Register */
#define REG_PINT3_ASSIGN                     0x3100530C            /*  PINT3 PINT Assign Register */
#define REG_PINT3_EDGE_SET                   0x31005310            /*  PINT3 PINT Edge Set Register */
#define REG_PINT3_EDGE_CLR                   0x31005314            /*  PINT3 PINT Edge Clear Register */
#define REG_PINT3_INV_SET                    0x31005318            /*  PINT3 PINT Invert Set Register */
#define REG_PINT3_INV_CLR                    0x3100531C            /*  PINT3 PINT Invert Clear Register */
#define REG_PINT3_PINSTATE                   0x31005320            /*  PINT3 PINT Pin State Register */
#define REG_PINT3_LATCH                      0x31005324            /*  PINT3 PINT Latch Register */

/* ============================================================================================================================
        PINT4
   ============================================================================================================================ */
#define REG_PINT4_MSK_SET                    0x31005400            /*  PINT4 PINT Mask Set Register */
#define REG_PINT4_MSK_CLR                    0x31005404            /*  PINT4 PINT Mask Clear Register */
#define REG_PINT4_REQ                        0x31005408            /*  PINT4 PINT Request Register */
#define REG_PINT4_ASSIGN                     0x3100540C            /*  PINT4 PINT Assign Register */
#define REG_PINT4_EDGE_SET                   0x31005410            /*  PINT4 PINT Edge Set Register */
#define REG_PINT4_EDGE_CLR                   0x31005414            /*  PINT4 PINT Edge Clear Register */
#define REG_PINT4_INV_SET                    0x31005418            /*  PINT4 PINT Invert Set Register */
#define REG_PINT4_INV_CLR                    0x3100541C            /*  PINT4 PINT Invert Clear Register */
#define REG_PINT4_PINSTATE                   0x31005420            /*  PINT4 PINT Pin State Register */
#define REG_PINT4_LATCH                      0x31005424            /*  PINT4 PINT Latch Register */

/* ============================================================================================================================
        PINT5
   ============================================================================================================================ */
#define REG_PINT5_MSK_SET                    0x31005500            /*  PINT5 PINT Mask Set Register */
#define REG_PINT5_MSK_CLR                    0x31005504            /*  PINT5 PINT Mask Clear Register */
#define REG_PINT5_REQ                        0x31005508            /*  PINT5 PINT Request Register */
#define REG_PINT5_ASSIGN                     0x3100550C            /*  PINT5 PINT Assign Register */
#define REG_PINT5_EDGE_SET                   0x31005510            /*  PINT5 PINT Edge Set Register */
#define REG_PINT5_EDGE_CLR                   0x31005514            /*  PINT5 PINT Edge Clear Register */
#define REG_PINT5_INV_SET                    0x31005518            /*  PINT5 PINT Invert Set Register */
#define REG_PINT5_INV_CLR                    0x3100551C            /*  PINT5 PINT Invert Clear Register */
#define REG_PINT5_PINSTATE                   0x31005520            /*  PINT5 PINT Pin State Register */
#define REG_PINT5_LATCH                      0x31005524            /*  PINT5 PINT Latch Register */

/* ============================================================================================================================
        PINT6
   ============================================================================================================================ */
#define REG_PINT6_MSK_SET                    0x31005600            /*  PINT6 PINT Mask Set Register */
#define REG_PINT6_MSK_CLR                    0x31005604            /*  PINT6 PINT Mask Clear Register */
#define REG_PINT6_REQ                        0x31005608            /*  PINT6 PINT Request Register */
#define REG_PINT6_ASSIGN                     0x3100560C            /*  PINT6 PINT Assign Register */
#define REG_PINT6_EDGE_SET                   0x31005610            /*  PINT6 PINT Edge Set Register */
#define REG_PINT6_EDGE_CLR                   0x31005614            /*  PINT6 PINT Edge Clear Register */
#define REG_PINT6_INV_SET                    0x31005618            /*  PINT6 PINT Invert Set Register */
#define REG_PINT6_INV_CLR                    0x3100561C            /*  PINT6 PINT Invert Clear Register */
#define REG_PINT6_PINSTATE                   0x31005620            /*  PINT6 PINT Pin State Register */
#define REG_PINT6_LATCH                      0x31005624            /*  PINT6 PINT Latch Register */

/* ============================================================================================================================
        PINT7
   ============================================================================================================================ */
#define REG_PINT7_MSK_SET                    0x31005700            /*  PINT7 PINT Mask Set Register */
#define REG_PINT7_MSK_CLR                    0x31005704            /*  PINT7 PINT Mask Clear Register */
#define REG_PINT7_REQ                        0x31005708            /*  PINT7 PINT Request Register */
#define REG_PINT7_ASSIGN                     0x3100570C            /*  PINT7 PINT Assign Register */
#define REG_PINT7_EDGE_SET                   0x31005710            /*  PINT7 PINT Edge Set Register */
#define REG_PINT7_EDGE_CLR                   0x31005714            /*  PINT7 PINT Edge Clear Register */
#define REG_PINT7_INV_SET                    0x31005718            /*  PINT7 PINT Invert Set Register */
#define REG_PINT7_INV_CLR                    0x3100571C            /*  PINT7 PINT Invert Clear Register */
#define REG_PINT7_PINSTATE                   0x31005720            /*  PINT7 PINT Pin State Register */
#define REG_PINT7_LATCH                      0x31005724            /*  PINT7 PINT Latch Register */

/* ============================================================================================================================
        PINT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PINT_MSK_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_MSK_SET_PIQ31              31            /*  Pin Interrupt 31 Unmask */
#define BITP_PINT_MSK_SET_PIQ30              30            /*  Pin Interrupt 30 Unmask */
#define BITP_PINT_MSK_SET_PIQ29              29            /*  Pin Interrupt 29 Unmask */
#define BITP_PINT_MSK_SET_PIQ28              28            /*  Pin Interrupt 28 Unmask */
#define BITP_PINT_MSK_SET_PIQ27              27            /*  Pin Interrupt 27 Unmask */
#define BITP_PINT_MSK_SET_PIQ26              26            /*  Pin Interrupt 26 Unmask */
#define BITP_PINT_MSK_SET_PIQ25              25            /*  Pin Interrupt 25 Unmask */
#define BITP_PINT_MSK_SET_PIQ24              24            /*  Pin Interrupt 24 Unmask */
#define BITP_PINT_MSK_SET_PIQ23              23            /*  Pin Interrupt 23 Unmask */
#define BITP_PINT_MSK_SET_PIQ22              22            /*  Pin Interrupt 22 Unmask */
#define BITP_PINT_MSK_SET_PIQ21              21            /*  Pin Interrupt 21 Unmask */
#define BITP_PINT_MSK_SET_PIQ20              20            /*  Pin Interrupt 20 Unmask */
#define BITP_PINT_MSK_SET_PIQ19              19            /*  Pin Interrupt 19 Unmask */
#define BITP_PINT_MSK_SET_PIQ18              18            /*  Pin Interrupt 18 Unmask */
#define BITP_PINT_MSK_SET_PIQ17              17            /*  Pin Interrupt 17 Unmask */
#define BITP_PINT_MSK_SET_PIQ16              16            /*  Pin Interrupt 16 Unmask */
#define BITP_PINT_MSK_SET_PIQ15              15            /*  Pin Interrupt 15 Unmask */
#define BITP_PINT_MSK_SET_PIQ14              14            /*  Pin Interrupt 14 Unmask */
#define BITP_PINT_MSK_SET_PIQ13              13            /*  Pin Interrupt 13 Unmask */
#define BITP_PINT_MSK_SET_PIQ12              12            /*  Pin Interrupt 12 Unmask */
#define BITP_PINT_MSK_SET_PIQ11              11            /*  Pin Interrupt 11 Unmask */
#define BITP_PINT_MSK_SET_PIQ10              10            /*  Pin Interrupt 10 Unmask */
#define BITP_PINT_MSK_SET_PIQ9                9            /*  Pin Interrupt 9 Unmask */
#define BITP_PINT_MSK_SET_PIQ8                8            /*  Pin Interrupt 8 Unmask */
#define BITP_PINT_MSK_SET_PIQ7                7            /*  Pin Interrupt 7 Unmask */
#define BITP_PINT_MSK_SET_PIQ6                6            /*  Pin Interrupt 6 Unmask */
#define BITP_PINT_MSK_SET_PIQ5                5            /*  Pin Interrupt 5 Unmask */
#define BITP_PINT_MSK_SET_PIQ4                4            /*  Pin Interrupt 4 Unmask */
#define BITP_PINT_MSK_SET_PIQ3                3            /*  Pin Interrupt 3 Unmask */
#define BITP_PINT_MSK_SET_PIQ2                2            /*  Pin Interrupt 2 Unmask */
#define BITP_PINT_MSK_SET_PIQ1                1            /*  Pin Interrupt 1 Unmask */
#define BITP_PINT_MSK_SET_PIQ0                0            /*  Pin Interrupt 0 Unmask */
#define BITM_PINT_MSK_SET_PIQ31              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Unmask */
#define BITM_PINT_MSK_SET_PIQ30              (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Unmask */
#define BITM_PINT_MSK_SET_PIQ29              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Unmask */
#define BITM_PINT_MSK_SET_PIQ28              (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Unmask */
#define BITM_PINT_MSK_SET_PIQ27              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Unmask */
#define BITM_PINT_MSK_SET_PIQ26              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Unmask */
#define BITM_PINT_MSK_SET_PIQ25              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Unmask */
#define BITM_PINT_MSK_SET_PIQ24              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Unmask */
#define BITM_PINT_MSK_SET_PIQ23              (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Unmask */
#define BITM_PINT_MSK_SET_PIQ22              (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Unmask */
#define BITM_PINT_MSK_SET_PIQ21              (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Unmask */
#define BITM_PINT_MSK_SET_PIQ20              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Unmask */
#define BITM_PINT_MSK_SET_PIQ19              (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Unmask */
#define BITM_PINT_MSK_SET_PIQ18              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Unmask */
#define BITM_PINT_MSK_SET_PIQ17              (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Unmask */
#define BITM_PINT_MSK_SET_PIQ16              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Unmask */
#define BITM_PINT_MSK_SET_PIQ15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Unmask */
#define BITM_PINT_MSK_SET_PIQ14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Unmask */
#define BITM_PINT_MSK_SET_PIQ13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Unmask */
#define BITM_PINT_MSK_SET_PIQ12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Unmask */
#define BITM_PINT_MSK_SET_PIQ11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Unmask */
#define BITM_PINT_MSK_SET_PIQ10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Unmask */
#define BITM_PINT_MSK_SET_PIQ9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Unmask */
#define BITM_PINT_MSK_SET_PIQ8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Unmask */
#define BITM_PINT_MSK_SET_PIQ7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Unmask */
#define BITM_PINT_MSK_SET_PIQ6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Unmask */
#define BITM_PINT_MSK_SET_PIQ5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Unmask */
#define BITM_PINT_MSK_SET_PIQ4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Unmask */
#define BITM_PINT_MSK_SET_PIQ3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Unmask */
#define BITM_PINT_MSK_SET_PIQ2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Unmask */
#define BITM_PINT_MSK_SET_PIQ1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Unmask */
#define BITM_PINT_MSK_SET_PIQ0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Unmask */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_MSK_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_MSK_CLR_PIQ31              31            /*  Pin Interrupt 31 Mask */
#define BITP_PINT_MSK_CLR_PIQ30              30            /*  Pin Interrupt 30 Mask */
#define BITP_PINT_MSK_CLR_PIQ29              29            /*  Pin Interrupt 29 Mask */
#define BITP_PINT_MSK_CLR_PIQ28              28            /*  Pin Interrupt 28 Mask */
#define BITP_PINT_MSK_CLR_PIQ27              27            /*  Pin Interrupt 27 Mask */
#define BITP_PINT_MSK_CLR_PIQ26              26            /*  Pin Interrupt 26 Mask */
#define BITP_PINT_MSK_CLR_PIQ25              25            /*  Pin Interrupt 25 Mask */
#define BITP_PINT_MSK_CLR_PIQ24              24            /*  Pin Interrupt 24 Mask */
#define BITP_PINT_MSK_CLR_PIQ23              23            /*  Pin Interrupt 23 Mask */
#define BITP_PINT_MSK_CLR_PIQ22              22            /*  Pin Interrupt 22 Mask */
#define BITP_PINT_MSK_CLR_PIQ21              21            /*  Pin Interrupt 21 Mask */
#define BITP_PINT_MSK_CLR_PIQ20              20            /*  Pin Interrupt 20 Mask */
#define BITP_PINT_MSK_CLR_PIQ19              19            /*  Pin Interrupt 19 Mask */
#define BITP_PINT_MSK_CLR_PIQ18              18            /*  Pin Interrupt 18 Mask */
#define BITP_PINT_MSK_CLR_PIQ17              17            /*  Pin Interrupt 17 Mask */
#define BITP_PINT_MSK_CLR_PIQ16              16            /*  Pin Interrupt 16 Mask */
#define BITP_PINT_MSK_CLR_PIQ15              15            /*  Pin Interrupt 15 Mask */
#define BITP_PINT_MSK_CLR_PIQ14              14            /*  Pin Interrupt 14 Mask */
#define BITP_PINT_MSK_CLR_PIQ13              13            /*  Pin Interrupt 13 Mask */
#define BITP_PINT_MSK_CLR_PIQ12              12            /*  Pin Interrupt 12 Mask */
#define BITP_PINT_MSK_CLR_PIQ11              11            /*  Pin Interrupt 11 Mask */
#define BITP_PINT_MSK_CLR_PIQ10              10            /*  Pin Interrupt 10 Mask */
#define BITP_PINT_MSK_CLR_PIQ9                9            /*  Pin Interrupt 9 Mask */
#define BITP_PINT_MSK_CLR_PIQ8                8            /*  Pin Interrupt 8 Mask */
#define BITP_PINT_MSK_CLR_PIQ7                7            /*  Pin Interrupt 7 Mask */
#define BITP_PINT_MSK_CLR_PIQ6                6            /*  Pin Interrupt 6 Mask */
#define BITP_PINT_MSK_CLR_PIQ5                5            /*  Pin Interrupt 5 Mask */
#define BITP_PINT_MSK_CLR_PIQ4                4            /*  Pin Interrupt 4 Mask */
#define BITP_PINT_MSK_CLR_PIQ3                3            /*  Pin Interrupt 3 Mask */
#define BITP_PINT_MSK_CLR_PIQ2                2            /*  Pin Interrupt 2 Mask */
#define BITP_PINT_MSK_CLR_PIQ1                1            /*  Pin Interrupt 1 Mask */
#define BITP_PINT_MSK_CLR_PIQ0                0            /*  Pin Interrupt 0 Mask */
#define BITM_PINT_MSK_CLR_PIQ31              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Mask */
#define BITM_PINT_MSK_CLR_PIQ30              (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Mask */
#define BITM_PINT_MSK_CLR_PIQ29              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Mask */
#define BITM_PINT_MSK_CLR_PIQ28              (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Mask */
#define BITM_PINT_MSK_CLR_PIQ27              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Mask */
#define BITM_PINT_MSK_CLR_PIQ26              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Mask */
#define BITM_PINT_MSK_CLR_PIQ25              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Mask */
#define BITM_PINT_MSK_CLR_PIQ24              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Mask */
#define BITM_PINT_MSK_CLR_PIQ23              (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Mask */
#define BITM_PINT_MSK_CLR_PIQ22              (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Mask */
#define BITM_PINT_MSK_CLR_PIQ21              (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Mask */
#define BITM_PINT_MSK_CLR_PIQ20              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Mask */
#define BITM_PINT_MSK_CLR_PIQ19              (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Mask */
#define BITM_PINT_MSK_CLR_PIQ18              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Mask */
#define BITM_PINT_MSK_CLR_PIQ17              (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Mask */
#define BITM_PINT_MSK_CLR_PIQ16              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Mask */
#define BITM_PINT_MSK_CLR_PIQ15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Mask */
#define BITM_PINT_MSK_CLR_PIQ14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Mask */
#define BITM_PINT_MSK_CLR_PIQ13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Mask */
#define BITM_PINT_MSK_CLR_PIQ12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Mask */
#define BITM_PINT_MSK_CLR_PIQ11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Mask */
#define BITM_PINT_MSK_CLR_PIQ10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Mask */
#define BITM_PINT_MSK_CLR_PIQ9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Mask */
#define BITM_PINT_MSK_CLR_PIQ8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Mask */
#define BITM_PINT_MSK_CLR_PIQ7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Mask */
#define BITM_PINT_MSK_CLR_PIQ6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Mask */
#define BITM_PINT_MSK_CLR_PIQ5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Mask */
#define BITM_PINT_MSK_CLR_PIQ4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Mask */
#define BITM_PINT_MSK_CLR_PIQ3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Mask */
#define BITM_PINT_MSK_CLR_PIQ2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Mask */
#define BITM_PINT_MSK_CLR_PIQ1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Mask */
#define BITM_PINT_MSK_CLR_PIQ0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_REQ                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_REQ_PIQ31                  31            /*  Pin Interrupt 31 Request */
#define BITP_PINT_REQ_PIQ30                  30            /*  Pin Interrupt 30 Request */
#define BITP_PINT_REQ_PIQ29                  29            /*  Pin Interrupt 29 Request */
#define BITP_PINT_REQ_PIQ28                  28            /*  Pin Interrupt 28 Request */
#define BITP_PINT_REQ_PIQ27                  27            /*  Pin Interrupt 27 Request */
#define BITP_PINT_REQ_PIQ26                  26            /*  Pin Interrupt 26 Request */
#define BITP_PINT_REQ_PIQ25                  25            /*  Pin Interrupt 25 Request */
#define BITP_PINT_REQ_PIQ24                  24            /*  Pin Interrupt 24 Request */
#define BITP_PINT_REQ_PIQ23                  23            /*  Pin Interrupt 23 Request */
#define BITP_PINT_REQ_PIQ22                  22            /*  Pin Interrupt 22 Request */
#define BITP_PINT_REQ_PIQ21                  21            /*  Pin Interrupt 21 Request */
#define BITP_PINT_REQ_PIQ20                  20            /*  Pin Interrupt 20 Request */
#define BITP_PINT_REQ_PIQ19                  19            /*  Pin Interrupt 19 Request */
#define BITP_PINT_REQ_PIQ18                  18            /*  Pin Interrupt 18 Request */
#define BITP_PINT_REQ_PIQ17                  17            /*  Pin Interrupt 17 Request */
#define BITP_PINT_REQ_PIQ16                  16            /*  Pin Interrupt 16 Request */
#define BITP_PINT_REQ_PIQ15                  15            /*  Pin Interrupt 15 Request */
#define BITP_PINT_REQ_PIQ14                  14            /*  Pin Interrupt 14 Request */
#define BITP_PINT_REQ_PIQ13                  13            /*  Pin Interrupt 13 Request */
#define BITP_PINT_REQ_PIQ12                  12            /*  Pin Interrupt 12 Request */
#define BITP_PINT_REQ_PIQ11                  11            /*  Pin Interrupt 11 Request */
#define BITP_PINT_REQ_PIQ10                  10            /*  Pin Interrupt 10 Request */
#define BITP_PINT_REQ_PIQ9                    9            /*  Pin Interrupt 9 Request */
#define BITP_PINT_REQ_PIQ8                    8            /*  Pin Interrupt 8 Request */
#define BITP_PINT_REQ_PIQ7                    7            /*  Pin Interrupt 7 Request */
#define BITP_PINT_REQ_PIQ6                    6            /*  Pin Interrupt 6 Request */
#define BITP_PINT_REQ_PIQ5                    5            /*  Pin Interrupt 5 Request */
#define BITP_PINT_REQ_PIQ4                    4            /*  Pin Interrupt 4 Request */
#define BITP_PINT_REQ_PIQ3                    3            /*  Pin Interrupt 3 Request */
#define BITP_PINT_REQ_PIQ2                    2            /*  Pin Interrupt 2 Request */
#define BITP_PINT_REQ_PIQ1                    1            /*  Pin Interrupt 1 Request */
#define BITP_PINT_REQ_PIQ0                    0            /*  Pin Interrupt 0 Request */
#define BITM_PINT_REQ_PIQ31                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Request */
#define BITM_PINT_REQ_PIQ30                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Request */
#define BITM_PINT_REQ_PIQ29                  (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Request */
#define BITM_PINT_REQ_PIQ28                  (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Request */
#define BITM_PINT_REQ_PIQ27                  (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Request */
#define BITM_PINT_REQ_PIQ26                  (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Request */
#define BITM_PINT_REQ_PIQ25                  (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Request */
#define BITM_PINT_REQ_PIQ24                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Request */
#define BITM_PINT_REQ_PIQ23                  (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Request */
#define BITM_PINT_REQ_PIQ22                  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Request */
#define BITM_PINT_REQ_PIQ21                  (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Request */
#define BITM_PINT_REQ_PIQ20                  (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Request */
#define BITM_PINT_REQ_PIQ19                  (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Request */
#define BITM_PINT_REQ_PIQ18                  (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Request */
#define BITM_PINT_REQ_PIQ17                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Request */
#define BITM_PINT_REQ_PIQ16                  (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Request */
#define BITM_PINT_REQ_PIQ15                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Request */
#define BITM_PINT_REQ_PIQ14                  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Request */
#define BITM_PINT_REQ_PIQ13                  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Request */
#define BITM_PINT_REQ_PIQ12                  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Request */
#define BITM_PINT_REQ_PIQ11                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Request */
#define BITM_PINT_REQ_PIQ10                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Request */
#define BITM_PINT_REQ_PIQ9                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Request */
#define BITM_PINT_REQ_PIQ8                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Request */
#define BITM_PINT_REQ_PIQ7                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Request */
#define BITM_PINT_REQ_PIQ6                   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Request */
#define BITM_PINT_REQ_PIQ5                   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Request */
#define BITM_PINT_REQ_PIQ4                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Request */
#define BITM_PINT_REQ_PIQ3                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Request */
#define BITM_PINT_REQ_PIQ2                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Request */
#define BITM_PINT_REQ_PIQ1                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Request */
#define BITM_PINT_REQ_PIQ0                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Request */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_ASSIGN                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_ASSIGN_B3MSB0              25            /*  Bits [7:1] of B3MAP */
#define BITP_PINT_ASSIGN_B3MAP               24            /*  Byte 3 Mapping */
#define BITP_PINT_ASSIGN_B2MSB0              17            /*  Bits [7:1] of B2MAP */
#define BITP_PINT_ASSIGN_B2MAP               16            /*  Byte 2 Mapping */
#define BITP_PINT_ASSIGN_B1MSB0               9            /*  Bits [7:1] of B1MAP */
#define BITP_PINT_ASSIGN_B1MAP                8            /*  Byte 1 Mapping */
#define BITP_PINT_ASSIGN_B0MSB0               1            /*  Bits [7:1] of B0MAP */
#define BITP_PINT_ASSIGN_B0MAP                0            /*  Byte 0 Mapping */
#define BITM_PINT_ASSIGN_B3MSB0              (_ADI_MSK_3(0xFE000000,0xFE000000UL, uint32_t  ))    /*  Bits [7:1] of B3MAP */
#define BITM_PINT_ASSIGN_B3MAP               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Byte 3 Mapping */
#define BITM_PINT_ASSIGN_B2MSB0              (_ADI_MSK_3(0x00FE0000,0x00FE0000UL, uint32_t  ))    /*  Bits [7:1] of B2MAP */
#define BITM_PINT_ASSIGN_B2MAP               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Byte 2 Mapping */
#define BITM_PINT_ASSIGN_B1MSB0              (_ADI_MSK_3(0x0000FE00,0x0000FE00UL, uint32_t  ))    /*  Bits [7:1] of B1MAP */
#define BITM_PINT_ASSIGN_B1MAP               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Byte 1 Mapping */
#define BITM_PINT_ASSIGN_B0MSB0              (_ADI_MSK_3(0x000000FE,0x000000FEUL, uint32_t  ))    /*  Bits [7:1] of B0MAP */
#define BITM_PINT_ASSIGN_B0MAP               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Byte 0 Mapping */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_EDGE_SET                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_EDGE_SET_PIQ31             31            /*  Pin Interrupt 31 Edge */
#define BITP_PINT_EDGE_SET_PIQ30             30            /*  Pin Interrupt 30 Edge */
#define BITP_PINT_EDGE_SET_PIQ29             29            /*  Pin Interrupt 29 Edge */
#define BITP_PINT_EDGE_SET_PIQ28             28            /*  Pin Interrupt 28 Edge */
#define BITP_PINT_EDGE_SET_PIQ27             27            /*  Pin Interrupt 27 Edge */
#define BITP_PINT_EDGE_SET_PIQ26             26            /*  Pin Interrupt 26 Edge */
#define BITP_PINT_EDGE_SET_PIQ25             25            /*  Pin Interrupt 25 Edge */
#define BITP_PINT_EDGE_SET_PIQ24             24            /*  Pin Interrupt 24 Edge */
#define BITP_PINT_EDGE_SET_PIQ23             23            /*  Pin Interrupt 23 Edge */
#define BITP_PINT_EDGE_SET_PIQ22             22            /*  Pin Interrupt 22 Edge */
#define BITP_PINT_EDGE_SET_PIQ21             21            /*  Pin Interrupt 21 Edge */
#define BITP_PINT_EDGE_SET_PIQ20             20            /*  Pin Interrupt 20 Edge */
#define BITP_PINT_EDGE_SET_PIQ19             19            /*  Pin Interrupt 19 Edge */
#define BITP_PINT_EDGE_SET_PIQ18             18            /*  Pin Interrupt 18 Edge */
#define BITP_PINT_EDGE_SET_PIQ17             17            /*  Pin Interrupt 17 Edge */
#define BITP_PINT_EDGE_SET_PIQ16             16            /*  Pin Interrupt 16 Edge */
#define BITP_PINT_EDGE_SET_PIQ15             15            /*  Pin Interrupt 15 Edge */
#define BITP_PINT_EDGE_SET_PIQ14             14            /*  Pin Interrupt 14 Edge */
#define BITP_PINT_EDGE_SET_PIQ13             13            /*  Pin Interrupt 13 Edge */
#define BITP_PINT_EDGE_SET_PIQ12             12            /*  Pin Interrupt 12 Edge */
#define BITP_PINT_EDGE_SET_PIQ11             11            /*  Pin Interrupt 11 Edge */
#define BITP_PINT_EDGE_SET_PIQ10             10            /*  Pin Interrupt 10 Edge */
#define BITP_PINT_EDGE_SET_PIQ9               9            /*  Pin Interrupt 9 Edge */
#define BITP_PINT_EDGE_SET_PIQ8               8            /*  Pin Interrupt 8 Edge */
#define BITP_PINT_EDGE_SET_PIQ7               7            /*  Pin Interrupt 7 Edge */
#define BITP_PINT_EDGE_SET_PIQ6               6            /*  Pin Interrupt 6 Edge */
#define BITP_PINT_EDGE_SET_PIQ5               5            /*  Pin Interrupt 5 Edge */
#define BITP_PINT_EDGE_SET_PIQ4               4            /*  Pin Interrupt 4 Edge */
#define BITP_PINT_EDGE_SET_PIQ3               3            /*  Pin Interrupt 3 Edge */
#define BITP_PINT_EDGE_SET_PIQ2               2            /*  Pin Interrupt 2 Edge */
#define BITP_PINT_EDGE_SET_PIQ1               1            /*  Pin Interrupt 1 Edge */
#define BITP_PINT_EDGE_SET_PIQ0               0            /*  Pin Interrupt 0 Edge */
#define BITM_PINT_EDGE_SET_PIQ31             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Edge */
#define BITM_PINT_EDGE_SET_PIQ30             (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Edge */
#define BITM_PINT_EDGE_SET_PIQ29             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Edge */
#define BITM_PINT_EDGE_SET_PIQ28             (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Edge */
#define BITM_PINT_EDGE_SET_PIQ27             (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Edge */
#define BITM_PINT_EDGE_SET_PIQ26             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Edge */
#define BITM_PINT_EDGE_SET_PIQ25             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Edge */
#define BITM_PINT_EDGE_SET_PIQ24             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Edge */
#define BITM_PINT_EDGE_SET_PIQ23             (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Edge */
#define BITM_PINT_EDGE_SET_PIQ22             (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Edge */
#define BITM_PINT_EDGE_SET_PIQ21             (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Edge */
#define BITM_PINT_EDGE_SET_PIQ20             (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Edge */
#define BITM_PINT_EDGE_SET_PIQ19             (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Edge */
#define BITM_PINT_EDGE_SET_PIQ18             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Edge */
#define BITM_PINT_EDGE_SET_PIQ17             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Edge */
#define BITM_PINT_EDGE_SET_PIQ16             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Edge */
#define BITM_PINT_EDGE_SET_PIQ15             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Edge */
#define BITM_PINT_EDGE_SET_PIQ14             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Edge */
#define BITM_PINT_EDGE_SET_PIQ13             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Edge */
#define BITM_PINT_EDGE_SET_PIQ12             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Edge */
#define BITM_PINT_EDGE_SET_PIQ11             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Edge */
#define BITM_PINT_EDGE_SET_PIQ10             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Edge */
#define BITM_PINT_EDGE_SET_PIQ9              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Edge */
#define BITM_PINT_EDGE_SET_PIQ8              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Edge */
#define BITM_PINT_EDGE_SET_PIQ7              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Edge */
#define BITM_PINT_EDGE_SET_PIQ6              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Edge */
#define BITM_PINT_EDGE_SET_PIQ5              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Edge */
#define BITM_PINT_EDGE_SET_PIQ4              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Edge */
#define BITM_PINT_EDGE_SET_PIQ3              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Edge */
#define BITM_PINT_EDGE_SET_PIQ2              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Edge */
#define BITM_PINT_EDGE_SET_PIQ1              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Edge */
#define BITM_PINT_EDGE_SET_PIQ0              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Edge */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_EDGE_CLR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_EDGE_CLR_PIQ31             31            /*  Pin Interrupt 31 Level */
#define BITP_PINT_EDGE_CLR_PIQ30             30            /*  Pin Interrupt 30 Level */
#define BITP_PINT_EDGE_CLR_PIQ29             29            /*  Pin Interrupt 29 Level */
#define BITP_PINT_EDGE_CLR_PIQ28             28            /*  Pin Interrupt 28 Level */
#define BITP_PINT_EDGE_CLR_PIQ27             27            /*  Pin Interrupt 27 Level */
#define BITP_PINT_EDGE_CLR_PIQ26             26            /*  Pin Interrupt 26 Level */
#define BITP_PINT_EDGE_CLR_PIQ25             25            /*  Pin Interrupt 25 Level */
#define BITP_PINT_EDGE_CLR_PIQ24             24            /*  Pin Interrupt 24 Level */
#define BITP_PINT_EDGE_CLR_PIQ23             23            /*  Pin Interrupt 23 Level */
#define BITP_PINT_EDGE_CLR_PIQ22             22            /*  Pin Interrupt 22 Level */
#define BITP_PINT_EDGE_CLR_PIQ21             21            /*  Pin Interrupt 21 Level */
#define BITP_PINT_EDGE_CLR_PIQ20             20            /*  Pin Interrupt 20 Level */
#define BITP_PINT_EDGE_CLR_PIQ19             19            /*  Pin Interrupt 19 Level */
#define BITP_PINT_EDGE_CLR_PIQ18             18            /*  Pin Interrupt 18 Level */
#define BITP_PINT_EDGE_CLR_PIQ17             17            /*  Pin Interrupt 17 Level */
#define BITP_PINT_EDGE_CLR_PIQ16             16            /*  Pin Interrupt 16 Level */
#define BITP_PINT_EDGE_CLR_PIQ15             15            /*  Pin Interrupt 15 Level */
#define BITP_PINT_EDGE_CLR_PIQ14             14            /*  Pin Interrupt 14 Level */
#define BITP_PINT_EDGE_CLR_PIQ13             13            /*  Pin Interrupt 13 Level */
#define BITP_PINT_EDGE_CLR_PIQ12             12            /*  Pin Interrupt 12 Level */
#define BITP_PINT_EDGE_CLR_PIQ11             11            /*  Pin Interrupt 11 Level */
#define BITP_PINT_EDGE_CLR_PIQ10             10            /*  Pin Interrupt 10 Level */
#define BITP_PINT_EDGE_CLR_PIQ9               9            /*  Pin Interrupt 9 Level */
#define BITP_PINT_EDGE_CLR_PIQ8               8            /*  Pin Interrupt 8 Level */
#define BITP_PINT_EDGE_CLR_PIQ7               7            /*  Pin Interrupt 7 Level */
#define BITP_PINT_EDGE_CLR_PIQ6               6            /*  Pin Interrupt 6 Level */
#define BITP_PINT_EDGE_CLR_PIQ5               5            /*  Pin Interrupt 5 Level */
#define BITP_PINT_EDGE_CLR_PIQ4               4            /*  Pin Interrupt 4 Level */
#define BITP_PINT_EDGE_CLR_PIQ3               3            /*  Pin Interrupt 3 Level */
#define BITP_PINT_EDGE_CLR_PIQ2               2            /*  Pin Interrupt 2 Level */
#define BITP_PINT_EDGE_CLR_PIQ1               1            /*  Pin Interrupt 1 Level */
#define BITP_PINT_EDGE_CLR_PIQ0               0            /*  Pin Interrupt 0 Level */
#define BITM_PINT_EDGE_CLR_PIQ31             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Level */
#define BITM_PINT_EDGE_CLR_PIQ30             (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Level */
#define BITM_PINT_EDGE_CLR_PIQ29             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Level */
#define BITM_PINT_EDGE_CLR_PIQ28             (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Level */
#define BITM_PINT_EDGE_CLR_PIQ27             (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Level */
#define BITM_PINT_EDGE_CLR_PIQ26             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Level */
#define BITM_PINT_EDGE_CLR_PIQ25             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Level */
#define BITM_PINT_EDGE_CLR_PIQ24             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Level */
#define BITM_PINT_EDGE_CLR_PIQ23             (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Level */
#define BITM_PINT_EDGE_CLR_PIQ22             (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Level */
#define BITM_PINT_EDGE_CLR_PIQ21             (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Level */
#define BITM_PINT_EDGE_CLR_PIQ20             (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Level */
#define BITM_PINT_EDGE_CLR_PIQ19             (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Level */
#define BITM_PINT_EDGE_CLR_PIQ18             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Level */
#define BITM_PINT_EDGE_CLR_PIQ17             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Level */
#define BITM_PINT_EDGE_CLR_PIQ16             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Level */
#define BITM_PINT_EDGE_CLR_PIQ15             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Level */
#define BITM_PINT_EDGE_CLR_PIQ14             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Level */
#define BITM_PINT_EDGE_CLR_PIQ13             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Level */
#define BITM_PINT_EDGE_CLR_PIQ12             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Level */
#define BITM_PINT_EDGE_CLR_PIQ11             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Level */
#define BITM_PINT_EDGE_CLR_PIQ10             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Level */
#define BITM_PINT_EDGE_CLR_PIQ9              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Level */
#define BITM_PINT_EDGE_CLR_PIQ8              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Level */
#define BITM_PINT_EDGE_CLR_PIQ7              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Level */
#define BITM_PINT_EDGE_CLR_PIQ6              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Level */
#define BITM_PINT_EDGE_CLR_PIQ5              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Level */
#define BITM_PINT_EDGE_CLR_PIQ4              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Level */
#define BITM_PINT_EDGE_CLR_PIQ3              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Level */
#define BITM_PINT_EDGE_CLR_PIQ2              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Level */
#define BITM_PINT_EDGE_CLR_PIQ1              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Level */
#define BITM_PINT_EDGE_CLR_PIQ0              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Level */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_INV_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_INV_SET_PIQ31              31            /*  Pin Interrupt 31 Invert */
#define BITP_PINT_INV_SET_PIQ30              30            /*  Pin Interrupt 30 Invert */
#define BITP_PINT_INV_SET_PIQ29              29            /*  Pin Interrupt 29 Invert */
#define BITP_PINT_INV_SET_PIQ28              28            /*  Pin Interrupt 28 Invert */
#define BITP_PINT_INV_SET_PIQ27              27            /*  Pin Interrupt 27 Invert */
#define BITP_PINT_INV_SET_PIQ26              26            /*  Pin Interrupt 26 Invert */
#define BITP_PINT_INV_SET_PIQ25              25            /*  Pin Interrupt 25 Invert */
#define BITP_PINT_INV_SET_PIQ24              24            /*  Pin Interrupt 24 Invert */
#define BITP_PINT_INV_SET_PIQ23              23            /*  Pin Interrupt 23 Invert */
#define BITP_PINT_INV_SET_PIQ22              22            /*  Pin Interrupt 22 Invert */
#define BITP_PINT_INV_SET_PIQ21              21            /*  Pin Interrupt 21 Invert */
#define BITP_PINT_INV_SET_PIQ20              20            /*  Pin Interrupt 20 Invert */
#define BITP_PINT_INV_SET_PIQ19              19            /*  Pin Interrupt 19 Invert */
#define BITP_PINT_INV_SET_PIQ18              18            /*  Pin Interrupt 18 Invert */
#define BITP_PINT_INV_SET_PIQ17              17            /*  Pin Interrupt 17 Invert */
#define BITP_PINT_INV_SET_PIQ16              16            /*  Pin Interrupt 16 Invert */
#define BITP_PINT_INV_SET_PIQ15              15            /*  Pin Interrupt 15 Invert */
#define BITP_PINT_INV_SET_PIQ14              14            /*  Pin Interrupt 14 Invert */
#define BITP_PINT_INV_SET_PIQ13              13            /*  Pin Interrupt 13 Invert */
#define BITP_PINT_INV_SET_PIQ12              12            /*  Pin Interrupt 12 Invert */
#define BITP_PINT_INV_SET_PIQ11              11            /*  Pin Interrupt 11 Invert */
#define BITP_PINT_INV_SET_PIQ10              10            /*  Pin Interrupt 10 Invert */
#define BITP_PINT_INV_SET_PIQ9                9            /*  Pin Interrupt 9 Invert */
#define BITP_PINT_INV_SET_PIQ8                8            /*  Pin Interrupt 8 Invert */
#define BITP_PINT_INV_SET_PIQ7                7            /*  Pin Interrupt 7 Invert */
#define BITP_PINT_INV_SET_PIQ6                6            /*  Pin Interrupt 6 Invert */
#define BITP_PINT_INV_SET_PIQ5                5            /*  Pin Interrupt 5 Invert */
#define BITP_PINT_INV_SET_PIQ4                4            /*  Pin Interrupt 4 Invert */
#define BITP_PINT_INV_SET_PIQ3                3            /*  Pin Interrupt 3 Invert */
#define BITP_PINT_INV_SET_PIQ2                2            /*  Pin Interrupt 2 Invert */
#define BITP_PINT_INV_SET_PIQ1                1            /*  Pin Interrupt 1 Invert */
#define BITP_PINT_INV_SET_PIQ0                0            /*  Pin Interrupt 0 Invert */
#define BITM_PINT_INV_SET_PIQ31              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Invert */
#define BITM_PINT_INV_SET_PIQ30              (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Invert */
#define BITM_PINT_INV_SET_PIQ29              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Invert */
#define BITM_PINT_INV_SET_PIQ28              (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Invert */
#define BITM_PINT_INV_SET_PIQ27              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Invert */
#define BITM_PINT_INV_SET_PIQ26              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Invert */
#define BITM_PINT_INV_SET_PIQ25              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Invert */
#define BITM_PINT_INV_SET_PIQ24              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Invert */
#define BITM_PINT_INV_SET_PIQ23              (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Invert */
#define BITM_PINT_INV_SET_PIQ22              (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Invert */
#define BITM_PINT_INV_SET_PIQ21              (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Invert */
#define BITM_PINT_INV_SET_PIQ20              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Invert */
#define BITM_PINT_INV_SET_PIQ19              (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Invert */
#define BITM_PINT_INV_SET_PIQ18              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Invert */
#define BITM_PINT_INV_SET_PIQ17              (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Invert */
#define BITM_PINT_INV_SET_PIQ16              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Invert */
#define BITM_PINT_INV_SET_PIQ15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Invert */
#define BITM_PINT_INV_SET_PIQ14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Invert */
#define BITM_PINT_INV_SET_PIQ13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Invert */
#define BITM_PINT_INV_SET_PIQ12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Invert */
#define BITM_PINT_INV_SET_PIQ11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Invert */
#define BITM_PINT_INV_SET_PIQ10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Invert */
#define BITM_PINT_INV_SET_PIQ9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Invert */
#define BITM_PINT_INV_SET_PIQ8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Invert */
#define BITM_PINT_INV_SET_PIQ7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Invert */
#define BITM_PINT_INV_SET_PIQ6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Invert */
#define BITM_PINT_INV_SET_PIQ5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Invert */
#define BITM_PINT_INV_SET_PIQ4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Invert */
#define BITM_PINT_INV_SET_PIQ3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Invert */
#define BITM_PINT_INV_SET_PIQ2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Invert */
#define BITM_PINT_INV_SET_PIQ1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Invert */
#define BITM_PINT_INV_SET_PIQ0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Invert */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_INV_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_INV_CLR_PIQ31              31            /*  Pin Interrupt 31 No Invert */
#define BITP_PINT_INV_CLR_PIQ30              30            /*  Pin Interrupt 30 No Invert */
#define BITP_PINT_INV_CLR_PIQ29              29            /*  Pin Interrupt 29 No Invert */
#define BITP_PINT_INV_CLR_PIQ28              28            /*  Pin Interrupt 28 No Invert */
#define BITP_PINT_INV_CLR_PIQ27              27            /*  Pin Interrupt 27 No Invert */
#define BITP_PINT_INV_CLR_PIQ26              26            /*  Pin Interrupt 26 No Invert */
#define BITP_PINT_INV_CLR_PIQ25              25            /*  Pin Interrupt 25 No Invert */
#define BITP_PINT_INV_CLR_PIQ24              24            /*  Pin Interrupt 24 No Invert */
#define BITP_PINT_INV_CLR_PIQ23              23            /*  Pin Interrupt 23 No Invert */
#define BITP_PINT_INV_CLR_PIQ22              22            /*  Pin Interrupt 22 No Invert */
#define BITP_PINT_INV_CLR_PIQ21              21            /*  Pin Interrupt 21 No Invert */
#define BITP_PINT_INV_CLR_PIQ20              20            /*  Pin Interrupt 20 No Invert */
#define BITP_PINT_INV_CLR_PIQ19              19            /*  Pin Interrupt 19 No Invert */
#define BITP_PINT_INV_CLR_PIQ18              18            /*  Pin Interrupt 18 No Invert */
#define BITP_PINT_INV_CLR_PIQ17              17            /*  Pin Interrupt 17 No Invert */
#define BITP_PINT_INV_CLR_PIQ16              16            /*  Pin Interrupt 16 No Invert */
#define BITP_PINT_INV_CLR_PIQ15              15            /*  Pin Interrupt 15 No Invert */
#define BITP_PINT_INV_CLR_PIQ14              14            /*  Pin Interrupt 14 No Invert */
#define BITP_PINT_INV_CLR_PIQ13              13            /*  Pin Interrupt 13 No Invert */
#define BITP_PINT_INV_CLR_PIQ12              12            /*  Pin Interrupt 12 No Invert */
#define BITP_PINT_INV_CLR_PIQ11              11            /*  Pin Interrupt 11 No Invert */
#define BITP_PINT_INV_CLR_PIQ10              10            /*  Pin Interrupt 10 No Invert */
#define BITP_PINT_INV_CLR_PIQ9                9            /*  Pin Interrupt 9 No Invert */
#define BITP_PINT_INV_CLR_PIQ8                8            /*  Pin Interrupt 8 No Invert */
#define BITP_PINT_INV_CLR_PIQ7                7            /*  Pin Interrupt 7 No Invert */
#define BITP_PINT_INV_CLR_PIQ6                6            /*  Pin Interrupt 6 No Invert */
#define BITP_PINT_INV_CLR_PIQ5                5            /*  Pin Interrupt 5 No Invert */
#define BITP_PINT_INV_CLR_PIQ4                4            /*  Pin Interrupt 4 No Invert */
#define BITP_PINT_INV_CLR_PIQ3                3            /*  Pin Interrupt 3 No Invert */
#define BITP_PINT_INV_CLR_PIQ2                2            /*  Pin Interrupt 2 No Invert */
#define BITP_PINT_INV_CLR_PIQ1                1            /*  Pin Interrupt 1 No Invert */
#define BITP_PINT_INV_CLR_PIQ0                0            /*  Pin Interrupt 0 No Invert */
#define BITM_PINT_INV_CLR_PIQ31              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 No Invert */
#define BITM_PINT_INV_CLR_PIQ30              (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 No Invert */
#define BITM_PINT_INV_CLR_PIQ29              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 No Invert */
#define BITM_PINT_INV_CLR_PIQ28              (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 No Invert */
#define BITM_PINT_INV_CLR_PIQ27              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 No Invert */
#define BITM_PINT_INV_CLR_PIQ26              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 No Invert */
#define BITM_PINT_INV_CLR_PIQ25              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 No Invert */
#define BITM_PINT_INV_CLR_PIQ24              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 No Invert */
#define BITM_PINT_INV_CLR_PIQ23              (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 No Invert */
#define BITM_PINT_INV_CLR_PIQ22              (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 No Invert */
#define BITM_PINT_INV_CLR_PIQ21              (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 No Invert */
#define BITM_PINT_INV_CLR_PIQ20              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 No Invert */
#define BITM_PINT_INV_CLR_PIQ19              (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 No Invert */
#define BITM_PINT_INV_CLR_PIQ18              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 No Invert */
#define BITM_PINT_INV_CLR_PIQ17              (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 No Invert */
#define BITM_PINT_INV_CLR_PIQ16              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 No Invert */
#define BITM_PINT_INV_CLR_PIQ15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 No Invert */
#define BITM_PINT_INV_CLR_PIQ14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 No Invert */
#define BITM_PINT_INV_CLR_PIQ13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 No Invert */
#define BITM_PINT_INV_CLR_PIQ12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 No Invert */
#define BITM_PINT_INV_CLR_PIQ11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 No Invert */
#define BITM_PINT_INV_CLR_PIQ10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 No Invert */
#define BITM_PINT_INV_CLR_PIQ9               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 No Invert */
#define BITM_PINT_INV_CLR_PIQ8               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 No Invert */
#define BITM_PINT_INV_CLR_PIQ7               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 No Invert */
#define BITM_PINT_INV_CLR_PIQ6               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 No Invert */
#define BITM_PINT_INV_CLR_PIQ5               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 No Invert */
#define BITM_PINT_INV_CLR_PIQ4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 No Invert */
#define BITM_PINT_INV_CLR_PIQ3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 No Invert */
#define BITM_PINT_INV_CLR_PIQ2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 No Invert */
#define BITM_PINT_INV_CLR_PIQ1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 No Invert */
#define BITM_PINT_INV_CLR_PIQ0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 No Invert */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_PINSTATE                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_PINSTATE_PIQ31             31            /*  Pin Interrupt 31 State */
#define BITP_PINT_PINSTATE_PIQ30             30            /*  Pin Interrupt 30 State */
#define BITP_PINT_PINSTATE_PIQ29             29            /*  Pin Interrupt 29 State */
#define BITP_PINT_PINSTATE_PIQ28             28            /*  Pin Interrupt 28 State */
#define BITP_PINT_PINSTATE_PIQ27             27            /*  Pin Interrupt 27 State */
#define BITP_PINT_PINSTATE_PIQ26             26            /*  Pin Interrupt 26 State */
#define BITP_PINT_PINSTATE_PIQ25             25            /*  Pin Interrupt 25 State */
#define BITP_PINT_PINSTATE_PIQ24             24            /*  Pin Interrupt 24 State */
#define BITP_PINT_PINSTATE_PIQ23             23            /*  Pin Interrupt 23 State */
#define BITP_PINT_PINSTATE_PIQ22             22            /*  Pin Interrupt 22 State */
#define BITP_PINT_PINSTATE_PIQ21             21            /*  Pin Interrupt 21 State */
#define BITP_PINT_PINSTATE_PIQ20             20            /*  Pin Interrupt 20 State */
#define BITP_PINT_PINSTATE_PIQ19             19            /*  Pin Interrupt 19 State */
#define BITP_PINT_PINSTATE_PIQ18             18            /*  Pin Interrupt 18 State */
#define BITP_PINT_PINSTATE_PIQ17             17            /*  Pin Interrupt 17 State */
#define BITP_PINT_PINSTATE_PIQ16             16            /*  Pin Interrupt 16 State */
#define BITP_PINT_PINSTATE_PIQ15             15            /*  Pin Interrupt 15 State */
#define BITP_PINT_PINSTATE_PIQ14             14            /*  Pin Interrupt 14 State */
#define BITP_PINT_PINSTATE_PIQ13             13            /*  Pin Interrupt 13 State */
#define BITP_PINT_PINSTATE_PIQ12             12            /*  Pin Interrupt 12 State */
#define BITP_PINT_PINSTATE_PIQ11             11            /*  Pin Interrupt 11 State */
#define BITP_PINT_PINSTATE_PIQ10             10            /*  Pin Interrupt 10 State */
#define BITP_PINT_PINSTATE_PIQ9               9            /*  Pin Interrupt 9 State */
#define BITP_PINT_PINSTATE_PIQ8               8            /*  Pin Interrupt 8 State */
#define BITP_PINT_PINSTATE_PIQ7               7            /*  Pin Interrupt 7 State */
#define BITP_PINT_PINSTATE_PIQ6               6            /*  Pin Interrupt 6 State */
#define BITP_PINT_PINSTATE_PIQ5               5            /*  Pin Interrupt 5 State */
#define BITP_PINT_PINSTATE_PIQ4               4            /*  Pin Interrupt 4 State */
#define BITP_PINT_PINSTATE_PIQ3               3            /*  Pin Interrupt 3 State */
#define BITP_PINT_PINSTATE_PIQ2               2            /*  Pin Interrupt 2 State */
#define BITP_PINT_PINSTATE_PIQ1               1            /*  Pin Interrupt 1 State */
#define BITP_PINT_PINSTATE_PIQ0               0            /*  Pin Interrupt 0 State */
#define BITM_PINT_PINSTATE_PIQ31             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 State */
#define BITM_PINT_PINSTATE_PIQ30             (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 State */
#define BITM_PINT_PINSTATE_PIQ29             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 State */
#define BITM_PINT_PINSTATE_PIQ28             (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 State */
#define BITM_PINT_PINSTATE_PIQ27             (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 State */
#define BITM_PINT_PINSTATE_PIQ26             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 State */
#define BITM_PINT_PINSTATE_PIQ25             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 State */
#define BITM_PINT_PINSTATE_PIQ24             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 State */
#define BITM_PINT_PINSTATE_PIQ23             (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 State */
#define BITM_PINT_PINSTATE_PIQ22             (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 State */
#define BITM_PINT_PINSTATE_PIQ21             (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 State */
#define BITM_PINT_PINSTATE_PIQ20             (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 State */
#define BITM_PINT_PINSTATE_PIQ19             (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 State */
#define BITM_PINT_PINSTATE_PIQ18             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 State */
#define BITM_PINT_PINSTATE_PIQ17             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 State */
#define BITM_PINT_PINSTATE_PIQ16             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 State */
#define BITM_PINT_PINSTATE_PIQ15             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 State */
#define BITM_PINT_PINSTATE_PIQ14             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 State */
#define BITM_PINT_PINSTATE_PIQ13             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 State */
#define BITM_PINT_PINSTATE_PIQ12             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 State */
#define BITM_PINT_PINSTATE_PIQ11             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 State */
#define BITM_PINT_PINSTATE_PIQ10             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 State */
#define BITM_PINT_PINSTATE_PIQ9              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 State */
#define BITM_PINT_PINSTATE_PIQ8              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 State */
#define BITM_PINT_PINSTATE_PIQ7              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 State */
#define BITM_PINT_PINSTATE_PIQ6              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 State */
#define BITM_PINT_PINSTATE_PIQ5              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 State */
#define BITM_PINT_PINSTATE_PIQ4              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 State */
#define BITM_PINT_PINSTATE_PIQ3              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 State */
#define BITM_PINT_PINSTATE_PIQ2              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 State */
#define BITM_PINT_PINSTATE_PIQ1              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 State */
#define BITM_PINT_PINSTATE_PIQ0              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 State */

/* -------------------------------------------------------------------------------------------------------------------------
          PINT_LATCH                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PINT_LATCH_PIQ31                31            /*  Pin Interrupt 31 Latch */
#define BITP_PINT_LATCH_PIQ30                30            /*  Pin Interrupt 30 Latch */
#define BITP_PINT_LATCH_PIQ29                29            /*  Pin Interrupt 29 Latch */
#define BITP_PINT_LATCH_PIQ28                28            /*  Pin Interrupt 28 Latch */
#define BITP_PINT_LATCH_PIQ27                27            /*  Pin Interrupt 27 Latch */
#define BITP_PINT_LATCH_PIQ26                26            /*  Pin Interrupt 26 Latch */
#define BITP_PINT_LATCH_PIQ25                25            /*  Pin Interrupt 25 Latch */
#define BITP_PINT_LATCH_PIQ24                24            /*  Pin Interrupt 24 Latch */
#define BITP_PINT_LATCH_PIQ23                23            /*  Pin Interrupt 23 Latch */
#define BITP_PINT_LATCH_PIQ22                22            /*  Pin Interrupt 22 Latch */
#define BITP_PINT_LATCH_PIQ21                21            /*  Pin Interrupt 21 Latch */
#define BITP_PINT_LATCH_PIQ20                20            /*  Pin Interrupt 20 Latch */
#define BITP_PINT_LATCH_PIQ19                19            /*  Pin Interrupt 19 Latch */
#define BITP_PINT_LATCH_PIQ18                18            /*  Pin Interrupt 18 Latch */
#define BITP_PINT_LATCH_PIQ17                17            /*  Pin Interrupt 17 Latch */
#define BITP_PINT_LATCH_PIQ16                16            /*  Pin Interrupt 16 Latch */
#define BITP_PINT_LATCH_PIQ15                15            /*  Pin Interrupt 15 Latch */
#define BITP_PINT_LATCH_PIQ14                14            /*  Pin Interrupt 14 Latch */
#define BITP_PINT_LATCH_PIQ13                13            /*  Pin Interrupt 13 Latch */
#define BITP_PINT_LATCH_PIQ12                12            /*  Pin Interrupt 12 Latch */
#define BITP_PINT_LATCH_PIQ11                11            /*  Pin Interrupt 11 Latch */
#define BITP_PINT_LATCH_PIQ10                10            /*  Pin Interrupt 10 Latch */
#define BITP_PINT_LATCH_PIQ9                  9            /*  Pin Interrupt 9 Latch */
#define BITP_PINT_LATCH_PIQ8                  8            /*  Pin Interrupt 8 Latch */
#define BITP_PINT_LATCH_PIQ7                  7            /*  Pin Interrupt 7 Latch */
#define BITP_PINT_LATCH_PIQ6                  6            /*  Pin Interrupt 6 Latch */
#define BITP_PINT_LATCH_PIQ5                  5            /*  Pin Interrupt 5 Latch */
#define BITP_PINT_LATCH_PIQ4                  4            /*  Pin Interrupt 4 Latch */
#define BITP_PINT_LATCH_PIQ3                  3            /*  Pin Interrupt 3 Latch */
#define BITP_PINT_LATCH_PIQ2                  2            /*  Pin Interrupt 2 Latch */
#define BITP_PINT_LATCH_PIQ1                  1            /*  Pin Interrupt 1 Latch */
#define BITP_PINT_LATCH_PIQ0                  0            /*  Pin Interrupt 0 Latch */
#define BITM_PINT_LATCH_PIQ31                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pin Interrupt 31 Latch */
#define BITM_PINT_LATCH_PIQ30                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pin Interrupt 30 Latch */
#define BITM_PINT_LATCH_PIQ29                (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Interrupt 29 Latch */
#define BITM_PINT_LATCH_PIQ28                (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Interrupt 28 Latch */
#define BITM_PINT_LATCH_PIQ27                (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Pin Interrupt 27 Latch */
#define BITM_PINT_LATCH_PIQ26                (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Pin Interrupt 26 Latch */
#define BITM_PINT_LATCH_PIQ25                (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pin Interrupt 25 Latch */
#define BITM_PINT_LATCH_PIQ24                (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Pin Interrupt 24 Latch */
#define BITM_PINT_LATCH_PIQ23                (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Pin Interrupt 23 Latch */
#define BITM_PINT_LATCH_PIQ22                (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pin Interrupt 22 Latch */
#define BITM_PINT_LATCH_PIQ21                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Pin Interrupt 21 Latch */
#define BITM_PINT_LATCH_PIQ20                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Pin Interrupt 20 Latch */
#define BITM_PINT_LATCH_PIQ19                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Interrupt 19 Latch */
#define BITM_PINT_LATCH_PIQ18                (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Interrupt 18 Latch */
#define BITM_PINT_LATCH_PIQ17                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Interrupt 17 Latch */
#define BITM_PINT_LATCH_PIQ16                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Interrupt 16 Latch */
#define BITM_PINT_LATCH_PIQ15                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Interrupt 15 Latch */
#define BITM_PINT_LATCH_PIQ14                (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Interrupt 14 Latch */
#define BITM_PINT_LATCH_PIQ13                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Interrupt 13 Latch */
#define BITM_PINT_LATCH_PIQ12                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Interrupt 12 Latch */
#define BITM_PINT_LATCH_PIQ11                (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Interrupt 11 Latch */
#define BITM_PINT_LATCH_PIQ10                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Interrupt 10 Latch */
#define BITM_PINT_LATCH_PIQ9                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Interrupt 9 Latch */
#define BITM_PINT_LATCH_PIQ8                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Interrupt 8 Latch */
#define BITM_PINT_LATCH_PIQ7                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Interrupt 7 Latch */
#define BITM_PINT_LATCH_PIQ6                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Interrupt 6 Latch */
#define BITM_PINT_LATCH_PIQ5                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Interrupt 5 Latch */
#define BITM_PINT_LATCH_PIQ4                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Interrupt 4 Latch */
#define BITM_PINT_LATCH_PIQ3                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Interrupt 3 Latch */
#define BITM_PINT_LATCH_PIQ2                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Interrupt 2 Latch */
#define BITM_PINT_LATCH_PIQ1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Interrupt 1 Latch */
#define BITM_PINT_LATCH_PIQ0                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Interrupt 0 Latch */


/* ============================================================================================================================
        Watchdog Timer Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        WDOG0
   ============================================================================================================================ */
#define REG_WDOG0_CTL                        0x31008000            /*  WDOG0 Control Register */
#define REG_WDOG0_CNT                        0x31008004            /*  WDOG0 Count Register */
#define REG_WDOG0_STAT                       0x31008008            /*  WDOG0 Watchdog Timer Status Register */
#define REG_WDOG0_WIN                        0x3100800C            /*  WDOG0 Watchdog Timer Window Register */

/* ============================================================================================================================
        WDOG1
   ============================================================================================================================ */
#define REG_WDOG1_CTL                        0x31008800            /*  WDOG1 Control Register */
#define REG_WDOG1_CNT                        0x31008804            /*  WDOG1 Count Register */
#define REG_WDOG1_STAT                       0x31008808            /*  WDOG1 Watchdog Timer Status Register */
#define REG_WDOG1_WIN                        0x3100880C            /*  WDOG1 Watchdog Timer Window Register */

/* ============================================================================================================================
        WDOG2
   ============================================================================================================================ */
#define REG_WDOG2_CTL                        0x31009000            /*  WDOG2 Control Register */
#define REG_WDOG2_CNT                        0x31009004            /*  WDOG2 Count Register */
#define REG_WDOG2_STAT                       0x31009008            /*  WDOG2 Watchdog Timer Status Register */
#define REG_WDOG2_WIN                        0x3100900C            /*  WDOG2 Watchdog Timer Window Register */

/* ============================================================================================================================
        WDOG Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          WDOG_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_WDOG_CTL_WDWE                   16            /*  Watchdog Window Event */
#define BITP_WDOG_CTL_WDRO                   15            /*  Watch Dog Rollover */
#define BITP_WDOG_CTL_WDEN                    4            /*  Watch Dog Enable */
#define BITM_WDOG_CTL_WDWE                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Watchdog Window Event */
#define BITM_WDOG_CTL_WDRO                   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Watch Dog Rollover */
#define BITM_WDOG_CTL_WDEN                   (_ADI_MSK_3(0x00000FF0,0x00000FF0UL, uint32_t  ))    /*  Watch Dog Enable */
#define ENUM_WDOG_CTL_WINEVT                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  WDWE: Window Event has occurred */
#define ENUM_WDOG_CTL_WDTEXP                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  WDRO: WDT Has Expired */

/* -------------------------------------------------------------------------------------------------------------------------
          WDOG_CNT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_WDOG_CNT_VALUE                   0            /*  Count Value */
#define BITM_WDOG_CNT_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          WDOG_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_WDOG_STAT_VALUE                  0            /*  Current Count Value (Status) */
#define BITM_WDOG_STAT_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Current Count Value (Status) */

/* -------------------------------------------------------------------------------------------------------------------------
          WDOG_WIN                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_WDOG_WIN_VALUE                   0            /*  Window Value */
#define BITM_WDOG_WIN_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Window Value */


/* ============================================================================================================================
        CNT
   ============================================================================================================================ */

/* ============================================================================================================================
        CNT0
   ============================================================================================================================ */
#define REG_CNT0_CFG                         0x3100B000            /*  CNT0 Configuration Register */
#define REG_CNT0_IMSK                        0x3100B004            /*  CNT0 Interrupt Mask Register */
#define REG_CNT0_STAT                        0x3100B008            /*  CNT0 Status Register */
#define REG_CNT0_CMD                         0x3100B00C            /*  CNT0 Command Register */
#define REG_CNT0_DEBNCE                      0x3100B010            /*  CNT0 Debounce Register */
#define REG_CNT0_CNTR                        0x3100B014            /*  CNT0 Counter Register */
#define REG_CNT0_MAX                         0x3100B018            /*  CNT0 Maximum Count Register */
#define REG_CNT0_MIN                         0x3100B01C            /*  CNT0 Minimum Count Register */

/* ============================================================================================================================
        CNT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CNT_CFG                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_CFG_INPDIS                  15            /*  CUD and CDG Pin Input Disable */
#define BITP_CNT_CFG_BNDMODE                 12            /*  Boundary Register Mode */
#define BITP_CNT_CFG_ZMZC                    11            /*  CZM Zeros Counter Enable */
#define BITP_CNT_CFG_CNTMODE                  8            /*  Counter Operating Mode */
#define BITP_CNT_CFG_CZMINV                   6            /*  CZM Pin Polarity Invert */
#define BITP_CNT_CFG_CUDINV                   5            /*  CUD Pin Polarity Invert */
#define BITP_CNT_CFG_CDGINV                   4            /*  CDG Pin Polarity Invert */
#define BITP_CNT_CFG_DEBEN                    1            /*  Debounce Enable */
#define BITP_CNT_CFG_EN                       0            /*  Counter Enable */
#define BITM_CNT_CFG_INPDIS                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  CUD and CDG Pin Input Disable */
#define BITM_CNT_CFG_BNDMODE                 (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Boundary Register Mode */
#define BITM_CNT_CFG_ZMZC                    (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  CZM Zeros Counter Enable */
#define BITM_CNT_CFG_CNTMODE                 (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  Counter Operating Mode */
#define BITM_CNT_CFG_CZMINV                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  CZM Pin Polarity Invert */
#define BITM_CNT_CFG_CUDINV                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CUD Pin Polarity Invert */
#define BITM_CNT_CFG_CDGINV                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CDG Pin Polarity Invert */
#define BITM_CNT_CFG_DEBEN                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Debounce Enable */
#define BITM_CNT_CFG_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Counter Enable */
#define ENUM_CNT_CFG_NO_INPDIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  INPDIS: Enable */
#define ENUM_CNT_CFG_INPDIS                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  INPDIS: Pin Input Disable */
#define ENUM_CNT_CFG_BNDMODE_BNDCOMP         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BNDMODE: BND_COMP. */
#define ENUM_CNT_CFG_BNDMODE_BINENC          (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  BNDMODE: BND_ZERO. */
#define ENUM_CNT_CFG_BNDMODE_BNDCAPT         (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  BNDMODE: BND_CAPT. */
#define ENUM_CNT_CFG_BNDMODE_BNDAEXT         (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  BNDMODE: BND_AEXT. */
#define ENUM_CNT_CFG_ZMZC_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ZMZC: Disable */
#define ENUM_CNT_CFG_ZMZC_EN                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  ZMZC: Enable */
#define ENUM_CNT_CFG_CNTMODE_QUADENC         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CNTMODE: QUAD_ENC. */
#define ENUM_CNT_CFG_CNTMODE_BINENC          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CNTMODE: BIN_ENC. */
#define ENUM_CNT_CFG_CNTMODE_UDCNT           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  CNTMODE: UD_CNT. */
#define ENUM_CNT_CFG_CNTMODE_DIRCNT          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  CNTMODE: DIR_CNT. */
#define ENUM_CNT_CFG_CNTMODE_DIRTMR          (_ADI_MSK_3(0x00000500,0x00000500UL, uint32_t  ))    /*  CNTMODE: DIR_TMR. */
#define ENUM_CNT_CFG_CZMINV_AHI              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CZMINV: Active High, Rising Edge */
#define ENUM_CNT_CFG_CZMINV_ALO              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  CZMINV: Active Low, Falling Edge */
#define ENUM_CNT_CFG_CUDINV_AHI              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CUDINV: Active High, Rising Edge */
#define ENUM_CNT_CFG_CUDINV_ALO              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CUDINV: Active Low, Falling Edge */
#define ENUM_CNT_CFG_CDGINV_AHI              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CDGINV: Active High, Rising Edge */
#define ENUM_CNT_CFG_CDGINV_ALO              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CDGINV: Active Low, Falling Edge */
#define ENUM_CNT_CFG_DEBDIS                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DEBEN: Disable */
#define ENUM_CNT_CFG_DEBEN                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DEBEN: Enable */
#define ENUM_CNT_CFG_CNTDIS                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Counter Disable */
#define ENUM_CNT_CFG_CNTEN                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Counter Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_IMSK                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_IMSK_CZMZ                   10            /*  Counter Zeroed by Zero Marker Interrupt Enable */
#define BITP_CNT_IMSK_CZME                    9            /*  Zero Marker Error Interrupt Enable */
#define BITP_CNT_IMSK_CZM                     8            /*  CZM Pin/Pushbutton Interrupt Enable */
#define BITP_CNT_IMSK_CZERO                   7            /*  CNT_CNTR Counts To Zero Interrupt Enable */
#define BITP_CNT_IMSK_COV15                   6            /*  Bit 15 Overflow Interrupt Enable */
#define BITP_CNT_IMSK_COV31                   5            /*  Bit 31 Overflow Interrupt Enable */
#define BITP_CNT_IMSK_MAXC                    4            /*  Max Count Interrupt Enable */
#define BITP_CNT_IMSK_MINC                    3            /*  Min Count Interrupt Enable */
#define BITP_CNT_IMSK_DC                      2            /*  Downcount Interrupt Enable */
#define BITP_CNT_IMSK_UC                      1            /*  Upcount Interrupt Enable */
#define BITP_CNT_IMSK_IC                      0            /*  Illegal Gray/Binary Code Interrupt Enable */
#define BITM_CNT_IMSK_CZMZ                   (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Counter Zeroed by Zero Marker Interrupt Enable */
#define BITM_CNT_IMSK_CZME                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Zero Marker Error Interrupt Enable */
#define BITM_CNT_IMSK_CZM                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CZM Pin/Pushbutton Interrupt Enable */
#define BITM_CNT_IMSK_CZERO                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CNT_CNTR Counts To Zero Interrupt Enable */
#define BITM_CNT_IMSK_COV15                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Bit 15 Overflow Interrupt Enable */
#define BITM_CNT_IMSK_COV31                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bit 31 Overflow Interrupt Enable */
#define BITM_CNT_IMSK_MAXC                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Max Count Interrupt Enable */
#define BITM_CNT_IMSK_MINC                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Min Count Interrupt Enable */
#define BITM_CNT_IMSK_DC                     (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Downcount Interrupt Enable */
#define BITM_CNT_IMSK_UC                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Upcount Interrupt Enable */
#define BITM_CNT_IMSK_IC                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Illegal Gray/Binary Code Interrupt Enable */
#define ENUM_CNT_IMSK_CZMZ_MSK               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CZMZ: Mask Interrupt */
#define ENUM_CNT_IMSK_CZMZ_UMSK              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  CZMZ: Unmask Interrupt */
#define ENUM_CNT_IMSK_CZME_MSK               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CZME: Mask Interrupt */
#define ENUM_CNT_IMSK_CZME_UMSK              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  CZME: Unmask Interrupt */
#define ENUM_CNT_IMSK_CZM_MSK                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CZM: Mask Interrupt */
#define ENUM_CNT_IMSK_CZM_UMSK               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CZM: Unmask Interrupt */
#define ENUM_CNT_IMSK_CZERO_MSK              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CZERO: Mask Interrupt */
#define ENUM_CNT_IMSK_CZERO_UMSK             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CZERO: Unmask Interrupt */
#define ENUM_CNT_IMSK_COV15_MSK              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  COV15: Mask Interrupt */
#define ENUM_CNT_IMSK_COV15_UMSK             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  COV15: Unmask Interrupt */
#define ENUM_CNT_IMSK_COV31_MSK              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  COV31: Mask Interrupt */
#define ENUM_CNT_IMSK_COV31_UMSK             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  COV31: Unmask Interrupt */
#define ENUM_CNT_IMSK_MAXC_MSK               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MAXC: Mask Interrupt */
#define ENUM_CNT_IMSK_MAXC_UMSK              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  MAXC: Unmask Interrupt */
#define ENUM_CNT_IMSK_MINC_MSK               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MINC: Mask Interrupt */
#define ENUM_CNT_IMSK_MINC_UMSK              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  MINC: Unmask Interrupt */
#define ENUM_CNT_IMSK_DC_MSK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DC: Mask Interrupt */
#define ENUM_CNT_IMSK_DC_UMSK                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  DC: Unmask Interrupt */
#define ENUM_CNT_IMSK_UC_MSK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  UC: Mask Interrupt */
#define ENUM_CNT_IMSK_UC_UMSK                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  UC: Unmask Interrupt */
#define ENUM_CNT_IMSK_IC_MSK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IC: Mask Interrupt */
#define ENUM_CNT_IMSK_IC_UMSK                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  IC: Unmask Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_STAT_CZMZ                   10            /*  Counter Zeroed By Zero Marker Interrupt */
#define BITP_CNT_STAT_CZME                    9            /*  Zero Marker Error Interrupt */
#define BITP_CNT_STAT_CZM                     8            /*  CZM Pin/Pushbutton Interrupt */
#define BITP_CNT_STAT_CZERO                   7            /*  CNT_CNTR Counts To Zero Interrupt */
#define BITP_CNT_STAT_COV15                   6            /*  Bit 15 Overflow Interrupt */
#define BITP_CNT_STAT_COV31                   5            /*  Bit 31 Overflow Interrupt */
#define BITP_CNT_STAT_MAXC                    4            /*  Max Count Interrupt */
#define BITP_CNT_STAT_MINC                    3            /*  Min Count Interrupt */
#define BITP_CNT_STAT_DC                      2            /*  Down Count Interrupt */
#define BITP_CNT_STAT_UC                      1            /*  Up Count Interrupt */
#define BITP_CNT_STAT_IC                      0            /*  Illegal Gray/Binary Code Interrupt */
#define BITM_CNT_STAT_CZMZ                   (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Counter Zeroed By Zero Marker Interrupt */
#define BITM_CNT_STAT_CZME                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Zero Marker Error Interrupt */
#define BITM_CNT_STAT_CZM                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CZM Pin/Pushbutton Interrupt */
#define BITM_CNT_STAT_CZERO                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CNT_CNTR Counts To Zero Interrupt */
#define BITM_CNT_STAT_COV15                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Bit 15 Overflow Interrupt */
#define BITM_CNT_STAT_COV31                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bit 31 Overflow Interrupt */
#define BITM_CNT_STAT_MAXC                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Max Count Interrupt */
#define BITM_CNT_STAT_MINC                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Min Count Interrupt */
#define BITM_CNT_STAT_DC                     (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Down Count Interrupt */
#define BITM_CNT_STAT_UC                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Up Count Interrupt */
#define BITM_CNT_STAT_IC                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Illegal Gray/Binary Code Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_CMD                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_CMD_W1ZMONCE                12            /*  Write 1 Zero Marker Clear Once Enable */
#define BITP_CNT_CMD_W1LMAXMIN               10            /*  Write 1 MAX Copy from MIN */
#define BITP_CNT_CMD_W1LMAXCNT                9            /*  Write 1 MAX Capture from CNTR */
#define BITP_CNT_CMD_W1LMAXZERO               8            /*  Write 1 MAX to Zero */
#define BITP_CNT_CMD_W1LMINMAX                7            /*  Write 1 MIN Copy from MAX */
#define BITP_CNT_CMD_W1LMINCNT                5            /*  Write 1 MIN Capture from CNTR */
#define BITP_CNT_CMD_W1LMINZERO               4            /*  Write 1 MIN to Zero */
#define BITP_CNT_CMD_W1LCNTMAX                3            /*  Write 1 CNTR Load from MAX */
#define BITP_CNT_CMD_W1LCNTMIN                2            /*  Write 1 CNTR Load from MIN */
#define BITP_CNT_CMD_W1LCNTZERO               0            /*  Write 1 CNTR to Zero */
#define BITM_CNT_CMD_W1ZMONCE                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Write 1 Zero Marker Clear Once Enable */
#define BITM_CNT_CMD_W1LMAXMIN               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Write 1 MAX Copy from MIN */
#define BITM_CNT_CMD_W1LMAXCNT               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Write 1 MAX Capture from CNTR */
#define BITM_CNT_CMD_W1LMAXZERO              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Write 1 MAX to Zero */
#define BITM_CNT_CMD_W1LMINMAX               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Write 1 MIN Copy from MAX */
#define BITM_CNT_CMD_W1LMINCNT               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Write 1 MIN Capture from CNTR */
#define BITM_CNT_CMD_W1LMINZERO              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Write 1 MIN to Zero */
#define BITM_CNT_CMD_W1LCNTMAX               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Write 1 CNTR Load from MAX */
#define BITM_CNT_CMD_W1LCNTMIN               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Write 1 CNTR Load from MIN */
#define BITM_CNT_CMD_W1LCNTZERO              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Write 1 CNTR to Zero */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_DEBNCE                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_DEBNCE_DPRESCALE             0            /*  Debounce Prescale */
#define BITM_CNT_DEBNCE_DPRESCALE            (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Debounce Prescale */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_CNTR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_CNTR_VALUE                   0            /*  CNTR Value */
#define BITM_CNT_CNTR_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  CNTR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_MAX                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_MAX_VALUE                    0            /*  MAX Value */
#define BITM_CNT_MAX_VALUE                   (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  MAX Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CNT_MIN                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CNT_MIN_VALUE                    0            /*  MIN Value */
#define BITM_CNT_MIN_VALUE                   (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  MIN Value */


/* ============================================================================================================================
        OTP Memory Controller
   ============================================================================================================================ */

/* ============================================================================================================================
        OTPC0
   ============================================================================================================================ */
#define REG_OTPC0_CTL                        0x31011000            /*  OTPC0 OTP Control Register */
#define REG_OTPC0_STAT                       0x31011004            /*  OTPC0 OTP Status Register */
#define REG_OTPC0_TIMING                     0x31011008            /*  OTPC0 OTP Read Timing Register */
#define REG_OTPC0_BOOT_SR3                   0x31011018            /*  OTPC0 BOOT SR3 */
#define REG_OTPC0_BOOT_RR0                   0x3101101C            /*  OTPC0 BOOT RR0 */
#define REG_OTPC0_BOOT_RR1                   0x31011020            /*  OTPC0 BOOT RR1 */
#define REG_OTPC0_BOOT_RR2                   0x31011024            /*  OTPC0 BOOT RR2 */
#define REG_OTPC0_SECU_STATE                 0x3101102C            /*  OTPC0 OTP Security State Register */
#define REG_OTPC0_DAP_DR                     0x31011074            /*  OTPC0 OTP Data Register */
#define REG_OTPC0_DAP_OAR                    0x31011078            /*  OTPC0 OTP Address register */
#define REG_OTPC0_PMC_INST                   0x3101107C            /*  OTPC0 PMC Instruction Register */
#define REG_OTPC0_PMC_CTL                    0x31011080            /*  OTPC0 PMC Control Register */
#define REG_OTPC0_PMC_STAT                   0x31011084            /*  OTPC0 PMC Status Register */
#define REG_OTPC0_PMC_MODE0                  0x31011088            /*  OTPC0 PMC Mode 0 Register */
#define REG_OTPC0_PMC_MODE1                  0x3101108C            /*  OTPC0 PMC Mode 1 Register */
#define REG_OTPC0_PMC_MODE2                  0x31011090            /*  OTPC0 PMC Mode 2 Register */
#define REG_OTPC0_PMC_MODE3                  0x31011094            /*  OTPC0 PMC Mode 3 (PROGRAM) Register */
#define REG_OTPC0_PMC_PGM_TMG0               0x31011098            /*  OTPC0 PMC Program Timing Control 0 Register */
#define REG_OTPC0_PMC_PGM_TMG1               0x3101109C            /*  OTPC0 PMC Program Timing Control 1 Register */
#define REG_OTPC0_PMC_PGM_TMG2               0x310110A0            /*  OTPC0 PMC Program Timing Control 2 Register */
#define REG_OTPC0_PMC_DAP_ADDR               0x310110A4            /*  OTPC0 PMC Target DAP ID Address Register */
#define REG_OTPC0_PMC_PGM_CQ                 0x310110A8            /*  OTPC0 PMC FSM Program Control Register */
#define REG_OTPC0_DAP_RFMR                   0x310110B8            /*  OTPC0 DAP Read Mode Select Register */
#define REG_OTPC0_DAP_VRMR                   0x310110BC            /*  OTPC0 DAP Read Voltage Level Register */
#define REG_OTPC0_DAP_OVLR                   0x310110C0            /*  OTPC0 DAP Programming Voltage Level Register */
#define REG_OTPC0_DAP_IPCR                   0x310110C4            /*  OTPC0 DAP IPS Test Mode Control Register */
#define REG_OTPC0_DAP_ORCR                   0x310110CC            /*  OTPC0 DAP OTP Test mode control register */
#define REG_OTPC0_DAP_ODCR                   0x310110D0            /*  OTPC0 DAP Read Timing Control Register */
#define REG_OTPC0_DAP_IPCR2                  0x310110D4            /*  OTPC0 DAP IPS Band Gap Control Register */
#define REG_OTPC0_DAP_OCER                   0x310110D8            /*  OTPC0 DAP PD and SEL Control Register */
#define REG_OTPC0_DAP_DPCR                   0x310110DC            /*  OTPC0 DAP Data Path Control Register */
#define REG_OTPC0_DAP_DPCR2                  0x310110E0            /*  OTPC0 DAP Data Path (Multi-Bit Programming) Control Register */

/* ============================================================================================================================
        OTPC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_CTL_PD                      1            /*  Pull-Down Reference Disable */
#define BITP_OTPC_CTL_READMODE                0            /*  Read Mode Select. */
#define BITM_OTPC_CTL_PD                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pull-Down Reference Disable */
#define BITM_OTPC_CTL_READMODE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Read Mode Select. */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_STAT_ADDRERR               13            /*  OTP Address Error */
#define BITM_OTPC_STAT_ADDRERR               (_ADI_MSK_3(0x00006000,0x00006000UL, uint32_t  ))    /*  OTP Address Error */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_TIMING                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_TIMING_HT                   4            /*  Read pulse high timing (HT+1 Cycles) */
#define BITP_OTPC_TIMING_LT                   0            /*  Read pulse low timing (LT+1 Cycles) */
#define BITM_OTPC_TIMING_HT                  (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Read pulse high timing (HT+1 Cycles) */
#define BITM_OTPC_TIMING_LT                  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Read pulse low timing (LT+1 Cycles) */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_BOOT_RR2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_BOOT_RR2_MLBPADCAL         10            /*  MLB Pad Calibration */
#define BITM_OTPC_BOOT_RR2_MLBPADCAL         (_ADI_MSK_3(0x7FFFFC00,0x7FFFFC00UL, uint32_t  ))    /*  MLB Pad Calibration */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_SECU_STATE                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_SECU_STATE_PARTLOCK         0            /*  Part Locked */
#define BITM_OTPC_SECU_STATE_PARTLOCK        (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Part Locked */
#define ENUM_OTPC_SECU_STATE_OPEN            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PARTLOCK: OPEN part */
#define ENUM_OTPC_SECU_STATE_LOCKED          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  PARTLOCK: Locked part */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_DR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_DR_DATA                 0            /*  DATA to be Programmed. */
#define BITM_OTPC_DAP_DR_DATA                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  DATA to be Programmed. */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_OAR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_OAR_ADDR                0            /*  System Address for OTP */
#define BITM_OTPC_DAP_OAR_ADDR               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  System Address for OTP */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_INST                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_INST_VALUE              0            /*  Instruction for PMC */
#define BITM_OTPC_PMC_INST_VALUE             (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Instruction for PMC */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_CTL_FSMCTL              0            /*  Set PMC to BOOT or BIST or PROG */
#define BITM_OTPC_PMC_CTL_FSMCTL             (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Set PMC to BOOT or BIST or PROG */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_STAT_VALUE              0            /*  PMC status register. Refer to the SHF module specification for details. */
#define BITM_OTPC_PMC_STAT_VALUE             (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  PMC status register. Refer to the SHF module specification for details. */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_MODE0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_MODE0_IPSOSCEN         15            /*  VPP Enable */
#define BITP_OTPC_PMC_MODE0_VRRE             14            /*  VRR Enable */
#define BITP_OTPC_PMC_MODE0_VRRS             12            /*  VRR Temperature Slop Setting */
#define BITP_OTPC_PMC_MODE0_VRRL              8            /*  VRR Level */
#define BITP_OTPC_PMC_MODE0_LDCPEN            7            /*  Low Drive Mode */
#define BITP_OTPC_PMC_MODE0_ORED              5            /*  Redundant Mode */
#define BITP_OTPC_PMC_MODE0_IREF              0            /*  Read Reference Control */
#define BITM_OTPC_PMC_MODE0_IPSOSCEN         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  VPP Enable */
#define BITM_OTPC_PMC_MODE0_VRRE             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VRR Enable */
#define BITM_OTPC_PMC_MODE0_VRRS             (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  VRR Temperature Slop Setting */
#define BITM_OTPC_PMC_MODE0_VRRL             (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  VRR Level */
#define BITM_OTPC_PMC_MODE0_LDCPEN           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Low Drive Mode */
#define BITM_OTPC_PMC_MODE0_ORED             (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Redundant Mode */
#define BITM_OTPC_PMC_MODE0_IREF             (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Read Reference Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_MODE1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_MODE1_IPSOSCEN         15            /*  Program Enable */
#define BITP_OTPC_PMC_MODE1_VRRE             14            /*  VRR Enable */
#define BITP_OTPC_PMC_MODE1_VRRS             12            /*  VRR Temperature Slop Setting */
#define BITP_OTPC_PMC_MODE1_VRRL              8            /*  VRR Level */
#define BITP_OTPC_PMC_MODE1_LDCPEN            7            /*  Low Drive Mode */
#define BITP_OTPC_PMC_MODE1_ORED              5            /*  Redundant Mode */
#define BITP_OTPC_PMC_MODE1_IREF              0            /*  Read Reference Control */
#define BITM_OTPC_PMC_MODE1_IPSOSCEN         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Program Enable */
#define BITM_OTPC_PMC_MODE1_VRRE             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VRR Enable */
#define BITM_OTPC_PMC_MODE1_VRRS             (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  VRR Temperature Slop Setting */
#define BITM_OTPC_PMC_MODE1_VRRL             (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  VRR Level */
#define BITM_OTPC_PMC_MODE1_LDCPEN           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Low Drive Mode */
#define BITM_OTPC_PMC_MODE1_ORED             (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Redundant Mode */
#define BITM_OTPC_PMC_MODE1_IREF             (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Read Reference Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_MODE2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_MODE2_IPSOSCEN         15            /*  Program Enable */
#define BITP_OTPC_PMC_MODE2_VRRE             14            /*  VRR Enable */
#define BITP_OTPC_PMC_MODE2_VRRS             12            /*  VRR Temperature Slop Setting */
#define BITP_OTPC_PMC_MODE2_VRRL              8            /*  VRR Level */
#define BITP_OTPC_PMC_MODE2_LDCPEN            7            /*  Low Drive Mode */
#define BITP_OTPC_PMC_MODE2_ORED              5            /*  Redundant Mode */
#define BITP_OTPC_PMC_MODE2_IREF              0            /*  Read Reference Control */
#define BITM_OTPC_PMC_MODE2_IPSOSCEN         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Program Enable */
#define BITM_OTPC_PMC_MODE2_VRRE             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VRR Enable */
#define BITM_OTPC_PMC_MODE2_VRRS             (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  VRR Temperature Slop Setting */
#define BITM_OTPC_PMC_MODE2_VRRL             (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  VRR Level */
#define BITM_OTPC_PMC_MODE2_LDCPEN           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Low Drive Mode */
#define BITM_OTPC_PMC_MODE2_ORED             (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Redundant Mode */
#define BITM_OTPC_PMC_MODE2_IREF             (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Read Reference Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_MODE3                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_MODE3_IPSOSCEN         15            /*  Program Enable */
#define BITP_OTPC_PMC_MODE3_VRRE             14            /*  VRR Enable */
#define BITP_OTPC_PMC_MODE3_VRRS             12            /*  VRR Temperature Slop Setting */
#define BITP_OTPC_PMC_MODE3_VRRL              8            /*  VRR Level */
#define BITP_OTPC_PMC_MODE3_LDCPEN            7            /*  Low Drive Mode */
#define BITP_OTPC_PMC_MODE3_ORED              5            /*  Redundant Mode */
#define BITP_OTPC_PMC_MODE3_IREF              0            /*  Read Reference Control */
#define BITM_OTPC_PMC_MODE3_IPSOSCEN         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Program Enable */
#define BITM_OTPC_PMC_MODE3_VRRE             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VRR Enable */
#define BITM_OTPC_PMC_MODE3_VRRS             (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  VRR Temperature Slop Setting */
#define BITM_OTPC_PMC_MODE3_VRRL             (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  VRR Level */
#define BITM_OTPC_PMC_MODE3_LDCPEN           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Low Drive Mode */
#define BITM_OTPC_PMC_MODE3_ORED             (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Redundant Mode */
#define BITM_OTPC_PMC_MODE3_IREF             (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Read Reference Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_PGM_TMG0                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_PGM_TMG0_LONGRD         4            /*  Long Read Pulse Width Control */
#define BITP_OTPC_PMC_PGM_TMG0_SHRTRD         0            /*  Short Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG0_LONGRD        (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Long Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG0_SHRTRD        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Short Read Pulse Width Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_PGM_TMG1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_PGM_TMG1_PGMREC         6            /*  Programming Recovery Control */
#define BITP_OTPC_PMC_PGM_TMG1_RDREC          5            /*  Read Recovery Control */
#define BITP_OTPC_PMC_PGM_TMG1_RPWCOMP        4            /*  Compare Read Pulse Width Control */
#define BITP_OTPC_PMC_PGM_TMG1_POSTSOAK       3            /*  Post Soak Read Pulse Width Control */
#define BITP_OTPC_PMC_PGM_TMG1_POSTPGM        2            /*  Post Programming Read Pulse Width Control */
#define BITP_OTPC_PMC_PGM_TMG1_PREPGM         1            /*  Pre Programming Read Pulse Width Control */
#define BITP_OTPC_PMC_PGM_TMG1_BRPCHK         0            /*  BRP Check Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG1_PGMREC        (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  Programming Recovery Control */
#define BITM_OTPC_PMC_PGM_TMG1_RDREC         (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Read Recovery Control */
#define BITM_OTPC_PMC_PGM_TMG1_RPWCOMP       (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Compare Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG1_POSTSOAK      (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Post Soak Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG1_POSTPGM       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Post Programming Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG1_PREPGM        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pre Programming Read Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG1_BRPCHK        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  BRP Check Read Pulse Width Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_PGM_TMG2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_PGM_TMG2_MODESET        6            /*  Mode Setting Timing Control */
#define BITP_OTPC_PMC_PGM_TMG2_SOAK           3            /*  Soak Pulse Width Control */
#define BITP_OTPC_PMC_PGM_TMG2_PRG            0            /*  Program Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG2_MODESET       (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  Mode Setting Timing Control */
#define BITM_OTPC_PMC_PGM_TMG2_SOAK          (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  Soak Pulse Width Control */
#define BITM_OTPC_PMC_PGM_TMG2_PRG           (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Program Pulse Width Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_DAP_ADDR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_DAP_ADDR_VALUE          0            /*  Target DAP Address */
#define BITM_OTPC_PMC_DAP_ADDR_VALUE         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Target DAP Address */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_PMC_PGM_CQ                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_PMC_PGM_CQ_UWE             15            /*  Use WE */
#define BITP_OTPC_PMC_PGM_CQ_LIMIT           10            /*  Soak Cycle Limit */
#define BITP_OTPC_PMC_PGM_CQ_EXIT             5            /*  Exit code */
#define BITP_OTPC_PMC_PGM_CQ_ENTRY            0            /*  Entry code */
#define BITM_OTPC_PMC_PGM_CQ_UWE             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Use WE */
#define BITM_OTPC_PMC_PGM_CQ_LIMIT           (_ADI_MSK_3(0x00003C00,0x00003C00UL, uint32_t  ))    /*  Soak Cycle Limit */
#define BITM_OTPC_PMC_PGM_CQ_EXIT            (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Exit code */
#define BITM_OTPC_PMC_PGM_CQ_ENTRY           (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Entry code */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_RFMR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_RFMR_MRR4               7            /*  LD_CP_EN - Low drive charge pump mode */
#define BITP_OTPC_DAP_RFMR_MR5                6            /*  REDUND[1] */
#define BITP_OTPC_DAP_RFMR_MR4                5            /*  REDUND[0] */
#define BITP_OTPC_DAP_RFMR_MR15               4            /*  ILEAK_4 - Reference Current level */
#define BITP_OTPC_DAP_RFMR_MR14               3            /*  ILEAK_3 - Reference Current level */
#define BITP_OTPC_DAP_RFMR_MR13               2            /*  ILEAK_2 - Reference Current level */
#define BITP_OTPC_DAP_RFMR_MR12               1            /*  ILEAK_1 - Reference Current level */
#define BITP_OTPC_DAP_RFMR_MR11               0            /*  ILEAK_0 - Reference Current level */
#define BITM_OTPC_DAP_RFMR_MRR4              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  LD_CP_EN - Low drive charge pump mode */
#define BITM_OTPC_DAP_RFMR_MR5               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  REDUND[1] */
#define BITM_OTPC_DAP_RFMR_MR4               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  REDUND[0] */
#define BITM_OTPC_DAP_RFMR_MR15              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ILEAK_4 - Reference Current level */
#define BITM_OTPC_DAP_RFMR_MR14              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ILEAK_3 - Reference Current level */
#define BITM_OTPC_DAP_RFMR_MR13              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  ILEAK_2 - Reference Current level */
#define BITM_OTPC_DAP_RFMR_MR12              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  ILEAK_1 - Reference Current level */
#define BITM_OTPC_DAP_RFMR_MR11              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ILEAK_0 - Reference Current level */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_VRMR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_VRMR_CPEN               7            /*  CP_EN - Charge pump Enable */
#define BITP_OTPC_DAP_VRMR_MRR1               6            /*  VRR_EN - VRR Regulator enable */
#define BITP_OTPC_DAP_VRMR_MRR13              5            /*  VRRTS[1] - VRR Temperature slope */
#define BITP_OTPC_DAP_VRMR_MRR12              4            /*  VRRTS[0] - VRR Temperature slope */
#define BITP_OTPC_DAP_VRMR_MRR11              3            /*  VRR[3] - VRR Level */
#define BITP_OTPC_DAP_VRMR_MRR10              2            /*  VRR[2] - VRR Level */
#define BITP_OTPC_DAP_VRMR_MRR9               1            /*  VRR[1] - VRR Level */
#define BITP_OTPC_DAP_VRMR_MRR8               0            /*  VRR[0] - VRR Level */
#define BITM_OTPC_DAP_VRMR_CPEN              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CP_EN - Charge pump Enable */
#define BITM_OTPC_DAP_VRMR_MRR1              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VRR_EN - VRR Regulator enable */
#define BITM_OTPC_DAP_VRMR_MRR13             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VRRTS[1] - VRR Temperature slope */
#define BITM_OTPC_DAP_VRMR_MRR12             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VRRTS[0] - VRR Temperature slope */
#define BITM_OTPC_DAP_VRMR_MRR11             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VRR[3] - VRR Level */
#define BITM_OTPC_DAP_VRMR_MRR10             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VRR[2] - VRR Level */
#define BITM_OTPC_DAP_VRMR_MRR9              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VRR[1] - VRR Level */
#define BITM_OTPC_DAP_VRMR_MRR8              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VRR[0] - VRR Level */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_OVLR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_OVLR_MRR21              5            /*  VPP[2] - VPP Level */
#define BITP_OTPC_DAP_OVLR_MRR20              4            /*  VPP[1] - VPP Level */
#define BITP_OTPC_DAP_OVLR_MRR19              3            /*  VPP[0] - VPP Level */
#define BITP_OTPC_DAP_OVLR_MRR18              2            /*  VQQ[2] - VQQ Level */
#define BITP_OTPC_DAP_OVLR_MRR17              1            /*  VQQ[1] - VQQ Level */
#define BITP_OTPC_DAP_OVLR_MRR16              0            /*  VQQ[0] - VQQ Level */
#define BITM_OTPC_DAP_OVLR_MRR21             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VPP[2] - VPP Level */
#define BITM_OTPC_DAP_OVLR_MRR20             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VPP[1] - VPP Level */
#define BITM_OTPC_DAP_OVLR_MRR19             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VPP[0] - VPP Level */
#define BITM_OTPC_DAP_OVLR_MRR18             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VQQ[2] - VQQ Level */
#define BITM_OTPC_DAP_OVLR_MRR17             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VQQ[1] - VQQ Level */
#define BITM_OTPC_DAP_OVLR_MRR16             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VQQ[0] - VQQ Level */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_IPCR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_IPCR_MRR15              7            /*  VRRSWC - VRR Switch Control */
#define BITP_OTPC_DAP_IPCR_MRR30              6            /*  REF_BIAS_DIS - BIAS Current disable */
#define BITP_OTPC_DAP_IPCR_MRR29              5            /*  EXT_CK_EN - External oscillator Test Mode */
#define BITP_OTPC_DAP_IPCR_MRR28              4            /*  OSC_OUT_1 - Oscillator output test mode */
#define BITP_OTPC_DAP_IPCR_MRR27              3            /*  OSC_OUT_0 - Oscillator output test mode */
#define BITP_OTPC_DAP_IPCR_MRR0               2            /*  IPS_EN */
#define BITP_OTPC_DAP_IPCR_MRR25              1            /*  EXT_REF_EN - External Reference Test Mode */
#define BITP_OTPC_DAP_IPCR_MRR24              0            /*  VDD_DET_DIS - VDD Detector Disable */
#define BITM_OTPC_DAP_IPCR_MRR15             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  VRRSWC - VRR Switch Control */
#define BITM_OTPC_DAP_IPCR_MRR30             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  REF_BIAS_DIS - BIAS Current disable */
#define BITM_OTPC_DAP_IPCR_MRR29             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  EXT_CK_EN - External oscillator Test Mode */
#define BITM_OTPC_DAP_IPCR_MRR28             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  OSC_OUT_1 - Oscillator output test mode */
#define BITM_OTPC_DAP_IPCR_MRR27             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  OSC_OUT_0 - Oscillator output test mode */
#define BITM_OTPC_DAP_IPCR_MRR0              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  IPS_EN */
#define BITM_OTPC_DAP_IPCR_MRR25             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  EXT_REF_EN - External Reference Test Mode */
#define BITM_OTPC_DAP_IPCR_MRR24             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VDD_DET_DIS - VDD Detector Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_ORCR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_ORCR_MR3                3            /*  RTST - IRR Cell Current Test Mode */
#define BITP_OTPC_DAP_ORCR_MR2                2            /*  AROM[1] - Test ROM Address 1 */
#define BITP_OTPC_DAP_ORCR_MR1                1            /*  AROM[0] - Test ROM Address 0 */
#define BITP_OTPC_DAP_ORCR_MR0                0            /*  ROMEN - Test ROM Enable */
#define BITM_OTPC_DAP_ORCR_MR3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RTST - IRR Cell Current Test Mode */
#define BITM_OTPC_DAP_ORCR_MR2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  AROM[1] - Test ROM Address 1 */
#define BITM_OTPC_DAP_ORCR_MR1               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  AROM[0] - Test ROM Address 0 */
#define BITM_OTPC_DAP_ORCR_MR0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ROMEN - Test ROM Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_ODCR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_ODCR_MR10               4            /*  CKDEL[4] - Timer Control */
#define BITP_OTPC_DAP_ODCR_MR9                3            /*  CKDEL[3] - Timer Control */
#define BITP_OTPC_DAP_ODCR_MR8                2            /*  CKDEL[2] - Timer Control */
#define BITP_OTPC_DAP_ODCR_MR7                1            /*  CKDEL[1] - Timer Control */
#define BITP_OTPC_DAP_ODCR_MR6                0            /*  CKDEL[0] - Timer Control */
#define BITM_OTPC_DAP_ODCR_MR10              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CKDEL[4] - Timer Control */
#define BITM_OTPC_DAP_ODCR_MR9               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  CKDEL[3] - Timer Control */
#define BITM_OTPC_DAP_ODCR_MR8               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  CKDEL[2] - Timer Control */
#define BITM_OTPC_DAP_ODCR_MR7               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CKDEL[1] - Timer Control */
#define BITM_OTPC_DAP_ODCR_MR6               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CKDEL[0] - Timer Control */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_IPCR2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_IPCR2_MRR31             7            /*  Reserved - IPS Reserved */
#define BITP_OTPC_DAP_IPCR2_MRR23             6            /*  Reserved - IPS Reserved */
#define BITP_OTPC_DAP_IPCR2_MRR22             5            /*  Reserved - IPS Reserved */
#define BITP_OTPC_DAP_IPCR2_MRR7              4            /*  Reserved - IPS Reserved */
#define BITP_OTPC_DAP_IPCR2_MRR14             3            /*  VREFLVL[2] - IPS VREF Level[2] */
#define BITP_OTPC_DAP_IPCR2_MRR13             2            /*  VREFLVL[1] -  IPS VREF Level[1] */
#define BITP_OTPC_DAP_IPCR2_MRR12             1            /*  VREFLVL[0] - IPS VREF Level[0] */
#define BITP_OTPC_DAP_IPCR2_MRR26             0            /*  WE_CK- Charge pump Sync input */
#define BITM_OTPC_DAP_IPCR2_MRR31            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Reserved - IPS Reserved */
#define BITM_OTPC_DAP_IPCR2_MRR23            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Reserved - IPS Reserved */
#define BITM_OTPC_DAP_IPCR2_MRR22            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Reserved - IPS Reserved */
#define BITM_OTPC_DAP_IPCR2_MRR7             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Reserved - IPS Reserved */
#define BITM_OTPC_DAP_IPCR2_MRR14            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VREFLVL[2] - IPS VREF Level[2] */
#define BITM_OTPC_DAP_IPCR2_MRR13            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VREFLVL[1] -  IPS VREF Level[1] */
#define BITM_OTPC_DAP_IPCR2_MRR12            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VREFLVL[0] - IPS VREF Level[0] */
#define BITM_OTPC_DAP_IPCR2_MRR26            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  WE_CK- Charge pump Sync input */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_OCER                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_OCER_SEL                3            /*  Macro Select */
#define BITP_OTPC_DAP_OCER_PD                 1            /*  Reference current Disable */
#define BITM_OTPC_DAP_OCER_SEL               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Macro Select */
#define BITM_OTPC_DAP_OCER_PD                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Reference current Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_DPCR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_DPCR_MUXQ1              7            /*  Data Output selection */
#define BITP_OTPC_DAP_DPCR_MUXQ0              6            /*  Data Output selection */
#define BITP_OTPC_DAP_DPCR_PASS               5            /*  Data path control */
#define BITP_OTPC_DAP_DPCR_BRPGEN             4            /*  Bit repair Generate */
#define BITP_OTPC_DAP_DPCR_BRPDIS             3            /*  Bit repair Disable */
#define BITP_OTPC_DAP_DPCR_ECCTST             2            /*  ECC TEST */
#define BITP_OTPC_DAP_DPCR_ECCGEN             1            /*  Parity bit Generator */
#define BITP_OTPC_DAP_DPCR_ECCDIS             0            /*  ECC Disable */
#define BITM_OTPC_DAP_DPCR_MUXQ1             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Data Output selection */
#define BITM_OTPC_DAP_DPCR_MUXQ0             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Data Output selection */
#define BITM_OTPC_DAP_DPCR_PASS              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Data path control */
#define BITM_OTPC_DAP_DPCR_BRPGEN            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Bit repair Generate */
#define BITM_OTPC_DAP_DPCR_BRPDIS            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Bit repair Disable */
#define BITM_OTPC_DAP_DPCR_ECCTST            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  ECC TEST */
#define BITM_OTPC_DAP_DPCR_ECCGEN            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Parity bit Generator */
#define BITM_OTPC_DAP_DPCR_ECCDIS            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ECC Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          OTPC_DAP_DPCR2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OTPC_DAP_DPCR2_MBPC              0            /*  Multi-bit programming control */
#define BITM_OTPC_DAP_DPCR2_MBPC             (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Multi-bit programming control */


/* ============================================================================================================================
        The System Memory Protection Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        SMPU11
   ============================================================================================================================ */
#define REG_SMPU11_CTL                       0x310A1000            /*  SMPU11 SMPU Control Register */
#define REG_SMPU11_STAT                      0x310A1004            /*  SMPU11 SMPU Status Register */
#define REG_SMPU11_IADDR                     0x310A1008            /*  SMPU11 Interrupt Address Register */
#define REG_SMPU11_IDTLS                     0x310A100C            /*  SMPU11 Interrupt Details Register */
#define REG_SMPU11_BADDR                     0x310A1010            /*  SMPU11 Bus Error Address Register */
#define REG_SMPU11_BDTLS                     0x310A1014            /*  SMPU11 Bus Error Details Register */
#define REG_SMPU11_REVID                     0x310A1220            /*  SMPU11 SMPU Revision ID Register */
#define REG_SMPU11_SECURECTL                 0x310A1800            /*  SMPU11 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU11_RCTL0                     0x310A1020            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL1                     0x310A1038            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL2                     0x310A1050            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL3                     0x310A1068            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL4                     0x310A1080            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL5                     0x310A1098            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL6                     0x310A10B0            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTL7                     0x310A10C8            /*  SMPU11 Region n Control Register */
#define REG_SMPU11_RCTLn(i)                  (REG_SMPU11_RCTL0 + ((i) * 24))
#define REG_SMPU11_RCTLn_COUNT               8
#define REG_SMPU11_RADDR0                    0x310A1024            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR1                    0x310A103C            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR2                    0x310A1054            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR3                    0x310A106C            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR4                    0x310A1084            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR5                    0x310A109C            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR6                    0x310A10B4            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDR7                    0x310A10CC            /*  SMPU11 Region n Address Register */
#define REG_SMPU11_RADDRn(i)                 (REG_SMPU11_RADDR0 + ((i) * 24))
#define REG_SMPU11_RADDRn_COUNT              8
#define REG_SMPU11_RIDA0                     0x310A1028            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA1                     0x310A1040            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA2                     0x310A1058            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA3                     0x310A1070            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA4                     0x310A1088            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA5                     0x310A10A0            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA6                     0x310A10B8            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDA7                     0x310A10D0            /*  SMPU11 Region n ID A Register */
#define REG_SMPU11_RIDAn(i)                  (REG_SMPU11_RIDA0 + ((i) * 24))
#define REG_SMPU11_RIDAn_COUNT               8
#define REG_SMPU11_RIDMSKA0                  0x310A102C            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA1                  0x310A1044            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA2                  0x310A105C            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA3                  0x310A1074            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA4                  0x310A108C            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA5                  0x310A10A4            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA6                  0x310A10BC            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKA7                  0x310A10D4            /*  SMPU11 Region n ID Mask A Register */
#define REG_SMPU11_RIDMSKAn(i)               (REG_SMPU11_RIDMSKA0 + ((i) * 24))
#define REG_SMPU11_RIDMSKAn_COUNT            8
#define REG_SMPU11_RIDB0                     0x310A1030            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB1                     0x310A1048            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB2                     0x310A1060            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB3                     0x310A1078            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB4                     0x310A1090            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB5                     0x310A10A8            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB6                     0x310A10C0            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDB7                     0x310A10D8            /*  SMPU11 Region n ID B Register */
#define REG_SMPU11_RIDBn(i)                  (REG_SMPU11_RIDB0 + ((i) * 24))
#define REG_SMPU11_RIDBn_COUNT               8
#define REG_SMPU11_RIDMSKB0                  0x310A1034            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB1                  0x310A104C            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB2                  0x310A1064            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB3                  0x310A107C            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB4                  0x310A1094            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB5                  0x310A10AC            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB6                  0x310A10C4            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKB7                  0x310A10DC            /*  SMPU11 Region n ID Mask B Register */
#define REG_SMPU11_RIDMSKBn(i)               (REG_SMPU11_RIDMSKB0 + ((i) * 24))
#define REG_SMPU11_RIDMSKBn_COUNT            8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU11_SECURERCTL0               0x310A1820            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL1               0x310A1824            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL2               0x310A1828            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL3               0x310A182C            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL4               0x310A1830            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL5               0x310A1834            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL6               0x310A1838            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTL7               0x310A183C            /*  SMPU11 Region n Control Secure Accesses Register */
#define REG_SMPU11_SECURERCTLn(i)            (REG_SMPU11_SECURERCTL0 + ((i) * 4))
#define REG_SMPU11_SECURERCTLn_COUNT         8

/* ============================================================================================================================
        SMPU12
   ============================================================================================================================ */
#define REG_SMPU12_CTL                       0x31012000            /*  SMPU12 SMPU Control Register */
#define REG_SMPU12_STAT                      0x31012004            /*  SMPU12 SMPU Status Register */
#define REG_SMPU12_IADDR                     0x31012008            /*  SMPU12 Interrupt Address Register */
#define REG_SMPU12_IDTLS                     0x3101200C            /*  SMPU12 Interrupt Details Register */
#define REG_SMPU12_BADDR                     0x31012010            /*  SMPU12 Bus Error Address Register */
#define REG_SMPU12_BDTLS                     0x31012014            /*  SMPU12 Bus Error Details Register */
#define REG_SMPU12_REVID                     0x31012220            /*  SMPU12 SMPU Revision ID Register */
#define REG_SMPU12_SECURECTL                 0x31012800            /*  SMPU12 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU12_RCTL0                     0x31012020            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL1                     0x31012038            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL2                     0x31012050            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL3                     0x31012068            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL4                     0x31012080            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL5                     0x31012098            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL6                     0x310120B0            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTL7                     0x310120C8            /*  SMPU12 Region n Control Register */
#define REG_SMPU12_RCTLn(i)                  (REG_SMPU12_RCTL0 + ((i) * 24))
#define REG_SMPU12_RCTLn_COUNT               8
#define REG_SMPU12_RADDR0                    0x31012024            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR1                    0x3101203C            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR2                    0x31012054            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR3                    0x3101206C            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR4                    0x31012084            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR5                    0x3101209C            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR6                    0x310120B4            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDR7                    0x310120CC            /*  SMPU12 Region n Address Register */
#define REG_SMPU12_RADDRn(i)                 (REG_SMPU12_RADDR0 + ((i) * 24))
#define REG_SMPU12_RADDRn_COUNT              8
#define REG_SMPU12_RIDA0                     0x31012028            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA1                     0x31012040            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA2                     0x31012058            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA3                     0x31012070            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA4                     0x31012088            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA5                     0x310120A0            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA6                     0x310120B8            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDA7                     0x310120D0            /*  SMPU12 Region n ID A Register */
#define REG_SMPU12_RIDAn(i)                  (REG_SMPU12_RIDA0 + ((i) * 24))
#define REG_SMPU12_RIDAn_COUNT               8
#define REG_SMPU12_RIDMSKA0                  0x3101202C            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA1                  0x31012044            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA2                  0x3101205C            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA3                  0x31012074            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA4                  0x3101208C            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA5                  0x310120A4            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA6                  0x310120BC            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKA7                  0x310120D4            /*  SMPU12 Region n ID Mask A Register */
#define REG_SMPU12_RIDMSKAn(i)               (REG_SMPU12_RIDMSKA0 + ((i) * 24))
#define REG_SMPU12_RIDMSKAn_COUNT            8
#define REG_SMPU12_RIDB0                     0x31012030            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB1                     0x31012048            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB2                     0x31012060            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB3                     0x31012078            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB4                     0x31012090            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB5                     0x310120A8            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB6                     0x310120C0            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDB7                     0x310120D8            /*  SMPU12 Region n ID B Register */
#define REG_SMPU12_RIDBn(i)                  (REG_SMPU12_RIDB0 + ((i) * 24))
#define REG_SMPU12_RIDBn_COUNT               8
#define REG_SMPU12_RIDMSKB0                  0x31012034            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB1                  0x3101204C            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB2                  0x31012064            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB3                  0x3101207C            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB4                  0x31012094            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB5                  0x310120AC            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB6                  0x310120C4            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKB7                  0x310120DC            /*  SMPU12 Region n ID Mask B Register */
#define REG_SMPU12_RIDMSKBn(i)               (REG_SMPU12_RIDMSKB0 + ((i) * 24))
#define REG_SMPU12_RIDMSKBn_COUNT            8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU12_SECURERCTL0               0x31012820            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL1               0x31012824            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL2               0x31012828            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL3               0x3101282C            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL4               0x31012830            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL5               0x31012834            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL6               0x31012838            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTL7               0x3101283C            /*  SMPU12 Region n Control Secure Accesses Register */
#define REG_SMPU12_SECURERCTLn(i)            (REG_SMPU12_SECURERCTL0 + ((i) * 4))
#define REG_SMPU12_SECURERCTLn_COUNT         8

/* ============================================================================================================================
        SMPU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_CTL_LOCK                   31            /*  Lock Bit */
#define BITP_SMPU_CTL_RLOCK                   4            /*  RCTLn, RADDRn, RIDxn and RIDMxn Registers Lock Bit */
#define BITP_SMPU_CTL_PINTEN                  3            /*  Protection Violation Interrupt Enable */
#define BITP_SMPU_CTL_PBETYPE                 2            /*  Protection Violation Bus Error Type */
#define BITP_SMPU_CTL_PBEDIS                  1            /*  Protection Violation Bus Error Disable */
#define BITP_SMPU_CTL_RSDIS                   0            /*  Read Speculation Disable */
#define BITM_SMPU_CTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Bit */
#define BITM_SMPU_CTL_RLOCK                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RCTLn, RADDRn, RIDxn and RIDMxn Registers Lock Bit */
#define BITM_SMPU_CTL_PINTEN                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Protection Violation Interrupt Enable */
#define BITM_SMPU_CTL_PBETYPE                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Protection Violation Bus Error Type */
#define BITM_SMPU_CTL_PBEDIS                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Protection Violation Bus Error Disable */
#define BITM_SMPU_CTL_RSDIS                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Read Speculation Disable */
#define ENUM_SMPU_CTL_PINTDIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PINTEN: Protection Violation IRQ Disable. */
#define ENUM_SMPU_CTL_PINTEN                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  PINTEN: Protection Violation IRQ Enable. */
#define ENUM_SMPU_CTL_DECERR                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PBETYPE: Decode Error Type. */
#define ENUM_SMPU_CTL_SLVERR                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PBETYPE: Save Error Type. */
#define ENUM_SMPU_CTL_PBEEN                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PBEDIS: Bus Error Generation Enable. */
#define ENUM_SMPU_CTL_PBEDIS                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PBEDIS: Bus Error Generation Disable. */
#define ENUM_SMPU_CTL_RSEN                   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RSDIS: Read Speculation Enable. */
#define ENUM_SMPU_CTL_RSDIS                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  RSDIS: Read Speculation Disable. */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_STAT_LWERR                 17            /*  Lock Write Error */
#define BITP_SMPU_STAT_ADRERR                16            /*  Address Error */
#define BITP_SMPU_STAT_BEOVR                  3            /*  Bus Error Overrun */
#define BITP_SMPU_STAT_BERR                   2            /*  Bus Error */
#define BITP_SMPU_STAT_IOVR                   1            /*  Interrupt Overrun */
#define BITP_SMPU_STAT_IRQ                    0            /*  Interrupt Request */
#define BITM_SMPU_STAT_LWERR                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_SMPU_STAT_ADRERR                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Address Error */
#define BITM_SMPU_STAT_BEOVR                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Bus Error Overrun */
#define BITM_SMPU_STAT_BERR                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Bus Error */
#define BITM_SMPU_STAT_IOVR                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Interrupt Overrun */
#define BITM_SMPU_STAT_IRQ                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Interrupt Request */
#define ENUM_SMPU_STAT_NOLWERR               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Lock Write Error */
#define ENUM_SMPU_STAT_LWERR                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  LWERR: Lock Write Error */
#define ENUM_SMPU_STAT_NOADRERR              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ADRERR: No Address Error */
#define ENUM_SMPU_STAT_ADRERR                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  ADRERR: Address Error */
#define ENUM_SMPU_STAT_NOBEOVR               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BEOVR: No Bus Error overrun */
#define ENUM_SMPU_STAT_BEOVR                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  BEOVR: Bus Error overrun has occurred */
#define ENUM_SMPU_STAT_NOBERR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BERR: No Bus Error since this bit has been cleared */
#define ENUM_SMPU_STAT_BERR                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  BERR: Bus Error has been generated */
#define ENUM_SMPU_STAT_NOIOVR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IOVR: No Interrupt overrun */
#define ENUM_SMPU_STAT_IOVR                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  IOVR: Interrupt overrun has occurred */
#define ENUM_SMPU_STAT_NOIRQ                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IRQ: No Interrupt since this bit has been cleared */
#define ENUM_SMPU_STAT_IRQ                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  IRQ: Interrupt has been generated */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_IADDR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_IADDR_VALUE                 0            /*  Interrupt Address */
#define BITM_SMPU_IADDR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Interrupt Address */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_IDTLS                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_IDTLS_ID                    8            /*  ID of Transaction */
#define BITP_SMPU_IDTLS_RNW                   1            /*  Read/Write Status */
#define BITP_SMPU_IDTLS_SECURE                0            /*  Secure Status */
#define BITM_SMPU_IDTLS_ID                   (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  ID of Transaction */
#define BITM_SMPU_IDTLS_RNW                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Read/Write Status */
#define BITM_SMPU_IDTLS_SECURE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Secure Status */
#define ENUM_SMPU_IDTLS_WRITE                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RNW: Transaction that caused last signaled interrupt was a write */
#define ENUM_SMPU_IDTLS_READ                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RNW: Transaction that caused last signaled interrupt was a read */
#define ENUM_SMPU_IDTLS_NONSECURE            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SECURE: Transaction that caused last signaled interrupt was non-secure */
#define ENUM_SMPU_IDTLS_SECURE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SECURE: Transaction that caused last signaled interrupt was secure */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_BADDR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_BADDR_VALUE                 0            /*  Bus Error Address */
#define BITM_SMPU_BADDR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Bus Error Address */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_BDTLS                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_BDTLS_ID                    8            /*  ID of Transaction */
#define BITP_SMPU_BDTLS_RNW                   1            /*  Read/Write Status */
#define BITP_SMPU_BDTLS_SECURE                0            /*  Secure Status Register */
#define BITM_SMPU_BDTLS_ID                   (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  ID of Transaction */
#define BITM_SMPU_BDTLS_RNW                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Read/Write Status */
#define BITM_SMPU_BDTLS_SECURE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Secure Status Register */
#define ENUM_SMPU_BDTLS_WRITE                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RNW: Transaction that caused last bus error was a write */
#define ENUM_SMPU_BDTLS_READ                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RNW: Transaction that caused last bus error was a read */
#define ENUM_SMPU_BDTLS_NONSECURE            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SECURE: Transaction that caused last bus error was non-secure */
#define ENUM_SMPU_BDTLS_SECURE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SECURE: Transaction that caused last bus error was secure */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_REVID                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_REVID_MAJOR                 4            /*  Major Version ID */
#define BITP_SMPU_REVID_REV                   0            /*  Incremental Version ID */
#define BITM_SMPU_REVID_MAJOR                (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Major Version ID */
#define BITM_SMPU_REVID_REV                  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Incremental Version ID */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_SECURECTL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_SECURECTL_LOCK             31            /*  Lock Bit */
#define BITP_SMPU_SECURECTL_WSECDIS          11            /*  Secure Write Transaction Disable */
#define BITP_SMPU_SECURECTL_WNSEN            10            /*  Non-secure Write Transaction Enable */
#define BITP_SMPU_SECURECTL_RSECDIS           9            /*  Secure Read Transaction Disable */
#define BITP_SMPU_SECURECTL_RNSEN             8            /*  Non-secure Read Transaction Enable */
#define BITP_SMPU_SECURECTL_RLOCK             3            /*  Secure Region Registers Lock Bit */
#define BITP_SMPU_SECURECTL_SINTEN            2            /*  Security Violation Interrupt Enable */
#define BITP_SMPU_SECURECTL_SBETYPE           1            /*  Security Violation Bus Error Type */
#define BITP_SMPU_SECURECTL_SBEDIS            0            /*  Security Violation Bus Error Disable */
#define BITM_SMPU_SECURECTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Bit */
#define BITM_SMPU_SECURECTL_WSECDIS          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Secure Write Transaction Disable */
#define BITM_SMPU_SECURECTL_WNSEN            (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Non-secure Write Transaction Enable */
#define BITM_SMPU_SECURECTL_RSECDIS          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Secure Read Transaction Disable */
#define BITM_SMPU_SECURECTL_RNSEN            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Non-secure Read Transaction Enable */
#define BITM_SMPU_SECURECTL_RLOCK            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Secure Region Registers Lock Bit */
#define BITM_SMPU_SECURECTL_SINTEN           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Security Violation Interrupt Enable */
#define BITM_SMPU_SECURECTL_SBETYPE          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Security Violation Bus Error Type */
#define BITM_SMPU_SECURECTL_SBEDIS           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Security Violation Bus Error Disable */
#define ENUM_SMPU_SECURECTL_WSECEN           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WSECDIS: Enable secure write transactions */
#define ENUM_SMPU_SECURECTL_WSECDIS          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  WSECDIS: Disable secure write transactions */
#define ENUM_SMPU_SECURECTL_WNSDIS           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WNSEN: Disable non-secure writes */
#define ENUM_SMPU_SECURECTL_WNSEN            (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  WNSEN: Enable non-secure writes */
#define ENUM_SMPU_SECURECTL_RSECEN           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RSECDIS: Enable secure read transactions */
#define ENUM_SMPU_SECURECTL_RSECDIS          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RSECDIS: Disable secure read transactions */
#define ENUM_SMPU_SECURECTL_RNSDIS           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RNSEN: Disable non-secure read transactions */
#define ENUM_SMPU_SECURECTL_RNSEN            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RNSEN: Enable non-secure read transactions */
#define ENUM_SMPU_SECURECTL_RLOCKDIS         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RLOCK: Disable write-protection on secure region registers */
#define ENUM_SMPU_SECURECTL_RLOCKEN          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RLOCK: Enable write-protection on secure region registers */
#define ENUM_SMPU_SECURECTL_SINTDIS          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SINTEN: Disable  security settings violation interrupt */
#define ENUM_SMPU_SECURECTL_SINTEN           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SINTEN: Enable security settings violation interrupt */
#define ENUM_SMPU_SECURECTL_DECERR           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SBETYPE: Return a decode error error which violates the security settings */
#define ENUM_SMPU_SECURECTL_SLVERR           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SBETYPE: Return a slave error which violates the security settings */
#define ENUM_SMPU_SECURECTL_SBEEN            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SBEDIS: Enable  bus error */
#define ENUM_SMPU_SECURECTL_SBEDIS           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SBEDIS: Disable bus error */

/* ============================================================================================================================
 *    EXA[n] Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_EXACADD[n]                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_EXACADD_VALUE               0            /*  Exclusive Access IDn Address */
#define BITM_SMPU_EXACADD_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Exclusive Access IDn Address */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_EXACSTAT[n]                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_EXACSTAT_ARID               8            /*  Exclusive Access ID */
#define BITP_SMPU_EXACSTAT_ARSIZE             5            /*  Exclusive Access Read Size */
#define BITP_SMPU_EXACSTAT_ARLEN              1            /*  Exclusive Access Read Length */
#define BITP_SMPU_EXACSTAT_VALID              0            /*  Valid Exclusive Access Read */
#define BITM_SMPU_EXACSTAT_ARID              (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  Exclusive Access ID */
#define BITM_SMPU_EXACSTAT_ARSIZE            (_ADI_MSK_3(0x000000E0,0x000000E0UL, uint32_t  ))    /*  Exclusive Access Read Size */
#define BITM_SMPU_EXACSTAT_ARLEN             (_ADI_MSK_3(0x0000001E,0x0000001EUL, uint32_t  ))    /*  Exclusive Access Read Length */
#define BITM_SMPU_EXACSTAT_VALID             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Valid Exclusive Access Read */

/* ============================================================================================================================
 *    R[n] Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_RCTL[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_RCTL_WIDCINV               11            /*  Write Transaction ID Compare Invert */
#define BITP_SMPU_RCTL_WPROTEN               10            /*  Write Transaction Protection Enable */
#define BITP_SMPU_RCTL_RIDCINV                9            /*  Read Transaction ID Compare Invert */
#define BITP_SMPU_RCTL_RPROTEN                8            /*  Read Transaction Protection Enable */
#define BITP_SMPU_RCTL_SIZE                   1            /*  Memory Region Size */
#define BITP_SMPU_RCTL_EN                     0            /*  Region Enable */
#define BITM_SMPU_RCTL_WIDCINV               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Write Transaction ID Compare Invert */
#define BITM_SMPU_RCTL_WPROTEN               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Write Transaction Protection Enable */
#define BITM_SMPU_RCTL_RIDCINV               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Read Transaction ID Compare Invert */
#define BITM_SMPU_RCTL_RPROTEN               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Read Transaction Protection Enable */
#define BITM_SMPU_RCTL_SIZE                  (_ADI_MSK_3(0x0000003E,0x0000003EUL, uint32_t  ))    /*  Memory Region Size */
#define BITM_SMPU_RCTL_EN                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Region Enable */
#define ENUM_SMPU_RCTL_WPROTDIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WPROTEN: Write transaction ID-based protection disabled */
#define ENUM_SMPU_RCTL_WPROTEN               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  WPROTEN: Write transaction ID-based protection enabled */
#define ENUM_SMPU_RCTL_RPROTDIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RPROTEN: Read transaction ID-based protection disabled */
#define ENUM_SMPU_RCTL_RPROTEN               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RPROTEN: Read transaction ID-based protection enabled */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_RADDR[n]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_RADDR_BADDR                12            /*  Region n Base Address 20 Most Significant Bits */
#define BITM_SMPU_RADDR_BADDR                (_ADI_MSK_3(0xFFFFF000,0xFFFFF000UL, uint32_t  ))    /*  Region n Base Address 20 Most Significant Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_RIDA[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_RIDA_ID                     0            /*  Region n ID Register A */
#define BITM_SMPU_RIDA_ID                    (_ADI_MSK_3(0x00001FFF,0x00001FFFUL, uint32_t  ))    /*  Region n ID Register A */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_RIDMSKA[n]                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_RIDMSKA_MSK                 0            /*  Region n ID Mask Register A */
#define BITM_SMPU_RIDMSKA_MSK                (_ADI_MSK_3(0x00001FFF,0x00001FFFUL, uint32_t  ))    /*  Region n ID Mask Register A */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_RIDB[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_RIDB_ID                     0            /*  Region n ID Register B */
#define BITM_SMPU_RIDB_ID                    (_ADI_MSK_3(0x00001FFF,0x00001FFFUL, uint32_t  ))    /*  Region n ID Register B */

/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_RIDMSKB[n]                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_RIDMSKB_MSK                 0            /*  Region n ID Mask Register B */
#define BITM_SMPU_RIDMSKB_MSK                (_ADI_MSK_3(0x00001FFF,0x00001FFFUL, uint32_t  ))    /*  Region n ID Mask Register B */

/* ============================================================================================================================
 *    SECURERCTL[n] Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SMPU_SECURERCTL[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SMPU_SECURERCTL_WSECDIS          3            /*  Secure Write Transaction Disable */
#define BITP_SMPU_SECURERCTL_WNSEN            2            /*  Non-secure Write Transaction Enable */
#define BITP_SMPU_SECURERCTL_RSECDIS          1            /*  Secure Read Transaction Disable */
#define BITP_SMPU_SECURERCTL_RNSEN            0            /*  Non-secure Read Transaction Enable */
#define BITM_SMPU_SECURERCTL_WSECDIS         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Secure Write Transaction Disable */
#define BITM_SMPU_SECURERCTL_WNSEN           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Non-secure Write Transaction Enable */
#define BITM_SMPU_SECURERCTL_RSECDIS         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Secure Read Transaction Disable */
#define BITM_SMPU_SECURERCTL_RNSEN           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Non-secure Read Transaction Enable */
#define ENUM_SMPU_SECURERCTL_WSECEN          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WSECDIS: Enable secure write transactions to this region */
#define ENUM_SMPU_SECURERCTL_WSECDIS         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  WSECDIS: Disable secure write transactions to this region */
#define ENUM_SMPU_SECURERCTL_WNSDIS          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WNSEN: Disable non-secure write transactions to this region */
#define ENUM_SMPU_SECURERCTL_WNSEN           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  WNSEN: Enable non-secure write transactions to this region */
#define ENUM_SMPU_SECURERCTL_RSECEN          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RSECDIS: Enable secure read transactions to this region */
#define ENUM_SMPU_SECURERCTL_RSECDIS         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RSECDIS: Disable secure read transactions to this region */
#define ENUM_SMPU_SECURERCTL_RNSDIS          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RNSEN: Disable non-secure read transactions to this region */
#define ENUM_SMPU_SECURERCTL_RNSEN           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  RNSEN: Enable non-secure read transactions to this region */


/* ============================================================================================================================
        Housekeeping ADC
   ============================================================================================================================ */

/* ============================================================================================================================
        HADC0
   ============================================================================================================================ */
#define REG_HADC0_CTL                        0x31016000            /*  HADC0 Control Register */
#define REG_HADC0_CHAN_MSK                   0x31016004            /*  HADC0 Channel Mask Register */
#define REG_HADC0_IMSK                       0x31016008            /*  HADC0 Interrupt Mask Register */
#define REG_HADC0_STAT                       0x3101600C            /*  HADC0 Status Register */
/* ============================================================================================================================
      ADC_DATA Register Definitions
   ============================================================================================================================ */
#define REG_HADC0_DATA00                     0x31016010            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA01                     0x31016014            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA02                     0x31016018            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA03                     0x3101601C            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA04                     0x31016020            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA05                     0x31016024            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA06                     0x31016028            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA07                     0x3101602C            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA08                     0x31016030            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA09                     0x31016034            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA10                     0x31016038            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA11                     0x3101603C            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA12                     0x31016040            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA13                     0x31016044            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA14                     0x31016048            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATA15                     0x3101604C            /*  HADC0 Channel Data Registers */
#define REG_HADC0_DATAnn(i)                  (REG_HADC0_DATA00 + ((i) * 4))
#define REG_HADC0_DATAnn_COUNT               16

/* ============================================================================================================================
        HADC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          HADC_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_HADC_CTL_ENLS                   13            /*  Enable Level Shifters */
#define BITP_HADC_CTL_DOUTOREOCB             12            /*  Serial data on DOUT. */
#define BITP_HADC_CTL_FIXEDCNV                8            /*  Fixed Conversion */
#define BITP_HADC_CTL_CONT                    7            /*  Continuous Conversion */
#define BITP_HADC_CTL_FDIV                    3            /*  Frequency Divider */
#define BITP_HADC_CTL_STARTCNV                2            /*  Start conversion. */
#define BITP_HADC_CTL_PD                      1            /*  Power down. */
#define BITP_HADC_CTL_NRST                    0            /*  Reset. */
#define BITM_HADC_CTL_ENLS                   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Enable Level Shifters */
#define BITM_HADC_CTL_DOUTOREOCB             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Serial data on DOUT. */
#define BITM_HADC_CTL_FIXEDCNV               (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Fixed Conversion */
#define BITM_HADC_CTL_CONT                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Continuous Conversion */
#define BITM_HADC_CTL_FDIV                   (_ADI_MSK_3(0x00000078,0x00000078UL, uint32_t  ))    /*  Frequency Divider */
#define BITM_HADC_CTL_STARTCNV               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Start conversion. */
#define BITM_HADC_CTL_PD                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Power down. */
#define BITM_HADC_CTL_NRST                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Reset. */
#define ENUM_HADC_CTL_ADC_CONT_FIXED         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CONT: ADC converts sequence for fixed number of times */
#define ENUM_HADC_CTL_ADC_CONT               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CONT: ADC continuously converts given sequence */
#define ENUM_HADC_CTL_STARTCNV               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  STARTCNV: Start converting */
#define ENUM_HADC_CTL_ADC_PD                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PD: Power down the analog circuitry of the ADC */
#define ENUM_HADC_CTL_ADC_NRESET             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  NRST: Reset the ADC */

/* -------------------------------------------------------------------------------------------------------------------------
          HADC_CHAN_MSK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_HADC_CHAN_MSK_VALUE              0            /*  Mask for Each Channel */
#define BITM_HADC_CHAN_MSK_VALUE             (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Mask for Each Channel */

/* -------------------------------------------------------------------------------------------------------------------------
          HADC_IMSK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_HADC_IMSK_RDY                   17            /*  Mask interrupt when ADC ready to convert */
#define BITP_HADC_IMSK_SEQ                   16            /*  Mask interrupt at end of sequence completion */
#define BITP_HADC_IMSK_CHAN                   0            /*  Channel Mask */
#define BITM_HADC_IMSK_RDY                   (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Mask interrupt when ADC ready to convert */
#define BITM_HADC_IMSK_SEQ                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Mask interrupt at end of sequence completion */
#define BITM_HADC_IMSK_CHAN                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Channel Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          HADC_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_HADC_STAT_TMUHADC_BUSY          20            /*  Temperature Conversion Status */
#define BITP_HADC_STAT_INTRW1C                4            /*  Conversion Complete Interrupt */
#define BITP_HADC_STAT_SEQOVRW1C              3            /*  End of Sequence Conversion */
#define BITP_HADC_STAT_RDYW1C                 2            /*  Ready to Convert */
#define BITP_HADC_STAT_RDY                    0            /*  ADC Ready */
#define BITM_HADC_STAT_TMUHADC_BUSY          (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Temperature Conversion Status */
#define BITM_HADC_STAT_INTRW1C               (_ADI_MSK_3(0x000FFFF0,0x000FFFF0UL, uint32_t  ))    /*  Conversion Complete Interrupt */
#define BITM_HADC_STAT_SEQOVRW1C             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  End of Sequence Conversion */
#define BITM_HADC_STAT_RDYW1C                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Ready to Convert */
#define BITM_HADC_STAT_RDY                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ADC Ready */

/* ============================================================================================================================
 *    ADC_DATA Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          HADC_DATA[nn]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_HADC_DATA_VALUE                  0            /*  Converted Data */
#define BITM_HADC_DATA_VALUE                 (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))    /*  Converted Data */


/* ============================================================================================================================
        Thermal monitoring unit
   ============================================================================================================================ */

/* ============================================================================================================================
        TMU0
   ============================================================================================================================ */
#define REG_TMU0_CTL                         0x31016800            /*  TMU0 TMU Control Register */
#define REG_TMU0_TEMP                        0x31016804            /*  TMU0 Temperature Value Register */
#define REG_TMU0_AVG                         0x31016808            /*  TMU0 Averaging Register */
#define REG_TMU0_FLT_LIM_HI                  0x3101680C            /*  TMU0 Fault High Limit Register */
#define REG_TMU0_ALRT_LIM_HI                 0x31016810            /*  TMU0 Alert High Limit Register */
#define REG_TMU0_FLT_LIM_LO                  0x31016814            /*  TMU0 Fault Low Limit Register */
#define REG_TMU0_ALRT_LIM_LO                 0x31016818            /*  TMU0 Alert Low Limit Register */
#define REG_TMU0_STAT                        0x3101681C            /*  TMU0 Status Register */
#define REG_TMU0_GAIN                        0x31016824            /*  TMU0 Gain Value Register */
#define REG_TMU0_IMSK                        0x31016828            /*  TMU0 Interrupt Mask Register */
#define REG_TMU0_OFFSET                      0x3101682C            /*  TMU0 Offset Register */
#define REG_TMU0_CNV_BLANK                   0x31016834            /*  TMU0 Temperature conversion blank register */
#define REG_TMU0_REFR_CNTR                   0x31016838            /*  TMU0 Temperature Refresh Counter */

/* ============================================================================================================================
        TMU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TMU_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_CTL_TMEN_FORCE              13            /*  Indefinite Enable */
#define BITP_TMU_CTL_SCLKDIV                  4            /*  System Clock Divide */
#define BITP_TMU_CTL_TMEN                     3            /*  Periodic Enable */
#define BITP_TMU_CTL_TMPU                     0            /*  TMU Enable */
#define BITM_TMU_CTL_TMEN_FORCE              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Indefinite Enable */
#define BITM_TMU_CTL_SCLKDIV                 (_ADI_MSK_3(0x00000FF0,0x00000FF0UL, uint32_t  ))    /*  System Clock Divide */
#define BITM_TMU_CTL_TMEN                    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Periodic Enable */
#define BITM_TMU_CTL_TMPU                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  TMU Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_TEMP                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_TEMP_VALUE                   0            /*  Value */
#define BITM_TMU_TEMP_VALUE                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_AVG                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_AVG_EN                       0            /*  Value */
#define BITM_TMU_AVG_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_FLT_LIM_HI                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_FLT_LIM_HI_VALUE             0            /*  Value */
#define BITM_TMU_FLT_LIM_HI_VALUE            (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_ALRT_LIM_HI                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_ALRT_LIM_HI_VALUE            0            /*  Value */
#define BITM_TMU_ALRT_LIM_HI_VALUE           (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_FLT_LIM_LO                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_FLT_LIM_LO_VALUE             0            /*  Value */
#define BITM_TMU_FLT_LIM_LO_VALUE            (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_ALRT_LIM_LO                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_ALRT_LIM_LO_VALUE            0            /*  Value */
#define BITM_TMU_ALRT_LIM_LO_VALUE           (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_STAT_ALRTLO                  7            /*  Alert Low */
#define BITP_TMU_STAT_FLTLO                   6            /*  Fault Low */
#define BITP_TMU_STAT_ALRTHI                  5            /*  Alert High */
#define BITP_TMU_STAT_FLTHI                   4            /*  Fault High */
#define BITM_TMU_STAT_ALRTLO                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Alert Low */
#define BITM_TMU_STAT_FLTLO                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Fault Low */
#define BITM_TMU_STAT_ALRTHI                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Alert High */
#define BITM_TMU_STAT_FLTHI                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Fault High */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_GAIN                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_GAIN_VALUE                   0            /*  Value */
#define BITM_TMU_GAIN_VALUE                  (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_IMSK                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_IMSK_ALRTLO                  3            /*  Alert Low Mask */
#define BITP_TMU_IMSK_FLTLO                   2            /*  Fault Low Mask */
#define BITP_TMU_IMSK_ALRTHI                  1            /*  Alert High Mask */
#define BITP_TMU_IMSK_FLTHI                   0            /*  Fault High Mask */
#define BITM_TMU_IMSK_ALRTLO                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Alert Low Mask */
#define BITM_TMU_IMSK_FLTLO                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Fault Low Mask */
#define BITM_TMU_IMSK_ALRTHI                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Alert High Mask */
#define BITM_TMU_IMSK_FLTHI                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Fault High Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_OFFSET                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_OFFSET_VALUE                 0            /*  Value */
#define BITM_TMU_OFFSET_VALUE                (_ADI_MSK_3(0x00007FFF,0x00007FFFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_CNV_BLANK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_CNV_BLANK_PERIOD            24            /*  Blanking Period */
#define BITM_TMU_CNV_BLANK_PERIOD            (_ADI_MSK_3(0x1F000000,0x1F000000UL, uint32_t  ))    /*  Blanking Period */

/* -------------------------------------------------------------------------------------------------------------------------
          TMU_REFR_CNTR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TMU_REFR_CNTR_VALUE              0            /*  Refresh Period */
#define BITM_TMU_REFR_CNTR_VALUE             (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Refresh Period */


/* ============================================================================================================================
        General-Purpose Timer Block
   ============================================================================================================================ */

/* ============================================================================================================================
        TIMER0
   ============================================================================================================================ */
#define REG_TIMER0_RUN                       0x31018004            /*  TIMER0 Run Register */
#define REG_TIMER0_RUN_SET                   0x31018008            /*  TIMER0 Run Set Register */
#define REG_TIMER0_RUN_CLR                   0x3101800C            /*  TIMER0 Run Clear Register */
#define REG_TIMER0_STOP_CFG                  0x31018010            /*  TIMER0 Stop Configuration Register */
#define REG_TIMER0_STOP_CFG_SET              0x31018014            /*  TIMER0 Stop Configuration Set Register */
#define REG_TIMER0_STOP_CFG_CLR              0x31018018            /*  TIMER0 Stop Configuration Clear Register */
#define REG_TIMER0_DATA_IMSK                 0x3101801C            /*  TIMER0 Data Interrupt Mask Register */
#define REG_TIMER0_STAT_IMSK                 0x31018020            /*  TIMER0 Status Interrupt Mask Register */
#define REG_TIMER0_TRG_MSK                   0x31018024            /*  TIMER0 Trigger Master Mask Register */
#define REG_TIMER0_TRG_IE                    0x31018028            /*  TIMER0 Trigger Slave Enable Register */
#define REG_TIMER0_DATA_ILAT                 0x3101802C            /*  TIMER0 Data Interrupt Latch Register */
#define REG_TIMER0_STAT_ILAT                 0x31018030            /*  TIMER0 Status Interrupt Latch Register */
#define REG_TIMER0_ERR_TYPE                  0x31018034            /*  TIMER0 Error Type Status Register */
#define REG_TIMER0_BCAST_PER                 0x31018038            /*  TIMER0 Broadcast Period Register */
#define REG_TIMER0_BCAST_WID                 0x3101803C            /*  TIMER0 Broadcast Width Register */
#define REG_TIMER0_BCAST_DLY                 0x31018040            /*  TIMER0 Broadcast Delay Register */
/* ============================================================================================================================
      TMR Register Definitions
   ============================================================================================================================ */
#define REG_TIMER0_TMR0_CFG                  0x31018060            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR1_CFG                  0x31018080            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR2_CFG                  0x310180A0            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR3_CFG                  0x310180C0            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR4_CFG                  0x310180E0            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR5_CFG                  0x31018100            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR6_CFG                  0x31018120            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR7_CFG                  0x31018140            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR8_CFG                  0x31018160            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR9_CFG                  0x31018180            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR10_CFG                 0x310181A0            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR11_CFG                 0x310181C0            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR12_CFG                 0x310181E0            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR13_CFG                 0x31018200            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR14_CFG                 0x31018220            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMR15_CFG                 0x31018240            /*  TIMER0 Timer n Configuration Register */
#define REG_TIMER0_TMRn_CFG(i)               (REG_TIMER0_TMR0_CFG + ((i) * 32))
#define REG_TIMER0_TMRn_CFG_COUNT            16
#define REG_TIMER0_TMR0_CNT                  0x31018064            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR1_CNT                  0x31018084            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR2_CNT                  0x310180A4            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR3_CNT                  0x310180C4            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR4_CNT                  0x310180E4            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR5_CNT                  0x31018104            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR6_CNT                  0x31018124            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR7_CNT                  0x31018144            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR8_CNT                  0x31018164            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR9_CNT                  0x31018184            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR10_CNT                 0x310181A4            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR11_CNT                 0x310181C4            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR12_CNT                 0x310181E4            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR13_CNT                 0x31018204            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR14_CNT                 0x31018224            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMR15_CNT                 0x31018244            /*  TIMER0 Timer n Counter Register */
#define REG_TIMER0_TMRn_CNT(i)               (REG_TIMER0_TMR0_CNT + ((i) * 32))
#define REG_TIMER0_TMRn_CNT_COUNT            16
#define REG_TIMER0_TMR0_PER                  0x31018068            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR1_PER                  0x31018088            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR2_PER                  0x310180A8            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR3_PER                  0x310180C8            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR4_PER                  0x310180E8            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR5_PER                  0x31018108            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR6_PER                  0x31018128            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR7_PER                  0x31018148            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR8_PER                  0x31018168            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR9_PER                  0x31018188            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR10_PER                 0x310181A8            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR11_PER                 0x310181C8            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR12_PER                 0x310181E8            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR13_PER                 0x31018208            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR14_PER                 0x31018228            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMR15_PER                 0x31018248            /*  TIMER0 Timer n Period Register */
#define REG_TIMER0_TMRn_PER(i)               (REG_TIMER0_TMR0_PER + ((i) * 32))
#define REG_TIMER0_TMRn_PER_COUNT            16
#define REG_TIMER0_TMR0_WID                  0x3101806C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR1_WID                  0x3101808C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR2_WID                  0x310180AC            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR3_WID                  0x310180CC            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR4_WID                  0x310180EC            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR5_WID                  0x3101810C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR6_WID                  0x3101812C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR7_WID                  0x3101814C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR8_WID                  0x3101816C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR9_WID                  0x3101818C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR10_WID                 0x310181AC            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR11_WID                 0x310181CC            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR12_WID                 0x310181EC            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR13_WID                 0x3101820C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR14_WID                 0x3101822C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMR15_WID                 0x3101824C            /*  TIMER0 Timer n Width Register */
#define REG_TIMER0_TMRn_WID(i)               (REG_TIMER0_TMR0_WID + ((i) * 32))
#define REG_TIMER0_TMRn_WID_COUNT            16
#define REG_TIMER0_TMR0_DLY                  0x31018070            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR1_DLY                  0x31018090            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR2_DLY                  0x310180B0            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR3_DLY                  0x310180D0            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR4_DLY                  0x310180F0            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR5_DLY                  0x31018110            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR6_DLY                  0x31018130            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR7_DLY                  0x31018150            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR8_DLY                  0x31018170            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR9_DLY                  0x31018190            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR10_DLY                 0x310181B0            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR11_DLY                 0x310181D0            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR12_DLY                 0x310181F0            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR13_DLY                 0x31018210            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR14_DLY                 0x31018230            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMR15_DLY                 0x31018250            /*  TIMER0 Timer n Delay Register */
#define REG_TIMER0_TMRn_DLY(i)               (REG_TIMER0_TMR0_DLY + ((i) * 32))
#define REG_TIMER0_TMRn_DLY_COUNT            16

/* ============================================================================================================================
        TIMER Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_RUN                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_RUN_TMR00                  0            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR01                  1            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR02                  2            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR03                  3            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR04                  4            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR05                  5            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR06                  6            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR07                  7            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR08                  8            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR09                  9            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR10                 10            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR11                 11            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR12                 12            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR13                 13            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR14                 14            /*  Start/Stop Timer n */
#define BITP_TIMER_RUN_TMR15                 15            /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR00                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR01                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR02                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR03                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR04                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR05                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR06                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR07                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR08                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR09                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR10                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR11                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR12                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR13                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR14                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Start/Stop Timer n */
#define BITM_TIMER_RUN_TMR15                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Start/Stop Timer n */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_RUN_SET                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_RUN_SET_TMR00              0            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR01              1            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR02              2            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR03              3            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR04              4            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR05              5            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR06              6            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR07              7            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR08              8            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR09              9            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR10             10            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR11             11            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR12             12            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR13             13            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR14             14            /*  RUN Set Alias */
#define BITP_TIMER_RUN_SET_TMR15             15            /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR00             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR01             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR02             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR03             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR04             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR05             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR06             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR07             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR08             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR09             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR10             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR11             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR12             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR13             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR14             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  RUN Set Alias */
#define BITM_TIMER_RUN_SET_TMR15             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  RUN Set Alias */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_RUN_CLR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_RUN_CLR_TMR00              0            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR01              1            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR02              2            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR03              3            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR04              4            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR05              5            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR06              6            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR07              7            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR08              8            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR09              9            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR10             10            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR11             11            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR12             12            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR13             13            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR14             14            /*  RUN Clear Alias */
#define BITP_TIMER_RUN_CLR_TMR15             15            /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR00             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR01             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR02             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR03             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR04             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR05             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR06             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR07             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR08             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR09             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR10             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR11             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR12             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR13             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR14             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  RUN Clear Alias */
#define BITM_TIMER_RUN_CLR_TMR15             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  RUN Clear Alias */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_STOP_CFG                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_STOP_CFG_TMR00             0            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR01             1            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR02             2            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR03             3            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR04             4            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR05             5            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR06             6            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR07             7            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR08             8            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR09             9            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR10            10            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR11            11            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR12            12            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR13            13            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR14            14            /*  Stop Mode Select */
#define BITP_TIMER_STOP_CFG_TMR15            15            /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR00            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR01            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR02            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR03            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR04            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR05            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR06            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR07            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR08            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR09            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR10            (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR11            (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR12            (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR13            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR14            (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Stop Mode Select */
#define BITM_TIMER_STOP_CFG_TMR15            (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Stop Mode Select */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_STOP_CFG_SET                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_STOP_CFG_SET_TMR00         0            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR01         1            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR02         2            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR03         3            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR04         4            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR05         5            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR06         6            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR07         7            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR08         8            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR09         9            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR10        10            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR11        11            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR12        12            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR13        13            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR14        14            /*  STOP_CFG Set Alias */
#define BITP_TIMER_STOP_CFG_SET_TMR15        15            /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR00        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR01        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR02        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR03        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR04        (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR05        (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR06        (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR07        (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR08        (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR09        (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR10        (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR11        (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR12        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR13        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR14        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  STOP_CFG Set Alias */
#define BITM_TIMER_STOP_CFG_SET_TMR15        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  STOP_CFG Set Alias */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_STOP_CFG_CLR                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_STOP_CFG_CLR_TMR00         0            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR01         1            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR02         2            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR03         3            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR04         4            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR05         5            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR06         6            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR07         7            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR08         8            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR09         9            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR10        10            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR11        11            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR12        12            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR13        13            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR14        14            /*  STOP_CFG Clear Alias */
#define BITP_TIMER_STOP_CFG_CLR_TMR15        15            /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR00        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR01        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR02        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR03        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR04        (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR05        (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR06        (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR07        (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR08        (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR09        (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR10        (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR11        (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR12        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR13        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR14        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  STOP_CFG Clear Alias */
#define BITM_TIMER_STOP_CFG_CLR_TMR15        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  STOP_CFG Clear Alias */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_DATA_IMSK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_DATA_IMSK_TMR00            0            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR01            1            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR02            2            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR03            3            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR04            4            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR05            5            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR06            6            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR07            7            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR08            8            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR09            9            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR10           10            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR11           11            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR12           12            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR13           13            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR14           14            /*  Data Interrupt Mask */
#define BITP_TIMER_DATA_IMSK_TMR15           15            /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR00           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR01           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR02           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR03           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR04           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR05           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR06           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR07           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR08           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR09           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR10           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR11           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR12           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR13           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR14           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Data Interrupt Mask */
#define BITM_TIMER_DATA_IMSK_TMR15           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Data Interrupt Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_STAT_IMSK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_STAT_IMSK_TMR00            0            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR01            1            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR02            2            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR03            3            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR04            4            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR05            5            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR06            6            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR07            7            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR08            8            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR09            9            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR10           10            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR11           11            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR12           12            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR13           13            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR14           14            /*  Status Interrupt Mask */
#define BITP_TIMER_STAT_IMSK_TMR15           15            /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR00           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR01           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR02           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR03           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR04           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR05           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR06           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR07           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR08           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR09           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR10           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR11           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR12           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR13           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR14           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Status Interrupt Mask */
#define BITM_TIMER_STAT_IMSK_TMR15           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Status Interrupt Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TRG_MSK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TRG_MSK_TMR00              0            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR01              1            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR02              2            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR03              3            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR04              4            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR05              5            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR06              6            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR07              7            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR08              8            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR09              9            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR10             10            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR11             11            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR12             12            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR13             13            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR14             14            /*  Trigger Output Mask */
#define BITP_TIMER_TRG_MSK_TMR15             15            /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR00             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR01             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR02             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR03             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR04             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR05             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR06             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR07             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR08             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR09             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR10             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR11             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR12             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR13             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR14             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Trigger Output Mask */
#define BITM_TIMER_TRG_MSK_TMR15             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Trigger Output Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TRG_IE                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TRG_IE_TMR00               0            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR01               1            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR02               2            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR03               3            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR04               4            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR05               5            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR06               6            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR07               7            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR08               8            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR09               9            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR10              10            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR11              11            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR12              12            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR13              13            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR14              14            /*  Trigger Input Enable */
#define BITP_TIMER_TRG_IE_TMR15              15            /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR00              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR01              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR02              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR03              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR04              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR05              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR06              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR07              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR08              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR09              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR10              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR11              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR12              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR13              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR14              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Trigger Input Enable */
#define BITM_TIMER_TRG_IE_TMR15              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_DATA_ILAT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_DATA_ILAT_TMR00            0            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR01            1            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR02            2            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR03            3            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR04            4            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR05            5            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR06            6            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR07            7            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR08            8            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR09            9            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR10           10            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR11           11            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR12           12            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR13           13            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR14           14            /*  Data Interrupt Latch */
#define BITP_TIMER_DATA_ILAT_TMR15           15            /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR00           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR01           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR02           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR03           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR04           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR05           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR06           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR07           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR08           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR09           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR10           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR11           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR12           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR13           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR14           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Data Interrupt Latch */
#define BITM_TIMER_DATA_ILAT_TMR15           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Data Interrupt Latch */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_STAT_ILAT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_STAT_ILAT_TMR00            0            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR01            1            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR02            2            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR03            3            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR04            4            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR05            5            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR06            6            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR07            7            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR08            8            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR09            9            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR10           10            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR11           11            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR12           12            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR13           13            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR14           14            /*  Status Interrupt Latch */
#define BITP_TIMER_STAT_ILAT_TMR15           15            /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR00           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR01           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR02           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR03           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR04           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR05           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR06           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR07           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR08           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR09           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR10           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR11           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR12           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR13           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR14           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Status Interrupt Latch */
#define BITM_TIMER_STAT_ILAT_TMR15           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Status Interrupt Latch */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_ERR_TYPE                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_ERR_TYPE_TERR15           30            /*  Error Type for Timer 15 */
#define BITP_TIMER_ERR_TYPE_TERR14           28            /*  Error Type for Timer 14 */
#define BITP_TIMER_ERR_TYPE_TERR13           26            /*  Error Type for Timer 13 */
#define BITP_TIMER_ERR_TYPE_TERR12           24            /*  Error Type for Timer 12 */
#define BITP_TIMER_ERR_TYPE_TERR11           22            /*  Error Type for Timer 11 */
#define BITP_TIMER_ERR_TYPE_TERR10           20            /*  Error Type for Timer 10 */
#define BITP_TIMER_ERR_TYPE_TERR8            16            /*  Error Type for Timer 8 */
#define BITP_TIMER_ERR_TYPE_TERR7            14            /*  Error Type for Timer 7 */
#define BITP_TIMER_ERR_TYPE_TERR6            12            /*  Error Type for Timer 6 */
#define BITP_TIMER_ERR_TYPE_TERR5            10            /*  Error Type for Timer 5 */
#define BITP_TIMER_ERR_TYPE_TERR4             8            /*  Error Type for Timer 4 */
#define BITP_TIMER_ERR_TYPE_TERR3             6            /*  Error Type for Timer 3 */
#define BITP_TIMER_ERR_TYPE_TERR2             4            /*  Error Type for Timer 2 */
#define BITP_TIMER_ERR_TYPE_TERR1             2            /*  Error Type for Timer 1 */
#define BITP_TIMER_ERR_TYPE_TERR0             0            /*  Error Type for Timer 0 */
#define BITM_TIMER_ERR_TYPE_TERR15           (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  Error Type for Timer 15 */
#define BITM_TIMER_ERR_TYPE_TERR14           (_ADI_MSK_3(0x30000000,0x30000000UL, uint32_t  ))    /*  Error Type for Timer 14 */
#define BITM_TIMER_ERR_TYPE_TERR13           (_ADI_MSK_3(0x0C000000,0x0C000000UL, uint32_t  ))    /*  Error Type for Timer 13 */
#define BITM_TIMER_ERR_TYPE_TERR12           (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  Error Type for Timer 12 */
#define BITM_TIMER_ERR_TYPE_TERR11           (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  Error Type for Timer 11 */
#define BITM_TIMER_ERR_TYPE_TERR10           (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Error Type for Timer 10 */
#define BITM_TIMER_ERR_TYPE_TERR8            (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Error Type for Timer 8 */
#define BITM_TIMER_ERR_TYPE_TERR7            (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  Error Type for Timer 7 */
#define BITM_TIMER_ERR_TYPE_TERR6            (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Error Type for Timer 6 */
#define BITM_TIMER_ERR_TYPE_TERR5            (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))    /*  Error Type for Timer 5 */
#define BITM_TIMER_ERR_TYPE_TERR4            (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Error Type for Timer 4 */
#define BITM_TIMER_ERR_TYPE_TERR3            (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  Error Type for Timer 3 */
#define BITM_TIMER_ERR_TYPE_TERR2            (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Error Type for Timer 2 */
#define BITM_TIMER_ERR_TYPE_TERR1            (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  Error Type for Timer 1 */
#define BITM_TIMER_ERR_TYPE_TERR0            (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Error Type for Timer 0 */
#define ENUM_TIMER_ERR_TYPE_NO_ERR15         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR15: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF15         (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  TERR15: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG15         (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  TERR15: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG15       (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  TERR15: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR14         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR14: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF14         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  TERR14: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG14         (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  TERR14: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG14       (_ADI_MSK_3(0x30000000,0x30000000UL, uint32_t  ))    /*  TERR14: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR13         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR13: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF13         (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  TERR13: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG13         (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  TERR13: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG13       (_ADI_MSK_3(0x0C000000,0x0C000000UL, uint32_t  ))    /*  TERR13: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR12         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR12: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF12         (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  TERR12: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG12         (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  TERR12: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG12       (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  TERR12: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR11         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR11: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF11         (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  TERR11: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG11         (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  TERR11: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG11       (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  TERR11: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR10         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR10: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF10         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  TERR10: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG10         (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  TERR10: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG10       (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  TERR10: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR8          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR8: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF8          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TERR8: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG8          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  TERR8: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG8        (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  TERR8: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR7          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR7: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF7          (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  TERR7: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG7          (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  TERR7: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG7        (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  TERR7: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR6          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR6: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF6          (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  TERR6: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG6          (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  TERR6: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG6        (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  TERR6: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR5          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR5: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF5          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  TERR5: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG5          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  TERR5: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG5        (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))    /*  TERR5: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR4          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR4: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF4          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  TERR4: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG4          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  TERR4: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG4        (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  TERR4: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR3          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR3: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF3          (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  TERR3: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG3          (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  TERR3: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG3        (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  TERR3: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR2          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR2: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF2          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  TERR2: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG2          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  TERR2: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG2        (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  TERR2: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR1          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR1: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF1          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TERR1: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG1          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TERR1: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG1        (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  TERR1: WID or DLY Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_NO_ERR0          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TERR0: No Error */
#define ENUM_TIMER_ERR_TYPE_CNTOVF0          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  TERR0: Counter Overflow Error */
#define ENUM_TIMER_ERR_TYPE_PERPRG0          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  TERR0: PER Register Programming Error */
#define ENUM_TIMER_ERR_TYPE_PULSEPRG0        (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  TERR0: WID or DLY Register Programming Error */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_BCAST_PER                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_BCAST_PER_VALUE            0            /*  Broadcast Period Value */
#define BITM_TIMER_BCAST_PER_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Broadcast Period Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_BCAST_WID                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_BCAST_WID_VALUE            0            /*  Broadcast Width Value */
#define BITM_TIMER_BCAST_WID_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Broadcast Width Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_BCAST_DLY                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_BCAST_DLY_VALUE            0            /*  Broadcast Delay Value */
#define BITM_TIMER_BCAST_DLY_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Broadcast Delay Value */

/* ============================================================================================================================
 *    TMR Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TMR[n]_CFG                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TMR_CFG_ORDTGLTRIG        17            /*  Ordered Slave Trigger Toggle Enable */
#define BITP_TIMER_TMR_CFG_TGLTRIG           16            /*  Slave Trigger Toggle Enable */
#define BITP_TIMER_TMR_CFG_EMURUN            15            /*  Emulation Run */
#define BITP_TIMER_TMR_CFG_BPEREN            14            /*  Broadcast Period Enable */
#define BITP_TIMER_TMR_CFG_BWIDEN            13            /*  Broadcast Width Enable */
#define BITP_TIMER_TMR_CFG_BDLYEN            12            /*  Broadcast Delay Enable */
#define BITP_TIMER_TMR_CFG_OUTDIS            11            /*  Output Disable */
#define BITP_TIMER_TMR_CFG_TINSEL            10            /*  Timer Input Select (for WIDCAP, WATCHDOG, PININT modes) */
#define BITP_TIMER_TMR_CFG_CLKSEL             8            /*  Clock Select */
#define BITP_TIMER_TMR_CFG_PULSEHI            7            /*  Polarity Response Select */
#define BITP_TIMER_TMR_CFG_SLAVETRIG          6            /*  Slave Trigger Response. */
#define BITP_TIMER_TMR_CFG_IRQMODE            4            /*  Interrupt Modes */
#define BITP_TIMER_TMR_CFG_TMODE              0            /*  Timer Mode Select */
#define BITM_TIMER_TMR_CFG_ORDTGLTRIG        (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Ordered Slave Trigger Toggle Enable */
#define BITM_TIMER_TMR_CFG_TGLTRIG           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Slave Trigger Toggle Enable */
#define BITM_TIMER_TMR_CFG_EMURUN            (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Emulation Run */
#define BITM_TIMER_TMR_CFG_BPEREN            (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Broadcast Period Enable */
#define BITM_TIMER_TMR_CFG_BWIDEN            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Broadcast Width Enable */
#define BITM_TIMER_TMR_CFG_BDLYEN            (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Broadcast Delay Enable */
#define BITM_TIMER_TMR_CFG_OUTDIS            (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Disable */
#define BITM_TIMER_TMR_CFG_TINSEL            (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Timer Input Select (for WIDCAP, WATCHDOG, PININT modes) */
#define BITM_TIMER_TMR_CFG_CLKSEL            (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Clock Select */
#define BITM_TIMER_TMR_CFG_PULSEHI           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Polarity Response Select */
#define BITM_TIMER_TMR_CFG_SLAVETRIG         (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Slave Trigger Response. */
#define BITM_TIMER_TMR_CFG_IRQMODE           (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Interrupt Modes */
#define BITM_TIMER_TMR_CFG_TMODE             (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Timer Mode Select */
#define ENUM_TIMER_TMR_CFG_TGLTRIG0          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TGLTRIG: Slave Trigger Response Depends on SLAVETRIG Bit Setting */
#define ENUM_TIMER_TMR_CFG_TGLTRIG1          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TGLTRIG: Slave Trigger Toggles Timer State */
#define ENUM_TIMER_TMR_CFG_EMU_NOCNT         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EMURUN: Stop Timer During Emulation */
#define ENUM_TIMER_TMR_CFG_EMU_CNT           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  EMURUN: Run Timer During Emulation */
#define ENUM_TIMER_TMR_CFG_BCASTPER_DIS      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BPEREN: Disable Broadcast to PER Register */
#define ENUM_TIMER_TMR_CFG_BCASTPER_EN       (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  BPEREN: Enable Broadcast to PER Register */
#define ENUM_TIMER_TMR_CFG_BCASTWID_DIS      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BWIDEN: Disable Broadcast to WID Register */
#define ENUM_TIMER_TMR_CFG_BCASTWID_EN       (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  BWIDEN: Enable Broadcast to WID Register */
#define ENUM_TIMER_TMR_CFG_BCASTDLY_DIS      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BDLYEN: Disable Broadcast to DLY Register */
#define ENUM_TIMER_TMR_CFG_BCASTDLY_EN       (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  BDLYEN: Enable Broadcast to DLY Register */
#define ENUM_TIMER_TMR_CFG_PADOUT_EN         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  OUTDIS: Enable TMR Pin Output Buffer */
#define ENUM_TIMER_TMR_CFG_PADOUT_DIS        (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  OUTDIS: Disable TMR Pin Output Buffer */
#define ENUM_TIMER_TMR_CFG_TINSEL_TMR        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TINSEL: Use TMR Pin Input */
#define ENUM_TIMER_TMR_CFG_TINSEL_AUX        (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  TINSEL: Use TMR Alternate Capture Input */
#define ENUM_TIMER_TMR_CFG_CLKSEL_SCLK       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CLKSEL: Use  SCLK0 */
#define ENUM_TIMER_TMR_CFG_CLKSEL_ALT0       (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CLKSEL: Use TMR_ALT_CLK0 as TMR Clock */
#define ENUM_TIMER_TMR_CFG_CLKSEL_ALT1       (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  CLKSEL: Use TMR_ALT_CLK1 as TMR Clock */
#define ENUM_TIMER_TMR_CFG_NEG_EDGE          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PULSEHI: Negative Response or Pulse. */
#define ENUM_TIMER_TMR_CFG_POS_EDGE          (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  PULSEHI: Positive Response or Pulse. */
#define ENUM_TIMER_TMR_CFG_TRIGSTOP          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SLAVETRIG: Pulse Stops Timer if it is Running */
#define ENUM_TIMER_TMR_CFG_TRIGSTART         (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  SLAVETRIG: Pulse Starts Timer if it is Stopped */
#define ENUM_TIMER_TMR_CFG_IRQMODE0          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IRQMODE: Active Edge Mode. */
#define ENUM_TIMER_TMR_CFG_IRQMODE1          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  IRQMODE: Delay Expired Mode. */
#define ENUM_TIMER_TMR_CFG_IRQMODE2          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  IRQMODE: Width Plus Delay Expired Mode. */
#define ENUM_TIMER_TMR_CFG_IRQMODE3          (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  IRQMODE: Period Expired Mode. */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE0        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE1        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE2        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE3        (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE4        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE5        (_ADI_MSK_3(0x00000005,0x00000005UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE6        (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_IDLE_MODE7        (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  TMODE: Idle Mode */
#define ENUM_TIMER_TMR_CFG_WDPER_MODE        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TMODE: Period Watchdog Mode */
#define ENUM_TIMER_TMR_CFG_WDWID_MODE        (_ADI_MSK_3(0x00000009,0x00000009UL, uint32_t  ))    /*  TMODE: Width Watchdog Mode */
#define ENUM_TIMER_TMR_CFG_WIDCAP0_MODE      (_ADI_MSK_3(0x0000000A,0x0000000AUL, uint32_t  ))    /*  TMODE: Measurement Report at Asserting Edge of Waveform */
#define ENUM_TIMER_TMR_CFG_WIDCAP1_MODE      (_ADI_MSK_3(0x0000000B,0x0000000BUL, uint32_t  ))    /*  TMODE: Measurement Report at Deasserting Edge of Waveform */
#define ENUM_TIMER_TMR_CFG_PWMCONT_MODE      (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  TMODE: Continuous PWMOUT Mode */
#define ENUM_TIMER_TMR_CFG_PWMSING_MODE      (_ADI_MSK_3(0x0000000D,0x0000000DUL, uint32_t  ))    /*  TMODE: Single Pulse PWMOUT Mode */
#define ENUM_TIMER_TMR_CFG_EXTCLK_MODE       (_ADI_MSK_3(0x0000000E,0x0000000EUL, uint32_t  ))    /*  TMODE: EXTCLK Mode */
#define ENUM_TIMER_TMR_CFG_PININT_MODE       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  TMODE: PININT (pin interrupt) Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TMR[n]_CNT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TMR_CNT_VALUE              0            /*  Counter Value */
#define BITM_TIMER_TMR_CNT_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TMR[n]_PER                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TMR_PER_VALUE              0            /*  Period Value */
#define BITM_TIMER_TMR_PER_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Period Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TMR[n]_WID                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TMR_WID_VALUE              0            /*  Width Value */
#define BITM_TIMER_TMR_WID_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Width Value */

/* -------------------------------------------------------------------------------------------------------------------------
          TIMER_TMR[n]_DLY                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TIMER_TMR_DLY_VALUE              0            /*  Delay Value */
#define BITM_TIMER_TMR_DLY_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Delay Value */


/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA0
   ============================================================================================================================ */
#define REG_DMA0_DSCPTR_NXT                  0x31022000            /*  DMA0 Pointer to Next Initial Descriptor Register */
#define REG_DMA0_ADDRSTART                   0x31022004            /*  DMA0 Start Address of Current Buffer Register */
#define REG_DMA0_CFG                         0x31022008            /*  DMA0 Configuration Register */
#define REG_DMA0_XCNT                        0x3102200C            /*  DMA0 Inner Loop Count Start Value Register */
#define REG_DMA0_XMOD                        0x31022010            /*  DMA0 Inner Loop Address Increment Register */
#define REG_DMA0_YCNT                        0x31022014            /*  DMA0 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA0_YMOD                        0x31022018            /*  DMA0 Outer Loop Address Increment (2D only) Register */
#define REG_DMA0_DSCPTR_CUR                  0x31022024            /*  DMA0 Current Descriptor Pointer Register */
#define REG_DMA0_DSCPTR_PRV                  0x31022028            /*  DMA0 Previous Initial Descriptor Pointer Register */
#define REG_DMA0_ADDR_CUR                    0x3102202C            /*  DMA0 Current Address Register */
#define REG_DMA0_STAT                        0x31022030            /*  DMA0 Status Register */
#define REG_DMA0_XCNT_CUR                    0x31022034            /*  DMA0 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA0_YCNT_CUR                    0x31022038            /*  DMA0 Current Row Count (2D only) Register */
#define REG_DMA0_BWLCNT                      0x31022040            /*  DMA0 Bandwidth Limit Count Register */
#define REG_DMA0_BWLCNT_CUR                  0x31022044            /*  DMA0 Bandwidth Limit Count Current Register */
#define REG_DMA0_BWMCNT                      0x31022048            /*  DMA0 Bandwidth Monitor Count Register */
#define REG_DMA0_BWMCNT_CUR                  0x3102204C            /*  DMA0 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA1
   ============================================================================================================================ */
#define REG_DMA1_DSCPTR_NXT                  0x31022080            /*  DMA1 Pointer to Next Initial Descriptor Register */
#define REG_DMA1_ADDRSTART                   0x31022084            /*  DMA1 Start Address of Current Buffer Register */
#define REG_DMA1_CFG                         0x31022088            /*  DMA1 Configuration Register */
#define REG_DMA1_XCNT                        0x3102208C            /*  DMA1 Inner Loop Count Start Value Register */
#define REG_DMA1_XMOD                        0x31022090            /*  DMA1 Inner Loop Address Increment Register */
#define REG_DMA1_YCNT                        0x31022094            /*  DMA1 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA1_YMOD                        0x31022098            /*  DMA1 Outer Loop Address Increment (2D only) Register */
#define REG_DMA1_DSCPTR_CUR                  0x310220A4            /*  DMA1 Current Descriptor Pointer Register */
#define REG_DMA1_DSCPTR_PRV                  0x310220A8            /*  DMA1 Previous Initial Descriptor Pointer Register */
#define REG_DMA1_ADDR_CUR                    0x310220AC            /*  DMA1 Current Address Register */
#define REG_DMA1_STAT                        0x310220B0            /*  DMA1 Status Register */
#define REG_DMA1_XCNT_CUR                    0x310220B4            /*  DMA1 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA1_YCNT_CUR                    0x310220B8            /*  DMA1 Current Row Count (2D only) Register */
#define REG_DMA1_BWLCNT                      0x310220C0            /*  DMA1 Bandwidth Limit Count Register */
#define REG_DMA1_BWLCNT_CUR                  0x310220C4            /*  DMA1 Bandwidth Limit Count Current Register */
#define REG_DMA1_BWMCNT                      0x310220C8            /*  DMA1 Bandwidth Monitor Count Register */
#define REG_DMA1_BWMCNT_CUR                  0x310220CC            /*  DMA1 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA2
   ============================================================================================================================ */
#define REG_DMA2_DSCPTR_NXT                  0x31022100            /*  DMA2 Pointer to Next Initial Descriptor Register */
#define REG_DMA2_ADDRSTART                   0x31022104            /*  DMA2 Start Address of Current Buffer Register */
#define REG_DMA2_CFG                         0x31022108            /*  DMA2 Configuration Register */
#define REG_DMA2_XCNT                        0x3102210C            /*  DMA2 Inner Loop Count Start Value Register */
#define REG_DMA2_XMOD                        0x31022110            /*  DMA2 Inner Loop Address Increment Register */
#define REG_DMA2_YCNT                        0x31022114            /*  DMA2 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA2_YMOD                        0x31022118            /*  DMA2 Outer Loop Address Increment (2D only) Register */
#define REG_DMA2_DSCPTR_CUR                  0x31022124            /*  DMA2 Current Descriptor Pointer Register */
#define REG_DMA2_DSCPTR_PRV                  0x31022128            /*  DMA2 Previous Initial Descriptor Pointer Register */
#define REG_DMA2_ADDR_CUR                    0x3102212C            /*  DMA2 Current Address Register */
#define REG_DMA2_STAT                        0x31022130            /*  DMA2 Status Register */
#define REG_DMA2_XCNT_CUR                    0x31022134            /*  DMA2 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA2_YCNT_CUR                    0x31022138            /*  DMA2 Current Row Count (2D only) Register */
#define REG_DMA2_BWLCNT                      0x31022140            /*  DMA2 Bandwidth Limit Count Register */
#define REG_DMA2_BWLCNT_CUR                  0x31022144            /*  DMA2 Bandwidth Limit Count Current Register */
#define REG_DMA2_BWMCNT                      0x31022148            /*  DMA2 Bandwidth Monitor Count Register */
#define REG_DMA2_BWMCNT_CUR                  0x3102214C            /*  DMA2 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA3
   ============================================================================================================================ */
#define REG_DMA3_DSCPTR_NXT                  0x31022180            /*  DMA3 Pointer to Next Initial Descriptor Register */
#define REG_DMA3_ADDRSTART                   0x31022184            /*  DMA3 Start Address of Current Buffer Register */
#define REG_DMA3_CFG                         0x31022188            /*  DMA3 Configuration Register */
#define REG_DMA3_XCNT                        0x3102218C            /*  DMA3 Inner Loop Count Start Value Register */
#define REG_DMA3_XMOD                        0x31022190            /*  DMA3 Inner Loop Address Increment Register */
#define REG_DMA3_YCNT                        0x31022194            /*  DMA3 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA3_YMOD                        0x31022198            /*  DMA3 Outer Loop Address Increment (2D only) Register */
#define REG_DMA3_DSCPTR_CUR                  0x310221A4            /*  DMA3 Current Descriptor Pointer Register */
#define REG_DMA3_DSCPTR_PRV                  0x310221A8            /*  DMA3 Previous Initial Descriptor Pointer Register */
#define REG_DMA3_ADDR_CUR                    0x310221AC            /*  DMA3 Current Address Register */
#define REG_DMA3_STAT                        0x310221B0            /*  DMA3 Status Register */
#define REG_DMA3_XCNT_CUR                    0x310221B4            /*  DMA3 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA3_YCNT_CUR                    0x310221B8            /*  DMA3 Current Row Count (2D only) Register */
#define REG_DMA3_BWLCNT                      0x310221C0            /*  DMA3 Bandwidth Limit Count Register */
#define REG_DMA3_BWLCNT_CUR                  0x310221C4            /*  DMA3 Bandwidth Limit Count Current Register */
#define REG_DMA3_BWMCNT                      0x310221C8            /*  DMA3 Bandwidth Monitor Count Register */
#define REG_DMA3_BWMCNT_CUR                  0x310221CC            /*  DMA3 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA4
   ============================================================================================================================ */
#define REG_DMA4_DSCPTR_NXT                  0x31022200            /*  DMA4 Pointer to Next Initial Descriptor Register */
#define REG_DMA4_ADDRSTART                   0x31022204            /*  DMA4 Start Address of Current Buffer Register */
#define REG_DMA4_CFG                         0x31022208            /*  DMA4 Configuration Register */
#define REG_DMA4_XCNT                        0x3102220C            /*  DMA4 Inner Loop Count Start Value Register */
#define REG_DMA4_XMOD                        0x31022210            /*  DMA4 Inner Loop Address Increment Register */
#define REG_DMA4_YCNT                        0x31022214            /*  DMA4 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA4_YMOD                        0x31022218            /*  DMA4 Outer Loop Address Increment (2D only) Register */
#define REG_DMA4_DSCPTR_CUR                  0x31022224            /*  DMA4 Current Descriptor Pointer Register */
#define REG_DMA4_DSCPTR_PRV                  0x31022228            /*  DMA4 Previous Initial Descriptor Pointer Register */
#define REG_DMA4_ADDR_CUR                    0x3102222C            /*  DMA4 Current Address Register */
#define REG_DMA4_STAT                        0x31022230            /*  DMA4 Status Register */
#define REG_DMA4_XCNT_CUR                    0x31022234            /*  DMA4 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA4_YCNT_CUR                    0x31022238            /*  DMA4 Current Row Count (2D only) Register */
#define REG_DMA4_BWLCNT                      0x31022240            /*  DMA4 Bandwidth Limit Count Register */
#define REG_DMA4_BWLCNT_CUR                  0x31022244            /*  DMA4 Bandwidth Limit Count Current Register */
#define REG_DMA4_BWMCNT                      0x31022248            /*  DMA4 Bandwidth Monitor Count Register */
#define REG_DMA4_BWMCNT_CUR                  0x3102224C            /*  DMA4 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA5
   ============================================================================================================================ */
#define REG_DMA5_DSCPTR_NXT                  0x31022280            /*  DMA5 Pointer to Next Initial Descriptor Register */
#define REG_DMA5_ADDRSTART                   0x31022284            /*  DMA5 Start Address of Current Buffer Register */
#define REG_DMA5_CFG                         0x31022288            /*  DMA5 Configuration Register */
#define REG_DMA5_XCNT                        0x3102228C            /*  DMA5 Inner Loop Count Start Value Register */
#define REG_DMA5_XMOD                        0x31022290            /*  DMA5 Inner Loop Address Increment Register */
#define REG_DMA5_YCNT                        0x31022294            /*  DMA5 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA5_YMOD                        0x31022298            /*  DMA5 Outer Loop Address Increment (2D only) Register */
#define REG_DMA5_DSCPTR_CUR                  0x310222A4            /*  DMA5 Current Descriptor Pointer Register */
#define REG_DMA5_DSCPTR_PRV                  0x310222A8            /*  DMA5 Previous Initial Descriptor Pointer Register */
#define REG_DMA5_ADDR_CUR                    0x310222AC            /*  DMA5 Current Address Register */
#define REG_DMA5_STAT                        0x310222B0            /*  DMA5 Status Register */
#define REG_DMA5_XCNT_CUR                    0x310222B4            /*  DMA5 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA5_YCNT_CUR                    0x310222B8            /*  DMA5 Current Row Count (2D only) Register */
#define REG_DMA5_BWLCNT                      0x310222C0            /*  DMA5 Bandwidth Limit Count Register */
#define REG_DMA5_BWLCNT_CUR                  0x310222C4            /*  DMA5 Bandwidth Limit Count Current Register */
#define REG_DMA5_BWMCNT                      0x310222C8            /*  DMA5 Bandwidth Monitor Count Register */
#define REG_DMA5_BWMCNT_CUR                  0x310222CC            /*  DMA5 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA6
   ============================================================================================================================ */
#define REG_DMA6_DSCPTR_NXT                  0x31022300            /*  DMA6 Pointer to Next Initial Descriptor Register */
#define REG_DMA6_ADDRSTART                   0x31022304            /*  DMA6 Start Address of Current Buffer Register */
#define REG_DMA6_CFG                         0x31022308            /*  DMA6 Configuration Register */
#define REG_DMA6_XCNT                        0x3102230C            /*  DMA6 Inner Loop Count Start Value Register */
#define REG_DMA6_XMOD                        0x31022310            /*  DMA6 Inner Loop Address Increment Register */
#define REG_DMA6_YCNT                        0x31022314            /*  DMA6 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA6_YMOD                        0x31022318            /*  DMA6 Outer Loop Address Increment (2D only) Register */
#define REG_DMA6_DSCPTR_CUR                  0x31022324            /*  DMA6 Current Descriptor Pointer Register */
#define REG_DMA6_DSCPTR_PRV                  0x31022328            /*  DMA6 Previous Initial Descriptor Pointer Register */
#define REG_DMA6_ADDR_CUR                    0x3102232C            /*  DMA6 Current Address Register */
#define REG_DMA6_STAT                        0x31022330            /*  DMA6 Status Register */
#define REG_DMA6_XCNT_CUR                    0x31022334            /*  DMA6 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA6_YCNT_CUR                    0x31022338            /*  DMA6 Current Row Count (2D only) Register */
#define REG_DMA6_BWLCNT                      0x31022340            /*  DMA6 Bandwidth Limit Count Register */
#define REG_DMA6_BWLCNT_CUR                  0x31022344            /*  DMA6 Bandwidth Limit Count Current Register */
#define REG_DMA6_BWMCNT                      0x31022348            /*  DMA6 Bandwidth Monitor Count Register */
#define REG_DMA6_BWMCNT_CUR                  0x3102234C            /*  DMA6 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA7
   ============================================================================================================================ */
#define REG_DMA7_DSCPTR_NXT                  0x31022380            /*  DMA7 Pointer to Next Initial Descriptor Register */
#define REG_DMA7_ADDRSTART                   0x31022384            /*  DMA7 Start Address of Current Buffer Register */
#define REG_DMA7_CFG                         0x31022388            /*  DMA7 Configuration Register */
#define REG_DMA7_XCNT                        0x3102238C            /*  DMA7 Inner Loop Count Start Value Register */
#define REG_DMA7_XMOD                        0x31022390            /*  DMA7 Inner Loop Address Increment Register */
#define REG_DMA7_YCNT                        0x31022394            /*  DMA7 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA7_YMOD                        0x31022398            /*  DMA7 Outer Loop Address Increment (2D only) Register */
#define REG_DMA7_DSCPTR_CUR                  0x310223A4            /*  DMA7 Current Descriptor Pointer Register */
#define REG_DMA7_DSCPTR_PRV                  0x310223A8            /*  DMA7 Previous Initial Descriptor Pointer Register */
#define REG_DMA7_ADDR_CUR                    0x310223AC            /*  DMA7 Current Address Register */
#define REG_DMA7_STAT                        0x310223B0            /*  DMA7 Status Register */
#define REG_DMA7_XCNT_CUR                    0x310223B4            /*  DMA7 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA7_YCNT_CUR                    0x310223B8            /*  DMA7 Current Row Count (2D only) Register */
#define REG_DMA7_BWLCNT                      0x310223C0            /*  DMA7 Bandwidth Limit Count Register */
#define REG_DMA7_BWLCNT_CUR                  0x310223C4            /*  DMA7 Bandwidth Limit Count Current Register */
#define REG_DMA7_BWMCNT                      0x310223C8            /*  DMA7 Bandwidth Monitor Count Register */
#define REG_DMA7_BWMCNT_CUR                  0x310223CC            /*  DMA7 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA10
   ============================================================================================================================ */
#define REG_DMA10_DSCPTR_NXT                 0x31023000            /*  DMA10 Pointer to Next Initial Descriptor Register */
#define REG_DMA10_ADDRSTART                  0x31023004            /*  DMA10 Start Address of Current Buffer Register */
#define REG_DMA10_CFG                        0x31023008            /*  DMA10 Configuration Register */
#define REG_DMA10_XCNT                       0x3102300C            /*  DMA10 Inner Loop Count Start Value Register */
#define REG_DMA10_XMOD                       0x31023010            /*  DMA10 Inner Loop Address Increment Register */
#define REG_DMA10_YCNT                       0x31023014            /*  DMA10 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA10_YMOD                       0x31023018            /*  DMA10 Outer Loop Address Increment (2D only) Register */
#define REG_DMA10_DSCPTR_CUR                 0x31023024            /*  DMA10 Current Descriptor Pointer Register */
#define REG_DMA10_DSCPTR_PRV                 0x31023028            /*  DMA10 Previous Initial Descriptor Pointer Register */
#define REG_DMA10_ADDR_CUR                   0x3102302C            /*  DMA10 Current Address Register */
#define REG_DMA10_STAT                       0x31023030            /*  DMA10 Status Register */
#define REG_DMA10_XCNT_CUR                   0x31023034            /*  DMA10 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA10_YCNT_CUR                   0x31023038            /*  DMA10 Current Row Count (2D only) Register */
#define REG_DMA10_BWLCNT                     0x31023040            /*  DMA10 Bandwidth Limit Count Register */
#define REG_DMA10_BWLCNT_CUR                 0x31023044            /*  DMA10 Bandwidth Limit Count Current Register */
#define REG_DMA10_BWMCNT                     0x31023048            /*  DMA10 Bandwidth Monitor Count Register */
#define REG_DMA10_BWMCNT_CUR                 0x3102304C            /*  DMA10 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA11
   ============================================================================================================================ */
#define REG_DMA11_DSCPTR_NXT                 0x31023080            /*  DMA11 Pointer to Next Initial Descriptor Register */
#define REG_DMA11_ADDRSTART                  0x31023084            /*  DMA11 Start Address of Current Buffer Register */
#define REG_DMA11_CFG                        0x31023088            /*  DMA11 Configuration Register */
#define REG_DMA11_XCNT                       0x3102308C            /*  DMA11 Inner Loop Count Start Value Register */
#define REG_DMA11_XMOD                       0x31023090            /*  DMA11 Inner Loop Address Increment Register */
#define REG_DMA11_YCNT                       0x31023094            /*  DMA11 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA11_YMOD                       0x31023098            /*  DMA11 Outer Loop Address Increment (2D only) Register */
#define REG_DMA11_DSCPTR_CUR                 0x310230A4            /*  DMA11 Current Descriptor Pointer Register */
#define REG_DMA11_DSCPTR_PRV                 0x310230A8            /*  DMA11 Previous Initial Descriptor Pointer Register */
#define REG_DMA11_ADDR_CUR                   0x310230AC            /*  DMA11 Current Address Register */
#define REG_DMA11_STAT                       0x310230B0            /*  DMA11 Status Register */
#define REG_DMA11_XCNT_CUR                   0x310230B4            /*  DMA11 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA11_YCNT_CUR                   0x310230B8            /*  DMA11 Current Row Count (2D only) Register */
#define REG_DMA11_BWLCNT                     0x310230C0            /*  DMA11 Bandwidth Limit Count Register */
#define REG_DMA11_BWLCNT_CUR                 0x310230C4            /*  DMA11 Bandwidth Limit Count Current Register */
#define REG_DMA11_BWMCNT                     0x310230C8            /*  DMA11 Bandwidth Monitor Count Register */
#define REG_DMA11_BWMCNT_CUR                 0x310230CC            /*  DMA11 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA12
   ============================================================================================================================ */
#define REG_DMA12_DSCPTR_NXT                 0x31023100            /*  DMA12 Pointer to Next Initial Descriptor Register */
#define REG_DMA12_ADDRSTART                  0x31023104            /*  DMA12 Start Address of Current Buffer Register */
#define REG_DMA12_CFG                        0x31023108            /*  DMA12 Configuration Register */
#define REG_DMA12_XCNT                       0x3102310C            /*  DMA12 Inner Loop Count Start Value Register */
#define REG_DMA12_XMOD                       0x31023110            /*  DMA12 Inner Loop Address Increment Register */
#define REG_DMA12_YCNT                       0x31023114            /*  DMA12 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA12_YMOD                       0x31023118            /*  DMA12 Outer Loop Address Increment (2D only) Register */
#define REG_DMA12_DSCPTR_CUR                 0x31023124            /*  DMA12 Current Descriptor Pointer Register */
#define REG_DMA12_DSCPTR_PRV                 0x31023128            /*  DMA12 Previous Initial Descriptor Pointer Register */
#define REG_DMA12_ADDR_CUR                   0x3102312C            /*  DMA12 Current Address Register */
#define REG_DMA12_STAT                       0x31023130            /*  DMA12 Status Register */
#define REG_DMA12_XCNT_CUR                   0x31023134            /*  DMA12 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA12_YCNT_CUR                   0x31023138            /*  DMA12 Current Row Count (2D only) Register */
#define REG_DMA12_BWLCNT                     0x31023140            /*  DMA12 Bandwidth Limit Count Register */
#define REG_DMA12_BWLCNT_CUR                 0x31023144            /*  DMA12 Bandwidth Limit Count Current Register */
#define REG_DMA12_BWMCNT                     0x31023148            /*  DMA12 Bandwidth Monitor Count Register */
#define REG_DMA12_BWMCNT_CUR                 0x3102314C            /*  DMA12 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA13
   ============================================================================================================================ */
#define REG_DMA13_DSCPTR_NXT                 0x31023180            /*  DMA13 Pointer to Next Initial Descriptor Register */
#define REG_DMA13_ADDRSTART                  0x31023184            /*  DMA13 Start Address of Current Buffer Register */
#define REG_DMA13_CFG                        0x31023188            /*  DMA13 Configuration Register */
#define REG_DMA13_XCNT                       0x3102318C            /*  DMA13 Inner Loop Count Start Value Register */
#define REG_DMA13_XMOD                       0x31023190            /*  DMA13 Inner Loop Address Increment Register */
#define REG_DMA13_YCNT                       0x31023194            /*  DMA13 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA13_YMOD                       0x31023198            /*  DMA13 Outer Loop Address Increment (2D only) Register */
#define REG_DMA13_DSCPTR_CUR                 0x310231A4            /*  DMA13 Current Descriptor Pointer Register */
#define REG_DMA13_DSCPTR_PRV                 0x310231A8            /*  DMA13 Previous Initial Descriptor Pointer Register */
#define REG_DMA13_ADDR_CUR                   0x310231AC            /*  DMA13 Current Address Register */
#define REG_DMA13_STAT                       0x310231B0            /*  DMA13 Status Register */
#define REG_DMA13_XCNT_CUR                   0x310231B4            /*  DMA13 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA13_YCNT_CUR                   0x310231B8            /*  DMA13 Current Row Count (2D only) Register */
#define REG_DMA13_BWLCNT                     0x310231C0            /*  DMA13 Bandwidth Limit Count Register */
#define REG_DMA13_BWLCNT_CUR                 0x310231C4            /*  DMA13 Bandwidth Limit Count Current Register */
#define REG_DMA13_BWMCNT                     0x310231C8            /*  DMA13 Bandwidth Monitor Count Register */
#define REG_DMA13_BWMCNT_CUR                 0x310231CC            /*  DMA13 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA14
   ============================================================================================================================ */
#define REG_DMA14_DSCPTR_NXT                 0x31023200            /*  DMA14 Pointer to Next Initial Descriptor Register */
#define REG_DMA14_ADDRSTART                  0x31023204            /*  DMA14 Start Address of Current Buffer Register */
#define REG_DMA14_CFG                        0x31023208            /*  DMA14 Configuration Register */
#define REG_DMA14_XCNT                       0x3102320C            /*  DMA14 Inner Loop Count Start Value Register */
#define REG_DMA14_XMOD                       0x31023210            /*  DMA14 Inner Loop Address Increment Register */
#define REG_DMA14_YCNT                       0x31023214            /*  DMA14 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA14_YMOD                       0x31023218            /*  DMA14 Outer Loop Address Increment (2D only) Register */
#define REG_DMA14_DSCPTR_CUR                 0x31023224            /*  DMA14 Current Descriptor Pointer Register */
#define REG_DMA14_DSCPTR_PRV                 0x31023228            /*  DMA14 Previous Initial Descriptor Pointer Register */
#define REG_DMA14_ADDR_CUR                   0x3102322C            /*  DMA14 Current Address Register */
#define REG_DMA14_STAT                       0x31023230            /*  DMA14 Status Register */
#define REG_DMA14_XCNT_CUR                   0x31023234            /*  DMA14 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA14_YCNT_CUR                   0x31023238            /*  DMA14 Current Row Count (2D only) Register */
#define REG_DMA14_BWLCNT                     0x31023240            /*  DMA14 Bandwidth Limit Count Register */
#define REG_DMA14_BWLCNT_CUR                 0x31023244            /*  DMA14 Bandwidth Limit Count Current Register */
#define REG_DMA14_BWMCNT                     0x31023248            /*  DMA14 Bandwidth Monitor Count Register */
#define REG_DMA14_BWMCNT_CUR                 0x3102324C            /*  DMA14 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA15
   ============================================================================================================================ */
#define REG_DMA15_DSCPTR_NXT                 0x31023280            /*  DMA15 Pointer to Next Initial Descriptor Register */
#define REG_DMA15_ADDRSTART                  0x31023284            /*  DMA15 Start Address of Current Buffer Register */
#define REG_DMA15_CFG                        0x31023288            /*  DMA15 Configuration Register */
#define REG_DMA15_XCNT                       0x3102328C            /*  DMA15 Inner Loop Count Start Value Register */
#define REG_DMA15_XMOD                       0x31023290            /*  DMA15 Inner Loop Address Increment Register */
#define REG_DMA15_YCNT                       0x31023294            /*  DMA15 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA15_YMOD                       0x31023298            /*  DMA15 Outer Loop Address Increment (2D only) Register */
#define REG_DMA15_DSCPTR_CUR                 0x310232A4            /*  DMA15 Current Descriptor Pointer Register */
#define REG_DMA15_DSCPTR_PRV                 0x310232A8            /*  DMA15 Previous Initial Descriptor Pointer Register */
#define REG_DMA15_ADDR_CUR                   0x310232AC            /*  DMA15 Current Address Register */
#define REG_DMA15_STAT                       0x310232B0            /*  DMA15 Status Register */
#define REG_DMA15_XCNT_CUR                   0x310232B4            /*  DMA15 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA15_YCNT_CUR                   0x310232B8            /*  DMA15 Current Row Count (2D only) Register */
#define REG_DMA15_BWLCNT                     0x310232C0            /*  DMA15 Bandwidth Limit Count Register */
#define REG_DMA15_BWLCNT_CUR                 0x310232C4            /*  DMA15 Bandwidth Limit Count Current Register */
#define REG_DMA15_BWMCNT                     0x310232C8            /*  DMA15 Bandwidth Monitor Count Register */
#define REG_DMA15_BWMCNT_CUR                 0x310232CC            /*  DMA15 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA16
   ============================================================================================================================ */
#define REG_DMA16_DSCPTR_NXT                 0x31023300            /*  DMA16 Pointer to Next Initial Descriptor Register */
#define REG_DMA16_ADDRSTART                  0x31023304            /*  DMA16 Start Address of Current Buffer Register */
#define REG_DMA16_CFG                        0x31023308            /*  DMA16 Configuration Register */
#define REG_DMA16_XCNT                       0x3102330C            /*  DMA16 Inner Loop Count Start Value Register */
#define REG_DMA16_XMOD                       0x31023310            /*  DMA16 Inner Loop Address Increment Register */
#define REG_DMA16_YCNT                       0x31023314            /*  DMA16 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA16_YMOD                       0x31023318            /*  DMA16 Outer Loop Address Increment (2D only) Register */
#define REG_DMA16_DSCPTR_CUR                 0x31023324            /*  DMA16 Current Descriptor Pointer Register */
#define REG_DMA16_DSCPTR_PRV                 0x31023328            /*  DMA16 Previous Initial Descriptor Pointer Register */
#define REG_DMA16_ADDR_CUR                   0x3102332C            /*  DMA16 Current Address Register */
#define REG_DMA16_STAT                       0x31023330            /*  DMA16 Status Register */
#define REG_DMA16_XCNT_CUR                   0x31023334            /*  DMA16 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA16_YCNT_CUR                   0x31023338            /*  DMA16 Current Row Count (2D only) Register */
#define REG_DMA16_BWLCNT                     0x31023340            /*  DMA16 Bandwidth Limit Count Register */
#define REG_DMA16_BWLCNT_CUR                 0x31023344            /*  DMA16 Bandwidth Limit Count Current Register */
#define REG_DMA16_BWMCNT                     0x31023348            /*  DMA16 Bandwidth Monitor Count Register */
#define REG_DMA16_BWMCNT_CUR                 0x3102334C            /*  DMA16 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA17
   ============================================================================================================================ */
#define REG_DMA17_DSCPTR_NXT                 0x31023380            /*  DMA17 Pointer to Next Initial Descriptor Register */
#define REG_DMA17_ADDRSTART                  0x31023384            /*  DMA17 Start Address of Current Buffer Register */
#define REG_DMA17_CFG                        0x31023388            /*  DMA17 Configuration Register */
#define REG_DMA17_XCNT                       0x3102338C            /*  DMA17 Inner Loop Count Start Value Register */
#define REG_DMA17_XMOD                       0x31023390            /*  DMA17 Inner Loop Address Increment Register */
#define REG_DMA17_YCNT                       0x31023394            /*  DMA17 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA17_YMOD                       0x31023398            /*  DMA17 Outer Loop Address Increment (2D only) Register */
#define REG_DMA17_DSCPTR_CUR                 0x310233A4            /*  DMA17 Current Descriptor Pointer Register */
#define REG_DMA17_DSCPTR_PRV                 0x310233A8            /*  DMA17 Previous Initial Descriptor Pointer Register */
#define REG_DMA17_ADDR_CUR                   0x310233AC            /*  DMA17 Current Address Register */
#define REG_DMA17_STAT                       0x310233B0            /*  DMA17 Status Register */
#define REG_DMA17_XCNT_CUR                   0x310233B4            /*  DMA17 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA17_YCNT_CUR                   0x310233B8            /*  DMA17 Current Row Count (2D only) Register */
#define REG_DMA17_BWLCNT                     0x310233C0            /*  DMA17 Bandwidth Limit Count Register */
#define REG_DMA17_BWLCNT_CUR                 0x310233C4            /*  DMA17 Bandwidth Limit Count Current Register */
#define REG_DMA17_BWMCNT                     0x310233C8            /*  DMA17 Bandwidth Monitor Count Register */
#define REG_DMA17_BWMCNT_CUR                 0x310233CC            /*  DMA17 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA20
   ============================================================================================================================ */
#define REG_DMA20_DSCPTR_NXT                 0x31026080            /*  DMA20 Pointer to Next Initial Descriptor Register */
#define REG_DMA20_ADDRSTART                  0x31026084            /*  DMA20 Start Address of Current Buffer Register */
#define REG_DMA20_CFG                        0x31026088            /*  DMA20 Configuration Register */
#define REG_DMA20_XCNT                       0x3102608C            /*  DMA20 Inner Loop Count Start Value Register */
#define REG_DMA20_XMOD                       0x31026090            /*  DMA20 Inner Loop Address Increment Register */
#define REG_DMA20_YCNT                       0x31026094            /*  DMA20 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA20_YMOD                       0x31026098            /*  DMA20 Outer Loop Address Increment (2D only) Register */
#define REG_DMA20_DSCPTR_CUR                 0x310260A4            /*  DMA20 Current Descriptor Pointer Register */
#define REG_DMA20_DSCPTR_PRV                 0x310260A8            /*  DMA20 Previous Initial Descriptor Pointer Register */
#define REG_DMA20_ADDR_CUR                   0x310260AC            /*  DMA20 Current Address Register */
#define REG_DMA20_STAT                       0x310260B0            /*  DMA20 Status Register */
#define REG_DMA20_XCNT_CUR                   0x310260B4            /*  DMA20 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA20_YCNT_CUR                   0x310260B8            /*  DMA20 Current Row Count (2D only) Register */
#define REG_DMA20_BWLCNT                     0x310260C0            /*  DMA20 Bandwidth Limit Count Register */
#define REG_DMA20_BWLCNT_CUR                 0x310260C4            /*  DMA20 Bandwidth Limit Count Current Register */
#define REG_DMA20_BWMCNT                     0x310260C8            /*  DMA20 Bandwidth Monitor Count Register */
#define REG_DMA20_BWMCNT_CUR                 0x310260CC            /*  DMA20 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA21
   ============================================================================================================================ */
#define REG_DMA21_DSCPTR_NXT                 0x31026000            /*  DMA21 Pointer to Next Initial Descriptor Register */
#define REG_DMA21_ADDRSTART                  0x31026004            /*  DMA21 Start Address of Current Buffer Register */
#define REG_DMA21_CFG                        0x31026008            /*  DMA21 Configuration Register */
#define REG_DMA21_XCNT                       0x3102600C            /*  DMA21 Inner Loop Count Start Value Register */
#define REG_DMA21_XMOD                       0x31026010            /*  DMA21 Inner Loop Address Increment Register */
#define REG_DMA21_YCNT                       0x31026014            /*  DMA21 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA21_YMOD                       0x31026018            /*  DMA21 Outer Loop Address Increment (2D only) Register */
#define REG_DMA21_DSCPTR_CUR                 0x31026024            /*  DMA21 Current Descriptor Pointer Register */
#define REG_DMA21_DSCPTR_PRV                 0x31026028            /*  DMA21 Previous Initial Descriptor Pointer Register */
#define REG_DMA21_ADDR_CUR                   0x3102602C            /*  DMA21 Current Address Register */
#define REG_DMA21_STAT                       0x31026030            /*  DMA21 Status Register */
#define REG_DMA21_XCNT_CUR                   0x31026034            /*  DMA21 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA21_YCNT_CUR                   0x31026038            /*  DMA21 Current Row Count (2D only) Register */
#define REG_DMA21_BWLCNT                     0x31026040            /*  DMA21 Bandwidth Limit Count Register */
#define REG_DMA21_BWLCNT_CUR                 0x31026044            /*  DMA21 Bandwidth Limit Count Current Register */
#define REG_DMA21_BWMCNT                     0x31026048            /*  DMA21 Bandwidth Monitor Count Register */
#define REG_DMA21_BWMCNT_CUR                 0x3102604C            /*  DMA21 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA28
   ============================================================================================================================ */
#define REG_DMA28_DSCPTR_NXT                 0x31026400            /*  DMA28 Pointer to Next Initial Descriptor Register */
#define REG_DMA28_ADDRSTART                  0x31026404            /*  DMA28 Start Address of Current Buffer Register */
#define REG_DMA28_CFG                        0x31026408            /*  DMA28 Configuration Register */
#define REG_DMA28_XCNT                       0x3102640C            /*  DMA28 Inner Loop Count Start Value Register */
#define REG_DMA28_XMOD                       0x31026410            /*  DMA28 Inner Loop Address Increment Register */
#define REG_DMA28_YCNT                       0x31026414            /*  DMA28 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA28_YMOD                       0x31026418            /*  DMA28 Outer Loop Address Increment (2D only) Register */
#define REG_DMA28_DSCPTR_CUR                 0x31026424            /*  DMA28 Current Descriptor Pointer Register */
#define REG_DMA28_DSCPTR_PRV                 0x31026428            /*  DMA28 Previous Initial Descriptor Pointer Register */
#define REG_DMA28_ADDR_CUR                   0x3102642C            /*  DMA28 Current Address Register */
#define REG_DMA28_STAT                       0x31026430            /*  DMA28 Status Register */
#define REG_DMA28_XCNT_CUR                   0x31026434            /*  DMA28 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA28_YCNT_CUR                   0x31026438            /*  DMA28 Current Row Count (2D only) Register */
#define REG_DMA28_BWLCNT                     0x31026440            /*  DMA28 Bandwidth Limit Count Register */
#define REG_DMA28_BWLCNT_CUR                 0x31026444            /*  DMA28 Bandwidth Limit Count Current Register */
#define REG_DMA28_BWMCNT                     0x31026448            /*  DMA28 Bandwidth Monitor Count Register */
#define REG_DMA28_BWMCNT_CUR                 0x3102644C            /*  DMA28 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA29
   ============================================================================================================================ */
#define REG_DMA29_DSCPTR_NXT                 0x31026480            /*  DMA29 Pointer to Next Initial Descriptor Register */
#define REG_DMA29_ADDRSTART                  0x31026484            /*  DMA29 Start Address of Current Buffer Register */
#define REG_DMA29_CFG                        0x31026488            /*  DMA29 Configuration Register */
#define REG_DMA29_XCNT                       0x3102648C            /*  DMA29 Inner Loop Count Start Value Register */
#define REG_DMA29_XMOD                       0x31026490            /*  DMA29 Inner Loop Address Increment Register */
#define REG_DMA29_YCNT                       0x31026494            /*  DMA29 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA29_YMOD                       0x31026498            /*  DMA29 Outer Loop Address Increment (2D only) Register */
#define REG_DMA29_DSCPTR_CUR                 0x310264A4            /*  DMA29 Current Descriptor Pointer Register */
#define REG_DMA29_DSCPTR_PRV                 0x310264A8            /*  DMA29 Previous Initial Descriptor Pointer Register */
#define REG_DMA29_ADDR_CUR                   0x310264AC            /*  DMA29 Current Address Register */
#define REG_DMA29_STAT                       0x310264B0            /*  DMA29 Status Register */
#define REG_DMA29_XCNT_CUR                   0x310264B4            /*  DMA29 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA29_YCNT_CUR                   0x310264B8            /*  DMA29 Current Row Count (2D only) Register */
#define REG_DMA29_BWLCNT                     0x310264C0            /*  DMA29 Bandwidth Limit Count Register */
#define REG_DMA29_BWLCNT_CUR                 0x310264C4            /*  DMA29 Bandwidth Limit Count Current Register */
#define REG_DMA29_BWMCNT                     0x310264C8            /*  DMA29 Bandwidth Monitor Count Register */
#define REG_DMA29_BWMCNT_CUR                 0x310264CC            /*  DMA29 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA34
   ============================================================================================================================ */
#define REG_DMA34_DSCPTR_NXT                 0x31026180            /*  DMA34 Pointer to Next Initial Descriptor Register */
#define REG_DMA34_ADDRSTART                  0x31026184            /*  DMA34 Start Address of Current Buffer Register */
#define REG_DMA34_CFG                        0x31026188            /*  DMA34 Configuration Register */
#define REG_DMA34_XCNT                       0x3102618C            /*  DMA34 Inner Loop Count Start Value Register */
#define REG_DMA34_XMOD                       0x31026190            /*  DMA34 Inner Loop Address Increment Register */
#define REG_DMA34_YCNT                       0x31026194            /*  DMA34 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA34_YMOD                       0x31026198            /*  DMA34 Outer Loop Address Increment (2D only) Register */
#define REG_DMA34_DSCPTR_CUR                 0x310261A4            /*  DMA34 Current Descriptor Pointer Register */
#define REG_DMA34_DSCPTR_PRV                 0x310261A8            /*  DMA34 Previous Initial Descriptor Pointer Register */
#define REG_DMA34_ADDR_CUR                   0x310261AC            /*  DMA34 Current Address Register */
#define REG_DMA34_STAT                       0x310261B0            /*  DMA34 Status Register */
#define REG_DMA34_XCNT_CUR                   0x310261B4            /*  DMA34 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA34_YCNT_CUR                   0x310261B8            /*  DMA34 Current Row Count (2D only) Register */
#define REG_DMA34_BWLCNT                     0x310261C0            /*  DMA34 Bandwidth Limit Count Register */
#define REG_DMA34_BWLCNT_CUR                 0x310261C4            /*  DMA34 Bandwidth Limit Count Current Register */
#define REG_DMA34_BWMCNT                     0x310261C8            /*  DMA34 Bandwidth Monitor Count Register */
#define REG_DMA34_BWMCNT_CUR                 0x310261CC            /*  DMA34 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA35
   ============================================================================================================================ */
#define REG_DMA35_DSCPTR_NXT                 0x31026100            /*  DMA35 Pointer to Next Initial Descriptor Register */
#define REG_DMA35_ADDRSTART                  0x31026104            /*  DMA35 Start Address of Current Buffer Register */
#define REG_DMA35_CFG                        0x31026108            /*  DMA35 Configuration Register */
#define REG_DMA35_XCNT                       0x3102610C            /*  DMA35 Inner Loop Count Start Value Register */
#define REG_DMA35_XMOD                       0x31026110            /*  DMA35 Inner Loop Address Increment Register */
#define REG_DMA35_YCNT                       0x31026114            /*  DMA35 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA35_YMOD                       0x31026118            /*  DMA35 Outer Loop Address Increment (2D only) Register */
#define REG_DMA35_DSCPTR_CUR                 0x31026124            /*  DMA35 Current Descriptor Pointer Register */
#define REG_DMA35_DSCPTR_PRV                 0x31026128            /*  DMA35 Previous Initial Descriptor Pointer Register */
#define REG_DMA35_ADDR_CUR                   0x3102612C            /*  DMA35 Current Address Register */
#define REG_DMA35_STAT                       0x31026130            /*  DMA35 Status Register */
#define REG_DMA35_XCNT_CUR                   0x31026134            /*  DMA35 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA35_YCNT_CUR                   0x31026138            /*  DMA35 Current Row Count (2D only) Register */
#define REG_DMA35_BWLCNT                     0x31026140            /*  DMA35 Bandwidth Limit Count Register */
#define REG_DMA35_BWLCNT_CUR                 0x31026144            /*  DMA35 Bandwidth Limit Count Current Register */
#define REG_DMA35_BWMCNT                     0x31026148            /*  DMA35 Bandwidth Monitor Count Register */
#define REG_DMA35_BWMCNT_CUR                 0x3102614C            /*  DMA35 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA37
   ============================================================================================================================ */
#define REG_DMA37_DSCPTR_NXT                 0x31026280            /*  DMA37 Pointer to Next Initial Descriptor Register */
#define REG_DMA37_ADDRSTART                  0x31026284            /*  DMA37 Start Address of Current Buffer Register */
#define REG_DMA37_CFG                        0x31026288            /*  DMA37 Configuration Register */
#define REG_DMA37_XCNT                       0x3102628C            /*  DMA37 Inner Loop Count Start Value Register */
#define REG_DMA37_XMOD                       0x31026290            /*  DMA37 Inner Loop Address Increment Register */
#define REG_DMA37_YCNT                       0x31026294            /*  DMA37 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA37_YMOD                       0x31026298            /*  DMA37 Outer Loop Address Increment (2D only) Register */
#define REG_DMA37_DSCPTR_CUR                 0x310262A4            /*  DMA37 Current Descriptor Pointer Register */
#define REG_DMA37_DSCPTR_PRV                 0x310262A8            /*  DMA37 Previous Initial Descriptor Pointer Register */
#define REG_DMA37_ADDR_CUR                   0x310262AC            /*  DMA37 Current Address Register */
#define REG_DMA37_STAT                       0x310262B0            /*  DMA37 Status Register */
#define REG_DMA37_XCNT_CUR                   0x310262B4            /*  DMA37 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA37_YCNT_CUR                   0x310262B8            /*  DMA37 Current Row Count (2D only) Register */
#define REG_DMA37_BWLCNT                     0x310262C0            /*  DMA37 Bandwidth Limit Count Register */
#define REG_DMA37_BWLCNT_CUR                 0x310262C4            /*  DMA37 Bandwidth Limit Count Current Register */
#define REG_DMA37_BWMCNT                     0x310262C8            /*  DMA37 Bandwidth Monitor Count Register */
#define REG_DMA37_BWMCNT_CUR                 0x310262CC            /*  DMA37 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA38
   ============================================================================================================================ */
#define REG_DMA38_DSCPTR_NXT                 0x31026200            /*  DMA38 Pointer to Next Initial Descriptor Register */
#define REG_DMA38_ADDRSTART                  0x31026204            /*  DMA38 Start Address of Current Buffer Register */
#define REG_DMA38_CFG                        0x31026208            /*  DMA38 Configuration Register */
#define REG_DMA38_XCNT                       0x3102620C            /*  DMA38 Inner Loop Count Start Value Register */
#define REG_DMA38_XMOD                       0x31026210            /*  DMA38 Inner Loop Address Increment Register */
#define REG_DMA38_YCNT                       0x31026214            /*  DMA38 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA38_YMOD                       0x31026218            /*  DMA38 Outer Loop Address Increment (2D only) Register */
#define REG_DMA38_DSCPTR_CUR                 0x31026224            /*  DMA38 Current Descriptor Pointer Register */
#define REG_DMA38_DSCPTR_PRV                 0x31026228            /*  DMA38 Previous Initial Descriptor Pointer Register */
#define REG_DMA38_ADDR_CUR                   0x3102622C            /*  DMA38 Current Address Register */
#define REG_DMA38_STAT                       0x31026230            /*  DMA38 Status Register */
#define REG_DMA38_XCNT_CUR                   0x31026234            /*  DMA38 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA38_YCNT_CUR                   0x31026238            /*  DMA38 Current Row Count (2D only) Register */
#define REG_DMA38_BWLCNT                     0x31026240            /*  DMA38 Bandwidth Limit Count Register */
#define REG_DMA38_BWLCNT_CUR                 0x31026244            /*  DMA38 Bandwidth Limit Count Current Register */
#define REG_DMA38_BWMCNT                     0x31026248            /*  DMA38 Bandwidth Monitor Count Register */
#define REG_DMA38_BWMCNT_CUR                 0x3102624C            /*  DMA38 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA53
   ============================================================================================================================ */
#define REG_DMA53_DSCPTR_NXT                 0x31026380            /*  DMA53 Pointer to Next Initial Descriptor Register */
#define REG_DMA53_ADDRSTART                  0x31026384            /*  DMA53 Start Address of Current Buffer Register */
#define REG_DMA53_CFG                        0x31026388            /*  DMA53 Configuration Register */
#define REG_DMA53_XCNT                       0x3102638C            /*  DMA53 Inner Loop Count Start Value Register */
#define REG_DMA53_XMOD                       0x31026390            /*  DMA53 Inner Loop Address Increment Register */
#define REG_DMA53_YCNT                       0x31026394            /*  DMA53 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA53_YMOD                       0x31026398            /*  DMA53 Outer Loop Address Increment (2D only) Register */
#define REG_DMA53_DSCPTR_CUR                 0x310263A4            /*  DMA53 Current Descriptor Pointer Register */
#define REG_DMA53_DSCPTR_PRV                 0x310263A8            /*  DMA53 Previous Initial Descriptor Pointer Register */
#define REG_DMA53_ADDR_CUR                   0x310263AC            /*  DMA53 Current Address Register */
#define REG_DMA53_STAT                       0x310263B0            /*  DMA53 Status Register */
#define REG_DMA53_XCNT_CUR                   0x310263B4            /*  DMA53 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA53_YCNT_CUR                   0x310263B8            /*  DMA53 Current Row Count (2D only) Register */
#define REG_DMA53_BWLCNT                     0x310263C0            /*  DMA53 Bandwidth Limit Count Register */
#define REG_DMA53_BWLCNT_CUR                 0x310263C4            /*  DMA53 Bandwidth Limit Count Current Register */
#define REG_DMA53_BWMCNT                     0x310263C8            /*  DMA53 Bandwidth Monitor Count Register */
#define REG_DMA53_BWMCNT_CUR                 0x310263CC            /*  DMA53 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA54
   ============================================================================================================================ */
#define REG_DMA54_DSCPTR_NXT                 0x31026300            /*  DMA54 Pointer to Next Initial Descriptor Register */
#define REG_DMA54_ADDRSTART                  0x31026304            /*  DMA54 Start Address of Current Buffer Register */
#define REG_DMA54_CFG                        0x31026308            /*  DMA54 Configuration Register */
#define REG_DMA54_XCNT                       0x3102630C            /*  DMA54 Inner Loop Count Start Value Register */
#define REG_DMA54_XMOD                       0x31026310            /*  DMA54 Inner Loop Address Increment Register */
#define REG_DMA54_YCNT                       0x31026314            /*  DMA54 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA54_YMOD                       0x31026318            /*  DMA54 Outer Loop Address Increment (2D only) Register */
#define REG_DMA54_DSCPTR_CUR                 0x31026324            /*  DMA54 Current Descriptor Pointer Register */
#define REG_DMA54_DSCPTR_PRV                 0x31026328            /*  DMA54 Previous Initial Descriptor Pointer Register */
#define REG_DMA54_ADDR_CUR                   0x3102632C            /*  DMA54 Current Address Register */
#define REG_DMA54_STAT                       0x31026330            /*  DMA54 Status Register */
#define REG_DMA54_XCNT_CUR                   0x31026334            /*  DMA54 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA54_YCNT_CUR                   0x31026338            /*  DMA54 Current Row Count (2D only) Register */
#define REG_DMA54_BWLCNT                     0x31026340            /*  DMA54 Bandwidth Limit Count Register */
#define REG_DMA54_BWLCNT_CUR                 0x31026344            /*  DMA54 Bandwidth Limit Count Current Register */
#define REG_DMA54_BWMCNT                     0x31026348            /*  DMA54 Bandwidth Monitor Count Register */
#define REG_DMA54_BWMCNT_CUR                 0x3102634C            /*  DMA54 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Octal SPI
   ============================================================================================================================ */

/* ============================================================================================================================
        OSPI0
   ============================================================================================================================ */
#define REG_OSPI0_CTL                        0x31027000            /*  OSPI0 Octal SPI Control Register */
#define REG_OSPI0_DRICTL                     0x31027004            /*  OSPI0 Device Read Instruction Control Register */
#define REG_OSPI0_DWICTL                     0x31027008            /*  OSPI0 Device Write Instruction Control Register */
#define REG_OSPI0_DLY                        0x3102700C            /*  OSPI0 Device Delay Register */
#define REG_OSPI0_RDC                        0x31027010            /*  OSPI0 Read Data Capture Register */
#define REG_OSPI0_DSCTL                      0x31027014            /*  OSPI0 Device Size Control Register */
#define REG_OSPI0_REMAPADDR                  0x31027024            /*  OSPI0 Remap Address Register */
#define REG_OSPI0_MBCTL                      0x31027028            /*  OSPI0 Mode Bit Control Register */
#define REG_OSPI0_WCCTL                      0x31027038            /*  OSPI0 Write Completion Control Register */
#define REG_OSPI0_POLLEXP                    0x3102703C            /*  OSPI0 Polling Expiration Register */
#define REG_OSPI0_ISTAT                      0x31027040            /*  OSPI0 Interrupt Status Register */
#define REG_OSPI0_IMSK                       0x31027044            /*  OSPI0 Interrupt Mask Register */
#define REG_OSPI0_WRPROT_LWR                 0x31027050            /*  OSPI0 Lower Write Protection Register */
#define REG_OSPI0_WRPROT_UP                  0x31027054            /*  OSPI0 Upper Write Protection Register */
#define REG_OSPI0_WRPROT_CTL                 0x31027058            /*  OSPI0 Write Protection Control Register */
#define REG_OSPI0_FCMCTL                     0x3102708C            /*  OSPI0 Flash Command Control Memory Register */
#define REG_OSPI0_FCCTL                      0x31027090            /*  OSPI0 Flash Command Control Register */
#define REG_OSPI0_FCA                        0x31027094            /*  OSPI0 Flash Command Address Register */
#define REG_OSPI0_FCRD_LWR                   0x310270A0            /*  OSPI0 Flash Command Read Data Register (Lower) */
#define REG_OSPI0_FCRD_UP                    0x310270A4            /*  OSPI0 Flash Command Read Data Register (Upper) */
#define REG_OSPI0_FCWD_LWR                   0x310270A8            /*  OSPI0 Flash Command Write Data Register (Lower) */
#define REG_OSPI0_FCWD_UP                    0x310270AC            /*  OSPI0 Flash Command Write Data Register (Upper) */
#define REG_OSPI0_POLSTAT                    0x310270B0            /*  OSPI0 Polling Flash Status Register */
#define REG_OSPI0_PHYCTL                     0x310270B4            /*  OSPI0 PHY Control Register */
#define REG_OSPI0_PHYMCTL                    0x310270B8            /*  OSPI0 PHY DLL Master Control Register */
#define REG_OSPI0_DLLOB_LWR                  0x310270BC            /*  OSPI0 DLL Observable Register (Lower) */
#define REG_OSPI0_DLLOB_UP                   0x310270C0            /*  OSPI0 DLL Observable Register (Upper) */
#define REG_OSPI0_OE_LWR                     0x310270E0            /*  OSPI0 Opcode Extension Register (Lower) */
#define REG_OSPI0_OE_UP                      0x310270E4            /*  OSPI0 Opcode Extension Register (Upper) */
#define REG_OSPI0_MODID                      0x310270FC            /*  OSPI0 Module ID Register */

/* ============================================================================================================================
        OSPI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_CTL_IDLE                   31            /*  Idle */
#define BITP_OSPI_CTL_OPCODEEN               30            /*  Dual Byte Opcode Enable */
#define BITP_OSPI_CTL_PIPEPHYEN              25            /*  Pipeline PHY Mode Enable */
#define BITP_OSPI_CTL_DTREN                  24            /*  Enable DTR Protocol */
#define BITP_OSPI_CTL_BAUD                   19            /*  Master Mode Baud Rate Divisor (2 to 32) */
#define BITP_OSPI_CTL_XIPIMM                 18            /*  Enter XIP Mode Immediately */
#define BITP_OSPI_CTL_XIPRD                  17            /*  Enter XIP Mode on Next Read */
#define BITP_OSPI_CTL_AHBADDREN              16            /*  Enable AHB Address Remapping */
#define BITP_OSPI_CTL_WRPROT                 14            /*  Write Protect Flash */
#define BITP_OSPI_CTL_SSEL                   10            /*  Peripheral Chip Select Lines */
#define BITP_OSPI_CTL_SSELDCODE               9            /*  Peripheral Select Decode */
#define BITP_OSPI_CTL_DACEN                   7            /*  Direct Access Controller Enable */
#define BITP_OSPI_CTL_RSTCFG                  6            /*  Reset Configuration */
#define BITP_OSPI_CTL_RST                     5            /*  Reset Pin */
#define BITP_OSPI_CTL_HLD                     4            /*  Hold Pin */
#define BITP_OSPI_CTL_PHYEN                   3            /*  PHY Mode Enable */
#define BITP_OSPI_CTL_CPHA                    2            /*  Clock Phase */
#define BITP_OSPI_CTL_CPOL                    1            /*  Clock Polarity */
#define BITP_OSPI_CTL_EN                      0            /*  Enable */
#define BITM_OSPI_CTL_IDLE                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Idle */
#define BITM_OSPI_CTL_OPCODEEN               (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Dual Byte Opcode Enable */
#define BITM_OSPI_CTL_PIPEPHYEN              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Pipeline PHY Mode Enable */
#define BITM_OSPI_CTL_DTREN                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Enable DTR Protocol */
#define BITM_OSPI_CTL_BAUD                   (_ADI_MSK_3(0x00780000,0x00780000UL, uint32_t  ))    /*  Master Mode Baud Rate Divisor (2 to 32) */
#define BITM_OSPI_CTL_XIPIMM                 (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Enter XIP Mode Immediately */
#define BITM_OSPI_CTL_XIPRD                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Enter XIP Mode on Next Read */
#define BITM_OSPI_CTL_AHBADDREN              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Enable AHB Address Remapping */
#define BITM_OSPI_CTL_WRPROT                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Write Protect Flash */
#define BITM_OSPI_CTL_SSEL                   (_ADI_MSK_3(0x00003C00,0x00003C00UL, uint32_t  ))    /*  Peripheral Chip Select Lines */
#define BITM_OSPI_CTL_SSELDCODE              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Peripheral Select Decode */
#define BITM_OSPI_CTL_DACEN                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Direct Access Controller Enable */
#define BITM_OSPI_CTL_RSTCFG                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Reset Configuration */
#define BITM_OSPI_CTL_RST                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Reset Pin */
#define BITM_OSPI_CTL_HLD                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Hold Pin */
#define BITM_OSPI_CTL_PHYEN                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  PHY Mode Enable */
#define BITM_OSPI_CTL_CPHA                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clock Phase */
#define BITM_OSPI_CTL_CPOL                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock Polarity */
#define BITM_OSPI_CTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */
#define ENUM_OSPI_CTL_XIPIMM_0               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  XIPIMM: If XIP is enabled, it causes the controller to exit XIP mode on the next read instruction */
#define ENUM_OSPI_CTL_XIPIMM_1               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  XIPIMM: Operate the device in XIP mode immediately */
#define ENUM_OSPI_CTL_XIPRD_0                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  XIPRD: If XIP is enabled, it cause the controller to exit XIP mode on the next read instruction */
#define ENUM_OSPI_CTL_XIPRD_1                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  XIPRD: If XIP is disabled, this setting informs the controller that the device is ready to enter XIP on the next read instruction */
#define ENUM_OSPI_CTL_SSELDCODE_0            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSELDCODE: Only one of the 4 selects n_ss_out [3:0] is active */
#define ENUM_OSPI_CTL_SSELDCODE_1            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  SSELDCODE: Allows external 4:16 decode (n_ss_out = ss) */
#define ENUM_OSPI_CTL_DACEN_0                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DACEN: Disable Direct Access Controller once current transfer of the data word is complete */
#define ENUM_OSPI_CTL_DACEN_1                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  DACEN: Enable Direct Access Controller */
#define ENUM_OSPI_CTL_RSTCFG_0               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RSTCFG: Reset Feature on DQ3 Pin of the Device */
#define ENUM_OSPI_CTL_RSTCFG_1               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  RSTCFG: Reset Feature on Dedicated Pin of the Device (Controlling the 5th bit Influences the Output) */
#define ENUM_OSPI_CTL_CPHA_0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CPHA: SPI clock is active outside the word */
#define ENUM_OSPI_CTL_CPHA_1                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  CPHA: SPI clock is inactive outside the word */
#define ENUM_OSPI_CTL_CPOL_0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CPOL: OSPI clock is quiescent low */
#define ENUM_OSPI_CTL_CPOL_1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CPOL: OSPI clock is quiescent high */
#define ENUM_OSPI_CTL_DIS                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable OSPI Module */
#define ENUM_OSPI_CTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable OSPI Module */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_DRICTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_DRICTL_DMYRD               24            /*  Dummy Read Clock Cycles */
#define BITP_OSPI_DRICTL_MODEEN              20            /*  Mode Enable */
#define BITP_OSPI_DRICTL_DATATRNSFR          16            /*  Data Transfer Type */
#define BITP_OSPI_DRICTL_ADDRTRNSFR          12            /*  Address Transfer Type */
#define BITP_OSPI_DRICTL_DDREN               10            /*  DDR Enable */
#define BITP_OSPI_DRICTL_INSTRTYP             8            /*  Instruction Type */
#define BITP_OSPI_DRICTL_OPCODERD             0            /*  Read Opcode in Non-XIP Mode */
#define BITM_OSPI_DRICTL_DMYRD               (_ADI_MSK_3(0x1F000000,0x1F000000UL, uint32_t  ))    /*  Dummy Read Clock Cycles */
#define BITM_OSPI_DRICTL_MODEEN              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Mode Enable */
#define BITM_OSPI_DRICTL_DATATRNSFR          (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Data Transfer Type */
#define BITM_OSPI_DRICTL_ADDRTRNSFR          (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Address Transfer Type */
#define BITM_OSPI_DRICTL_DDREN               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  DDR Enable */
#define BITM_OSPI_DRICTL_INSTRTYP            (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Instruction Type */
#define BITM_OSPI_DRICTL_OPCODERD            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read Opcode in Non-XIP Mode */
#define ENUM_OSPI_DRICTL_DATATRNSFR_0        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DATATRNSFR: SIO Mode. */
#define ENUM_OSPI_DRICTL_DATATRNSFR_1        (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  DATATRNSFR: Used for Dual Input/Output instructions. */
#define ENUM_OSPI_DRICTL_DATATRNSFR_2        (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  DATATRNSFR: Used for Quad Input/Output instructions. */
#define ENUM_OSPI_DRICTL_DATATRNSFR_3        (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  DATATRNSFR: Used for Quad Input/Output instructions. */
#define ENUM_OSPI_DRICTL_ADDRTRNSFR_0        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ0 only. */
#define ENUM_OSPI_DRICTL_ADDRTRNSFR_1        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ0 and DQ1 only. */
#define ENUM_OSPI_DRICTL_ADDRTRNSFR_2        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ0, DQ1, DQ2, and DQ3. */
#define ENUM_OSPI_DRICTL_ADDRTRNSFR_3        (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ [7:0] */
#define ENUM_OSPI_DRICTL_INSTRTYP_0          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  INSTRTYP: Use standard SPI mode. */
#define ENUM_OSPI_DRICTL_INSTRTYP_1          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  INSTRTYP: Use DIO-SPI mode. */
#define ENUM_OSPI_DRICTL_INSTRTYP_2          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  INSTRTYP: Use QIO-SPI mode. */
#define ENUM_OSPI_DRICTL_INSTRTYP_3          (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  INSTRTYP: Use OIO-SPI mode. */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_DWICTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_DWICTL_DMYWR               24            /*  Dummy Write Clock Cycles */
#define BITP_OSPI_DWICTL_DATATRNSFR          16            /*  Data Transfer Type */
#define BITP_OSPI_DWICTL_ADDRTRNSFR          12            /*  Address Transfer Type */
#define BITP_OSPI_DWICTL_WELDIS               8            /*  WEL Disable */
#define BITP_OSPI_DWICTL_OPCODEWR             0            /*  Write Opcode */
#define BITM_OSPI_DWICTL_DMYWR               (_ADI_MSK_3(0x1F000000,0x1F000000UL, uint32_t  ))    /*  Dummy Write Clock Cycles */
#define BITM_OSPI_DWICTL_DATATRNSFR          (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Data Transfer Type */
#define BITM_OSPI_DWICTL_ADDRTRNSFR          (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Address Transfer Type */
#define BITM_OSPI_DWICTL_WELDIS              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  WEL Disable */
#define BITM_OSPI_DWICTL_OPCODEWR            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Write Opcode */
#define ENUM_OSPI_DWICTL_DATATRNSFR_0        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DATATRNSFR: SIO Mode. */
#define ENUM_OSPI_DWICTL_DATATRNSFR_1        (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  DATATRNSFR: Used for Dual Input/Output instructions. */
#define ENUM_OSPI_DWICTL_DATATRNSFR_2        (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  DATATRNSFR: Used for Octal Input/Output Instructions. */
#define ENUM_OSPI_DWICTL_DATATRNSFR_3        (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  DATATRNSFR: Used for Octal Input/Output instructions. */
#define ENUM_OSPI_DWICTL_ADDRTRNSFR_0        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ0 only. */
#define ENUM_OSPI_DWICTL_ADDRTRNSFR_1        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ0 and DQ1. */
#define ENUM_OSPI_DWICTL_ADDRTRNSFR_2        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ0, DQ1, DQ2, and DQ3. */
#define ENUM_OSPI_DWICTL_ADDRTRNSFR_3        (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  ADDRTRNSFR: Addresses can be shifted to the device on DQ [7:0]. */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_DLY                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_DLY_DSRT                   24            /*  Clock Delay for Chip Select Deassert */
#define BITP_OSPI_DLY_DACT                   16            /*  Clock Delay for Chip Select Deactivation */
#define BITP_OSPI_DLY_LSTTRAN                 8            /*  Clock Delay for Last Transaction */
#define BITP_OSPI_DLY_INIT                    0            /*  Clock Delay */
#define BITM_OSPI_DLY_DSRT                   (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Clock Delay for Chip Select Deassert */
#define BITM_OSPI_DLY_DACT                   (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Clock Delay for Chip Select Deactivation */
#define BITM_OSPI_DLY_LSTTRAN                (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Clock Delay for Last Transaction */
#define BITM_OSPI_DLY_INIT                   (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Clock Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_RDC                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_RDC_DDRDLYRD               16            /*  DDR Read Delay */
#define BITP_OSPI_RDC_DQSEN                   8            /*  DQS Enable */
#define BITP_OSPI_RDC_SMPLEDG                 5            /*  Sample Edge Selection */
#define BITP_OSPI_RDC_DLYRD                   1            /*  Read Delay */
#define BITM_OSPI_RDC_DDRDLYRD               (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  DDR Read Delay */
#define BITM_OSPI_RDC_DQSEN                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  DQS Enable */
#define BITM_OSPI_RDC_SMPLEDG                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Sample Edge Selection */
#define BITM_OSPI_RDC_DLYRD                  (_ADI_MSK_3(0x0000001E,0x0000001EUL, uint32_t  ))    /*  Read Delay */
#define ENUM_OSPI_RDC_SMPLEDG_0              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SMPLEDG: Data outputs from Flash are sampled on falling edge of the ref_clk. */
#define ENUM_OSPI_RDC_SMPLEDG_1              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  SMPLEDG: Data outputs from Flash are sampled on rising edge of the ref_clk. */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_DSCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_DSCTL_BLKSZ                16            /*  Number of Bytes per Block */
#define BITP_OSPI_DSCTL_PGSZ                  4            /*  Number of Bytes per Device Page */
#define BITP_OSPI_DSCTL_ADDRSZ                0            /*  Number of Address Bytes */
#define BITM_OSPI_DSCTL_BLKSZ                (_ADI_MSK_3(0x001F0000,0x001F0000UL, uint32_t  ))    /*  Number of Bytes per Block */
#define BITM_OSPI_DSCTL_PGSZ                 (_ADI_MSK_3(0x0000FFF0,0x0000FFF0UL, uint32_t  ))    /*  Number of Bytes per Device Page */
#define BITM_OSPI_DSCTL_ADDRSZ               (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Number of Address Bytes */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_REMAPADDR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_REMAPADDR_OFFSET            0            /*  Value */
#define BITM_OSPI_REMAPADDR_OFFSET           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Value */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_MBCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_MBCTL_MODE                  0            /*  Mode */
#define BITM_OSPI_MBCTL_MODE                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_WCCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_WCCTL_REPDLY               24            /*  Polling Repetition Delay */
#define BITP_OSPI_WCCTL_CNT                  16            /*  Poll Count */
#define BITP_OSPI_WCCTL_EXPEN                15            /*  Enable Polling Expiration */
#define BITP_OSPI_WCCTL_DIS                  14            /*  Disable Polling */
#define BITP_OSPI_WCCTL_POLRTY               13            /*  Polling Polarity */
#define BITP_OSPI_WCCTL_INDEX                 8            /*  Polling Index */
#define BITP_OSPI_WCCTL_OPCODE                0            /*  Opcode */
#define BITM_OSPI_WCCTL_REPDLY               (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Polling Repetition Delay */
#define BITM_OSPI_WCCTL_CNT                  (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Poll Count */
#define BITM_OSPI_WCCTL_EXPEN                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Enable Polling Expiration */
#define BITM_OSPI_WCCTL_DIS                  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Disable Polling */
#define BITM_OSPI_WCCTL_POLRTY               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Polling Polarity */
#define BITM_OSPI_WCCTL_INDEX                (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  Polling Index */
#define BITM_OSPI_WCCTL_OPCODE               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Opcode */
#define ENUM_OSPI_WCCTL_POLRTY_0             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  POLRTY: Write transfer to the device will be complete if the polled bit is 0. */
#define ENUM_OSPI_WCCTL_POLRTY_1             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  POLRTY: Write transfer to the device will be complete if the polled bit is 1. */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_POLLEXP                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_POLLEXP_PEC                 0            /*  Poll Expiration Cycles */
#define BITM_OSPI_POLLEXP_PEC                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Poll Expiration Cycles */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_ISTAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_ISTAT_STIGREQ              14            /*  STIG Request Completion Interrupt */
#define BITP_OSPI_ISTAT_POLEXP               13            /*  Poll Expiration Cycles */
#define BITP_OSPI_ISTAT_ILLACCES              5            /*  Illegal AHB Access Detected */
#define BITP_OSPI_ISTAT_WRPROT                4            /*  Write to Protected Area is Attempted and Rejected */
#define BITP_OSPI_ISTAT_UNDRFLW               1            /*  Underflow Detection */
#define BITM_OSPI_ISTAT_STIGREQ              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  STIG Request Completion Interrupt */
#define BITM_OSPI_ISTAT_POLEXP               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Poll Expiration Cycles */
#define BITM_OSPI_ISTAT_ILLACCES             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Illegal AHB Access Detected */
#define BITM_OSPI_ISTAT_WRPROT               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Write to Protected Area is Attempted and Rejected */
#define BITM_OSPI_ISTAT_UNDRFLW              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Underflow Detection */
#define ENUM_OSPI_ISTAT_UNDRFLW_0            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  UNDRFLW: No underflow is detected. */
#define ENUM_OSPI_ISTAT_UNDRFLW_1            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  UNDRFLW: underflow is detected and an attempt to transfer data is made when the small TX FIFO is empty. */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_IMSK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_IMSK_STIGREQ_MSK           14            /*  STIG Request Completion Mask */
#define BITP_OSPI_IMSK_POLEXP_MSK            13            /*  Polling Expiration Detected Mask */
#define BITP_OSPI_IMSK_ILLACCES_MSK           5            /*  Illegal Access Detected Mask */
#define BITP_OSPI_IMSK_WRPROT_MSK             4            /*  Protected Area Write Attempt Mask */
#define BITP_OSPI_IMSK_UNDRFLW_MSK            1            /*  Underflow Detected Mask */
#define BITP_OSPI_IMSK_MODEFAIL_MSK           0            /*  Mode M Failure Mask */
#define BITM_OSPI_IMSK_STIGREQ_MSK           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  STIG Request Completion Mask */
#define BITM_OSPI_IMSK_POLEXP_MSK            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Polling Expiration Detected Mask */
#define BITM_OSPI_IMSK_ILLACCES_MSK          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Illegal Access Detected Mask */
#define BITM_OSPI_IMSK_WRPROT_MSK            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Protected Area Write Attempt Mask */
#define BITM_OSPI_IMSK_UNDRFLW_MSK           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Underflow Detected Mask */
#define BITM_OSPI_IMSK_MODEFAIL_MSK          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Mode M Failure Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_WRPROT_LWR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_WRPROT_LWR_SUBSECT          0            /*  Subsector */
#define BITM_OSPI_WRPROT_LWR_SUBSECT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Subsector */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_WRPROT_UP                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_WRPROT_UP_SUBSECT           0            /*  Subsector */
#define BITM_OSPI_WRPROT_UP_SUBSECT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Subsector */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_WRPROT_CTL                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_WRPROT_CTL_EN               1            /*  Write Protection Enable Bit */
#define BITP_OSPI_WRPROT_CTL_INV              0            /*  Write Protection Inversion Bit */
#define BITM_OSPI_WRPROT_CTL_EN              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Write Protection Enable Bit */
#define BITM_OSPI_WRPROT_CTL_INV             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Write Protection Inversion Bit */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCMCTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCMCTL_BNKADDR             20            /*  Memory Bank Address */
#define BITP_OSPI_FCMCTL_RDSZ                16            /*  Number of STIG Bytes */
#define BITP_OSPI_FCMCTL_BNKDATA              8            /*  Last Requested Data from STIG Memory Bank */
#define BITP_OSPI_FCMCTL_BNKREQ               1            /*  Memory Bank Data Request in Progress */
#define BITP_OSPI_FCMCTL_TRIGREQ              0            /*  Trigger Memory Bank Data Request */
#define BITM_OSPI_FCMCTL_BNKADDR             (_ADI_MSK_3(0x1FF00000,0x1FF00000UL, uint32_t  ))    /*  Memory Bank Address */
#define BITM_OSPI_FCMCTL_RDSZ                (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  Number of STIG Bytes */
#define BITM_OSPI_FCMCTL_BNKDATA             (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Last Requested Data from STIG Memory Bank */
#define BITM_OSPI_FCMCTL_BNKREQ              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Memory Bank Data Request in Progress */
#define BITM_OSPI_FCMCTL_TRIGREQ             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Trigger Memory Bank Data Request */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCCTL_OPCODE               24            /*  Command Opcode */
#define BITP_OSPI_FCCTL_RDEN                 23            /*  Read Data Enable */
#define BITP_OSPI_FCCTL_RDSZ                 20            /*  Number of Read Data Bytes */
#define BITP_OSPI_FCCTL_ADDREN               19            /*  Command Address Enable */
#define BITP_OSPI_FCCTL_MODEEN               18            /*  Mode Bit Enable */
#define BITP_OSPI_FCCTL_ADDRSZ               16            /*  Number of Address Bytes */
#define BITP_OSPI_FCCTL_WREN                 15            /*  Write Data Enable */
#define BITP_OSPI_FCCTL_WRSZ                 12            /*  Number of Write Data Bytes */
#define BITP_OSPI_FCCTL_DMY                   7            /*  Number of Dummy Cycles */
#define BITP_OSPI_FCCTL_STIGBNKEN             2            /*  STIG Memory Bank Enable */
#define BITP_OSPI_FCCTL_STAT                  1            /*  Command Execution in Progress */
#define BITP_OSPI_FCCTL_EXE                   0            /*  Execute the STIG Command */
#define BITM_OSPI_FCCTL_OPCODE               (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Command Opcode */
#define BITM_OSPI_FCCTL_RDEN                 (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Read Data Enable */
#define BITM_OSPI_FCCTL_RDSZ                 (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  Number of Read Data Bytes */
#define BITM_OSPI_FCCTL_ADDREN               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Command Address Enable */
#define BITM_OSPI_FCCTL_MODEEN               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Mode Bit Enable */
#define BITM_OSPI_FCCTL_ADDRSZ               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Number of Address Bytes */
#define BITM_OSPI_FCCTL_WREN                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Write Data Enable */
#define BITM_OSPI_FCCTL_WRSZ                 (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  Number of Write Data Bytes */
#define BITM_OSPI_FCCTL_DMY                  (_ADI_MSK_3(0x00000F80,0x00000F80UL, uint32_t  ))    /*  Number of Dummy Cycles */
#define BITM_OSPI_FCCTL_STIGBNKEN            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  STIG Memory Bank Enable */
#define BITM_OSPI_FCCTL_STAT                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Command Execution in Progress */
#define BITM_OSPI_FCCTL_EXE                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Execute the STIG Command */
#define ENUM_OSPI_FCCTL_OPCODE_0             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  OPCODE: Command opcode, command address, command dummy bytes, and command data are serially transferred. */
#define ENUM_OSPI_FCCTL_OPCODE_1             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  OPCODE: Command opcode, command address, command dummy bytes, and command data are transferred in parallel using DQ0 and DQ1 pins. */
#define ENUM_OSPI_FCCTL_OPCODE_2             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  OPCODE: Command opcode, command address, command dummy bytes, and command data are transferred in parallel using DQ0 , DQ1, and DQ2 pins. */
#define ENUM_OSPI_FCCTL_OPCODE_3             (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  OPCODE: Reserved */
#define ENUM_OSPI_FCCTL_ADDRSZ_0             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ADDRSZ: 1 address byte */
#define ENUM_OSPI_FCCTL_ADDRSZ_1             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  ADDRSZ: 2 address bytes */
#define ENUM_OSPI_FCCTL_ADDRSZ_2             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  ADDRSZ: 3 address bytes */
#define ENUM_OSPI_FCCTL_ADDRSZ_3             (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  ADDRSZ: 4 address bytes */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCA                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCA_ADDR                    0            /*  Command Address */
#define BITM_OSPI_FCA_ADDR                   (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Command Address */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCRD_LWR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCRD_LWR_DATA               0            /*  Data */
#define BITM_OSPI_FCRD_LWR_DATA              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCRD_UP                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCRD_UP_DATA                0            /*  Data */
#define BITM_OSPI_FCRD_UP_DATA               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCWD_LWR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCWD_LWR_DATA               0            /*  Command Write Data Lower Byte */
#define BITM_OSPI_FCWD_LWR_DATA              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Command Write Data Lower Byte */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_FCWD_UP                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_FCWD_UP_DATA                0            /*  Command Write Data Upper Byte */
#define BITM_OSPI_FCWD_UP_DATA               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Command Write Data Upper Byte */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_POLSTAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_POLSTAT_DMY                16            /*  Number of Dummy Cycles for Auto Polling */
#define BITP_OSPI_POLSTAT_STAT                8            /*  Device Status Valid */
#define BITP_OSPI_POLSTAT_DEVSTAT             0            /*  Defines Actual Status Register of Device */
#define BITM_OSPI_POLSTAT_DMY                (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Number of Dummy Cycles for Auto Polling */
#define BITM_OSPI_POLSTAT_STAT               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Device Status Valid */
#define BITM_OSPI_POLSTAT_DEVSTAT            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Defines Actual Status Register of Device */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_PHYCTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_PHYCTL_RESYNC              31            /*  Re-synchronization Delay */
#define BITP_OSPI_PHYCTL_RST                 30            /*  DLL Reset */
#define BITP_OSPI_PHYCTL_RXBYP               29            /*  Receive DLL Bypass */
#define BITP_OSPI_PHYCTL_RSVRD2              23            /*  Reserved */
#define BITP_OSPI_PHYCTL_TXDLY               16            /*  Transmit DLL Delay */
#define BITP_OSPI_PHYCTL_RSVRD1               7            /*  Reserved */
#define BITP_OSPI_PHYCTL_RXDLY                0            /*  Receive DLL Delay */
#define BITM_OSPI_PHYCTL_RESYNC              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Re-synchronization Delay */
#define BITM_OSPI_PHYCTL_RST                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  DLL Reset */
#define BITM_OSPI_PHYCTL_RXBYP               (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Receive DLL Bypass */
#define BITM_OSPI_PHYCTL_RSVRD2              (_ADI_MSK_3(0x1F800000,0x1F800000UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_PHYCTL_TXDLY               (_ADI_MSK_3(0x007F0000,0x007F0000UL, uint32_t  ))    /*  Transmit DLL Delay */
#define BITM_OSPI_PHYCTL_RSVRD1              (_ADI_MSK_3(0x0000FF80,0x0000FF80UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_PHYCTL_RXDLY               (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Receive DLL Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_PHYMCTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_PHYMCTL_RSVRD3             25            /*  Reserved */
#define BITP_OSPI_PHYMCTL_LCK                24            /*  PHY Master Lock Mode */
#define BITP_OSPI_PHYMCTL_BYPCTL             23            /*  Bypass Mode Control */
#define BITP_OSPI_PHYMCTL_PDSEL              20            /*  PHY Master Phase Detect Selector */
#define BITP_OSPI_PHYMCTL_RSVRD2             19            /*  Reserved */
#define BITP_OSPI_PHYMCTL_IND                16            /*  Increment/Decrement Indication */
#define BITP_OSPI_PHYMCTL_RSVRD1              7            /*  Reserved */
#define BITP_OSPI_PHYMCTL_INITDLY             0            /*  Initial Delay */
#define BITM_OSPI_PHYMCTL_RSVRD3             (_ADI_MSK_3(0xFE000000,0xFE000000UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_PHYMCTL_LCK                (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  PHY Master Lock Mode */
#define BITM_OSPI_PHYMCTL_BYPCTL             (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Bypass Mode Control */
#define BITM_OSPI_PHYMCTL_PDSEL              (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  PHY Master Phase Detect Selector */
#define BITM_OSPI_PHYMCTL_RSVRD2             (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_PHYMCTL_IND                (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  Increment/Decrement Indication */
#define BITM_OSPI_PHYMCTL_RSVRD1             (_ADI_MSK_3(0x0000FF80,0x0000FF80UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_PHYMCTL_INITDLY            (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Initial Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_DLLOB_LWR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_DLLOB_LWR_INCSTAT          24            /*  State of Cumulative DLL Lock Inc Register */
#define BITP_OSPI_DLLOB_LWR_DECSTAT          16            /*  State of Cumulative DLL Lock Dec Register */
#define BITP_OSPI_DLLOB_LWR_LOCK_LB          15            /*  Loop Back Lock */
#define BITP_OSPI_DLLOB_LWR_LWRLOCK           8            /*  DLL Observable Lower Lock Value */
#define BITP_OSPI_DLLOB_LWR_UNLOCK            3            /*  DLL Observable Lower Unlock Counter */
#define BITP_OSPI_DLLOB_LWR_LOCK              1            /*  Mode in Which DLL is Locked */
#define BITP_OSPI_DLLOB_LWR_STAT              0            /*  Indicates DLL Status */
#define BITM_OSPI_DLLOB_LWR_INCSTAT          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  State of Cumulative DLL Lock Inc Register */
#define BITM_OSPI_DLLOB_LWR_DECSTAT          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  State of Cumulative DLL Lock Dec Register */
#define BITM_OSPI_DLLOB_LWR_LOCK_LB          (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Loop Back Lock */
#define BITM_OSPI_DLLOB_LWR_LWRLOCK          (_ADI_MSK_3(0x00007F00,0x00007F00UL, uint32_t  ))    /*  DLL Observable Lower Lock Value */
#define BITM_OSPI_DLLOB_LWR_UNLOCK           (_ADI_MSK_3(0x000000F8,0x000000F8UL, uint32_t  ))    /*  DLL Observable Lower Unlock Counter */
#define BITM_OSPI_DLLOB_LWR_LOCK             (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  Mode in Which DLL is Locked */
#define BITM_OSPI_DLLOB_LWR_STAT             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Indicates DLL Status */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_DLLOB_UP                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_DLLOB_UP_RSVRD2            23            /*  Reserved */
#define BITP_OSPI_DLLOB_UP_TXOP              16            /*  DLL Observable Upper Transmit Decoder Output */
#define BITP_OSPI_DLLOB_UP_RSVRD1             7            /*  Reserved */
#define BITP_OSPI_DLLOB_UP_RXOP               0            /*  DLL Observable  Upper Receive Decoder Output */
#define BITM_OSPI_DLLOB_UP_RSVRD2            (_ADI_MSK_3(0xFF800000,0xFF800000UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_DLLOB_UP_TXOP              (_ADI_MSK_3(0x007F0000,0x007F0000UL, uint32_t  ))    /*  DLL Observable Upper Transmit Decoder Output */
#define BITM_OSPI_DLLOB_UP_RSVRD1            (_ADI_MSK_3(0x0000FF80,0x0000FF80UL, uint32_t  ))    /*  Reserved */
#define BITM_OSPI_DLLOB_UP_RXOP              (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  DLL Observable  Upper Receive Decoder Output */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_OE_LWR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_OE_LWR_XRDBYT              24            /*  Supplement Byte of Any Read Opcode */
#define BITP_OSPI_OE_LWR_XWRBYT              16            /*  Supplement Byte of Any Write Opcode */
#define BITP_OSPI_OE_LWR_XPOLBYT              8            /*  Supplement Byte of Any Polling Opcode */
#define BITP_OSPI_OE_LWR_XSTIGBYT             0            /*  Supplement Byte of Any STIG Opcode */
#define BITM_OSPI_OE_LWR_XRDBYT              (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Supplement Byte of Any Read Opcode */
#define BITM_OSPI_OE_LWR_XWRBYT              (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Supplement Byte of Any Write Opcode */
#define BITM_OSPI_OE_LWR_XPOLBYT             (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Supplement Byte of Any Polling Opcode */
#define BITM_OSPI_OE_LWR_XSTIGBYT            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Supplement Byte of Any STIG Opcode */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_OE_UP                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_OE_UP_FSTBYTWEL            24            /*  First Byte of Any WEL Opcode */
#define BITP_OSPI_OE_UP_XBYTWEL              16            /*  Supplement Byte of Any WEL Opcode */
#define BITM_OSPI_OE_UP_FSTBYTWEL            (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  First Byte of Any WEL Opcode */
#define BITM_OSPI_OE_UP_XBYTWEL              (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Supplement Byte of Any WEL Opcode */

/* -------------------------------------------------------------------------------------------------------------------------
          OSPI_MODID                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_OSPI_MODID_PATCH                24            /*  Fix/Patch Number */
#define BITP_OSPI_MODID_REVID                 8            /*  Module/Revision ID Number */
#define BITP_OSPI_MODID_CFGID                 0            /*  Configuration ID */
#define BITM_OSPI_MODID_PATCH                (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Fix/Patch Number */
#define BITM_OSPI_MODID_REVID                (_ADI_MSK_3(0x00FFFF00,0x00FFFF00UL, uint32_t  ))    /*  Module/Revision ID Number */
#define BITM_OSPI_MODID_CFGID                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Configuration ID */


/* ============================================================================================================================
        Enhanced Parallel Peripheral Interface
   ============================================================================================================================ */

/* ============================================================================================================================
        EPPI0
   ============================================================================================================================ */
#define REG_EPPI0_STAT                       0x31029000            /*  EPPI0 Status Register */
#define REG_EPPI0_HCNT                       0x31029004            /*  EPPI0 Horizontal Transfer Count Register */
#define REG_EPPI0_HDLY                       0x31029008            /*  EPPI0 Horizontal Delay Count Register */
#define REG_EPPI0_VCNT                       0x3102900C            /*  EPPI0 Vertical Transfer Count Register */
#define REG_EPPI0_VDLY                       0x31029010            /*  EPPI0 Vertical Delay Count Register */
#define REG_EPPI0_FRAME                      0x31029014            /*  EPPI0 Lines Per Frame Register */
#define REG_EPPI0_LINE                       0x31029018            /*  EPPI0 Samples Per Line Register */
#define REG_EPPI0_CLKDIV                     0x3102901C            /*  EPPI0 Clock Divide Register */
#define REG_EPPI0_CTL                        0x31029020            /*  EPPI0 Control Register */
#define REG_EPPI0_FS1_WLHB                   0x31029024            /*  EPPI0 FS1 Width Register / EPPI Horizontal Blanking Samples Per Line Register */
#define REG_EPPI0_FS1_PASPL                  0x31029028            /*  EPPI0 FS1 Period Register / EPPI Active Samples Per Line Register */
#define REG_EPPI0_FS2_WLVB                   0x3102902C            /*  EPPI0 FS2 Width Register / EPPI Lines Of Vertical Blanking Register */
#define REG_EPPI0_FS2_PALPF                  0x31029030            /*  EPPI0 FS2 Period Register / EPPI Active Lines Per Field Register */
#define REG_EPPI0_IMSK                       0x31029034            /*  EPPI0 Interrupt Mask Register */
#define REG_EPPI0_ODDCLIP                    0x3102903C            /*  EPPI0 Clipping Register for ODD (Chroma) Data Register */
#define REG_EPPI0_EVENCLIP                   0x31029040            /*  EPPI0 Clipping Register for EVEN (Luma) Data Register */
#define REG_EPPI0_FS1_DLY                    0x31029044            /*  EPPI0 Frame Sync 1 Delay Value Register */
#define REG_EPPI0_FS2_DLY                    0x31029048            /*  EPPI0 Frame Sync 2 Delay Value Register */
#define REG_EPPI0_CTL2                       0x3102904C            /*  EPPI0 Control Register 2 Register */

/* ============================================================================================================================
        EPPI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_STAT_FLD                   15            /*  Current Field Received by EPPI */
#define BITP_EPPI_STAT_ERRDET                14            /*  Preamble Error Detected */
#define BITP_EPPI_STAT_PXPERR                 7            /*  PxP Ready Error */
#define BITP_EPPI_STAT_ERRNCOR                6            /*  Preamble Error Not Corrected */
#define BITP_EPPI_STAT_FTERRUNDR              5            /*  Frame Track Underflow */
#define BITP_EPPI_STAT_FTERROVR               4            /*  Frame Track Overflow */
#define BITP_EPPI_STAT_LTERRUNDR              3            /*  Line Track Underflow */
#define BITP_EPPI_STAT_LTERROVR               2            /*  Line Track Overflow */
#define BITP_EPPI_STAT_YFIFOERR               1            /*  Luma FIFO Error */
#define BITP_EPPI_STAT_CFIFOERR               0            /*  Chroma FIFO Error */
#define BITM_EPPI_STAT_FLD                   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Current Field Received by EPPI */
#define BITM_EPPI_STAT_ERRDET                (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Preamble Error Detected */
#define BITM_EPPI_STAT_PXPERR                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  PxP Ready Error */
#define BITM_EPPI_STAT_ERRNCOR               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Preamble Error Not Corrected */
#define BITM_EPPI_STAT_FTERRUNDR             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Frame Track Underflow */
#define BITM_EPPI_STAT_FTERROVR              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Frame Track Overflow */
#define BITM_EPPI_STAT_LTERRUNDR             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Line Track Underflow */
#define BITM_EPPI_STAT_LTERROVR              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Line Track Overflow */
#define BITM_EPPI_STAT_YFIFOERR              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Luma FIFO Error */
#define BITM_EPPI_STAT_CFIFOERR              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Chroma FIFO Error */
#define ENUM_EPPI_STAT_FIELD1                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FLD: Field 1 */
#define ENUM_EPPI_STAT_FIELD2                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  FLD: Field 2 */
#define ENUM_EPPI_STAT_NO_PRERR              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRDET: No Preamble Error Detected */
#define ENUM_EPPI_STAT_PRERR                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  ERRDET: Preamble Error Detected */
#define ENUM_EPPI_STAT_NO_ERRNCOR            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRNCOR: No uncorrected preamble error has occurred */
#define ENUM_EPPI_STAT_ERRNCOR               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  ERRNCOR: Preamble error detected but not corrected */
#define ENUM_EPPI_STAT_NO_FTERRUNDR          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FTERRUNDR: No Error Detected */
#define ENUM_EPPI_STAT_FTERRUNDR             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  FTERRUNDR: Error Occurred */
#define ENUM_EPPI_STAT_NO_FTERROVR           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FTERROVR: No Error Detected */
#define ENUM_EPPI_STAT_FTERROVR              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  FTERROVR: Error Occurred */
#define ENUM_EPPI_STAT_NO_LTERRUNDR          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LTERRUNDR: No Error Detected */
#define ENUM_EPPI_STAT_LTERRUNDR             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  LTERRUNDR: Error Occurred */
#define ENUM_EPPI_STAT_NO_LTERROVR           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LTERROVR: No Error Detected */
#define ENUM_EPPI_STAT_LTERROVR              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  LTERROVR: Error Occurred */
#define ENUM_EPPI_STAT_NO_YFIFOERR           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  YFIFOERR: No Error Detected */
#define ENUM_EPPI_STAT_YFIFOERR              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  YFIFOERR: Error Occurred */
#define ENUM_EPPI_STAT_NO_CFIFOERR           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CFIFOERR: No Error Detected */
#define ENUM_EPPI_STAT_CFIFOERR              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CFIFOERR: Error Occurred */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_HCNT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_HCNT_VALUE                  0            /*  Horizontal Transfer Count */
#define BITM_EPPI_HCNT_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Horizontal Transfer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_HDLY                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_HDLY_VALUE                  0            /*  Horizontal Delay Count */
#define BITM_EPPI_HDLY_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Horizontal Delay Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_VCNT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_VCNT_VALUE                  0            /*  Vertical Transfer Count */
#define BITM_EPPI_VCNT_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Vertical Transfer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_VDLY                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_VDLY_VALUE                  0            /*  Vertical Delay Count */
#define BITM_EPPI_VDLY_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Vertical Delay Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FRAME                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FRAME_VALUE                 0            /*  Lines Per Frame */
#define BITM_EPPI_FRAME_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Lines Per Frame */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_LINE                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_LINE_VALUE                  0            /*  Samples Per Line */
#define BITM_EPPI_LINE_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Samples Per Line */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_CLKDIV                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_CLKDIV_VALUE                0            /*  Internal Clock Divider */
#define BITM_EPPI_CLKDIV_VALUE               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Internal Clock Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_CTL_CLKGATEN               31            /*  Clock Gating Enable */
#define BITP_EPPI_CTL_MUXSEL                 30            /*  MUX Select */
#define BITP_EPPI_CTL_DMAFINEN               29            /*  DMA Finish Enable */
#define BITP_EPPI_CTL_DMACFG                 28            /*  One or Two DMA Channels Mode */
#define BITP_EPPI_CTL_RGBFMTEN               27            /*  RGB Formatting Enable */
#define BITP_EPPI_CTL_SPLTWRD                26            /*  Split Word */
#define BITP_EPPI_CTL_SUBSPLTODD             25            /*  Sub-Split Odd Samples */
#define BITP_EPPI_CTL_SPLTEO                 24            /*  Split Even and Odd Data Samples */
#define BITP_EPPI_CTL_SWAPEN                 23            /*  Swap Enable */
#define BITP_EPPI_CTL_PACKEN                 22            /*  Pack/Unpack Enable */
#define BITP_EPPI_CTL_SKIPEO                 21            /*  Skip Even or Odd */
#define BITP_EPPI_CTL_SKIPEN                 20            /*  Skip Enable */
#define BITP_EPPI_CTL_DMIRR                  19            /*  Data Mirroring */
#define BITP_EPPI_CTL_DLEN                   16            /*  Data Length */
#define BITP_EPPI_CTL_POLS                   14            /*  Frame Sync Polarity */
#define BITP_EPPI_CTL_POLC                   12            /*  Clock Polarity */
#define BITP_EPPI_CTL_SIGNEXT                11            /*  Sign Extension */
#define BITP_EPPI_CTL_IFSGEN                 10            /*  Internal Frame Sync Generation */
#define BITP_EPPI_CTL_ICLKGEN                 9            /*  Internal Clock Generation */
#define BITP_EPPI_CTL_BLANKGEN                8            /*  Blanking Generation (ITU Output Mode) */
#define BITP_EPPI_CTL_ITUTYPE                 7            /*  ITU Interlace or Progressive */
#define BITP_EPPI_CTL_FLDSEL                  6            /*  Field Select/Trigger */
#define BITP_EPPI_CTL_FSCFG                   4            /*  Frame Sync Configuration */
#define BITP_EPPI_CTL_XFRTYPE                 2            /*  Transfer Type ( Operating Mode) */
#define BITP_EPPI_CTL_DIR                     1            /*  PPI Direction */
#define BITP_EPPI_CTL_EN                      0            /*  PPI Enable */
#define BITM_EPPI_CTL_CLKGATEN               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Gating Enable */
#define BITM_EPPI_CTL_MUXSEL                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  MUX Select */
#define BITM_EPPI_CTL_DMAFINEN               (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  DMA Finish Enable */
#define BITM_EPPI_CTL_DMACFG                 (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  One or Two DMA Channels Mode */
#define BITM_EPPI_CTL_RGBFMTEN               (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  RGB Formatting Enable */
#define BITM_EPPI_CTL_SPLTWRD                (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Split Word */
#define BITM_EPPI_CTL_SUBSPLTODD             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Sub-Split Odd Samples */
#define BITM_EPPI_CTL_SPLTEO                 (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Split Even and Odd Data Samples */
#define BITM_EPPI_CTL_SWAPEN                 (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Swap Enable */
#define BITM_EPPI_CTL_PACKEN                 (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Pack/Unpack Enable */
#define BITM_EPPI_CTL_SKIPEO                 (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Skip Even or Odd */
#define BITM_EPPI_CTL_SKIPEN                 (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Skip Enable */
#define BITM_EPPI_CTL_DMIRR                  (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Data Mirroring */
#define BITM_EPPI_CTL_DLEN                   (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  Data Length */
#define BITM_EPPI_CTL_POLS                   (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  Frame Sync Polarity */
#define BITM_EPPI_CTL_POLC                   (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Clock Polarity */
#define BITM_EPPI_CTL_SIGNEXT                (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Sign Extension */
#define BITM_EPPI_CTL_IFSGEN                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Internal Frame Sync Generation */
#define BITM_EPPI_CTL_ICLKGEN                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Internal Clock Generation */
#define BITM_EPPI_CTL_BLANKGEN               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Blanking Generation (ITU Output Mode) */
#define BITM_EPPI_CTL_ITUTYPE                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  ITU Interlace or Progressive */
#define BITM_EPPI_CTL_FLDSEL                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Field Select/Trigger */
#define BITM_EPPI_CTL_FSCFG                  (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Frame Sync Configuration */
#define BITM_EPPI_CTL_XFRTYPE                (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  Transfer Type ( Operating Mode) */
#define BITM_EPPI_CTL_DIR                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PPI Direction */
#define BITM_EPPI_CTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  PPI Enable */
#define ENUM_EPPI_CTL_CLKGATE_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CLKGATEN: Disable */
#define ENUM_EPPI_CTL_CLKGATE_EN             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  CLKGATEN: Enable */
#define ENUM_EPPI_CTL_MUXSEL0                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MUXSEL: Normal Operation */
#define ENUM_EPPI_CTL_MUXSEL1                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  MUXSEL: Multiplexed Operation */
#define ENUM_EPPI_CTL_FINISH_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DMAFINEN: No Finish Command */
#define ENUM_EPPI_CTL_FINISH_EN              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  DMAFINEN: Enable Send Finish Command */
#define ENUM_EPPI_CTL_DMA1CHAN               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DMACFG: PPI Uses One DMA Channel */
#define ENUM_EPPI_CTL_DMA2CHAN               (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  DMACFG: PPI Uses Two DMA Channels */
#define ENUM_EPPI_CTL_RGBFMT_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RGBFMTEN: Disable RGB Formatted Output */
#define ENUM_EPPI_CTL_RGBFMT_EN              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  RGBFMTEN: Enable RGB Formatted Output */
#define ENUM_EPPI_CTL_NO_WORDSPLIT           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SPLTWRD: PPI_DATA has (DLEN-1) bits of Y or Cr or Cb */
#define ENUM_EPPI_CTL_WORDSPLIT              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  SPLTWRD: PPI_DATA Contains 2 Elements per Word */
#define ENUM_EPPI_CTL_NO_SUBSPLIT            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SUBSPLTODD: Disable */
#define ENUM_EPPI_CTL_SUBSPLIT_ODD           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  SUBSPLTODD: Enable */
#define ENUM_EPPI_CTL_SPLTEO_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SPLTEO: Do Not Split Samples */
#define ENUM_EPPI_CTL_SPLTEO_EN              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  SPLTEO: Split Even/Odd Samples */
#define ENUM_EPPI_CTL_SWAP_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SWAPEN: Disable */
#define ENUM_EPPI_CTL_SWAP_EN                (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  SWAPEN: Enable */
#define ENUM_EPPI_CTL_PACK_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PACKEN: Disable */
#define ENUM_EPPI_CTL_PACK_EN                (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  PACKEN: Enable */
#define ENUM_EPPI_CTL_SKIPODD                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SKIPEO: Skip Odd Samples */
#define ENUM_EPPI_CTL_SKIPEVEN               (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SKIPEO: Skip Even Samples */
#define ENUM_EPPI_CTL_NO_SKIP                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SKIPEN: No Samples Skipping */
#define ENUM_EPPI_CTL_SKIP                   (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SKIPEN: Skip Alternate Samples */
#define ENUM_EPPI_CTL_NO_MIRROR              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DMIRR: No Data Mirroring */
#define ENUM_EPPI_CTL_MIRROR                 (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  DMIRR: Data Mirroring */
#define ENUM_EPPI_CTL_DLEN08                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DLEN: 8 bits */
#define ENUM_EPPI_CTL_DLEN10                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  DLEN: 10 bits */
#define ENUM_EPPI_CTL_DLEN12                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  DLEN: 12 bits */
#define ENUM_EPPI_CTL_DLEN14                 (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  DLEN: 14 bits */
#define ENUM_EPPI_CTL_DLEN16                 (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  DLEN: 16 bits */
#define ENUM_EPPI_CTL_DLEN18                 (_ADI_MSK_3(0x00050000,0x00050000UL, uint32_t  ))    /*  DLEN: 18 bits */
#define ENUM_EPPI_CTL_DLEN20                 (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  DLEN: 20 bits */
#define ENUM_EPPI_CTL_DLEN24                 (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  DLEN: 24 bits */
#define ENUM_EPPI_CTL_FS1HI_FS2HI            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  POLS: FS1 and FS2 are active high */
#define ENUM_EPPI_CTL_FS1LO_FS2HI            (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  POLS: FS1 is active low. FS2 is active high */
#define ENUM_EPPI_CTL_FS1HI_FS2LO            (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  POLS: FS1 is active high. FS2 is active low */
#define ENUM_EPPI_CTL_FS1LO_FS2LO            (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  POLS: FS1 and FS2 are active low */
#define ENUM_EPPI_CTL_POLC00                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  POLC: Clock/Sync Polarity Mode 0. */
#define ENUM_EPPI_CTL_POLC01                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  POLC: Clock/Sync Polarity Mode 1. */
#define ENUM_EPPI_CTL_POLC10                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  POLC: Clock/Sync Polarity Mode 2. */
#define ENUM_EPPI_CTL_POLC11                 (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  POLC: Clock/Sync Polarity Mode 3. */
#define ENUM_EPPI_CTL_ZEROFILL               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SIGNEXT: Zero Filled */
#define ENUM_EPPI_CTL_SIGNEXT                (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  SIGNEXT: Sign Extended */
#define ENUM_EPPI_CTL_EXTFS                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IFSGEN: External Frame Sync */
#define ENUM_EPPI_CTL_INTFS                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  IFSGEN: Internal Frame Sync */
#define ENUM_EPPI_CTL_EXTCLK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ICLKGEN: External Clock */
#define ENUM_EPPI_CTL_INTCLK                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ICLKGEN: Internal Clock */
#define ENUM_EPPI_CTL_NO_BLANKGEN            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BLANKGEN: Disable */
#define ENUM_EPPI_CTL_BLANKGEN               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  BLANKGEN: Enable */
#define ENUM_EPPI_CTL_INTERLACED             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ITUTYPE: Interlaced */
#define ENUM_EPPI_CTL_PROGRESSIVE            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  ITUTYPE: Progressive */
#define ENUM_EPPI_CTL_FLDSEL_LO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FLDSEL: Field Mode 0. */
#define ENUM_EPPI_CTL_FLDSEL_HI              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  FLDSEL: Field Mode 1 */
#define ENUM_EPPI_CTL_SYNC0                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FSCFG: Sync Mode 0. */
#define ENUM_EPPI_CTL_SYNC1                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  FSCFG: Sync Mode 1. */
#define ENUM_EPPI_CTL_SYNC2                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  FSCFG: Sync Mode 2. */
#define ENUM_EPPI_CTL_SYNC3                  (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  FSCFG: Sync Mode 3. */
#define ENUM_EPPI_CTL_ACTIVE656              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  XFRTYPE: ITU656 Active Video Only Mode */
#define ENUM_EPPI_CTL_ENTIRE656              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  XFRTYPE: ITU656 Entire Field Mode */
#define ENUM_EPPI_CTL_VERT656                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  XFRTYPE: ITU656 Vertical Blanking Only Mode */
#define ENUM_EPPI_CTL_NON656                 (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  XFRTYPE: Non-ITU656 Mode (GP Mode) */
#define ENUM_EPPI_CTL_RXMODE                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DIR: Receive Mode */
#define ENUM_EPPI_CTL_TXMODE                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DIR: Transmit Mode */
#define ENUM_EPPI_CTL_DIS                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_EPPI_CTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FS1_WLHB                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FS1_WLHB_VALUE              0            /*  Frame Sync Width or Blanking Samples Number */
#define BITM_EPPI_FS1_WLHB_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Frame Sync Width or Blanking Samples Number */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FS1_PASPL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FS1_PASPL_VALUE             0            /*  Frame Sync Period or Samples Number */
#define BITM_EPPI_FS1_PASPL_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Frame Sync Period or Samples Number */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FS2_WLVB                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FS2_WLVB_F2VBAD            24            /*  Field 2 Vertical Blanking After Data */
#define BITP_EPPI_FS2_WLVB_F2VBBD            16            /*  Field 2 Vertical Blanking Before Data */
#define BITP_EPPI_FS2_WLVB_F1VBAD             8            /*  Field 1 Vertical Blanking After Data */
#define BITP_EPPI_FS2_WLVB_F1VBBD             0            /*  Field 1 Vertical Blanking Before Data */
#define BITM_EPPI_FS2_WLVB_F2VBAD            (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Field 2 Vertical Blanking After Data */
#define BITM_EPPI_FS2_WLVB_F2VBBD            (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Field 2 Vertical Blanking Before Data */
#define BITM_EPPI_FS2_WLVB_F1VBAD            (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Field 1 Vertical Blanking After Data */
#define BITM_EPPI_FS2_WLVB_F1VBBD            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Field 1 Vertical Blanking Before Data */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FS2_PALPF                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FS2_PALPF_F2ACT            16            /*  Field 2 Active */
#define BITP_EPPI_FS2_PALPF_F1ACT             0            /*  Field 1 Active */
#define BITM_EPPI_FS2_PALPF_F2ACT            (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Field 2 Active */
#define BITM_EPPI_FS2_PALPF_F1ACT            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Field 1 Active */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_IMSK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_IMSK_PXPERR                 7            /*  PxP Ready Error Interrupt Mask */
#define BITP_EPPI_IMSK_ERRNCOR                6            /*  ITU Preamble Error Not Corrected Interrupt Mask */
#define BITP_EPPI_IMSK_FTERRUNDR              5            /*  Frame Track Underflow Error Interrupt Mask */
#define BITP_EPPI_IMSK_FTERROVR               4            /*  Frame Track Overflow Error Interrupt Mask */
#define BITP_EPPI_IMSK_LTERRUNDR              3            /*  Line Track Underflow Error Interrupt Mask */
#define BITP_EPPI_IMSK_LTERROVR               2            /*  Line Track Overflow Error Interrupt Mask */
#define BITP_EPPI_IMSK_YFIFOERR               1            /*  YFIFO Underflow or Overflow Error Interrupt Mask */
#define BITP_EPPI_IMSK_CFIFOERR               0            /*  CFIFO Underflow or Overflow Error Interrupt Mask */
#define BITM_EPPI_IMSK_PXPERR                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  PxP Ready Error Interrupt Mask */
#define BITM_EPPI_IMSK_ERRNCOR               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  ITU Preamble Error Not Corrected Interrupt Mask */
#define BITM_EPPI_IMSK_FTERRUNDR             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Frame Track Underflow Error Interrupt Mask */
#define BITM_EPPI_IMSK_FTERROVR              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Frame Track Overflow Error Interrupt Mask */
#define BITM_EPPI_IMSK_LTERRUNDR             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Line Track Underflow Error Interrupt Mask */
#define BITM_EPPI_IMSK_LTERROVR              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Line Track Overflow Error Interrupt Mask */
#define BITM_EPPI_IMSK_YFIFOERR              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  YFIFO Underflow or Overflow Error Interrupt Mask */
#define BITM_EPPI_IMSK_CFIFOERR              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CFIFO Underflow or Overflow Error Interrupt Mask */
#define ENUM_EPPI_IMSK_PXPERR_UMSK           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PXPERR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_PXPERR_MSK            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  PXPERR: Mask Interrupt */
#define ENUM_EPPI_IMSK_ERRNCOR_UMSK          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRNCOR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_ERRNCOR_MSK           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  ERRNCOR: Mask Interrupt */
#define ENUM_EPPI_IMSK_FTERRUNDR_UMSK        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FTERRUNDR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_FTERRUNDR_MSK         (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  FTERRUNDR: Mask Interrupt */
#define ENUM_EPPI_IMSK_FTERROVR_UMSK         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FTERROVR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_FTERROVR_MSK          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  FTERROVR: Mask Interrupt */
#define ENUM_EPPI_IMSK_LTERRUNDR_UMSK        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LTERRUNDR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_LTERRUNDR_MSK         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  LTERRUNDR: Mask Interrupt */
#define ENUM_EPPI_IMSK_LTERROVR_UMSK         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LTERROVR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_LTERROVR_MSK          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  LTERROVR: Mask Interrupt */
#define ENUM_EPPI_IMSK_YFIFOERR_UMSK         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  YFIFOERR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_YFIFOERR_MSK          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  YFIFOERR: Mask Interrupt */
#define ENUM_EPPI_IMSK_CFIFOERR_UMSK         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CFIFOERR: Unmask Interrupt */
#define ENUM_EPPI_IMSK_CFIFOERR_MSK          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CFIFOERR: Mask Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_ODDCLIP                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_ODDCLIP_HIGHODD            16            /*  High Odd Clipping Threshold (Chroma Data) */
#define BITP_EPPI_ODDCLIP_LOWODD              0            /*  Low Odd Clipping Threshold (Chroma Data) */
#define BITM_EPPI_ODDCLIP_HIGHODD            (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  High Odd Clipping Threshold (Chroma Data) */
#define BITM_EPPI_ODDCLIP_LOWODD             (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Low Odd Clipping Threshold (Chroma Data) */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_EVENCLIP                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_EVENCLIP_HIGHEVEN          16            /*  High Even Clipping Threshold (Luma Data) */
#define BITP_EPPI_EVENCLIP_LOWEVEN            0            /*  Low Even Clipping Threshold (Luma Data) */
#define BITM_EPPI_EVENCLIP_HIGHEVEN          (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  High Even Clipping Threshold (Luma Data) */
#define BITM_EPPI_EVENCLIP_LOWEVEN           (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Low Even Clipping Threshold (Luma Data) */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FS1_DLY                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FS1_DLY_FS1_DLY             0            /*  Frame Sync 1 Delay Count */
#define BITM_EPPI_FS1_DLY_FS1_DLY            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Frame Sync 1 Delay Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_FS2_DLY                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_FS2_DLY_FS2_DLY             0            /*  Frame Sync 2 Delay Count */
#define BITM_EPPI_FS2_DLY_FS2_DLY            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Frame Sync 2 Delay Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EPPI_CTL2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EPPI_CTL2_FS1FINEN               1            /*  HSYNC Finish Enable */
#define BITM_EPPI_CTL2_FS1FINEN              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  HSYNC Finish Enable */
#define ENUM_EPPI_CTL2_FS2FIN_EN             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FS1FINEN: Finish sent after frame RX done. */
#define ENUM_EPPI_CTL2_FS1FIN_EN             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  FS1FINEN: Finish sent after frame/line RX done. */


/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA22
   ============================================================================================================================ */
#define REG_DMA22_DSCPTR_NXT                 0x3102D000            /*  DMA22 Pointer to Next Initial Descriptor Register */
#define REG_DMA22_ADDRSTART                  0x3102D004            /*  DMA22 Start Address of Current Buffer Register */
#define REG_DMA22_CFG                        0x3102D008            /*  DMA22 Configuration Register */
#define REG_DMA22_XCNT                       0x3102D00C            /*  DMA22 Inner Loop Count Start Value Register */
#define REG_DMA22_XMOD                       0x3102D010            /*  DMA22 Inner Loop Address Increment Register */
#define REG_DMA22_YCNT                       0x3102D014            /*  DMA22 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA22_YMOD                       0x3102D018            /*  DMA22 Outer Loop Address Increment (2D only) Register */
#define REG_DMA22_DSCPTR_CUR                 0x3102D024            /*  DMA22 Current Descriptor Pointer Register */
#define REG_DMA22_DSCPTR_PRV                 0x3102D028            /*  DMA22 Previous Initial Descriptor Pointer Register */
#define REG_DMA22_ADDR_CUR                   0x3102D02C            /*  DMA22 Current Address Register */
#define REG_DMA22_STAT                       0x3102D030            /*  DMA22 Status Register */
#define REG_DMA22_XCNT_CUR                   0x3102D034            /*  DMA22 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA22_YCNT_CUR                   0x3102D038            /*  DMA22 Current Row Count (2D only) Register */
#define REG_DMA22_BWLCNT                     0x3102D040            /*  DMA22 Bandwidth Limit Count Register */
#define REG_DMA22_BWLCNT_CUR                 0x3102D044            /*  DMA22 Bandwidth Limit Count Current Register */
#define REG_DMA22_BWMCNT                     0x3102D048            /*  DMA22 Bandwidth Monitor Count Register */
#define REG_DMA22_BWMCNT_CUR                 0x3102D04C            /*  DMA22 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA23
   ============================================================================================================================ */
#define REG_DMA23_DSCPTR_NXT                 0x3102D080            /*  DMA23 Pointer to Next Initial Descriptor Register */
#define REG_DMA23_ADDRSTART                  0x3102D084            /*  DMA23 Start Address of Current Buffer Register */
#define REG_DMA23_CFG                        0x3102D088            /*  DMA23 Configuration Register */
#define REG_DMA23_XCNT                       0x3102D08C            /*  DMA23 Inner Loop Count Start Value Register */
#define REG_DMA23_XMOD                       0x3102D090            /*  DMA23 Inner Loop Address Increment Register */
#define REG_DMA23_YCNT                       0x3102D094            /*  DMA23 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA23_YMOD                       0x3102D098            /*  DMA23 Outer Loop Address Increment (2D only) Register */
#define REG_DMA23_DSCPTR_CUR                 0x3102D0A4            /*  DMA23 Current Descriptor Pointer Register */
#define REG_DMA23_DSCPTR_PRV                 0x3102D0A8            /*  DMA23 Previous Initial Descriptor Pointer Register */
#define REG_DMA23_ADDR_CUR                   0x3102D0AC            /*  DMA23 Current Address Register */
#define REG_DMA23_STAT                       0x3102D0B0            /*  DMA23 Status Register */
#define REG_DMA23_XCNT_CUR                   0x3102D0B4            /*  DMA23 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA23_YCNT_CUR                   0x3102D0B8            /*  DMA23 Current Row Count (2D only) Register */
#define REG_DMA23_BWLCNT                     0x3102D0C0            /*  DMA23 Bandwidth Limit Count Register */
#define REG_DMA23_BWLCNT_CUR                 0x3102D0C4            /*  DMA23 Bandwidth Limit Count Current Register */
#define REG_DMA23_BWMCNT                     0x3102D0C8            /*  DMA23 Bandwidth Monitor Count Register */
#define REG_DMA23_BWMCNT_CUR                 0x3102D0CC            /*  DMA23 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA24
   ============================================================================================================================ */
#define REG_DMA24_DSCPTR_NXT                 0x3102D100            /*  DMA24 Pointer to Next Initial Descriptor Register */
#define REG_DMA24_ADDRSTART                  0x3102D104            /*  DMA24 Start Address of Current Buffer Register */
#define REG_DMA24_CFG                        0x3102D108            /*  DMA24 Configuration Register */
#define REG_DMA24_XCNT                       0x3102D10C            /*  DMA24 Inner Loop Count Start Value Register */
#define REG_DMA24_XMOD                       0x3102D110            /*  DMA24 Inner Loop Address Increment Register */
#define REG_DMA24_YCNT                       0x3102D114            /*  DMA24 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA24_YMOD                       0x3102D118            /*  DMA24 Outer Loop Address Increment (2D only) Register */
#define REG_DMA24_DSCPTR_CUR                 0x3102D124            /*  DMA24 Current Descriptor Pointer Register */
#define REG_DMA24_DSCPTR_PRV                 0x3102D128            /*  DMA24 Previous Initial Descriptor Pointer Register */
#define REG_DMA24_ADDR_CUR                   0x3102D12C            /*  DMA24 Current Address Register */
#define REG_DMA24_STAT                       0x3102D130            /*  DMA24 Status Register */
#define REG_DMA24_XCNT_CUR                   0x3102D134            /*  DMA24 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA24_YCNT_CUR                   0x3102D138            /*  DMA24 Current Row Count (2D only) Register */
#define REG_DMA24_BWLCNT                     0x3102D140            /*  DMA24 Bandwidth Limit Count Register */
#define REG_DMA24_BWLCNT_CUR                 0x3102D144            /*  DMA24 Bandwidth Limit Count Current Register */
#define REG_DMA24_BWMCNT                     0x3102D148            /*  DMA24 Bandwidth Monitor Count Register */
#define REG_DMA24_BWMCNT_CUR                 0x3102D14C            /*  DMA24 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA25
   ============================================================================================================================ */
#define REG_DMA25_DSCPTR_NXT                 0x3102D180            /*  DMA25 Pointer to Next Initial Descriptor Register */
#define REG_DMA25_ADDRSTART                  0x3102D184            /*  DMA25 Start Address of Current Buffer Register */
#define REG_DMA25_CFG                        0x3102D188            /*  DMA25 Configuration Register */
#define REG_DMA25_XCNT                       0x3102D18C            /*  DMA25 Inner Loop Count Start Value Register */
#define REG_DMA25_XMOD                       0x3102D190            /*  DMA25 Inner Loop Address Increment Register */
#define REG_DMA25_YCNT                       0x3102D194            /*  DMA25 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA25_YMOD                       0x3102D198            /*  DMA25 Outer Loop Address Increment (2D only) Register */
#define REG_DMA25_DSCPTR_CUR                 0x3102D1A4            /*  DMA25 Current Descriptor Pointer Register */
#define REG_DMA25_DSCPTR_PRV                 0x3102D1A8            /*  DMA25 Previous Initial Descriptor Pointer Register */
#define REG_DMA25_ADDR_CUR                   0x3102D1AC            /*  DMA25 Current Address Register */
#define REG_DMA25_STAT                       0x3102D1B0            /*  DMA25 Status Register */
#define REG_DMA25_XCNT_CUR                   0x3102D1B4            /*  DMA25 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA25_YCNT_CUR                   0x3102D1B8            /*  DMA25 Current Row Count (2D only) Register */
#define REG_DMA25_BWLCNT                     0x3102D1C0            /*  DMA25 Bandwidth Limit Count Register */
#define REG_DMA25_BWLCNT_CUR                 0x3102D1C4            /*  DMA25 Bandwidth Limit Count Current Register */
#define REG_DMA25_BWMCNT                     0x3102D1C8            /*  DMA25 Bandwidth Monitor Count Register */
#define REG_DMA25_BWMCNT_CUR                 0x3102D1CC            /*  DMA25 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA26
   ============================================================================================================================ */
#define REG_DMA26_DSCPTR_NXT                 0x3102D200            /*  DMA26 Pointer to Next Initial Descriptor Register */
#define REG_DMA26_ADDRSTART                  0x3102D204            /*  DMA26 Start Address of Current Buffer Register */
#define REG_DMA26_CFG                        0x3102D208            /*  DMA26 Configuration Register */
#define REG_DMA26_XCNT                       0x3102D20C            /*  DMA26 Inner Loop Count Start Value Register */
#define REG_DMA26_XMOD                       0x3102D210            /*  DMA26 Inner Loop Address Increment Register */
#define REG_DMA26_YCNT                       0x3102D214            /*  DMA26 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA26_YMOD                       0x3102D218            /*  DMA26 Outer Loop Address Increment (2D only) Register */
#define REG_DMA26_DSCPTR_CUR                 0x3102D224            /*  DMA26 Current Descriptor Pointer Register */
#define REG_DMA26_DSCPTR_PRV                 0x3102D228            /*  DMA26 Previous Initial Descriptor Pointer Register */
#define REG_DMA26_ADDR_CUR                   0x3102D22C            /*  DMA26 Current Address Register */
#define REG_DMA26_STAT                       0x3102D230            /*  DMA26 Status Register */
#define REG_DMA26_XCNT_CUR                   0x3102D234            /*  DMA26 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA26_YCNT_CUR                   0x3102D238            /*  DMA26 Current Row Count (2D only) Register */
#define REG_DMA26_BWLCNT                     0x3102D240            /*  DMA26 Bandwidth Limit Count Register */
#define REG_DMA26_BWLCNT_CUR                 0x3102D244            /*  DMA26 Bandwidth Limit Count Current Register */
#define REG_DMA26_BWMCNT                     0x3102D248            /*  DMA26 Bandwidth Monitor Count Register */
#define REG_DMA26_BWMCNT_CUR                 0x3102D24C            /*  DMA26 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA27
   ============================================================================================================================ */
#define REG_DMA27_DSCPTR_NXT                 0x3102D280            /*  DMA27 Pointer to Next Initial Descriptor Register */
#define REG_DMA27_ADDRSTART                  0x3102D284            /*  DMA27 Start Address of Current Buffer Register */
#define REG_DMA27_CFG                        0x3102D288            /*  DMA27 Configuration Register */
#define REG_DMA27_XCNT                       0x3102D28C            /*  DMA27 Inner Loop Count Start Value Register */
#define REG_DMA27_XMOD                       0x3102D290            /*  DMA27 Inner Loop Address Increment Register */
#define REG_DMA27_YCNT                       0x3102D294            /*  DMA27 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA27_YMOD                       0x3102D298            /*  DMA27 Outer Loop Address Increment (2D only) Register */
#define REG_DMA27_DSCPTR_CUR                 0x3102D2A4            /*  DMA27 Current Descriptor Pointer Register */
#define REG_DMA27_DSCPTR_PRV                 0x3102D2A8            /*  DMA27 Previous Initial Descriptor Pointer Register */
#define REG_DMA27_ADDR_CUR                   0x3102D2AC            /*  DMA27 Current Address Register */
#define REG_DMA27_STAT                       0x3102D2B0            /*  DMA27 Status Register */
#define REG_DMA27_XCNT_CUR                   0x3102D2B4            /*  DMA27 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA27_YCNT_CUR                   0x3102D2B8            /*  DMA27 Current Row Count (2D only) Register */
#define REG_DMA27_BWLCNT                     0x3102D2C0            /*  DMA27 Bandwidth Limit Count Register */
#define REG_DMA27_BWLCNT_CUR                 0x3102D2C4            /*  DMA27 Bandwidth Limit Count Current Register */
#define REG_DMA27_BWMCNT                     0x3102D2C8            /*  DMA27 Bandwidth Monitor Count Register */
#define REG_DMA27_BWMCNT_CUR                 0x3102D2CC            /*  DMA27 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA55
   ============================================================================================================================ */
#define REG_DMA55_DSCPTR_NXT                 0x3102D300            /*  DMA55 Pointer to Next Initial Descriptor Register */
#define REG_DMA55_ADDRSTART                  0x3102D304            /*  DMA55 Start Address of Current Buffer Register */
#define REG_DMA55_CFG                        0x3102D308            /*  DMA55 Configuration Register */
#define REG_DMA55_XCNT                       0x3102D30C            /*  DMA55 Inner Loop Count Start Value Register */
#define REG_DMA55_XMOD                       0x3102D310            /*  DMA55 Inner Loop Address Increment Register */
#define REG_DMA55_YCNT                       0x3102D314            /*  DMA55 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA55_YMOD                       0x3102D318            /*  DMA55 Outer Loop Address Increment (2D only) Register */
#define REG_DMA55_DSCPTR_CUR                 0x3102D324            /*  DMA55 Current Descriptor Pointer Register */
#define REG_DMA55_DSCPTR_PRV                 0x3102D328            /*  DMA55 Previous Initial Descriptor Pointer Register */
#define REG_DMA55_ADDR_CUR                   0x3102D32C            /*  DMA55 Current Address Register */
#define REG_DMA55_STAT                       0x3102D330            /*  DMA55 Status Register */
#define REG_DMA55_XCNT_CUR                   0x3102D334            /*  DMA55 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA55_YCNT_CUR                   0x3102D338            /*  DMA55 Current Row Count (2D only) Register */
#define REG_DMA55_BWLCNT                     0x3102D340            /*  DMA55 Bandwidth Limit Count Register */
#define REG_DMA55_BWLCNT_CUR                 0x3102D344            /*  DMA55 Bandwidth Limit Count Current Register */
#define REG_DMA55_BWMCNT                     0x3102D348            /*  DMA55 Bandwidth Monitor Count Register */
#define REG_DMA55_BWMCNT_CUR                 0x3102D34C            /*  DMA55 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA56
   ============================================================================================================================ */
#define REG_DMA56_DSCPTR_NXT                 0x3102D380            /*  DMA56 Pointer to Next Initial Descriptor Register */
#define REG_DMA56_ADDRSTART                  0x3102D384            /*  DMA56 Start Address of Current Buffer Register */
#define REG_DMA56_CFG                        0x3102D388            /*  DMA56 Configuration Register */
#define REG_DMA56_XCNT                       0x3102D38C            /*  DMA56 Inner Loop Count Start Value Register */
#define REG_DMA56_XMOD                       0x3102D390            /*  DMA56 Inner Loop Address Increment Register */
#define REG_DMA56_YCNT                       0x3102D394            /*  DMA56 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA56_YMOD                       0x3102D398            /*  DMA56 Outer Loop Address Increment (2D only) Register */
#define REG_DMA56_DSCPTR_CUR                 0x3102D3A4            /*  DMA56 Current Descriptor Pointer Register */
#define REG_DMA56_DSCPTR_PRV                 0x3102D3A8            /*  DMA56 Previous Initial Descriptor Pointer Register */
#define REG_DMA56_ADDR_CUR                   0x3102D3AC            /*  DMA56 Current Address Register */
#define REG_DMA56_STAT                       0x3102D3B0            /*  DMA56 Status Register */
#define REG_DMA56_XCNT_CUR                   0x3102D3B4            /*  DMA56 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA56_YCNT_CUR                   0x3102D3B8            /*  DMA56 Current Row Count (2D only) Register */
#define REG_DMA56_BWLCNT                     0x3102D3C0            /*  DMA56 Bandwidth Limit Count Register */
#define REG_DMA56_BWLCNT_CUR                 0x3102D3C4            /*  DMA56 Bandwidth Limit Count Current Register */
#define REG_DMA56_BWMCNT                     0x3102D3C8            /*  DMA56 Bandwidth Monitor Count Register */
#define REG_DMA56_BWMCNT_CUR                 0x3102D3CC            /*  DMA56 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Serial Peripheral Interface
   ============================================================================================================================ */

/* ============================================================================================================================
        SPI0
   ============================================================================================================================ */
#define REG_SPI0_CTL                         0x3102E004            /*  SPI0 Control Register */
#define REG_SPI0_RXCTL                       0x3102E008            /*  SPI0 Receive Control Register */
#define REG_SPI0_TXCTL                       0x3102E00C            /*  SPI0 Transmit Control Register */
#define REG_SPI0_CLK                         0x3102E010            /*  SPI0 Clock Rate Register */
#define REG_SPI0_DLY                         0x3102E014            /*  SPI0 Delay Register */
#define REG_SPI0_SLVSEL                      0x3102E018            /*  SPI0 Slave Select Register */
#define REG_SPI0_RWC                         0x3102E01C            /*  SPI0 Received Word Count Register */
#define REG_SPI0_RWCR                        0x3102E020            /*  SPI0 Received Word Count Reload Register */
#define REG_SPI0_TWC                         0x3102E024            /*  SPI0 Transmitted Word Count Register */
#define REG_SPI0_TWCR                        0x3102E028            /*  SPI0 Transmitted Word Count Reload Register */
#define REG_SPI0_IMSK                        0x3102E030            /*  SPI0 Interrupt Mask Register */
#define REG_SPI0_IMSK_CLR                    0x3102E034            /*  SPI0 Interrupt Mask Clear Register */
#define REG_SPI0_IMSK_SET                    0x3102E038            /*  SPI0 Interrupt Mask Set Register */
#define REG_SPI0_STAT                        0x3102E040            /*  SPI0 Status Register */
#define REG_SPI0_ILAT                        0x3102E044            /*  SPI0 Masked Interrupt Condition Register */
#define REG_SPI0_ILAT_CLR                    0x3102E048            /*  SPI0 Masked Interrupt Clear Register */
#define REG_SPI0_RFIFO                       0x3102E050            /*  SPI0 Receive FIFO Data Register */
#define REG_SPI0_TFIFO                       0x3102E058            /*  SPI0 Transmit FIFO Data Register */

/* ============================================================================================================================
        SPI3
   ============================================================================================================================ */
#define REG_SPI3_CTL                         0x31031004            /*  SPI3 Control Register */
#define REG_SPI3_RXCTL                       0x31031008            /*  SPI3 Receive Control Register */
#define REG_SPI3_TXCTL                       0x3103100C            /*  SPI3 Transmit Control Register */
#define REG_SPI3_CLK                         0x31031010            /*  SPI3 Clock Rate Register */
#define REG_SPI3_DLY                         0x31031014            /*  SPI3 Delay Register */
#define REG_SPI3_SLVSEL                      0x31031018            /*  SPI3 Slave Select Register */
#define REG_SPI3_RWC                         0x3103101C            /*  SPI3 Received Word Count Register */
#define REG_SPI3_RWCR                        0x31031020            /*  SPI3 Received Word Count Reload Register */
#define REG_SPI3_TWC                         0x31031024            /*  SPI3 Transmitted Word Count Register */
#define REG_SPI3_TWCR                        0x31031028            /*  SPI3 Transmitted Word Count Reload Register */
#define REG_SPI3_IMSK                        0x31031030            /*  SPI3 Interrupt Mask Register */
#define REG_SPI3_IMSK_CLR                    0x31031034            /*  SPI3 Interrupt Mask Clear Register */
#define REG_SPI3_IMSK_SET                    0x31031038            /*  SPI3 Interrupt Mask Set Register */
#define REG_SPI3_STAT                        0x31031040            /*  SPI3 Status Register */
#define REG_SPI3_ILAT                        0x31031044            /*  SPI3 Masked Interrupt Condition Register */
#define REG_SPI3_ILAT_CLR                    0x31031048            /*  SPI3 Masked Interrupt Clear Register */
#define REG_SPI3_RFIFO                       0x31031050            /*  SPI3 Receive FIFO Data Register */
#define REG_SPI3_TFIFO                       0x31031058            /*  SPI3 Transmit FIFO Data Register */

/* ============================================================================================================================
        SPI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPI_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_CTL_MMSE                    31            /*  Memory-Mapped SPI Enable */
#define BITP_SPI_CTL_MMWEM                   30            /*  Memory Mapped Write Error Mask */
#define BITP_SPI_CTL_SOSI                    22            /*  Start on MOSI */
#define BITP_SPI_CTL_MIOM                    20            /*  Multiple I/O Mode */
#define BITP_SPI_CTL_FMODE                   18            /*  Fast-Mode Enable */
#define BITP_SPI_CTL_FCWM                    16            /*  Flow Control Watermark */
#define BITP_SPI_CTL_FCPL                    15            /*  Flow Control Polarity */
#define BITP_SPI_CTL_FCCH                    14            /*  Flow Control Channel Selection */
#define BITP_SPI_CTL_FCEN                    13            /*  Flow Control Enable */
#define BITP_SPI_CTL_LSBF                    12            /*  Least Significant Bit First */
#define BITP_SPI_CTL_SIZE                     9            /*  Word Transfer Size */
#define BITP_SPI_CTL_EMISO                    8            /*  Enable MISO */
#define BITP_SPI_CTL_SELST                    7            /*  Slave Select Polarity Between Transfers */
#define BITP_SPI_CTL_ASSEL                    6            /*  Slave Select Pin Control */
#define BITP_SPI_CTL_CPOL                     5            /*  Clock Polarity */
#define BITP_SPI_CTL_CPHA                     4            /*  Clock Phase */
#define BITP_SPI_CTL_ODM                      3            /*  Open Drain Mode */
#define BITP_SPI_CTL_PSSE                     2            /*  Protected Slave Select Enable */
#define BITP_SPI_CTL_MSTR                     1            /*  Master/Slave */
#define BITP_SPI_CTL_EN                       0            /*  Enable */
#define BITM_SPI_CTL_MMSE                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Memory-Mapped SPI Enable */
#define BITM_SPI_CTL_MMWEM                   (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Memory Mapped Write Error Mask */
#define BITM_SPI_CTL_SOSI                    (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Start on MOSI */
#define BITM_SPI_CTL_MIOM                    (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Multiple I/O Mode */
#define BITM_SPI_CTL_FMODE                   (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Fast-Mode Enable */
#define BITM_SPI_CTL_FCWM                    (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Flow Control Watermark */
#define BITM_SPI_CTL_FCPL                    (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Flow Control Polarity */
#define BITM_SPI_CTL_FCCH                    (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Flow Control Channel Selection */
#define BITM_SPI_CTL_FCEN                    (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Flow Control Enable */
#define BITM_SPI_CTL_LSBF                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Least Significant Bit First */
#define BITM_SPI_CTL_SIZE                    (_ADI_MSK_3(0x00000600,0x00000600UL, uint32_t  ))    /*  Word Transfer Size */
#define BITM_SPI_CTL_EMISO                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Enable MISO */
#define BITM_SPI_CTL_SELST                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Slave Select Polarity Between Transfers */
#define BITM_SPI_CTL_ASSEL                   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Slave Select Pin Control */
#define BITM_SPI_CTL_CPOL                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Clock Polarity */
#define BITM_SPI_CTL_CPHA                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Clock Phase */
#define BITM_SPI_CTL_ODM                     (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Open Drain Mode */
#define BITM_SPI_CTL_PSSE                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Protected Slave Select Enable */
#define BITM_SPI_CTL_MSTR                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Master/Slave */
#define BITM_SPI_CTL_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */
#define ENUM_SPI_CTL_MM_DIS                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MMSE: Hardware automated access of memory-mapped SPI memory disabled. */
#define ENUM_SPI_CTL_MM_EN                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  MMSE: Hardware-automated access of memory-mapped SPI memory enabled. */
#define ENUM_SPI_CTL_WEM_UNMSK               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MMWEM: Write error response returned upon write attempts to memory-mapped SPI memory */
#define ENUM_SPI_CTL_WEM_MSK                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  MMWEM: Write error response masked (not returned) upon write attempts to memory-mapped SPI memory */
#define ENUM_SPI_CTL_STMISO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SOSI: Start on MISO (DIOM) or start on SPI_D3 */
#define ENUM_SPI_CTL_STMOSI                  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  SOSI: Start on MOSI */
#define ENUM_SPI_CTL_MIO_DIS                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MIOM: No MIOM (disabled) */
#define ENUM_SPI_CTL_MIO_DUAL                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  MIOM: DIOM operation */
#define ENUM_SPI_CTL_MIO_QUAD                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  MIOM: QIOM operation */
#define ENUM_SPI_CTL_FAST_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FMODE: Disable */
#define ENUM_SPI_CTL_FAST_EN                 (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  FMODE: Enable */
#define ENUM_SPI_CTL_FIFO0                   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FCWM: TFIFO empty or RFIFO full */
#define ENUM_SPI_CTL_FIFO1                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  FCWM: TFIFO 75% or more empty, or RFIFO 75% or more full */
#define ENUM_SPI_CTL_FIFO2                   (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  FCWM: TFIFO 50% or more empty, or RFIFO 50% or more full */
#define ENUM_SPI_CTL_FLOW_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FCPL: Active-low RDY */
#define ENUM_SPI_CTL_FLOW_HI                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  FCPL: Active-high RDY */
#define ENUM_SPI_CTL_FLOW_RX                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FCCH: Flow control on RX buffer */
#define ENUM_SPI_CTL_FLOW_TX                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  FCCH: Flow control on TX buffer */
#define ENUM_SPI_CTL_FLOW_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FCEN: Disable */
#define ENUM_SPI_CTL_FLOW_EN                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  FCEN: Enable */
#define ENUM_SPI_CTL_MSB_FIRST               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LSBF: MSB sent/received first (big endian) */
#define ENUM_SPI_CTL_LSB_FIRST               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  LSBF: LSB sent/received first (little endian) */
#define ENUM_SPI_CTL_SIZE08                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SIZE: 8-bit word */
#define ENUM_SPI_CTL_SIZE16                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  SIZE: 16-bit word */
#define ENUM_SPI_CTL_SIZE32                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SIZE: 32-bit word */
#define ENUM_SPI_CTL_MISO_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EMISO: Disable */
#define ENUM_SPI_CTL_MISO_EN                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  EMISO: Enable */
#define ENUM_SPI_CTL_DEASSRT_SSEL            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SELST: Deassert slave select (high) */
#define ENUM_SPI_CTL_ASSRT_SSEL              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SELST: Assert slave select (low) */
#define ENUM_SPI_CTL_SW_SSEL                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ASSEL: Software slave select control */
#define ENUM_SPI_CTL_HW_SSEL                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  ASSEL: Hardware slave select control */
#define ENUM_SPI_CTL_SCKHI                   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CPOL: Active-high SPI CLK */
#define ENUM_SPI_CTL_SCKLO                   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CPOL: Active-low SPI CLK */
#define ENUM_SPI_CTL_SCKMID                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CPHA: SPI CLK toggles from middle */
#define ENUM_SPI_CTL_SCKBEG                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CPHA: SPI CLK toggles from start */
#define ENUM_SPI_CTL_ODM_DIS                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ODM: Disable */
#define ENUM_SPI_CTL_ODM_EN                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ODM: Enable */
#define ENUM_SPI_CTL_PSSE_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PSSE: Disable */
#define ENUM_SPI_CTL_PSSE_EN                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PSSE: Enable */
#define ENUM_SPI_CTL_SLAVE                   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MSTR: Slave */
#define ENUM_SPI_CTL_MASTER                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  MSTR: Master */
#define ENUM_SPI_CTL_DIS                     (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable SPI module */
#define ENUM_SPI_CTL_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_RXCTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_RXCTL_RUWM                  16            /*  Receive FIFO Urgent Watermark */
#define BITP_SPI_RXCTL_RRWM                  12            /*  Receive FIFO Regular Watermark */
#define BITP_SPI_RXCTL_RDO                    8            /*  Receive Data Overrun */
#define BITP_SPI_RXCTL_RDR                    4            /*  Receive Data Request */
#define BITP_SPI_RXCTL_RWCEN                  3            /*  Receive Word Counter Enable */
#define BITP_SPI_RXCTL_RTI                    2            /*  Receive Transfer Initiate */
#define BITP_SPI_RXCTL_REN                    0            /*  Receive Enable */
#define BITM_SPI_RXCTL_RUWM                  (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  Receive FIFO Urgent Watermark */
#define BITM_SPI_RXCTL_RRWM                  (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Receive FIFO Regular Watermark */
#define BITM_SPI_RXCTL_RDO                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Data Overrun */
#define BITM_SPI_RXCTL_RDR                   (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  Receive Data Request */
#define BITM_SPI_RXCTL_RWCEN                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Receive Word Counter Enable */
#define BITM_SPI_RXCTL_RTI                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Transfer Initiate */
#define BITM_SPI_RXCTL_REN                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Enable */
#define ENUM_SPI_RXCTL_UWM_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RUWM: Disabled */
#define ENUM_SPI_RXCTL_UWM_25                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  RUWM: 25% full RFIFO */
#define ENUM_SPI_RXCTL_UWM_50                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  RUWM: 50% full RFIFO */
#define ENUM_SPI_RXCTL_UWM_75                (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  RUWM: 75% full RFIFO */
#define ENUM_SPI_RXCTL_UWM_FULL              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  RUWM: Full RFIFO */
#define ENUM_SPI_RXCTL_RWM_0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RRWM: Empty RFIFO */
#define ENUM_SPI_RXCTL_RWM_25                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  RRWM: RFIFO less than 25% full */
#define ENUM_SPI_RXCTL_RWM_50                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  RRWM: RFIFO less than 50% full */
#define ENUM_SPI_RXCTL_RWM_75                (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  RRWM: RFIFO less than 75% full */
#define ENUM_SPI_RXCTL_DISCARD               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RDO: Discard incoming data if SPI_RFIFO is full */
#define ENUM_SPI_RXCTL_OVERWRITE             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RDO: Overwrite old data if SPI_RFIFO is full */
#define ENUM_SPI_RXCTL_RDR_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RDR: Disabled */
#define ENUM_SPI_RXCTL_RDR_NE                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RDR: Not empty RFIFO */
#define ENUM_SPI_RXCTL_RDR_25                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  RDR: 25% full RFIFO */
#define ENUM_SPI_RXCTL_RDR_50                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  RDR: 50% full RFIFO */
#define ENUM_SPI_RXCTL_RDR_75                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  RDR: 75% full RFIFO */
#define ENUM_SPI_RXCTL_RDR_FULL              (_ADI_MSK_3(0x00000050,0x00000050UL, uint32_t  ))    /*  RDR: Full RFIFO */
#define ENUM_SPI_RXCTL_RWC_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RWCEN: Disable */
#define ENUM_SPI_RXCTL_RWC_EN                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RWCEN: Enable */
#define ENUM_SPI_RXCTL_RTI_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RTI: Disable */
#define ENUM_SPI_RXCTL_RTI_EN                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  RTI: Enable */
#define ENUM_SPI_RXCTL_RX_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  REN: Disable */
#define ENUM_SPI_RXCTL_RX_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  REN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_TXCTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_TXCTL_TUWM                  16            /*  FIFO Urgent Watermark */
#define BITP_SPI_TXCTL_TRWM                  12            /*  FIFO Regular Watermark */
#define BITP_SPI_TXCTL_TDU                    8            /*  Transmit Data Underrun */
#define BITP_SPI_TXCTL_TDR                    4            /*  Transmit Data Request */
#define BITP_SPI_TXCTL_TWCEN                  3            /*  Transmit Word Counter Enable */
#define BITP_SPI_TXCTL_TTI                    2            /*  Transmit Transfer Initiate */
#define BITP_SPI_TXCTL_TEN                    0            /*  Transmit Enable */
#define BITM_SPI_TXCTL_TUWM                  (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  FIFO Urgent Watermark */
#define BITM_SPI_TXCTL_TRWM                  (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  FIFO Regular Watermark */
#define BITM_SPI_TXCTL_TDU                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Transmit Data Underrun */
#define BITM_SPI_TXCTL_TDR                   (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  Transmit Data Request */
#define BITM_SPI_TXCTL_TWCEN                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Word Counter Enable */
#define BITM_SPI_TXCTL_TTI                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Transfer Initiate */
#define BITM_SPI_TXCTL_TEN                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Enable */
#define ENUM_SPI_TXCTL_UWM_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUWM: Disabled */
#define ENUM_SPI_TXCTL_UWM_25                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TUWM: 25% empty TFIFO */
#define ENUM_SPI_TXCTL_UWM_50                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  TUWM: 50% empty TFIFO */
#define ENUM_SPI_TXCTL_UWM_75                (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  TUWM: 75% empty TFIFO */
#define ENUM_SPI_TXCTL_UWM_EMPTY             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  TUWM: Empty TFIFO */
#define ENUM_SPI_TXCTL_RWM_FULL              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TRWM: Full TFIFO */
#define ENUM_SPI_TXCTL_RWM_25                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  TRWM: TFIFO less than 25% empty */
#define ENUM_SPI_TXCTL_RWM_50                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  TRWM: TFIFO less than 50% empty */
#define ENUM_SPI_TXCTL_RWM_75                (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  TRWM: TFIFO less than 75% empty */
#define ENUM_SPI_TXCTL_LASTWD                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TDU: Send last word when SPI_TFIFO is empty */
#define ENUM_SPI_TXCTL_ZERO                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  TDU: Send zeros when SPI_TFIFO is empty */
#define ENUM_SPI_TXCTL_TDR_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TDR: Disabled */
#define ENUM_SPI_TXCTL_TDR_NF                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  TDR: Not full TFIFO */
#define ENUM_SPI_TXCTL_TDR_25                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  TDR: 25% empty TFIFO */
#define ENUM_SPI_TXCTL_TDR_50                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  TDR: 50% empty TFIFO */
#define ENUM_SPI_TXCTL_TDR_75                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  TDR: 75% empty TFIFO */
#define ENUM_SPI_TXCTL_TDR_EMPTY             (_ADI_MSK_3(0x00000050,0x00000050UL, uint32_t  ))    /*  TDR: Empty TFIFO */
#define ENUM_SPI_TXCTL_TWC_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TWCEN: Disable */
#define ENUM_SPI_TXCTL_TWC_EN                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TWCEN: Enable */
#define ENUM_SPI_TXCTL_TTI_DIS               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TTI: Disable */
#define ENUM_SPI_TXCTL_TTI_EN                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TTI: Enable */
#define ENUM_SPI_TXCTL_TX_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TEN: Disable */
#define ENUM_SPI_TXCTL_TX_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  TEN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_CLK                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_CLK_BAUD                     0            /*  Baud Rate */
#define BITM_SPI_CLK_BAUD                    (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Baud Rate */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_DLY                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_DLY_LAGX                     9            /*  Extended SPI Clock Lag Control */
#define BITP_SPI_DLY_LEADX                    8            /*  Extended SPI Clock Lead Control */
#define BITP_SPI_DLY_STOP                     0            /*  Transfer Delay Time in Multiples of SPI Clock Period */
#define BITM_SPI_DLY_LAGX                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended SPI Clock Lag Control */
#define BITM_SPI_DLY_LEADX                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Extended SPI Clock Lead Control */
#define BITM_SPI_DLY_STOP                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Transfer Delay Time in Multiples of SPI Clock Period */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_SLVSEL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_SLVSEL_SSEL7                15            /*  Slave Select 7 Output */
#define BITP_SPI_SLVSEL_SSEL6                14            /*  Slave Select 6 Output */
#define BITP_SPI_SLVSEL_SSEL5                13            /*  Slave Select 5 Output */
#define BITP_SPI_SLVSEL_SSEL4                12            /*  Slave Select 4 Output */
#define BITP_SPI_SLVSEL_SSEL3                11            /*  Slave Select 3 Output */
#define BITP_SPI_SLVSEL_SSEL2                10            /*  Slave Select 2 Output */
#define BITP_SPI_SLVSEL_SSEL1                 9            /*  Slave Select 1 Output */
#define BITP_SPI_SLVSEL_SSE7                  7            /*  Slave Select 7 Enable */
#define BITP_SPI_SLVSEL_SSE6                  6            /*  Slave Select 6 Enable */
#define BITP_SPI_SLVSEL_SSE5                  5            /*  Slave Select 5 Enable */
#define BITP_SPI_SLVSEL_SSE4                  4            /*  Slave Select 4 Enable */
#define BITP_SPI_SLVSEL_SSE3                  3            /*  Slave Select 3 Enable */
#define BITP_SPI_SLVSEL_SSE2                  2            /*  Slave Select 2 Enable */
#define BITP_SPI_SLVSEL_SSE1                  1            /*  Slave Select 1 Enable */
#define BITM_SPI_SLVSEL_SSEL7                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Slave Select 7 Output */
#define BITM_SPI_SLVSEL_SSEL6                (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Slave Select 6 Output */
#define BITM_SPI_SLVSEL_SSEL5                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Slave Select 5 Output */
#define BITM_SPI_SLVSEL_SSEL4                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Slave Select 4 Output */
#define BITM_SPI_SLVSEL_SSEL3                (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Slave Select 3 Output */
#define BITM_SPI_SLVSEL_SSEL2                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Slave Select 2 Output */
#define BITM_SPI_SLVSEL_SSEL1                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Slave Select 1 Output */
#define BITM_SPI_SLVSEL_SSE7                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Slave Select 7 Enable */
#define BITM_SPI_SLVSEL_SSE6                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Slave Select 6 Enable */
#define BITM_SPI_SLVSEL_SSE5                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Select 5 Enable */
#define BITM_SPI_SLVSEL_SSE4                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Slave Select 4 Enable */
#define BITM_SPI_SLVSEL_SSE3                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Slave Select 3 Enable */
#define BITM_SPI_SLVSEL_SSE2                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Slave Select 2 Enable */
#define BITM_SPI_SLVSEL_SSE1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Slave Select 1 Enable */
#define ENUM_SPI_SLVSEL_SSEL7_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL7: Low */
#define ENUM_SPI_SLVSEL_SSEL7_HI             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  SSEL7: High */
#define ENUM_SPI_SLVSEL_SSEL6_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL6: Low */
#define ENUM_SPI_SLVSEL_SSEL6_HI             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  SSEL6: High */
#define ENUM_SPI_SLVSEL_SSEL5_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL5: Low */
#define ENUM_SPI_SLVSEL_SSEL5_HI             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  SSEL5: High */
#define ENUM_SPI_SLVSEL_SSEL4_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL4: Low */
#define ENUM_SPI_SLVSEL_SSEL4_HI             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  SSEL4: High */
#define ENUM_SPI_SLVSEL_SSEL3_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL3: Low */
#define ENUM_SPI_SLVSEL_SSEL3_HI             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  SSEL3: High */
#define ENUM_SPI_SLVSEL_SSEL2_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL2: Low */
#define ENUM_SPI_SLVSEL_SSEL2_HI             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SSEL2: High */
#define ENUM_SPI_SLVSEL_SSEL1_LO             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSEL1: Low */
#define ENUM_SPI_SLVSEL_SSEL1_HI             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  SSEL1: High */
#define ENUM_SPI_SLVSEL_SSEL7_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE7: Disable */
#define ENUM_SPI_SLVSEL_SSEL7_EN             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SSE7: Enable */
#define ENUM_SPI_SLVSEL_SSEL6_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE6: Disable */
#define ENUM_SPI_SLVSEL_SSEL6_EN             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  SSE6: Enable */
#define ENUM_SPI_SLVSEL_SSEL5_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE5: Disable */
#define ENUM_SPI_SLVSEL_SSEL5_EN             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  SSE5: Enable */
#define ENUM_SPI_SLVSEL_SSEL4_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE4: Disable */
#define ENUM_SPI_SLVSEL_SSEL4_EN             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  SSE4: Enable */
#define ENUM_SPI_SLVSEL_SSEL3_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE3: Disable */
#define ENUM_SPI_SLVSEL_SSEL3_EN             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  SSE3: Enable */
#define ENUM_SPI_SLVSEL_SSEL2_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE2: Disable */
#define ENUM_SPI_SLVSEL_SSEL2_EN             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SSE2: Enable */
#define ENUM_SPI_SLVSEL_SSEL1_DIS            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SSE1: Disable */
#define ENUM_SPI_SLVSEL_SSEL1_EN             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SSE1: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_RWC                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_RWC_VALUE                    0            /*  Received Word Count */
#define BITM_SPI_RWC_VALUE                   (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Received Word Count */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_RWCR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_RWCR_VALUE                   0            /*  Received Word Count Reload */
#define BITM_SPI_RWCR_VALUE                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Received Word Count Reload */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_TWC                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_TWC_VALUE                    0            /*  Transmitted Word Count */
#define BITM_SPI_TWC_VALUE                   (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Transmitted Word Count */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_TWCR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_TWCR_VALUE                   0            /*  Transmitted Word Count Reload */
#define BITM_SPI_TWCR_VALUE                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Transmitted Word Count Reload */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_IMSK                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_IMSK_TF                     11            /*  Transmit Finish */
#define BITP_SPI_IMSK_RF                     10            /*  Receive Finish */
#define BITP_SPI_IMSK_TS                      9            /*  Transmit Start */
#define BITP_SPI_IMSK_RS                      8            /*  Receive Start */
#define BITP_SPI_IMSK_MF                      7            /*  Mode Fault */
#define BITP_SPI_IMSK_TC                      6            /*  Transmit Collision */
#define BITP_SPI_IMSK_TUR                     5            /*  Transmit Underrun */
#define BITP_SPI_IMSK_ROR                     4            /*  Receive Overrun */
#define BITP_SPI_IMSK_TUWM                    2            /*  Transmit Urgent Watermark */
#define BITP_SPI_IMSK_RUWM                    1            /*  Receive Urgent Watermark */
#define BITM_SPI_IMSK_TF                     (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Transmit Finish */
#define BITM_SPI_IMSK_RF                     (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Receive Finish */
#define BITM_SPI_IMSK_TS                     (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Transmit Start */
#define BITM_SPI_IMSK_RS                     (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Start */
#define BITM_SPI_IMSK_MF                     (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Mode Fault */
#define BITM_SPI_IMSK_TC                     (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Transmit Collision */
#define BITM_SPI_IMSK_TUR                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Underrun */
#define BITM_SPI_IMSK_ROR                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Overrun */
#define BITM_SPI_IMSK_TUWM                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Urgent Watermark */
#define BITM_SPI_IMSK_RUWM                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Urgent Watermark */
#define ENUM_SPI_IMSK_TF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TF: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_TF_HI                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  TF: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_RF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RF: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_RF_HI                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RF: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_TS_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TS: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_TS_HI                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  TS: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_RS_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RS: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_RS_HI                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RS: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_MF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_MF_HI                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  MF: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_TC_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TC: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_TC_HI                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  TC: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_TUR_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUR: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_TUR_HI                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  TUR: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_ROR_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ROR: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_ROR_HI                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ROR: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_TUWM_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUWM: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_TUWM_HI                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TUWM: Enable (unmask) interrupt request */
#define ENUM_SPI_IMSK_RUWM_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RUWM: Disable (mask) interrupt request */
#define ENUM_SPI_IMSK_RUWM_HI                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RUWM: Enable (unmask) interrupt request */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_IMSK_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_IMSK_CLR_TF                 11            /*  Clear Transmit Finish */
#define BITP_SPI_IMSK_CLR_RF                 10            /*  Clear Receive Finish */
#define BITP_SPI_IMSK_CLR_TS                  9            /*  Clear Transmit Start */
#define BITP_SPI_IMSK_CLR_RS                  8            /*  Clear Receive Start */
#define BITP_SPI_IMSK_CLR_MF                  7            /*  Clear Mode Fault */
#define BITP_SPI_IMSK_CLR_TC                  6            /*  Clear Transmit Collision */
#define BITP_SPI_IMSK_CLR_TUR                 5            /*  Clear Transmit Underrun */
#define BITP_SPI_IMSK_CLR_ROR                 4            /*  Clear Receive Overrun */
#define BITP_SPI_IMSK_CLR_TUWM                2            /*  Clear Transmit Urgent Watermark */
#define BITP_SPI_IMSK_CLR_RUWM                1            /*  Clear Receive Urgent Watermark */
#define BITM_SPI_IMSK_CLR_TF                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Clear Transmit Finish */
#define BITM_SPI_IMSK_CLR_RF                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Clear Receive Finish */
#define BITM_SPI_IMSK_CLR_TS                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Clear Transmit Start */
#define BITM_SPI_IMSK_CLR_RS                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Clear Receive Start */
#define BITM_SPI_IMSK_CLR_MF                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Clear Mode Fault */
#define BITM_SPI_IMSK_CLR_TC                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Clear Transmit Collision */
#define BITM_SPI_IMSK_CLR_TUR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Clear Transmit Underrun */
#define BITM_SPI_IMSK_CLR_ROR                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Clear Receive Overrun */
#define BITM_SPI_IMSK_CLR_TUWM               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clear Transmit Urgent Watermark */
#define BITM_SPI_IMSK_CLR_RUWM               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clear Receive Urgent Watermark */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_IMSK_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_IMSK_SET_TF                 11            /*  Set Transmit Finish */
#define BITP_SPI_IMSK_SET_RF                 10            /*  Set Receive Finish */
#define BITP_SPI_IMSK_SET_TS                  9            /*  Set Transmit Start */
#define BITP_SPI_IMSK_SET_RS                  8            /*  Set Receive Start */
#define BITP_SPI_IMSK_SET_MF                  7            /*  Set Mode Fault */
#define BITP_SPI_IMSK_SET_TC                  6            /*  Set Transmit Collision */
#define BITP_SPI_IMSK_SET_TUR                 5            /*  Set Transmit Underrun */
#define BITP_SPI_IMSK_SET_ROR                 4            /*  Set Receive Overrun */
#define BITP_SPI_IMSK_SET_TUWM                2            /*  Set Transmit Urgent Watermark */
#define BITP_SPI_IMSK_SET_RUWM                1            /*  Set Receive Urgent Watermark */
#define BITM_SPI_IMSK_SET_TF                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Set Transmit Finish */
#define BITM_SPI_IMSK_SET_RF                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Set Receive Finish */
#define BITM_SPI_IMSK_SET_TS                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Set Transmit Start */
#define BITM_SPI_IMSK_SET_RS                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Set Receive Start */
#define BITM_SPI_IMSK_SET_MF                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Set Mode Fault */
#define BITM_SPI_IMSK_SET_TC                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Set Transmit Collision */
#define BITM_SPI_IMSK_SET_TUR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Set Transmit Underrun */
#define BITM_SPI_IMSK_SET_ROR                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Set Receive Overrun */
#define BITM_SPI_IMSK_SET_TUWM               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Set Transmit Urgent Watermark */
#define BITM_SPI_IMSK_SET_RUWM               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Set Receive Urgent Watermark */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_STAT_MMAE                   31            /*  Memory Mapped Access Error */
#define BITP_SPI_STAT_MMRE                   29            /*  Memory Mapped Read Error */
#define BITP_SPI_STAT_MMWE                   28            /*  Memory Mapped Write Error */
#define BITP_SPI_STAT_TFF                    23            /*  SPI_TFIFO Full */
#define BITP_SPI_STAT_RFE                    22            /*  SPI_RFIFO Empty */
#define BITP_SPI_STAT_FCS                    20            /*  Flow Control Stall Indication */
#define BITP_SPI_STAT_TFS                    16            /*  SPI_TFIFO Status */
#define BITP_SPI_STAT_RFS                    12            /*  SPI_RFIFO Status */
#define BITP_SPI_STAT_TF                     11            /*  Transmit Finish Indication */
#define BITP_SPI_STAT_RF                     10            /*  Receive Finish Indication */
#define BITP_SPI_STAT_TS                      9            /*  Transmit Start */
#define BITP_SPI_STAT_RS                      8            /*  Receive Start */
#define BITP_SPI_STAT_MF                      7            /*  Mode Fault Indication */
#define BITP_SPI_STAT_TC                      6            /*  Transmit Collision Indication */
#define BITP_SPI_STAT_TUR                     5            /*  Transmit Underrun Indication */
#define BITP_SPI_STAT_ROR                     4            /*  Receive Overrun Indication */
#define BITP_SPI_STAT_TUWM                    2            /*  Transmit Urgent Watermark Breached */
#define BITP_SPI_STAT_RUWM                    1            /*  Receive Urgent Watermark Breached */
#define BITP_SPI_STAT_SPIF                    0            /*  SPI Finished */
#define BITM_SPI_STAT_MMAE                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Memory Mapped Access Error */
#define BITM_SPI_STAT_MMRE                   (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Memory Mapped Read Error */
#define BITM_SPI_STAT_MMWE                   (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Memory Mapped Write Error */
#define BITM_SPI_STAT_TFF                    (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  SPI_TFIFO Full */
#define BITM_SPI_STAT_RFE                    (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  SPI_RFIFO Empty */
#define BITM_SPI_STAT_FCS                    (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Flow Control Stall Indication */
#define BITM_SPI_STAT_TFS                    (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  SPI_TFIFO Status */
#define BITM_SPI_STAT_RFS                    (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  SPI_RFIFO Status */
#define BITM_SPI_STAT_TF                     (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Transmit Finish Indication */
#define BITM_SPI_STAT_RF                     (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Receive Finish Indication */
#define BITM_SPI_STAT_TS                     (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Transmit Start */
#define BITM_SPI_STAT_RS                     (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Start */
#define BITM_SPI_STAT_MF                     (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Mode Fault Indication */
#define BITM_SPI_STAT_TC                     (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Transmit Collision Indication */
#define BITM_SPI_STAT_TUR                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Underrun Indication */
#define BITM_SPI_STAT_ROR                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Overrun Indication */
#define BITM_SPI_STAT_TUWM                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Urgent Watermark Breached */
#define BITM_SPI_STAT_RUWM                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Urgent Watermark Breached */
#define BITM_SPI_STAT_SPIF                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SPI Finished */
#define ENUM_SPI_STAT_TFIFO_NF               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TFF: Not full Tx FIFO */
#define ENUM_SPI_STAT_TFIFO_F                (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  TFF: Full Tx FIFO */
#define ENUM_SPI_STAT_RFIFO_NE               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RFE: Rx FIFO not empty */
#define ENUM_SPI_STAT_RFIFO_E                (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  RFE: Rx FIFO empty */
#define ENUM_SPI_STAT_STALL                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FCS: No Stall (RDY pin asserted) */
#define ENUM_SPI_STAT_NOSTALL                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  FCS: Stall (RDY pin deasserted) */
#define ENUM_SPI_STAT_TFIFO_FULL             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TFS: Full TFIFO */
#define ENUM_SPI_STAT_TFIFO_25               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TFS: 25% empty TFIFO */
#define ENUM_SPI_STAT_TFIFO_50               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  TFS: 50% empty TFIFO */
#define ENUM_SPI_STAT_TFIFO_75               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  TFS: 75% empty TFIFO */
#define ENUM_SPI_STAT_TFIFO_EMPTY            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  TFS: Empty TFIFO */
#define ENUM_SPI_STAT_RFIFO_EMPTY            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RFS: Empty RFIFO */
#define ENUM_SPI_STAT_RFIFO_25               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  RFS: 25% full RFIFO */
#define ENUM_SPI_STAT_RFIFO_50               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  RFS: 50% full RFIFO */
#define ENUM_SPI_STAT_RFIFO_75               (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  RFS: 75% full RFIFO */
#define ENUM_SPI_STAT_RFIFO_FULL             (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  RFS: Full RFIFO */
#define ENUM_SPI_STAT_TF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TF: No status */
#define ENUM_SPI_STAT_TF_HI                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  TF: Transmit finish detected */
#define ENUM_SPI_STAT_RF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RF: No status */
#define ENUM_SPI_STAT_RF_HI                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RF: Receive finish detected */
#define ENUM_SPI_STAT_TS_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TS: No status */
#define ENUM_SPI_STAT_TS_HI                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  TS: Transmit start detected */
#define ENUM_SPI_STAT_RS_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RS: No status */
#define ENUM_SPI_STAT_RS_HI                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RS: Receive start detected */
#define ENUM_SPI_STAT_MF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF: No status */
#define ENUM_SPI_STAT_MF_HI                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  MF: Mode fault occurred */
#define ENUM_SPI_STAT_TC_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TC: No status */
#define ENUM_SPI_STAT_TC_HI                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  TC: Transmit collision occurred */
#define ENUM_SPI_STAT_TUR_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUR: No status */
#define ENUM_SPI_STAT_TUR_HI                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  TUR: Transmit underrun occurred */
#define ENUM_SPI_STAT_ROR_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ROR: No status */
#define ENUM_SPI_STAT_ROR_HI                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ROR: Receive overrun occurred */
#define ENUM_SPI_STAT_TUWM_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUWM: Tx regular watermark reached */
#define ENUM_SPI_STAT_TUWM_HI                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TUWM: Tx urgent watermark breached */
#define ENUM_SPI_STAT_RUWM_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RUWM: Rx regular watermark reached */
#define ENUM_SPI_STAT_RUWM_HI                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RUWM: Rx urgent watermark breached */
#define ENUM_SPI_STAT_SPIF_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SPIF: No status */
#define ENUM_SPI_STAT_SPIF_HI                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SPIF: Completed single word transfer */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_ILAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_ILAT_TF                     11            /*  Transmit Finish Interrupt Latch */
#define BITP_SPI_ILAT_RF                     10            /*  Receive Finish Interrupt Latch */
#define BITP_SPI_ILAT_TS                      9            /*  Transmit Start Interrupt Latch */
#define BITP_SPI_ILAT_RS                      8            /*  Receive Start Interrupt Latch */
#define BITP_SPI_ILAT_MF                      7            /*  Mode Fault Interrupt Latch */
#define BITP_SPI_ILAT_TC                      6            /*  Transmit Collision Interrupt Latch */
#define BITP_SPI_ILAT_TUR                     5            /*  Transmit Underrun Interrupt Latch */
#define BITP_SPI_ILAT_ROR                     4            /*  Receive Overrun Interrupt Latch */
#define BITP_SPI_ILAT_TUWM                    2            /*  Transmit Urgent Watermark Interrupt Latch */
#define BITP_SPI_ILAT_RUWM                    1            /*  Receive Urgent Watermark Interrupt Latch */
#define BITM_SPI_ILAT_TF                     (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Transmit Finish Interrupt Latch */
#define BITM_SPI_ILAT_RF                     (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Receive Finish Interrupt Latch */
#define BITM_SPI_ILAT_TS                     (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Transmit Start Interrupt Latch */
#define BITM_SPI_ILAT_RS                     (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Start Interrupt Latch */
#define BITM_SPI_ILAT_MF                     (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Mode Fault Interrupt Latch */
#define BITM_SPI_ILAT_TC                     (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Transmit Collision Interrupt Latch */
#define BITM_SPI_ILAT_TUR                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Underrun Interrupt Latch */
#define BITM_SPI_ILAT_ROR                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Overrun Interrupt Latch */
#define BITM_SPI_ILAT_TUWM                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Urgent Watermark Interrupt Latch */
#define BITM_SPI_ILAT_RUWM                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Urgent Watermark Interrupt Latch */
#define ENUM_SPI_ILAT_TF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TF: No interrupt request */
#define ENUM_SPI_ILAT_TF_HI                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  TF: Latched interrupt request */
#define ENUM_SPI_ILAT_RF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RF: No interrupt request */
#define ENUM_SPI_ILAT_RF_HI                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RF: Latched interrupt request */
#define ENUM_SPI_ILAT_TS_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TS: No interrupt request */
#define ENUM_SPI_ILAT_TS_HI                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  TS: Latched interrupt request */
#define ENUM_SPI_ILAT_RS_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RS: No interrupt request */
#define ENUM_SPI_ILAT_RS_HI                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RS: Latched interrupt request */
#define ENUM_SPI_ILAT_MF_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF: No interrupt request */
#define ENUM_SPI_ILAT_MF_HI                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  MF: Latched interrupt request */
#define ENUM_SPI_ILAT_TC_LO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TC: No interrupt request */
#define ENUM_SPI_ILAT_TC_HI                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  TC: Latched interrupt request */
#define ENUM_SPI_ILAT_TUR_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUR: No interrupt request */
#define ENUM_SPI_ILAT_TUR_HI                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  TUR: Latched interrupt request */
#define ENUM_SPI_ILAT_ROR_LO                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ROR: No interrupt request */
#define ENUM_SPI_ILAT_ROR_HI                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ROR: Latched interrupt request */
#define ENUM_SPI_ILAT_TUWM_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TUWM: No interrupt request */
#define ENUM_SPI_ILAT_TUWM_HI                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TUWM: Latched interrupt request */
#define ENUM_SPI_ILAT_RUWM_LO                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RUWM: No interrupt request */
#define ENUM_SPI_ILAT_RUWM_HI                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RUWM: Latched interrupt request */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_ILAT_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_ILAT_CLR_TF                 11            /*  Clear Transmit Finish */
#define BITP_SPI_ILAT_CLR_RF                 10            /*  Clear Receive Finish */
#define BITP_SPI_ILAT_CLR_TS                  9            /*  Clear Transmit Start */
#define BITP_SPI_ILAT_CLR_RS                  8            /*  Clear Receive Start */
#define BITP_SPI_ILAT_CLR_MF                  7            /*  Clear Mode Fault */
#define BITP_SPI_ILAT_CLR_TC                  6            /*  Clear Transmit Collision */
#define BITP_SPI_ILAT_CLR_TUR                 5            /*  Clear Transmit Underrun */
#define BITP_SPI_ILAT_CLR_ROR                 4            /*  Clear Receive Overrun */
#define BITP_SPI_ILAT_CLR_TUWM                2            /*  Clear Transmit Urgent Watermark */
#define BITP_SPI_ILAT_CLR_RUWM                1            /*  Clear Receive Urgent Watermark */
#define BITM_SPI_ILAT_CLR_TF                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Clear Transmit Finish */
#define BITM_SPI_ILAT_CLR_RF                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Clear Receive Finish */
#define BITM_SPI_ILAT_CLR_TS                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Clear Transmit Start */
#define BITM_SPI_ILAT_CLR_RS                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Clear Receive Start */
#define BITM_SPI_ILAT_CLR_MF                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Clear Mode Fault */
#define BITM_SPI_ILAT_CLR_TC                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Clear Transmit Collision */
#define BITM_SPI_ILAT_CLR_TUR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Clear Transmit Underrun */
#define BITM_SPI_ILAT_CLR_ROR                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Clear Receive Overrun */
#define BITM_SPI_ILAT_CLR_TUWM               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clear Transmit Urgent Watermark */
#define BITM_SPI_ILAT_CLR_RUWM               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clear Receive Urgent Watermark */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_RFIFO                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_RFIFO_DATA                   0            /*  Receive FIFO Data */
#define BITM_SPI_RFIFO_DATA                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive FIFO Data */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_TFIFO                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_TFIFO_DATA                   0            /*  Transmit FIFO Data */
#define BITM_SPI_TFIFO_DATA                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit FIFO Data */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_MMRDH                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_MMRDH_CMDPINS               29            /*  Pins Used for Command */
#define BITP_SPI_MMRDH_CMDSKIP               28            /*  Command Skip Enable */
#define BITP_SPI_MMRDH_WRAP                  27            /*  SPI Memory Wrap Indicator */
#define BITP_SPI_MMRDH_MERGE                 26            /*  Merge Enable */
#define BITP_SPI_MMRDH_TRIDMY                24            /*  Tristate Dummy Timing */
#define BITP_SPI_MMRDH_MODE                  16            /*  Mode Field */
#define BITP_SPI_MMRDH_DMYSIZE               12            /*  Bytes of Dummy/Mode */
#define BITP_SPI_MMRDH_ADRPINS               11            /*  Pins Used for Address */
#define BITP_SPI_MMRDH_ADRSIZE                8            /*  Bytes of Read Address */
#define BITP_SPI_MMRDH_OPCODE                 0            /*  Read Opcode */
#define BITM_SPI_MMRDH_CMDPINS               (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pins Used for Command */
#define BITM_SPI_MMRDH_CMDSKIP               (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Command Skip Enable */
#define BITM_SPI_MMRDH_WRAP                  (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  SPI Memory Wrap Indicator */
#define BITM_SPI_MMRDH_MERGE                 (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Merge Enable */
#define BITM_SPI_MMRDH_TRIDMY                (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  Tristate Dummy Timing */
#define BITM_SPI_MMRDH_MODE                  (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Mode Field */
#define BITM_SPI_MMRDH_DMYSIZE               (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  Bytes of Dummy/Mode */
#define BITM_SPI_MMRDH_ADRPINS               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pins Used for Address */
#define BITM_SPI_MMRDH_ADRSIZE               (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  Bytes of Read Address */
#define BITM_SPI_MMRDH_OPCODE                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read Opcode */

/* -------------------------------------------------------------------------------------------------------------------------
          SPI_MMTOP                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPI_MMTOP_TOPADR                 0            /*  SPI Memory Top Address */
#define BITM_SPI_MMTOP_TOPADR                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SPI Memory Top Address */


/* ============================================================================================================================
        Serial Peripheral Interface
   ============================================================================================================================ */

/* ============================================================================================================================
        SPI1
   ============================================================================================================================ */
#define REG_SPI1_CTL                         0x3102F004            /*  SPI1 Control Register */
#define REG_SPI1_RXCTL                       0x3102F008            /*  SPI1 Receive Control Register */
#define REG_SPI1_TXCTL                       0x3102F00C            /*  SPI1 Transmit Control Register */
#define REG_SPI1_CLK                         0x3102F010            /*  SPI1 Clock Rate Register */
#define REG_SPI1_DLY                         0x3102F014            /*  SPI1 Delay Register */
#define REG_SPI1_SLVSEL                      0x3102F018            /*  SPI1 Slave Select Register */
#define REG_SPI1_RWC                         0x3102F01C            /*  SPI1 Received Word Count Register */
#define REG_SPI1_RWCR                        0x3102F020            /*  SPI1 Received Word Count Reload Register */
#define REG_SPI1_TWC                         0x3102F024            /*  SPI1 Transmitted Word Count Register */
#define REG_SPI1_TWCR                        0x3102F028            /*  SPI1 Transmitted Word Count Reload Register */
#define REG_SPI1_IMSK                        0x3102F030            /*  SPI1 Interrupt Mask Register */
#define REG_SPI1_IMSK_CLR                    0x3102F034            /*  SPI1 Interrupt Mask Clear Register */
#define REG_SPI1_IMSK_SET                    0x3102F038            /*  SPI1 Interrupt Mask Set Register */
#define REG_SPI1_STAT                        0x3102F040            /*  SPI1 Status Register */
#define REG_SPI1_ILAT                        0x3102F044            /*  SPI1 Masked Interrupt Condition Register */
#define REG_SPI1_ILAT_CLR                    0x3102F048            /*  SPI1 Masked Interrupt Clear Register */
#define REG_SPI1_RFIFO                       0x3102F050            /*  SPI1 Receive FIFO Data Register */
#define REG_SPI1_TFIFO                       0x3102F058            /*  SPI1 Transmit FIFO Data Register */

/* ============================================================================================================================
        SPI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Serial Peripheral Interface
   ============================================================================================================================ */

/* ============================================================================================================================
        SPI2
   ============================================================================================================================ */
#define REG_SPI2_CTL                         0x31030004            /*  SPI2 Control Register */
#define REG_SPI2_RXCTL                       0x31030008            /*  SPI2 Receive Control Register */
#define REG_SPI2_TXCTL                       0x3103000C            /*  SPI2 Transmit Control Register */
#define REG_SPI2_CLK                         0x31030010            /*  SPI2 Clock Rate Register */
#define REG_SPI2_DLY                         0x31030014            /*  SPI2 Delay Register */
#define REG_SPI2_SLVSEL                      0x31030018            /*  SPI2 Slave Select Register */
#define REG_SPI2_RWC                         0x3103001C            /*  SPI2 Received Word Count Register */
#define REG_SPI2_RWCR                        0x31030020            /*  SPI2 Received Word Count Reload Register */
#define REG_SPI2_TWC                         0x31030024            /*  SPI2 Transmitted Word Count Register */
#define REG_SPI2_TWCR                        0x31030028            /*  SPI2 Transmitted Word Count Reload Register */
#define REG_SPI2_IMSK                        0x31030030            /*  SPI2 Interrupt Mask Register */
#define REG_SPI2_IMSK_CLR                    0x31030034            /*  SPI2 Interrupt Mask Clear Register */
#define REG_SPI2_IMSK_SET                    0x31030038            /*  SPI2 Interrupt Mask Set Register */
#define REG_SPI2_STAT                        0x31030040            /*  SPI2 Status Register */
#define REG_SPI2_ILAT                        0x31030044            /*  SPI2 Masked Interrupt Condition Register */
#define REG_SPI2_ILAT_CLR                    0x31030048            /*  SPI2 Masked Interrupt Clear Register */
#define REG_SPI2_RFIFO                       0x31030050            /*  SPI2 Receive FIFO Data Register */
#define REG_SPI2_TFIFO                       0x31030058            /*  SPI2 Transmit FIFO Data Register */
#define REG_SPI2_MMRDH                       0x31030060            /*  SPI2 Memory Mapped Read Header */
#define REG_SPI2_MMTOP                       0x31030064            /*  SPI2 SPI Memory Top Address */

/* ============================================================================================================================
        SPI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Ethernet MAC
   ============================================================================================================================ */

/* ============================================================================================================================
        EMAC0
   ============================================================================================================================ */
#define REG_EMAC0_MACCFG                     0x31040000            /*  EMAC0 MAC Configuration Register */
#define REG_EMAC0_MACFRMFILT                 0x31040004            /*  EMAC0 MAC Rx Frame Filter Register */
#define REG_EMAC0_HASHTBL_HI                 0x31040008            /*  EMAC0 Hash Table High Register */
#define REG_EMAC0_HASHTBL_LO                 0x3104000C            /*  EMAC0 Hash Table Low Register */
#define REG_EMAC0_SMI_ADDR                   0x31040010            /*  EMAC0 SMI Address Register */
#define REG_EMAC0_SMI_DATA                   0x31040014            /*  EMAC0 SMI Data Register */
#define REG_EMAC0_FLOWCTL                    0x31040018            /*  EMAC0 FLow Control Register */
#define REG_EMAC0_VLANTAG                    0x3104001C            /*  EMAC0 VLAN Tag Register */
#define REG_EMAC0_DBG                        0x31040024            /*  EMAC0 Debug Register */
#define REG_EMAC0_LPI_CTLSTAT                0x31040030            /*  EMAC0 Low Power Idle Control and Status Register */
#define REG_EMAC0_LPI_TMRSCTL                0x31040034            /*  EMAC0 Low Power Idle Timeout Register */
#define REG_EMAC0_ISTAT                      0x31040038            /*  EMAC0 Interrupt Status Register */
#define REG_EMAC0_IMSK                       0x3104003C            /*  EMAC0 Interrupt Mask Register */
#define REG_EMAC0_ADDR0_HI                   0x31040040            /*  EMAC0 MAC Address 0 High Register */
#define REG_EMAC0_ADDR0_LO                   0x31040044            /*  EMAC0 MAC Address 0 Low Register */
#define REG_EMAC0_ADDR1_HI                   0x31040048            /*  EMAC0 MAC Address 1 High Register */
#define REG_EMAC0_ADDR1_LO                   0x3104004C            /*  EMAC0 MAC Address 1 Low Register */
#define REG_EMAC0_GIGE_CTLSTAT               0x310400D8            /*  EMAC0 RGMII Control and Status Register */
#define REG_EMAC0_WDOG_TIMOUT                0x310400DC            /*  EMAC0 Watchdog Timeout Register */
#define REG_EMAC0_MMC_CTL                    0x31040100            /*  EMAC0 MMC Control Register */
#define REG_EMAC0_MMC_RXINT                  0x31040104            /*  EMAC0 MMC Rx Interrupt Register */
#define REG_EMAC0_MMC_TXINT                  0x31040108            /*  EMAC0 MMC Tx Interrupt Register */
#define REG_EMAC0_MMC_RXIMSK                 0x3104010C            /*  EMAC0 MMC Rx Interrupt Mask Register */
#define REG_EMAC0_MMC_TXIMSK                 0x31040110            /*  EMAC0 MMC TX Interrupt Mask Register */
#define REG_EMAC0_TXOCTCNT_GB                0x31040114            /*  EMAC0 Tx OCT Count (Good/Bad) Register */
#define REG_EMAC0_TXFRMCNT_GB                0x31040118            /*  EMAC0 Tx Frame Count (Good/Bad) Register */
#define REG_EMAC0_TXBCASTFRM_G               0x3104011C            /*  EMAC0 Tx Broadcast Frames (Good) Register */
#define REG_EMAC0_TXMCASTFRM_G               0x31040120            /*  EMAC0 Tx Multicast Frames (Good) Register */
#define REG_EMAC0_TX64_GB                    0x31040124            /*  EMAC0 Tx 64-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_TX65TO127_GB               0x31040128            /*  EMAC0 Tx 65- to 127-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_TX128TO255_GB              0x3104012C            /*  EMAC0 Tx 128- to 255-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_TX256TO511_GB              0x31040130            /*  EMAC0 Tx 256- to 511-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_TX512TO1023_GB             0x31040134            /*  EMAC0 Tx 512- to 1023-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_TX1024TOMAX_GB             0x31040138            /*  EMAC0 Tx 1024- to Max-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_TXUCASTFRM_GB              0x3104013C            /*  EMAC0 Tx Unicast Frames (Good/Bad) Register */
#define REG_EMAC0_TXMCASTFRM_GB              0x31040140            /*  EMAC0 Tx Multicast Frames (Good/Bad) Register */
#define REG_EMAC0_TXBCASTFRM_GB              0x31040144            /*  EMAC0 Tx Broadcast Frames (Good/Bad) Register */
#define REG_EMAC0_TXUNDR_ERR                 0x31040148            /*  EMAC0 Tx Underflow Error Register */
#define REG_EMAC0_TXSNGCOL_G                 0x3104014C            /*  EMAC0 Tx Single Collision (Good) Register */
#define REG_EMAC0_TXMULTCOL_G                0x31040150            /*  EMAC0 Tx Multiple Collision (Good) Register */
#define REG_EMAC0_TXDEFERRED                 0x31040154            /*  EMAC0 Tx Deferred Register */
#define REG_EMAC0_TXLATECOL                  0x31040158            /*  EMAC0 Tx Late Collision Register */
#define REG_EMAC0_TXEXCESSCOL                0x3104015C            /*  EMAC0 Tx Excess Collision Register */
#define REG_EMAC0_TXCARR_ERR                 0x31040160            /*  EMAC0 Tx Carrier Error Register */
#define REG_EMAC0_TXOCTCNT_G                 0x31040164            /*  EMAC0 Tx Octet Count (Good) Register */
#define REG_EMAC0_TXFRMCNT_G                 0x31040168            /*  EMAC0 Tx Frame Count (Good) Register */
#define REG_EMAC0_TXEXCESSDEF                0x3104016C            /*  EMAC0 Tx Excess Deferral Register */
#define REG_EMAC0_TXPAUSEFRM                 0x31040170            /*  EMAC0 Tx Pause Frame Register */
#define REG_EMAC0_TXVLANFRM_G                0x31040174            /*  EMAC0 Tx VLAN Frames (Good) Register */
#define REG_EMAC0_TXOVRSIZE_G                0x31040178            /*  EMAC0 Number of Tx Frames (Good) greater than maxsize */
#define REG_EMAC0_RXFRMCNT_GB                0x31040180            /*  EMAC0 Rx Frame Count (Good/Bad) Register */
#define REG_EMAC0_RXOCTCNT_GB                0x31040184            /*  EMAC0 Rx Octet Count (Good/Bad) Register */
#define REG_EMAC0_RXOCTCNT_G                 0x31040188            /*  EMAC0 Rx Octet Count (Good) Register */
#define REG_EMAC0_RXBCASTFRM_G               0x3104018C            /*  EMAC0 Rx Broadcast Frames (Good) Register */
#define REG_EMAC0_RXMCASTFRM_G               0x31040190            /*  EMAC0 Rx Multicast Frames (Good) Register */
#define REG_EMAC0_RXCRC_ERR                  0x31040194            /*  EMAC0 Rx CRC Error Register */
#define REG_EMAC0_RXALIGN_ERR                0x31040198            /*  EMAC0 Rx alignment Error Register */
#define REG_EMAC0_RXRUNT_ERR                 0x3104019C            /*  EMAC0 Rx Runt Error Register */
#define REG_EMAC0_RXJAB_ERR                  0x310401A0            /*  EMAC0 Rx Jab Error Register */
#define REG_EMAC0_RXUSIZE_G                  0x310401A4            /*  EMAC0 Rx Undersize (Good) Register */
#define REG_EMAC0_RXOSIZE_G                  0x310401A8            /*  EMAC0 Rx Oversize (Good) Register */
#define REG_EMAC0_RX64_GB                    0x310401AC            /*  EMAC0 Rx 64-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_RX65TO127_GB               0x310401B0            /*  EMAC0 Rx 65- to 127-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_RX128TO255_GB              0x310401B4            /*  EMAC0 Rx 128- to 255-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_RX256TO511_GB              0x310401B8            /*  EMAC0 Rx 256- to 511-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_RX512TO1023_GB             0x310401BC            /*  EMAC0 Rx 512- to 1023-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_RX1024TOMAX_GB             0x310401C0            /*  EMAC0 Rx 1024- to Max-Byte Frames (Good/Bad) Register */
#define REG_EMAC0_RXUCASTFRM_G               0x310401C4            /*  EMAC0 Rx Unicast Frames (Good) Register */
#define REG_EMAC0_RXLEN_ERR                  0x310401C8            /*  EMAC0 Rx Length Error Register */
#define REG_EMAC0_RXOORTYPE                  0x310401CC            /*  EMAC0 Rx Out Of Range Type Register */
#define REG_EMAC0_RXPAUSEFRM                 0x310401D0            /*  EMAC0 Rx Pause Frames Register */
#define REG_EMAC0_RXFIFO_OVF                 0x310401D4            /*  EMAC0 Rx FIFO Overflow Register */
#define REG_EMAC0_RXVLANFRM_GB               0x310401D8            /*  EMAC0 Rx VLAN Frames (Good/Bad) Register */
#define REG_EMAC0_RXWDOG_ERR                 0x310401DC            /*  EMAC0 Rx Watch Dog Error Register */
#define REG_EMAC0_RXRCV_ERR                  0x310401E0            /*  EMAC0 Rx Error Frames Received Register */
#define REG_EMAC0_RXCTLFRM_G                 0x310401E4            /*  EMAC0 Rx Good Control Frames Register */
#define REG_EMAC0_IPC_RXIMSK                 0x31040200            /*  EMAC0 MMC IPC Rx Interrupt Mask Register */
#define REG_EMAC0_IPC_RXINT                  0x31040208            /*  EMAC0 MMC IPC Rx Interrupt Register */
#define REG_EMAC0_RXIPV4_GD_FRM              0x31040210            /*  EMAC0 Rx IPv4 Datagrams (Good) Register */
#define REG_EMAC0_RXIPV4_HDR_ERR_FRM         0x31040214            /*  EMAC0 Rx IPv4 Datagrams Header Errors Register */
#define REG_EMAC0_RXIPV4_NOPAY_FRM           0x31040218            /*  EMAC0 Rx IPv4 Datagrams No Payload Frame Register */
#define REG_EMAC0_RXIPV4_FRAG_FRM            0x3104021C            /*  EMAC0 Rx IPv4 Datagrams Fragmented Frames Register */
#define REG_EMAC0_RXIPV4_UDSBL_FRM           0x31040220            /*  EMAC0 Rx IPv4 UDP Disabled Frames Register */
#define REG_EMAC0_RXIPV6_GD_FRM              0x31040224            /*  EMAC0 Rx IPv6 Datagrams Good Frames Register */
#define REG_EMAC0_RXIPV6_HDR_ERR_FRM         0x31040228            /*  EMAC0 Rx IPv6 Datagrams Header Error Frames Register */
#define REG_EMAC0_RXIPV6_NOPAY_FRM           0x3104022C            /*  EMAC0 Rx IPv6 Datagrams No Payload Frames Register */
#define REG_EMAC0_RXUDP_GD_FRM               0x31040230            /*  EMAC0 Rx UDP Good Frames Register */
#define REG_EMAC0_RXUDP_ERR_FRM              0x31040234            /*  EMAC0 Rx UDP Error Frames Register */
#define REG_EMAC0_RXTCP_GD_FRM               0x31040238            /*  EMAC0 Rx TCP Good Frames Register */
#define REG_EMAC0_RXTCP_ERR_FRM              0x3104023C            /*  EMAC0 Rx TCP Error Frames Register */
#define REG_EMAC0_RXICMP_GD_FRM              0x31040240            /*  EMAC0 Rx ICMP Good Frames Register */
#define REG_EMAC0_RXICMP_ERR_FRM             0x31040244            /*  EMAC0 Rx ICMP Error Frames Register */
#define REG_EMAC0_RXIPV4_GD_OCT              0x31040250            /*  EMAC0 Rx IPv4 Datagrams Good Octets Register */
#define REG_EMAC0_RXIPV4_HDR_ERR_OCT         0x31040254            /*  EMAC0 Rx IPv4 Datagrams Header Errors Register */
#define REG_EMAC0_RXIPV4_NOPAY_OCT           0x31040258            /*  EMAC0 Rx IPv4 Datagrams No Payload Octets Register */
#define REG_EMAC0_RXIPV4_FRAG_OCT            0x3104025C            /*  EMAC0 Rx IPv4 Datagrams Fragmented Octets Register */
#define REG_EMAC0_RXIPV4_UDSBL_OCT           0x31040260            /*  EMAC0 Rx IPv4 UDP Disabled Octets Register */
#define REG_EMAC0_RXIPV6_GD_OCT              0x31040264            /*  EMAC0 Rx IPv6 Good Octets Register */
#define REG_EMAC0_RXIPV6_HDR_ERR_OCT         0x31040268            /*  EMAC0 Rx IPv6 Header Errors Register */
#define REG_EMAC0_RXIPV6_NOPAY_OCT           0x3104026C            /*  EMAC0 Rx IPv6 No Payload Octets Register */
#define REG_EMAC0_RXUDP_GD_OCT               0x31040270            /*  EMAC0 Rx UDP Good Octets Register */
#define REG_EMAC0_RXUDP_ERR_OCT              0x31040274            /*  EMAC0 Rx UDP Error Octets Register */
#define REG_EMAC0_RXTCP_GD_OCT               0x31040278            /*  EMAC0 Rx TCP Good Octets Register */
#define REG_EMAC0_RXTCP_ERR_OCT              0x3104027C            /*  EMAC0 Rx TCP Error Octets Register */
#define REG_EMAC0_RXICMP_GD_OCT              0x31040280            /*  EMAC0 Rx ICMP Good Octets Register */
#define REG_EMAC0_RXICMP_ERR_OCT             0x31040284            /*  EMAC0 Rx ICMP Error Octets Register */
#define REG_EMAC0_L3L4_CTL                   0x31040400            /*  EMAC0 Layer3 and Layer4 Control Register */
#define REG_EMAC0_L4_ADDR                    0x31040404            /*  EMAC0 Layer 4 Address Register */
#define REG_EMAC0_L3_ADDR0                   0x31040410            /*  EMAC0 Layer 3 Address0 Register */
#define REG_EMAC0_L3_ADDR1                   0x31040414            /*  EMAC0 Layer 3 Address1 Register */
#define REG_EMAC0_L3_ADDR2                   0x31040418            /*  EMAC0 Layer 3 Address2 Register */
#define REG_EMAC0_L3_ADDR3                   0x3104041C            /*  EMAC0 Layer 3 Address3 Register */
#define REG_EMAC0_VLAN_INCL                  0x31040584            /*  EMAC0 VLAN Tag Inclusion or Replacement Register */
#define REG_EMAC0_VLAN_HSHTBL                0x31040588            /*  EMAC0 VLAN Hash Table Register */
#define REG_EMAC0_TM_CTL                     0x31040700            /*  EMAC0 Time Stamp Control Register */
#define REG_EMAC0_TM_SUBSEC                  0x31040704            /*  EMAC0 Time Stamp Sub Second Increment Register */
#define REG_EMAC0_TM_SEC                     0x31040708            /*  EMAC0 Time Stamp Low Seconds Register */
#define REG_EMAC0_TM_NSEC                    0x3104070C            /*  EMAC0 Time Stamp Nanoseconds Register */
#define REG_EMAC0_TM_SECUPDT                 0x31040710            /*  EMAC0 Time Stamp Seconds Update Register */
#define REG_EMAC0_TM_NSECUPDT                0x31040714            /*  EMAC0 Time Stamp Nanoseconds Update Register */
#define REG_EMAC0_TM_ADDEND                  0x31040718            /*  EMAC0 Time Stamp Addend Register */
#define REG_EMAC0_TM_PPS0TGTM                0x3104071C            /*  EMAC0 Time Stamp Target Time Seconds Register */
#define REG_EMAC0_TM_PPS0NTGTM               0x31040720            /*  EMAC0 Time Stamp Target Time Nanoseconds Register */
#define REG_EMAC0_TM_HISEC                   0x31040724            /*  EMAC0 Time Stamp High Second Register */
#define REG_EMAC0_TM_STMPSTAT                0x31040728            /*  EMAC0 Time Stamp Status Register */
#define REG_EMAC0_TM_PPSCTL                  0x3104072C            /*  EMAC0 PPS Control Register */
#define REG_EMAC0_TM_AUXSTMP_NSEC            0x31040730            /*  EMAC0 Time Stamp Auxiliary TS Nano Seconds Register */
#define REG_EMAC0_TM_AUXSTMP_SEC             0x31040734            /*  EMAC0 Time Stamp Auxiliary TM Seconds Register */
#define REG_EMAC0_MAC_AVCTL                  0x31040738            /*  EMAC0 AV MAC Control Register */
#define REG_EMAC0_TM_PPS0INTVL               0x31040760            /*  EMAC0 Time Stamp PPS Interval Register */
#define REG_EMAC0_TM_PPS0WIDTH               0x31040764            /*  EMAC0 PPS Width Register */
#define REG_EMAC0_TM_PPS1TGTM                0x31040780            /*  EMAC0 PPS 1 Target Time Seconds Register */
#define REG_EMAC0_TM_PPS1NTGTM               0x31040784            /*  EMAC0 PPS 1 Target Time Nanoseconds Register */
#define REG_EMAC0_TM_PPS1INTVL               0x31040788            /*  EMAC0 PPS 1 Interval Register */
#define REG_EMAC0_TM_PPS1WIDTH               0x3104078C            /*  EMAC0 PPS 1 Width Register */
#define REG_EMAC0_TM_PPS2TGTM                0x310407A0            /*  EMAC0 PPS 2 Target Time Seconds Register */
#define REG_EMAC0_TM_PPS2NTGTM               0x310407A4            /*  EMAC0 PPS 2 Target Time Nanoseconds Register */
#define REG_EMAC0_TM_PPS2INTVL               0x310407A8            /*  EMAC0 PPS 2 Interval Register */
#define REG_EMAC0_TM_PPS2WIDTH               0x310407AC            /*  EMAC0 PPS 2 Width Register */
#define REG_EMAC0_TM_PPS3TGTM                0x310407C0            /*  EMAC0 PPS 3 Target Time Seconds Register */
#define REG_EMAC0_TM_PPS3NTGTM               0x310407C4            /*  EMAC0 PPS 3 Target Time Nanoseconds Register */
#define REG_EMAC0_TM_PPS3INTVL               0x310407C8            /*  EMAC0 PPS 3 Interval Register */
#define REG_EMAC0_TM_PPS3WIDTH               0x310407CC            /*  EMAC0 PPS 3 Width Register */
#define REG_EMAC0_DMA0_BUSMODE               0x31041000            /*  EMAC0 DMA Bus Mode Register */
#define REG_EMAC0_DMA0_TXPOLL                0x31041004            /*  EMAC0 DMA Tx Poll Demand Register */
#define REG_EMAC0_DMA0_RXPOLL                0x31041008            /*  EMAC0 DMA Rx Poll Demand register */
#define REG_EMAC0_DMA0_RXDSC_ADDR            0x3104100C            /*  EMAC0 DMA Rx Descriptor List Address Register */
#define REG_EMAC0_DMA0_TXDSC_ADDR            0x31041010            /*  EMAC0 DMA Tx Descriptor List Address Register */
#define REG_EMAC0_DMA0_STAT                  0x31041014            /*  EMAC0 DMA Status Register */
#define REG_EMAC0_DMA0_OPMODE                0x31041018            /*  EMAC0 DMA Operation Mode Register */
#define REG_EMAC0_DMA0_IEN                   0x3104101C            /*  EMAC0 DMA Interrupt Enable Register */
#define REG_EMAC0_DMA0_MISS_FRM              0x31041020            /*  EMAC0 DMA Missed Frame Register */
#define REG_EMAC0_DMA0_RXIWDOG               0x31041024            /*  EMAC0 DMA Rx Interrupt Watch Dog Register */
#define REG_EMAC0_DMA0_BMMODE                0x31041028            /*  EMAC0 DMA SCB Bus Mode Register */
#define REG_EMAC0_DMA0_BMSTAT                0x3104102C            /*  EMAC0 DMA SCB Status Register */
#define REG_EMAC0_DMA0_TXDSC_CUR             0x31041048            /*  EMAC0 DMA Tx Descriptor Current Register */
#define REG_EMAC0_DMA0_RXDSC_CUR             0x3104104C            /*  EMAC0 DMA Rx Descriptor Current Register */
#define REG_EMAC0_DMA0_TXBUF_CUR             0x31041050            /*  EMAC0 DMA Tx Buffer Current Register */
#define REG_EMAC0_DMA0_RXBUF_CUR             0x31041054            /*  EMAC0 DMA Rx Buffer Current Register */
#define REG_EMAC0_DMA1_BUSMODE               0x31041100            /*  EMAC0 DMA Bus Mode Register */
#define REG_EMAC0_DMA1_TXPOLL                0x31041104            /*  EMAC0 DMA Tx Poll Demand Register */
#define REG_EMAC0_DMA1_RXPOLL                0x31041108            /*  EMAC0 DMA Rx Poll Demand Register */
#define REG_EMAC0_DMA1_RXDSC_ADDR            0x3104110C            /*  EMAC0 DMA Rx Descriptor List Address Register */
#define REG_EMAC0_DMA1_TXDSC_ADDR            0x31041110            /*  EMAC0 DMA Tx Descriptor List Address Register */
#define REG_EMAC0_DMA1_STAT                  0x31041114            /*  EMAC0 DMA Status Register */
#define REG_EMAC0_DMA1_OPMODE                0x31041118            /*  EMAC0 DMA Operation Mode Register */
#define REG_EMAC0_DMA1_IEN                   0x3104111C            /*  EMAC0 DMA Interrupt Enable Register */
#define REG_EMAC0_DMA1_MISS_FRM              0x31041120            /*  EMAC0 DMA Missed Frame Register */
#define REG_EMAC0_DMA1_RXIWDOG               0x31041124            /*  EMAC0 DMA Rx Interrupt Watch Dog Register */
#define REG_EMAC0_DMA1_CHSFCS                0x31041130            /*  EMAC0 Channel 1 Control Bits for Slot Function Register */
#define REG_EMAC0_DMA1_TXDSC_CUR             0x31041148            /*  EMAC0 DMA Tx Descriptor Current Register */
#define REG_EMAC0_DMA1_RXDSC_CUR             0x3104114C            /*  EMAC0 DMA Rx Descriptor Current Register */
#define REG_EMAC0_DMA1_TXBUF_CUR             0x31041150            /*  EMAC0 DMA Tx Buffer Current Register */
#define REG_EMAC0_DMA1_RXBUF_CUR             0x31041154            /*  EMAC0 DMA Rx Buffer Current Register */
#define REG_EMAC0_DMA1_CHCBSCTL              0x31041160            /*  EMAC0 Channel 1 Credit Shaping Control Register */
#define REG_EMAC0_DMA1_CHCBSSTAT             0x31041164            /*  EMAC0 Channel 1 Average Traffic Transmitted Register */
#define REG_EMAC0_DMA1_CHISC                 0x31041168            /*  EMAC0 Channel 1 Idle Slope Credit Value Register */
#define REG_EMAC0_DMA1_CHSSC                 0x3104116C            /*  EMAC0 Channel 1 Send Slope Credit Value Register */
#define REG_EMAC0_DMA1_CHHIC                 0x31041170            /*  EMAC0 Channel 1 High Credit Value Register */
#define REG_EMAC0_DMA1_CHLOC                 0x31041174            /*  EMAC0 Channel 1 Low Credit Value Register */
#define REG_EMAC0_DMA2_BUSMODE               0x31041200            /*  EMAC0 DMA Bus Mode Register */
#define REG_EMAC0_DMA2_TXPOLL                0x31041204            /*  EMAC0 DMA Tx Poll Demand Register */
#define REG_EMAC0_DMA2_RXPOLL                0x31041208            /*  EMAC0 DMA Rx Poll Demand register */
#define REG_EMAC0_DMA2_RXDSC_ADDR            0x3104120C            /*  EMAC0 DMA Rx Descriptor List Address Register */
#define REG_EMAC0_DMA2_TXDSC_ADDR            0x31041210            /*  EMAC0 DMA Tx Descriptor List Address Register */
#define REG_EMAC0_DMA2_STAT                  0x31041214            /*  EMAC0 DMA Status Register */
#define REG_EMAC0_DMA2_OPMODE                0x31041218            /*  EMAC0 DMA Operation Mode Register */
#define REG_EMAC0_DMA2_IEN                   0x3104121C            /*  EMAC0 DMA Interrupt Enable Register */
#define REG_EMAC0_DMA2_MISS_FRM              0x31041220            /*  EMAC0 DMA Missed Frame Register */
#define REG_EMAC0_DMA2_RXIWDOG               0x31041224            /*  EMAC0 DMA Rx Interrupt Watch Dog Register */
#define REG_EMAC0_DMA2_CHSFCS                0x31041230            /*  EMAC0 Channel 2 Control Bits for Slot Function Register */
#define REG_EMAC0_DMA2_TXDSC_CUR             0x31041248            /*  EMAC0 DMA Tx Descriptor Current Register */
#define REG_EMAC0_DMA2_RXDSC_CUR             0x3104124C            /*  EMAC0 DMA Rx Descriptor Current Register */
#define REG_EMAC0_DMA2_TXBUF_CUR             0x31041250            /*  EMAC0 DMA Tx Buffer Current Register */
#define REG_EMAC0_DMA2_RXBUF_CUR             0x31041254            /*  EMAC0 DMA Rx Buffer Current Register */
#define REG_EMAC0_DMA2_CHCBSCTL              0x31041260            /*  EMAC0 Channel 2 Credit Shaping Control Register */
#define REG_EMAC0_DMA2_CHCBSSTAT             0x31041264            /*  EMAC0 Channel 2 Avg Traffic Transmitted Status Register */
#define REG_EMAC0_DMA2_CHISC                 0x31041268            /*  EMAC0 Channel 2 Idle Slope Credit Value Register */
#define REG_EMAC0_DMA2_CHSSC                 0x3104126C            /*  EMAC0 Channel 2 Send Slope Credit Value Register */
#define REG_EMAC0_DMA2_CHHIC                 0x31041270            /*  EMAC0 Channel 2 High Credit Value Register */
#define REG_EMAC0_DMA2_CHLOC                 0x31041274            /*  EMAC0 Channel 2 Low Credit Value Register */

/* ============================================================================================================================
        EMAC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MACCFG                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MACCFG_SARC                28            /*  Source Address Insertion or Replacement Control */
#define BITP_EMAC_MACCFG_TWOKPE              27            /*  Support for 2K packets */
#define BITP_EMAC_MACCFG_CST                 25            /*  CRC Stripping */
#define BITP_EMAC_MACCFG_TC                  24            /*  Transmit Configuration in RGMII, SGMII or SMII */
#define BITP_EMAC_MACCFG_WD                  23            /*  Watch Dog Disable */
#define BITP_EMAC_MACCFG_JB                  22            /*  Jabber Disable */
#define BITP_EMAC_MACCFG_BE                  21            /*  Frame Burst Enable */
#define BITP_EMAC_MACCFG_JE                  20            /*  Jumbo Frame Enable */
#define BITP_EMAC_MACCFG_IFG                 17            /*  Inter-Frame Gap */
#define BITP_EMAC_MACCFG_DCRS                16            /*  Disable Carrier Sense */
#define BITP_EMAC_MACCFG_PS                  15            /*  Port Select */
#define BITP_EMAC_MACCFG_FES                 14            /*  Speed of Operation */
#define BITP_EMAC_MACCFG_DO                  13            /*  Disable Receive Own */
#define BITP_EMAC_MACCFG_LM                  12            /*  Loopback Mode */
#define BITP_EMAC_MACCFG_DM                  11            /*  Duplex Mode */
#define BITP_EMAC_MACCFG_IPC                 10            /*  IP Checksum */
#define BITP_EMAC_MACCFG_DR                   9            /*  Disable Retry */
#define BITP_EMAC_MACCFG_LUD                  8            /*  Link Up or Down */
#define BITP_EMAC_MACCFG_ACS                  7            /*  Automatic Pad/CRC Stripping */
#define BITP_EMAC_MACCFG_BL                   5            /*  Back Off Limit */
#define BITP_EMAC_MACCFG_DC                   4            /*  Deferral Check */
#define BITP_EMAC_MACCFG_TE                   3            /*  Transmitter Enable */
#define BITP_EMAC_MACCFG_RE                   2            /*  Receiver Enable */
#define BITP_EMAC_MACCFG_PRELEN               0            /*  Preamble Length for Transmit Frames */
#define BITM_EMAC_MACCFG_SARC                (_ADI_MSK_3(0x70000000,0x70000000UL, uint32_t  ))    /*  Source Address Insertion or Replacement Control */
#define BITM_EMAC_MACCFG_TWOKPE              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Support for 2K packets */
#define BITM_EMAC_MACCFG_CST                 (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  CRC Stripping */
#define BITM_EMAC_MACCFG_TC                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Transmit Configuration in RGMII, SGMII or SMII */
#define BITM_EMAC_MACCFG_WD                  (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Watch Dog Disable */
#define BITM_EMAC_MACCFG_JB                  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Jabber Disable */
#define BITM_EMAC_MACCFG_BE                  (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Frame Burst Enable */
#define BITM_EMAC_MACCFG_JE                  (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Jumbo Frame Enable */
#define BITM_EMAC_MACCFG_IFG                 (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  Inter-Frame Gap */
#define BITM_EMAC_MACCFG_DCRS                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Disable Carrier Sense */
#define BITM_EMAC_MACCFG_PS                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Port Select */
#define BITM_EMAC_MACCFG_FES                 (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Speed of Operation */
#define BITM_EMAC_MACCFG_DO                  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Disable Receive Own */
#define BITM_EMAC_MACCFG_LM                  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Loopback Mode */
#define BITM_EMAC_MACCFG_DM                  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Duplex Mode */
#define BITM_EMAC_MACCFG_IPC                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  IP Checksum */
#define BITM_EMAC_MACCFG_DR                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Disable Retry */
#define BITM_EMAC_MACCFG_LUD                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Link Up or Down */
#define BITM_EMAC_MACCFG_ACS                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Automatic Pad/CRC Stripping */
#define BITM_EMAC_MACCFG_BL                  (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Back Off Limit */
#define BITM_EMAC_MACCFG_DC                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Deferral Check */
#define BITM_EMAC_MACCFG_TE                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmitter Enable */
#define BITM_EMAC_MACCFG_RE                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receiver Enable */
#define BITM_EMAC_MACCFG_PRELEN              (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Preamble Length for Transmit Frames */
#define ENUM_EMAC_MACCFG_BIT_TIMES_96        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IFG: 96 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_88        (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  IFG: 88 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_80        (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  IFG: 80 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_72        (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  IFG: 72 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_64        (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  IFG: 64 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_56        (_ADI_MSK_3(0x000A0000,0x000A0000UL, uint32_t  ))    /*  IFG: 56 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_48        (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))    /*  IFG: 48 bit times */
#define ENUM_EMAC_MACCFG_BIT_TIMES_40        (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  IFG: 40 bit times */
#define ENUM_EMAC_MACCFG_RETRY_ENABLED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DR: Retry enabled */
#define ENUM_EMAC_MACCFG_RETRY_DISABLED      (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  DR: Retry disabled */
#define ENUM_EMAC_MACCFG_BL_10               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BL: k = min (n, 10) */
#define ENUM_EMAC_MACCFG_BL_8                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  BL: k = min (n, 8) */
#define ENUM_EMAC_MACCFG_BL_4                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  BL: k = min (n, 4) */
#define ENUM_EMAC_MACCFG_BL_1                (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  BL: k = min (n, 1) */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MACFRMFILT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MACFRMFILT_RA              31            /*  Receive All Frames */
#define BITP_EMAC_MACFRMFILT_DNTU            21            /*  Drop non-TCP/UDP over IP Frames */
#define BITP_EMAC_MACFRMFILT_IPFE            20            /*  Layer 3 and Layer 4 Filter Enable */
#define BITP_EMAC_MACFRMFILT_VTFE            16            /*  VAN Tag Filter Enable */
#define BITP_EMAC_MACFRMFILT_HPF             10            /*  Hash or Perfect Filter */
#define BITP_EMAC_MACFRMFILT_SAF              9            /*  Source Address Filter Enable */
#define BITP_EMAC_MACFRMFILT_SAIF             8            /*  Source Address Inverse Filtering */
#define BITP_EMAC_MACFRMFILT_PCF              6            /*  Pass Control Frames */
#define BITP_EMAC_MACFRMFILT_DBF              5            /*  Disable Broadcast Frames */
#define BITP_EMAC_MACFRMFILT_PM               4            /*  Pass All Multicast Frames */
#define BITP_EMAC_MACFRMFILT_DAIF             3            /*  Destination Address Inverse Filtering */
#define BITP_EMAC_MACFRMFILT_HMC              2            /*  Hash Multicast */
#define BITP_EMAC_MACFRMFILT_HUC              1            /*  Hash Unicast */
#define BITP_EMAC_MACFRMFILT_PR               0            /*  Promiscuous Mode */
#define BITM_EMAC_MACFRMFILT_RA              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Receive All Frames */
#define BITM_EMAC_MACFRMFILT_DNTU            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Drop non-TCP/UDP over IP Frames */
#define BITM_EMAC_MACFRMFILT_IPFE            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Layer 3 and Layer 4 Filter Enable */
#define BITM_EMAC_MACFRMFILT_VTFE            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  VAN Tag Filter Enable */
#define BITM_EMAC_MACFRMFILT_HPF             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Hash or Perfect Filter */
#define BITM_EMAC_MACFRMFILT_SAF             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Source Address Filter Enable */
#define BITM_EMAC_MACFRMFILT_SAIF            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Source Address Inverse Filtering */
#define BITM_EMAC_MACFRMFILT_PCF             (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  Pass Control Frames */
#define BITM_EMAC_MACFRMFILT_DBF             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Disable Broadcast Frames */
#define BITM_EMAC_MACFRMFILT_PM              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pass All Multicast Frames */
#define BITM_EMAC_MACFRMFILT_DAIF            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Destination Address Inverse Filtering */
#define BITM_EMAC_MACFRMFILT_HMC             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Hash Multicast */
#define BITM_EMAC_MACFRMFILT_HUC             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Hash Unicast */
#define BITM_EMAC_MACFRMFILT_PR              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Promiscuous Mode */
#define ENUM_EMAC_MACFRMFILT_FILT_ALL        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PCF: Pass no control frames */
#define ENUM_EMAC_MACFRMFILT_NO_PAUSE        (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  PCF: Pass no PAUSE frames */
#define ENUM_EMAC_MACFRMFILT_FWD_ALL         (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  PCF: Pass all control frames */
#define ENUM_EMAC_MACFRMFILT_PADR_FILT       (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  PCF: Pass address filtered control frames */
#define ENUM_EMAC_MACFRMFILT_DIS_BCAST       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DBF: AFM module passes all received broadcast frames */
#define ENUM_EMAC_MACFRMFILT_EN_BCAST        (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  DBF: AFM module filters all incoming broadcast frames */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_HASHTBL_HI                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_HASHTBL_HI_VALUE            0            /*  Hash Table High */
#define BITM_EMAC_HASHTBL_HI_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Hash Table High */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_HASHTBL_LO                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_HASHTBL_LO_VALUE            0            /*  Hash Table Low */
#define BITM_EMAC_HASHTBL_LO_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Hash Table Low */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_SMI_ADDR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_SMI_ADDR_PA                11            /*  Physical Layer Address */
#define BITP_EMAC_SMI_ADDR_SMIR               6            /*  SMI Register Address */
#define BITP_EMAC_SMI_ADDR_CR                 2            /*  Clock Range */
#define BITP_EMAC_SMI_ADDR_SMIW               1            /*  SMI Write */
#define BITP_EMAC_SMI_ADDR_SMIB               0            /*  SMI Busy */
#define BITM_EMAC_SMI_ADDR_PA                (_ADI_MSK_3(0x0000F800,0x0000F800UL, uint32_t  ))    /*  Physical Layer Address */
#define BITM_EMAC_SMI_ADDR_SMIR              (_ADI_MSK_3(0x000007C0,0x000007C0UL, uint32_t  ))    /*  SMI Register Address */
#define BITM_EMAC_SMI_ADDR_CR                (_ADI_MSK_3(0x0000003C,0x0000003CUL, uint32_t  ))    /*  Clock Range */
#define BITM_EMAC_SMI_ADDR_SMIW              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SMI Write */
#define BITM_EMAC_SMI_ADDR_SMIB              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SMI Busy */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_SMI_DATA                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_SMI_DATA_SMID               0            /*  SMI Data */
#define BITM_EMAC_SMI_DATA_SMID              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  SMI Data */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_FLOWCTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_FLOWCTL_PT                 16            /*  Pause Time */
#define BITP_EMAC_FLOWCTL_DZPQ                7            /*  Disable Zero-Quanta Pause */
#define BITP_EMAC_FLOWCTL_PLT                 4            /*  Pause Low Threshold */
#define BITP_EMAC_FLOWCTL_UP                  3            /*  Unicast Pause Frame Detect */
#define BITP_EMAC_FLOWCTL_RFE                 2            /*  Receive Flow Control Enable */
#define BITP_EMAC_FLOWCTL_TFE                 1            /*  Transmit Flow Control Enable */
#define BITP_EMAC_FLOWCTL_FCBBPA              0            /*  Initiate Pause Control Frame */
#define BITM_EMAC_FLOWCTL_PT                 (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Pause Time */
#define BITM_EMAC_FLOWCTL_DZPQ               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Disable Zero-Quanta Pause */
#define BITM_EMAC_FLOWCTL_PLT                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Pause Low Threshold */
#define BITM_EMAC_FLOWCTL_UP                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Unicast Pause Frame Detect */
#define BITM_EMAC_FLOWCTL_RFE                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Flow Control Enable */
#define BITM_EMAC_FLOWCTL_TFE                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Flow Control Enable */
#define BITM_EMAC_FLOWCTL_FCBBPA             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Initiate Pause Control Frame */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_VLANTAG                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_VLANTAG_VTHM               19            /*  VLAN Tag Hash Table Match Enable */
#define BITP_EMAC_VLANTAG_ESVL               18            /*  Enable S-VLAN */
#define BITP_EMAC_VLANTAG_VTIM               17            /*  VLAN Tag Inverse Match Enable */
#define BITP_EMAC_VLANTAG_ETV                16            /*  Enable Tag VLAN Comparison */
#define BITP_EMAC_VLANTAG_VL                  0            /*  VLAN Tag Id Receive Frames */
#define BITM_EMAC_VLANTAG_VTHM               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  VLAN Tag Hash Table Match Enable */
#define BITM_EMAC_VLANTAG_ESVL               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Enable S-VLAN */
#define BITM_EMAC_VLANTAG_VTIM               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  VLAN Tag Inverse Match Enable */
#define BITM_EMAC_VLANTAG_ETV                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Enable Tag VLAN Comparison */
#define BITM_EMAC_VLANTAG_VL                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  VLAN Tag Id Receive Frames */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DBG                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DBG_TXFIFOFULL             25            /*  Tx FIFO Full */
#define BITP_EMAC_DBG_TXFIFONE               24            /*  Tx FIFO Not Empty */
#define BITP_EMAC_DBG_TXFIFOACT              22            /*  Tx FIFO Active */
#define BITP_EMAC_DBG_TXFIFOCTLST            20            /*  Tx FIFO Controller State */
#define BITP_EMAC_DBG_TXPAUSE                19            /*  Tx Paused */
#define BITP_EMAC_DBG_TXFRCTL                17            /*  Tx Frame Controller State */
#define BITP_EMAC_DBG_MMTEA                  16            /*  MM Tx Engine Active */
#define BITP_EMAC_DBG_RXFIFOST                8            /*  Rx FIFO State */
#define BITP_EMAC_DBG_RXFIFOCTLST             5            /*  Rx FIFO Controller State */
#define BITP_EMAC_DBG_RXFIFOACT               4            /*  Rx FIFO Active */
#define BITP_EMAC_DBG_SFIFOST                 1            /*  Small FIFO State */
#define BITP_EMAC_DBG_MMREA                   0            /*  MM Rx Engine Active */
#define BITM_EMAC_DBG_TXFIFOFULL             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Tx FIFO Full */
#define BITM_EMAC_DBG_TXFIFONE               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Tx FIFO Not Empty */
#define BITM_EMAC_DBG_TXFIFOACT              (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Tx FIFO Active */
#define BITM_EMAC_DBG_TXFIFOCTLST            (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Tx FIFO Controller State */
#define BITM_EMAC_DBG_TXPAUSE                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Tx Paused */
#define BITM_EMAC_DBG_TXFRCTL                (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  Tx Frame Controller State */
#define BITM_EMAC_DBG_MMTEA                  (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  MM Tx Engine Active */
#define BITM_EMAC_DBG_RXFIFOST               (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Rx FIFO State */
#define BITM_EMAC_DBG_RXFIFOCTLST            (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Rx FIFO Controller State */
#define BITM_EMAC_DBG_RXFIFOACT              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Rx FIFO Active */
#define BITM_EMAC_DBG_SFIFOST                (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  Small FIFO State */
#define BITM_EMAC_DBG_MMREA                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  MM Rx Engine Active */
#define ENUM_EMAC_DBG_TXFRCTL_IDLE           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TXFRCTL: Idle */
#define ENUM_EMAC_DBG_TXFRCTL_WT_STATUS      (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  TXFRCTL: Wait */
#define ENUM_EMAC_DBG_TXFRCTL_PAUSE          (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  TXFRCTL: Pause */
#define ENUM_EMAC_DBG_TXFRCTL_TXFRAME        (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  TXFRCTL: Transmit */
#define ENUM_EMAC_DBG_FIFO_EMPTY             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RXFIFOST: Rx FIFO Empty */
#define ENUM_EMAC_DBG_FIFO_BEL_THERSHLD      (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  RXFIFOST: Rx FIFO Below De-activate FCT */
#define ENUM_EMAC_DBG_FIFO_ABV_THERSHLD      (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RXFIFOST: Rx FIFO Above De-activate FCT */
#define ENUM_EMAC_DBG_FIFO_FULL              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  RXFIFOST: Rx FIFO Full */
#define ENUM_EMAC_DBG_IDLE_FIFO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RXFIFOCTLST: Idle */
#define ENUM_EMAC_DBG_RD_DATA_FIFO           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  RXFIFOCTLST: Read Data */
#define ENUM_EMAC_DBG_RD_STS_FIFO            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  RXFIFOCTLST: Read Status */
#define ENUM_EMAC_DBG_FLUSH_FIFO             (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  RXFIFOCTLST: Flush */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_LPI_CTLSTAT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_LPI_CTLSTAT_LPITXA         19            /*  LPI Mode Transmit Behavior */
#define BITP_EMAC_LPI_CTLSTAT_PLSEN          18            /*  LPI Link Status Enable */
#define BITP_EMAC_LPI_CTLSTAT_PLS            17            /*  PHY Link Status */
#define BITP_EMAC_LPI_CTLSTAT_LPIEN          16            /*  LPI Enable */
#define BITP_EMAC_LPI_CTLSTAT_RLPIST          9            /*  Receive LPI Status */
#define BITP_EMAC_LPI_CTLSTAT_TLPIST          8            /*  Transmit LPI Status */
#define BITP_EMAC_LPI_CTLSTAT_RLPIEX          3            /*  Receiver LPI State Exit Status */
#define BITP_EMAC_LPI_CTLSTAT_RLPIEN          2            /*  Receiver LPI State Enable Status */
#define BITP_EMAC_LPI_CTLSTAT_TLPIEX          1            /*  Transmitter LPI State Exit Status */
#define BITP_EMAC_LPI_CTLSTAT_TLPIEN          0            /*  Transmitter LPI State Enable Status */
#define BITM_EMAC_LPI_CTLSTAT_LPITXA         (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  LPI Mode Transmit Behavior */
#define BITM_EMAC_LPI_CTLSTAT_PLSEN          (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  LPI Link Status Enable */
#define BITM_EMAC_LPI_CTLSTAT_PLS            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PHY Link Status */
#define BITM_EMAC_LPI_CTLSTAT_LPIEN          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  LPI Enable */
#define BITM_EMAC_LPI_CTLSTAT_RLPIST         (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive LPI Status */
#define BITM_EMAC_LPI_CTLSTAT_TLPIST         (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Transmit LPI Status */
#define BITM_EMAC_LPI_CTLSTAT_RLPIEX         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Receiver LPI State Exit Status */
#define BITM_EMAC_LPI_CTLSTAT_RLPIEN         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receiver LPI State Enable Status */
#define BITM_EMAC_LPI_CTLSTAT_TLPIEX         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmitter LPI State Exit Status */
#define BITM_EMAC_LPI_CTLSTAT_TLPIEN         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmitter LPI State Enable Status */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_LPI_TMRSCTL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_LPI_TMRSCTL_LST            16            /*  Link Status Timer */
#define BITP_EMAC_LPI_TMRSCTL_TWT             0            /*  Timer Wait Time */
#define BITM_EMAC_LPI_TMRSCTL_LST            (_ADI_MSK_3(0x03FF0000,0x03FF0000UL, uint32_t  ))    /*  Link Status Timer */
#define BITM_EMAC_LPI_TMRSCTL_TWT            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Timer Wait Time */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_ISTAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_ISTAT_LPIIS                10            /*  LPI Interrupt Status */
#define BITP_EMAC_ISTAT_TS                    9            /*  Time Stamp Interrupt Status */
#define BITP_EMAC_ISTAT_MMCRC                 7            /*  MMC Receive Checksum Offload Interrupt Status */
#define BITP_EMAC_ISTAT_MMCTX                 6            /*  MMC Transmit Interrupt Status */
#define BITP_EMAC_ISTAT_MMCRX                 5            /*  MMC Receive Interrupt Status */
#define BITP_EMAC_ISTAT_MMC                   4            /*  MMC Interrupt Status */
#define BITP_EMAC_ISTAT_RGMIIIS               0            /*  RGMII or SMII Interrupt Status */
#define BITM_EMAC_ISTAT_LPIIS                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  LPI Interrupt Status */
#define BITM_EMAC_ISTAT_TS                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Time Stamp Interrupt Status */
#define BITM_EMAC_ISTAT_MMCRC                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  MMC Receive Checksum Offload Interrupt Status */
#define BITM_EMAC_ISTAT_MMCTX                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  MMC Transmit Interrupt Status */
#define BITM_EMAC_ISTAT_MMCRX                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  MMC Receive Interrupt Status */
#define BITM_EMAC_ISTAT_MMC                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  MMC Interrupt Status */
#define BITM_EMAC_ISTAT_RGMIIIS              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  RGMII or SMII Interrupt Status */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_IMSK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_IMSK_LPIIM                 10            /*  LPI Interrupt Mask */
#define BITP_EMAC_IMSK_TS                     9            /*  Time Stamp Interrupt Mask */
#define BITP_EMAC_IMSK_RGMIIIM                0            /*  RGMII or SMII Interrupt Mask */
#define BITM_EMAC_IMSK_LPIIM                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  LPI Interrupt Mask */
#define BITM_EMAC_IMSK_TS                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Time Stamp Interrupt Mask */
#define BITM_EMAC_IMSK_RGMIIIM               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  RGMII or SMII Interrupt Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_ADDR0_HI                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_ADDR0_HI_ADDR               0            /*  Address */
#define BITM_EMAC_ADDR0_HI_ADDR              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_ADDR0_LO                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_ADDR0_LO_ADDR               0            /*  Address */
#define BITM_EMAC_ADDR0_LO_ADDR              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_ADDR1_HI                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_ADDR1_HI_AE                31            /*  Address Enable */
#define BITP_EMAC_ADDR1_HI_SA                30            /*  Source Address */
#define BITP_EMAC_ADDR1_HI_MBC               24            /*  Mask byte control */
#define BITP_EMAC_ADDR1_HI_ADDRHI             0            /*  Mac address */
#define BITM_EMAC_ADDR1_HI_AE                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Address Enable */
#define BITM_EMAC_ADDR1_HI_SA                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Source Address */
#define BITM_EMAC_ADDR1_HI_MBC               (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Mask byte control */
#define BITM_EMAC_ADDR1_HI_ADDRHI            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Mac address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_ADDR1_LO                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_ADDR1_LO_ADDRLO             0            /*  Mac Address */
#define BITM_EMAC_ADDR1_LO_ADDRLO            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mac Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_GIGE_CTLSTAT                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_GIGE_CTLSTAT_LNKSTS         3            /*  Link Status */
#define BITP_EMAC_GIGE_CTLSTAT_LNKSPEED       1            /*  Link Speed */
#define BITP_EMAC_GIGE_CTLSTAT_LNKMOD         0            /*  Link Mode */
#define BITM_EMAC_GIGE_CTLSTAT_LNKSTS        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Link Status */
#define BITM_EMAC_GIGE_CTLSTAT_LNKSPEED      (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  Link Speed */
#define BITM_EMAC_GIGE_CTLSTAT_LNKMOD        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Link Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_WDOG_TIMOUT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_WDOG_TIMOUT_PWE            16            /*  Programmable Watchdog Enable */
#define BITP_EMAC_WDOG_TIMOUT_WTO             0            /*  Watchdog Timeout */
#define BITM_EMAC_WDOG_TIMOUT_PWE            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Programmable Watchdog Enable */
#define BITM_EMAC_WDOG_TIMOUT_WTO            (_ADI_MSK_3(0x00003FFF,0x00003FFFUL, uint32_t  ))    /*  Watchdog Timeout */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MMC_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MMC_CTL_FULLPSET            5            /*  Full Preset */
#define BITP_EMAC_MMC_CTL_CNTRPSET            4            /*  Counter Reset/Preset */
#define BITP_EMAC_MMC_CTL_CNTRFRZ             3            /*  Counter Freeze */
#define BITP_EMAC_MMC_CTL_RDRST               2            /*  Read Reset */
#define BITP_EMAC_MMC_CTL_NOROLL              1            /*  No Rollover */
#define BITP_EMAC_MMC_CTL_RST                 0            /*  Reset */
#define BITM_EMAC_MMC_CTL_FULLPSET           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Full Preset */
#define BITM_EMAC_MMC_CTL_CNTRPSET           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Counter Reset/Preset */
#define BITM_EMAC_MMC_CTL_CNTRFRZ            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Counter Freeze */
#define BITM_EMAC_MMC_CTL_RDRST              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Read Reset */
#define BITM_EMAC_MMC_CTL_NOROLL             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  No Rollover */
#define BITM_EMAC_MMC_CTL_RST                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Reset */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MMC_RXINT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MMC_RXINT_RXCTLFIS         25            /*  Rx Control Frame Counter Interrupt Status */
#define BITP_EMAC_MMC_RXINT_RXRCVERRFIS      24            /*  Rx Error Frame Counter Interrupt Status */
#define BITP_EMAC_MMC_RXINT_WDOGERR          23            /*  Rx Watch Dog Error Count Half/Full */
#define BITP_EMAC_MMC_RXINT_VLANFRGB         22            /*  Rx VLAN Frames (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_FIFOOVF          21            /*  Rx FIFO Overflow Count Half/Full */
#define BITP_EMAC_MMC_RXINT_PAUSEFR          20            /*  Rx Pause Frames Count Half/Full */
#define BITP_EMAC_MMC_RXINT_OUTRANGE         19            /*  Rx Out Of Range Type Count Half/Full */
#define BITP_EMAC_MMC_RXINT_LENERR           18            /*  Rx Length Error Count Half/Full */
#define BITP_EMAC_MMC_RXINT_UCASTG           17            /*  Rx Unicast Frames (Good) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_R1024TOMAX       16            /*  Rx 1024-to-max Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_R512TO1023       15            /*  Rx 512-to-1023 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_R256TO511        14            /*  Rx 255-to-511 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_R128TO255        13            /*  Rx 128-to-255 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_R65TO127         12            /*  Rx 65-to-127 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_R64              11            /*  Rx 64 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_OSIZEG           10            /*  Rx Oversize (Good) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_USIZEG            9            /*  Rx Undersize (Good) Count Half/Full */
#define BITP_EMAC_MMC_RXINT_JABERR            8            /*  Rx Jabber Error Count Half/Full */
#define BITP_EMAC_MMC_RXINT_RUNTERR           7            /*  Rx Runt Error Count Half/Full */
#define BITP_EMAC_MMC_RXINT_ALIGNERR          6            /*  Rx Alignment Error Count Half/Full */
#define BITP_EMAC_MMC_RXINT_CRCERR            5            /*  Rx CRC Error Counter Half/Full */
#define BITP_EMAC_MMC_RXINT_MCASTG            4            /*  Rx Multicast Count (Good) Half/Full */
#define BITP_EMAC_MMC_RXINT_BCASTG            3            /*  Rx Broadcast Count (Good) Half/Full */
#define BITP_EMAC_MMC_RXINT_OCTCNTG           2            /*  Octet Count (Good) Half/Full */
#define BITP_EMAC_MMC_RXINT_OCTCNTGB          1            /*  Octet Count (Good/Bad) Half/Full */
#define BITP_EMAC_MMC_RXINT_FRCNTGB           0            /*  Frame Count (Good/Bad) Half/Full */
#define BITM_EMAC_MMC_RXINT_RXCTLFIS         (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Rx Control Frame Counter Interrupt Status */
#define BITM_EMAC_MMC_RXINT_RXRCVERRFIS      (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Rx Error Frame Counter Interrupt Status */
#define BITM_EMAC_MMC_RXINT_WDOGERR          (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Rx Watch Dog Error Count Half/Full */
#define BITM_EMAC_MMC_RXINT_VLANFRGB         (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Rx VLAN Frames (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_FIFOOVF          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Rx FIFO Overflow Count Half/Full */
#define BITM_EMAC_MMC_RXINT_PAUSEFR          (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Rx Pause Frames Count Half/Full */
#define BITM_EMAC_MMC_RXINT_OUTRANGE         (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Rx Out Of Range Type Count Half/Full */
#define BITM_EMAC_MMC_RXINT_LENERR           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Rx Length Error Count Half/Full */
#define BITM_EMAC_MMC_RXINT_UCASTG           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Rx Unicast Frames (Good) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_R1024TOMAX       (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Rx 1024-to-max Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_R512TO1023       (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Rx 512-to-1023 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_R256TO511        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Rx 255-to-511 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_R128TO255        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Rx 128-to-255 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_R65TO127         (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Rx 65-to-127 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_R64              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Rx 64 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_OSIZEG           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Rx Oversize (Good) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_USIZEG           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Rx Undersize (Good) Count Half/Full */
#define BITM_EMAC_MMC_RXINT_JABERR           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Rx Jabber Error Count Half/Full */
#define BITM_EMAC_MMC_RXINT_RUNTERR          (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Rx Runt Error Count Half/Full */
#define BITM_EMAC_MMC_RXINT_ALIGNERR         (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Rx Alignment Error Count Half/Full */
#define BITM_EMAC_MMC_RXINT_CRCERR           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Rx CRC Error Counter Half/Full */
#define BITM_EMAC_MMC_RXINT_MCASTG           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Rx Multicast Count (Good) Half/Full */
#define BITM_EMAC_MMC_RXINT_BCASTG           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Rx Broadcast Count (Good) Half/Full */
#define BITM_EMAC_MMC_RXINT_OCTCNTG          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Octet Count (Good) Half/Full */
#define BITM_EMAC_MMC_RXINT_OCTCNTGB         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Octet Count (Good/Bad) Half/Full */
#define BITM_EMAC_MMC_RXINT_FRCNTGB          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Count (Good/Bad) Half/Full */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MMC_TXINT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MMC_TXINT_TXOSIZEGFIS      25            /*  Tx Oversize Good Frame Count Interrupt Status */
#define BITP_EMAC_MMC_TXINT_VLANFRGB         24            /*  Tx VLAN Frames (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_PAUSEFRM         23            /*  Tx Pause Frames Count Half/Full */
#define BITP_EMAC_MMC_TXINT_EXCESSDEF        22            /*  Tx Excess Deferred Count Half/Full */
#define BITP_EMAC_MMC_TXINT_FRCNTG           21            /*  Tx Frame Count (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_OCTCNTG          20            /*  Tx Octet Count (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_CARRERR          19            /*  Tx Carrier Error Count Half/Full */
#define BITP_EMAC_MMC_TXINT_EXCESSCOL        18            /*  Tx Excess Collision Count Half/Full */
#define BITP_EMAC_MMC_TXINT_LATECOL          17            /*  Tx Late Collision Count Half/Full */
#define BITP_EMAC_MMC_TXINT_DEFERRED         16            /*  Tx Deferred Count Half/Full */
#define BITP_EMAC_MMC_TXINT_MULTCOLG         15            /*  Tx Multiple collision (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_SNGCOLG          14            /*  Tx Single Collision (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_UNDERR           13            /*  Tx Underflow Error Count Half/Full */
#define BITP_EMAC_MMC_TXINT_BCASTGB          12            /*  Tx Broadcast Frames (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_MCASTGB          11            /*  Tx Multicast Frames (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_UCASTGB          10            /*  Tx Unicast Frames (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_T1024TOMAX        9            /*  Tx 1024-to-max Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_T512TO1023        8            /*  Tx 512-to-1023 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_T256TO511         7            /*  Tx 256-to-511 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_T128TO255         6            /*  Tx 128-to-255 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_T65TO127          5            /*  Tx 65-to-127 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_T64               4            /*  Tx 64 Octets (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_MCASTG            3            /*  Tx Multicast Frames (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_BCASTG            2            /*  Tx Broadcast Frames (Good) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_FRCNTGB           1            /*  Tx Frame Count (Good/Bad) Count Half/Full */
#define BITP_EMAC_MMC_TXINT_OCTCNTGB          0            /*  Tx Octet Count (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_TXOSIZEGFIS      (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Tx Oversize Good Frame Count Interrupt Status */
#define BITM_EMAC_MMC_TXINT_VLANFRGB         (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Tx VLAN Frames (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_PAUSEFRM         (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Tx Pause Frames Count Half/Full */
#define BITM_EMAC_MMC_TXINT_EXCESSDEF        (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Tx Excess Deferred Count Half/Full */
#define BITM_EMAC_MMC_TXINT_FRCNTG           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Tx Frame Count (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_OCTCNTG          (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Tx Octet Count (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_CARRERR          (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Tx Carrier Error Count Half/Full */
#define BITM_EMAC_MMC_TXINT_EXCESSCOL        (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Tx Excess Collision Count Half/Full */
#define BITM_EMAC_MMC_TXINT_LATECOL          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Tx Late Collision Count Half/Full */
#define BITM_EMAC_MMC_TXINT_DEFERRED         (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Tx Deferred Count Half/Full */
#define BITM_EMAC_MMC_TXINT_MULTCOLG         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Tx Multiple collision (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_SNGCOLG          (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Tx Single Collision (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_UNDERR           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Tx Underflow Error Count Half/Full */
#define BITM_EMAC_MMC_TXINT_BCASTGB          (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Tx Broadcast Frames (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_MCASTGB          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Tx Multicast Frames (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_UCASTGB          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Tx Unicast Frames (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_T1024TOMAX       (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Tx 1024-to-max Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_T512TO1023       (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Tx 512-to-1023 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_T256TO511        (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Tx 256-to-511 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_T128TO255        (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Tx 128-to-255 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_T65TO127         (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Tx 65-to-127 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_T64              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Tx 64 Octets (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_MCASTG           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Tx Multicast Frames (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_BCASTG           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Tx Broadcast Frames (Good) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_FRCNTGB          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Tx Frame Count (Good/Bad) Count Half/Full */
#define BITM_EMAC_MMC_TXINT_OCTCNTGB         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Tx Octet Count (Good/Bad) Count Half/Full */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MMC_RXIMSK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MMC_RXIMSK_CTLFIM          25            /*  Rx Control Frame Counter Interrupt Mask */
#define BITP_EMAC_MMC_RXIMSK_RCVERRFIM       24            /*  Rx Error Frame Counter Interrupt Mask */
#define BITP_EMAC_MMC_RXIMSK_WATCHERR        23            /*  Rx Watch Dog Error Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_VLANFRGB        22            /*  Rx VLAN Frames (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_FIFOOV          21            /*  Rx FIFO Overflow Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_PAUSEFRM        20            /*  Rx Pause Frames Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_OUTRANGE        19            /*  Rx Out Of Range Type Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_LENERR          18            /*  Rx Length Error Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_UCASTG          17            /*  Rx Unicast Frames (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_R1024TOMAX      16            /*  Rx 1024-to-max Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_R512TO1023      15            /*  Rx 512-to-1023 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_R256TO511       14            /*  Rx 255-to-511 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_R128TO255       13            /*  Rx 128-to-255 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_R65TO127        12            /*  Rx 65-to-127 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_R64             11            /*  Rx 64 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_OSIZEG          10            /*  Rx Oversize (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_USIZEG           9            /*  Rx Undersize (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_JABERR           8            /*  Rx Jabber Error Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_RUNTERR          7            /*  Rx Runt Error Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_ALIGNERR         6            /*  Rx Alignment Error Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_CRCERR           5            /*  Rx CRC Error Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_MCASTG           4            /*  Rx Multicast Frames (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_BCASTG           3            /*  Rx Broadcast Frames (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_OCTCNTG          2            /*  Rx Octet Count (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_OCTCNTGB         1            /*  Rx Octet Count (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_RXIMSK_FRCNTGB          0            /*  Rx Frame Count (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_CTLFIM          (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Rx Control Frame Counter Interrupt Mask */
#define BITM_EMAC_MMC_RXIMSK_RCVERRFIM       (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Rx Error Frame Counter Interrupt Mask */
#define BITM_EMAC_MMC_RXIMSK_WATCHERR        (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Rx Watch Dog Error Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_VLANFRGB        (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Rx VLAN Frames (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_FIFOOV          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Rx FIFO Overflow Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_PAUSEFRM        (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Rx Pause Frames Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_OUTRANGE        (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Rx Out Of Range Type Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_LENERR          (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Rx Length Error Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_UCASTG          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Rx Unicast Frames (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_R1024TOMAX      (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Rx 1024-to-max Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_R512TO1023      (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Rx 512-to-1023 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_R256TO511       (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Rx 255-to-511 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_R128TO255       (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Rx 128-to-255 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_R65TO127        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Rx 65-to-127 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_R64             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Rx 64 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_OSIZEG          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Rx Oversize (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_USIZEG          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Rx Undersize (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_JABERR          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Rx Jabber Error Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_RUNTERR         (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Rx Runt Error Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_ALIGNERR        (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Rx Alignment Error Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_CRCERR          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Rx CRC Error Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_MCASTG          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Rx Multicast Frames (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_BCASTG          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Rx Broadcast Frames (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_OCTCNTG         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Rx Octet Count (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_OCTCNTGB        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Rx Octet Count (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_RXIMSK_FRCNTGB         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Rx Frame Count (Good/Bad) Count Half/Full Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MMC_TXIMSK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MMC_TXIMSK_OSZGFIM         25            /*  Tx Oversize Good Frame Count Interrupt Mask */
#define BITP_EMAC_MMC_TXIMSK_VLANFRG         24            /*  Tx VLAN Frames (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_PAUSEFRM        23            /*  Tx Pause Frames Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_EXCESSDEF       22            /*  Tx Excess Deferred Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_FRCNTG          21            /*  Tx Frame Count (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_OCTCNTG         20            /*  Tx Octet Count (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_CARRERR         19            /*  Tx Carrier Error Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_EXCESSCOL       18            /*  Tx Excess collision Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_LATECOL         17            /*  Tx Late Collision Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_DEFERRED        16            /*  Tx Deferred Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_MULTCOLG        15            /*  Tx Multiple Collisions (Good) Count Mask */
#define BITP_EMAC_MMC_TXIMSK_SNGCOLG         14            /*  Tx Single Collision (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_UNDERR          13            /*  Tx Underflow Error Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_BCASTGB         12            /*  Tx Broadcast Frames (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_MCASTGB         11            /*  Tx Multicast Frames (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_UCASTGB         10            /*  Tx Unicast Frames (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_T1024TOMAX       9            /*  Tx 1024-to-max Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_T512TO1023       8            /*  Tx 512-to-1023 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_T256TO511        7            /*  Tx 256-to-511 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_T128TO255        6            /*  Tx 128-to-255 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_T65TO127         5            /*  Tx 65-to-127 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_T64              4            /*  Tx 64 Octets (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_MCASTG           3            /*  Tx Multicast Frames (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_BCASTG           2            /*  Tx Broadcast Frames (Good) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_FRCNTGB          1            /*  Tx Frame Count (Good/Bad) Count Half/Full Mask */
#define BITP_EMAC_MMC_TXIMSK_OCTCNTGB         0            /*  Tx Octet Count (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_OSZGFIM         (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Tx Oversize Good Frame Count Interrupt Mask */
#define BITM_EMAC_MMC_TXIMSK_VLANFRG         (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Tx VLAN Frames (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_PAUSEFRM        (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Tx Pause Frames Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_EXCESSDEF       (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Tx Excess Deferred Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_FRCNTG          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Tx Frame Count (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_OCTCNTG         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Tx Octet Count (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_CARRERR         (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Tx Carrier Error Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_EXCESSCOL       (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Tx Excess collision Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_LATECOL         (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Tx Late Collision Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_DEFERRED        (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Tx Deferred Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_MULTCOLG        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Tx Multiple Collisions (Good) Count Mask */
#define BITM_EMAC_MMC_TXIMSK_SNGCOLG         (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Tx Single Collision (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_UNDERR          (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Tx Underflow Error Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_BCASTGB         (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Tx Broadcast Frames (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_MCASTGB         (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Tx Multicast Frames (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_UCASTGB         (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Tx Unicast Frames (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_T1024TOMAX      (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Tx 1024-to-max Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_T512TO1023      (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Tx 512-to-1023 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_T256TO511       (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Tx 256-to-511 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_T128TO255       (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Tx 128-to-255 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_T65TO127        (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Tx 65-to-127 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_T64             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Tx 64 Octets (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_MCASTG          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Tx Multicast Frames (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_BCASTG          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Tx Broadcast Frames (Good) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_FRCNTGB         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Tx Frame Count (Good/Bad) Count Half/Full Mask */
#define BITM_EMAC_MMC_TXIMSK_OCTCNTGB        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Tx Octet Count (Good/Bad) Count Half/Full Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXOCTCNT_GB                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXOCTCNT_GB_CNT             0            /*  Count Value */
#define BITM_EMAC_TXOCTCNT_GB_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXFRMCNT_GB                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXFRMCNT_GB_CNT             0            /*  Count Value */
#define BITM_EMAC_TXFRMCNT_GB_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXBCASTFRM_G                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXBCASTFRM_G_CNT            0            /*  Count Value */
#define BITM_EMAC_TXBCASTFRM_G_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXMCASTFRM_G                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXMCASTFRM_G_CNT            0            /*  Count Value */
#define BITM_EMAC_TXMCASTFRM_G_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TX64_GB                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TX64_GB_CNT                 0            /*  Count Value */
#define BITM_EMAC_TX64_GB_CNT                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TX65TO127_GB                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TX65TO127_GB_CNT            0            /*  Count Value */
#define BITM_EMAC_TX65TO127_GB_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TX128TO255_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TX128TO255_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_TX128TO255_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TX256TO511_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TX256TO511_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_TX256TO511_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TX512TO1023_GB                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TX512TO1023_GB_CNT          0            /*  Count Value */
#define BITM_EMAC_TX512TO1023_GB_CNT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TX1024TOMAX_GB                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TX1024TOMAX_GB_CNT          0            /*  Count Value */
#define BITM_EMAC_TX1024TOMAX_GB_CNT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXUCASTFRM_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXUCASTFRM_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_TXUCASTFRM_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXMCASTFRM_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXMCASTFRM_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_TXMCASTFRM_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXBCASTFRM_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXBCASTFRM_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_TXBCASTFRM_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXUNDR_ERR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXUNDR_ERR_CNT              0            /*  Count Value */
#define BITM_EMAC_TXUNDR_ERR_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXSNGCOL_G                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXSNGCOL_G_CNT              0            /*  Count Value */
#define BITM_EMAC_TXSNGCOL_G_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXMULTCOL_G                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXMULTCOL_G_CNT             0            /*  Count Value */
#define BITM_EMAC_TXMULTCOL_G_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXDEFERRED                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXDEFERRED_CNT              0            /*  Count Value */
#define BITM_EMAC_TXDEFERRED_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXLATECOL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXLATECOL_CNT               0            /*  Count Value */
#define BITM_EMAC_TXLATECOL_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXEXCESSCOL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXEXCESSCOL_CNT             0            /*  Count Value */
#define BITM_EMAC_TXEXCESSCOL_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXCARR_ERR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXCARR_ERR_CNT              0            /*  Count Value */
#define BITM_EMAC_TXCARR_ERR_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXOCTCNT_G                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXOCTCNT_G_CNT              0            /*  Count Value */
#define BITM_EMAC_TXOCTCNT_G_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXFRMCNT_G                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXFRMCNT_G_CNT              0            /*  Count Value */
#define BITM_EMAC_TXFRMCNT_G_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXEXCESSDEF                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXEXCESSDEF_CNT             0            /*  Count Value */
#define BITM_EMAC_TXEXCESSDEF_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXPAUSEFRM                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXPAUSEFRM_CNT              0            /*  Count Value */
#define BITM_EMAC_TXPAUSEFRM_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXVLANFRM_G                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXVLANFRM_G_CNT             0            /*  Count Value */
#define BITM_EMAC_TXVLANFRM_G_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TXOVRSIZE_G                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TXOVRSIZE_G_CNT             0            /*  Count value */
#define BITM_EMAC_TXOVRSIZE_G_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXFRMCNT_GB                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXFRMCNT_GB_CNT             0            /*  Count Value */
#define BITM_EMAC_RXFRMCNT_GB_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXOCTCNT_GB                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXOCTCNT_GB_CNT             0            /*  Count Value */
#define BITM_EMAC_RXOCTCNT_GB_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXOCTCNT_G                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXOCTCNT_G_CNT              0            /*  Count Value */
#define BITM_EMAC_RXOCTCNT_G_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXBCASTFRM_G                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXBCASTFRM_G_CNT            0            /*  Count Value */
#define BITM_EMAC_RXBCASTFRM_G_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXMCASTFRM_G                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXMCASTFRM_G_CNT            0            /*  Count Value */
#define BITM_EMAC_RXMCASTFRM_G_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXCRC_ERR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXCRC_ERR_CNT               0            /*  Count Value */
#define BITM_EMAC_RXCRC_ERR_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXALIGN_ERR                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXALIGN_ERR_CNT             0            /*  Count Value */
#define BITM_EMAC_RXALIGN_ERR_CNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXRUNT_ERR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXRUNT_ERR_CNT              0            /*  Count Value */
#define BITM_EMAC_RXRUNT_ERR_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXJAB_ERR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXJAB_ERR_CNT               0            /*  Count Value */
#define BITM_EMAC_RXJAB_ERR_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXUSIZE_G                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXUSIZE_G_CNT               0            /*  Count Value */
#define BITM_EMAC_RXUSIZE_G_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXOSIZE_G                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXOSIZE_G_CNT               0            /*  Count Value */
#define BITM_EMAC_RXOSIZE_G_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RX64_GB                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RX64_GB_CNT                 0            /*  Count Value */
#define BITM_EMAC_RX64_GB_CNT                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RX65TO127_GB                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RX65TO127_GB_CNT            0            /*  Count Value */
#define BITM_EMAC_RX65TO127_GB_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RX128TO255_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RX128TO255_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_RX128TO255_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RX256TO511_GB                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RX256TO511_GB_CNT           0            /*  Count Value */
#define BITM_EMAC_RX256TO511_GB_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RX512TO1023_GB                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RX512TO1023_GB_CNT          0            /*  Count Value */
#define BITM_EMAC_RX512TO1023_GB_CNT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RX1024TOMAX_GB                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RX1024TOMAX_GB_CNT          0            /*  Count Value */
#define BITM_EMAC_RX1024TOMAX_GB_CNT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXUCASTFRM_G                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXUCASTFRM_G_CNT            0            /*  Count Value */
#define BITM_EMAC_RXUCASTFRM_G_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXLEN_ERR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXLEN_ERR_CNT               0            /*  Count Value */
#define BITM_EMAC_RXLEN_ERR_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXOORTYPE                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXOORTYPE_CNT               0            /*  Count Value */
#define BITM_EMAC_RXOORTYPE_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXPAUSEFRM                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXPAUSEFRM_CNT              0            /*  Count Value */
#define BITM_EMAC_RXPAUSEFRM_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXFIFO_OVF                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXFIFO_OVF_CNT              0            /*  Count Value */
#define BITM_EMAC_RXFIFO_OVF_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXVLANFRM_GB                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXVLANFRM_GB_CNT            0            /*  Count Value */
#define BITM_EMAC_RXVLANFRM_GB_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXWDOG_ERR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXWDOG_ERR_CNT              0            /*  Count Value */
#define BITM_EMAC_RXWDOG_ERR_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXRCV_ERR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXRCV_ERR_CNT               0            /*  Count Value */
#define BITM_EMAC_RXRCV_ERR_CNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXCTLFRM_G                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXCTLFRM_G_CNT              0            /*  Count Value */
#define BITM_EMAC_RXCTLFRM_G_CNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_IPC_RXIMSK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_IPC_RXIMSK_ICMPERROCT      29            /*  Rx ICMP Error Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_ICMPGOCT        28            /*  Rx ICMP (Good) Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_TCPERROCT       27            /*  Rx TCP Error Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_TCPGOCT         26            /*  Rx TCP (Good) Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_UDPERROCT       25            /*  Rx UDP Error Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_UDPGOCT         24            /*  Rx UDP (Good) Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V6NOPAYOCT      23            /*  Rx IPv6 No Payload Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V6HDERROCT      22            /*  Rx IPv6 Header Error Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V6GOCT          21            /*  Rx IPv6 (Good) Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4UDSBLOCT      20            /*  Rx IPv4 UDS Disable Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4FRAGOCT       19            /*  Rx IPv4 Fragmented Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4NOPAYOCT      18            /*  Rx IPv4 No Payload Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4HDERROCT      17            /*  Rx IPv4 Header Error Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4GOCT          16            /*  Rx IPv4 (Good) Octets Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_ICMPERRFRM      13            /*  Rx ICMP Error Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_ICMPGFRM        12            /*  Rx ICMP (Good) Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_TCPERRFRM       11            /*  Rx TCP Error Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_TCPGFRM         10            /*  Rx TCP (Good) Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_UDPERRFRM        9            /*  Rx UDP Error Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_UDPGFRM          8            /*  Rx UDP (Good) Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V6NOPAYFRM       7            /*  Rx IPv6 No Payload Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V6HDERRFRM       6            /*  Rx IPv6 Header Error Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V6GFRM           5            /*  Rx IPv6 (Good) Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4UDSBLFRM       4            /*  Rx IPv4 UDS Disable Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4FRAGFRM        3            /*  Rx IPv4 Fragmented Frames Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4NOPAYFRM       2            /*  Rx IPv4 No Payload Frame Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4HDERRFRM       1            /*  Rx IPv4 Header Error Frame Count Half/Full Mask */
#define BITP_EMAC_IPC_RXIMSK_V4GFRM           0            /*  Rx IPv4 (Good) Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_ICMPERROCT      (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Rx ICMP Error Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_ICMPGOCT        (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Rx ICMP (Good) Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_TCPERROCT       (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Rx TCP Error Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_TCPGOCT         (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Rx TCP (Good) Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_UDPERROCT       (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Rx UDP Error Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_UDPGOCT         (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Rx UDP (Good) Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V6NOPAYOCT      (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Rx IPv6 No Payload Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V6HDERROCT      (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Rx IPv6 Header Error Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V6GOCT          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Rx IPv6 (Good) Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4UDSBLOCT      (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Rx IPv4 UDS Disable Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4FRAGOCT       (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Rx IPv4 Fragmented Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4NOPAYOCT      (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Rx IPv4 No Payload Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4HDERROCT      (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Rx IPv4 Header Error Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4GOCT          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Rx IPv4 (Good) Octets Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_ICMPERRFRM      (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Rx ICMP Error Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_ICMPGFRM        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Rx ICMP (Good) Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_TCPERRFRM       (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Rx TCP Error Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_TCPGFRM         (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Rx TCP (Good) Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_UDPERRFRM       (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Rx UDP Error Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_UDPGFRM         (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Rx UDP (Good) Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V6NOPAYFRM      (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Rx IPv6 No Payload Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V6HDERRFRM      (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Rx IPv6 Header Error Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V6GFRM          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Rx IPv6 (Good) Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4UDSBLFRM      (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Rx IPv4 UDS Disable Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4FRAGFRM       (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Rx IPv4 Fragmented Frames Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4NOPAYFRM      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Rx IPv4 No Payload Frame Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4HDERRFRM      (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Rx IPv4 Header Error Frame Count Half/Full Mask */
#define BITM_EMAC_IPC_RXIMSK_V4GFRM          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Rx IPv4 (Good) Frames Count Half/Full Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_IPC_RXINT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_IPC_RXINT_ICMPERROCT       29            /*  Rx ICMP Error Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_ICMPGOCT         28            /*  Rx ICMP (Good) Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_TCPERROCT        27            /*  Rx TCP Error Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_TCPGOCT          26            /*  Rx TCP (Good) Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_UDPERROCT        25            /*  Rx UDP Error Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_UDPGOCT          24            /*  Rx UDP (Good) Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V6NOPAYOCT       23            /*  Rx IPv6 No Payload Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V6HDERROCT       22            /*  Rx IPv6 Header Error Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V6GOCT           21            /*  Rx IPv6 (Good) Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4UDSBLOCT       20            /*  Rx IPv4 UDS Disable Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4FRAGOCT        19            /*  Rx IPv4 Fragmented Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4NOPAYOCT       18            /*  Rx IPv4 No Payload Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4HDERROCT       17            /*  Rx IPv4 Header Error Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4GOCT           16            /*  Rx IPv4 (Good) Octets Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_ICMPERRFRM       13            /*  Rx ICMP Error Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_ICMPGFRM         12            /*  Rx ICMP (Good) Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_TCPERRFRM        11            /*  Rx TCP Error Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_TCPGFRM          10            /*  Rx TCP (Good) Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_UDPERRFRM         9            /*  Rx IDP Error Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_UDPGFRM           8            /*  Rx UDP (Good) Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V6NOPAYFRM        7            /*  Rx IPv6 No Payload Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V6HDERRFRM        6            /*  Rx IPv6 Header Error Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V6GFRM            5            /*  Rx IPv6 (Good) Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4UDSBLFRM        4            /*  Rx IPv4 UDS Disable Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4FRAGFRM         3            /*  Rx IPv4 Fragmented Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4NOPAYFRM        2            /*  Rx IPv4 No Payload Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4HDERRFRM        1            /*  Rx IPv4 Header Error Frames Count Half/Full Interrupt */
#define BITP_EMAC_IPC_RXINT_V4GFRM            0            /*  Rx IPv4 (Good) Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_ICMPERROCT       (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Rx ICMP Error Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_ICMPGOCT         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Rx ICMP (Good) Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_TCPERROCT        (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Rx TCP Error Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_TCPGOCT          (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Rx TCP (Good) Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_UDPERROCT        (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Rx UDP Error Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_UDPGOCT          (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Rx UDP (Good) Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V6NOPAYOCT       (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Rx IPv6 No Payload Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V6HDERROCT       (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Rx IPv6 Header Error Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V6GOCT           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Rx IPv6 (Good) Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4UDSBLOCT       (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Rx IPv4 UDS Disable Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4FRAGOCT        (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Rx IPv4 Fragmented Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4NOPAYOCT       (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Rx IPv4 No Payload Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4HDERROCT       (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Rx IPv4 Header Error Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4GOCT           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Rx IPv4 (Good) Octets Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_ICMPERRFRM       (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Rx ICMP Error Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_ICMPGFRM         (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Rx ICMP (Good) Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_TCPERRFRM        (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Rx TCP Error Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_TCPGFRM          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Rx TCP (Good) Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_UDPERRFRM        (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Rx IDP Error Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_UDPGFRM          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Rx UDP (Good) Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V6NOPAYFRM       (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Rx IPv6 No Payload Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V6HDERRFRM       (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Rx IPv6 Header Error Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V6GFRM           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Rx IPv6 (Good) Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4UDSBLFRM       (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Rx IPv4 UDS Disable Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4FRAGFRM        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Rx IPv4 Fragmented Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4NOPAYFRM       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Rx IPv4 No Payload Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4HDERRFRM       (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Rx IPv4 Header Error Frames Count Half/Full Interrupt */
#define BITM_EMAC_IPC_RXINT_V4GFRM           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Rx IPv4 (Good) Frames Count Half/Full Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_GD_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_GD_FRM_CNT           0            /*  Count Value */
#define BITM_EMAC_RXIPV4_GD_FRM_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_HDR_ERR_FRM              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_HDR_ERR_FRM_CNT      0            /*  Count Value */
#define BITM_EMAC_RXIPV4_HDR_ERR_FRM_CNT     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_NOPAY_FRM                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_NOPAY_FRM_CNT        0            /*  Count Value */
#define BITM_EMAC_RXIPV4_NOPAY_FRM_CNT       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_FRAG_FRM                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_FRAG_FRM_CNT         0            /*  Count Value */
#define BITM_EMAC_RXIPV4_FRAG_FRM_CNT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_UDSBL_FRM                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_UDSBL_FRM_CNT        0            /*  Count Value */
#define BITM_EMAC_RXIPV4_UDSBL_FRM_CNT       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV6_GD_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV6_GD_FRM_CNT           0            /*  Count Value */
#define BITM_EMAC_RXIPV6_GD_FRM_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV6_HDR_ERR_FRM              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV6_HDR_ERR_FRM_CNT      0            /*  Count Value */
#define BITM_EMAC_RXIPV6_HDR_ERR_FRM_CNT     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV6_NOPAY_FRM                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV6_NOPAY_FRM_CNT        0            /*  Count Value */
#define BITM_EMAC_RXIPV6_NOPAY_FRM_CNT       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXUDP_GD_FRM                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXUDP_GD_FRM_CNT            0            /*  Count Value */
#define BITM_EMAC_RXUDP_GD_FRM_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXUDP_ERR_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXUDP_ERR_FRM_CNT           0            /*  Count Value */
#define BITM_EMAC_RXUDP_ERR_FRM_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXTCP_GD_FRM                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXTCP_GD_FRM_CNT            0            /*  Count Value */
#define BITM_EMAC_RXTCP_GD_FRM_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXTCP_ERR_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXTCP_ERR_FRM_CNT           0            /*  Count Value */
#define BITM_EMAC_RXTCP_ERR_FRM_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXICMP_GD_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXICMP_GD_FRM_CNT           0            /*  Count Value */
#define BITM_EMAC_RXICMP_GD_FRM_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXICMP_ERR_FRM                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXICMP_ERR_FRM_CNT          0            /*  Count Value */
#define BITM_EMAC_RXICMP_ERR_FRM_CNT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_GD_OCT                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_GD_OCT_CNT           0            /*  Count Value */
#define BITM_EMAC_RXIPV4_GD_OCT_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_HDR_ERR_OCT              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_HDR_ERR_OCT_CNT      0            /*  Count Value */
#define BITM_EMAC_RXIPV4_HDR_ERR_OCT_CNT     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_NOPAY_OCT                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_NOPAY_OCT_CNT        0            /*  Count Value */
#define BITM_EMAC_RXIPV4_NOPAY_OCT_CNT       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_FRAG_OCT                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_FRAG_OCT_CNT         0            /*  Count Value */
#define BITM_EMAC_RXIPV4_FRAG_OCT_CNT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV4_UDSBL_OCT                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV4_UDSBL_OCT_CNT        0            /*  Count Value */
#define BITM_EMAC_RXIPV4_UDSBL_OCT_CNT       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV6_GD_OCT                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV6_GD_OCT_CNT           0            /*  Count Value */
#define BITM_EMAC_RXIPV6_GD_OCT_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV6_HDR_ERR_OCT              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV6_HDR_ERR_OCT_CNT      0            /*  Count Value */
#define BITM_EMAC_RXIPV6_HDR_ERR_OCT_CNT     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXIPV6_NOPAY_OCT                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXIPV6_NOPAY_OCT_CNT        0            /*  Count Value */
#define BITM_EMAC_RXIPV6_NOPAY_OCT_CNT       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXUDP_GD_OCT                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXUDP_GD_OCT_CNT            0            /*  Count Value */
#define BITM_EMAC_RXUDP_GD_OCT_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXUDP_ERR_OCT                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXUDP_ERR_OCT_CNT           0            /*  Count Value */
#define BITM_EMAC_RXUDP_ERR_OCT_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXTCP_GD_OCT                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXTCP_GD_OCT_CNT            0            /*  Count Value */
#define BITM_EMAC_RXTCP_GD_OCT_CNT           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXTCP_ERR_OCT                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXTCP_ERR_OCT_CNT           0            /*  Count Value */
#define BITM_EMAC_RXTCP_ERR_OCT_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXICMP_GD_OCT                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXICMP_GD_OCT_CNT           0            /*  Count Value */
#define BITM_EMAC_RXICMP_GD_OCT_CNT          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_RXICMP_ERR_OCT                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_RXICMP_ERR_OCT_CNT          0            /*  Count Value */
#define BITM_EMAC_RXICMP_ERR_OCT_CNT         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_L3L4_CTL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_L3L4_CTL_L4DPIM            21            /*  Layer 4 Destination Port Inverse Matching */
#define BITP_EMAC_L3L4_CTL_L4DPM             20            /*  Layer 4 Destination Port Matching */
#define BITP_EMAC_L3L4_CTL_L4SPIM            19            /*  Layer 4 Source Port Inverse Matching */
#define BITP_EMAC_L3L4_CTL_L4SPM             18            /*  Layer 4 Source Port Matching */
#define BITP_EMAC_L3L4_CTL_L4PEN             16            /*  Layer 4 Filtering Enable */
#define BITP_EMAC_L3L4_CTL_L3HDBM            11            /*  Layer 3 Destination Address Bits Mask */
#define BITP_EMAC_L3L4_CTL_L3HSBM             6            /*  Layer 3 Source Address Bits Mask */
#define BITP_EMAC_L3L4_CTL_L3DAIM             5            /*  Layer 3 Destination Address Inverse Matching */
#define BITP_EMAC_L3L4_CTL_L3DAM              4            /*  Layer 3 Destination Address Matching */
#define BITP_EMAC_L3L4_CTL_L3SAIM             3            /*  Layer 3 Source Address Inverse Matching */
#define BITP_EMAC_L3L4_CTL_L3SAM              2            /*  Layer 3 Source Address Matching */
#define BITP_EMAC_L3L4_CTL_L3PEN              0            /*  Layer 3 Enabled */
#define BITM_EMAC_L3L4_CTL_L4DPIM            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Layer 4 Destination Port Inverse Matching */
#define BITM_EMAC_L3L4_CTL_L4DPM             (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Layer 4 Destination Port Matching */
#define BITM_EMAC_L3L4_CTL_L4SPIM            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Layer 4 Source Port Inverse Matching */
#define BITM_EMAC_L3L4_CTL_L4SPM             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Layer 4 Source Port Matching */
#define BITM_EMAC_L3L4_CTL_L4PEN             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Layer 4 Filtering Enable */
#define BITM_EMAC_L3L4_CTL_L3HDBM            (_ADI_MSK_3(0x0000F800,0x0000F800UL, uint32_t  ))    /*  Layer 3 Destination Address Bits Mask */
#define BITM_EMAC_L3L4_CTL_L3HSBM            (_ADI_MSK_3(0x000007C0,0x000007C0UL, uint32_t  ))    /*  Layer 3 Source Address Bits Mask */
#define BITM_EMAC_L3L4_CTL_L3DAIM            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Layer 3 Destination Address Inverse Matching */
#define BITM_EMAC_L3L4_CTL_L3DAM             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Layer 3 Destination Address Matching */
#define BITM_EMAC_L3L4_CTL_L3SAIM            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Layer 3 Source Address Inverse Matching */
#define BITM_EMAC_L3L4_CTL_L3SAM             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Layer 3 Source Address Matching */
#define BITM_EMAC_L3L4_CTL_L3PEN             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Layer 3 Enabled */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_L4_ADDR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_L4_ADDR_L4DP               16            /*  Layer 4 Destination Port */
#define BITP_EMAC_L4_ADDR_L4SP                0            /*  Layer 4 Source Port */
#define BITM_EMAC_L4_ADDR_L4DP               (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Layer 4 Destination Port */
#define BITM_EMAC_L4_ADDR_L4SP               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Layer 4 Source Port */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_L3_ADDR0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_L3_ADDR0_L3A0               0            /*  Layer 3 Address 0 Field */
#define BITM_EMAC_L3_ADDR0_L3A0              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Layer 3 Address 0 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_L3_ADDR1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_L3_ADDR1_L3A1               0            /*  Layer 3 Address 1 Field */
#define BITM_EMAC_L3_ADDR1_L3A1              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Layer 3 Address 1 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_L3_ADDR2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_L3_ADDR2_L3A2               0            /*  Layer 3 Address 2 Field */
#define BITM_EMAC_L3_ADDR2_L3A2              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Layer 3 Address 2 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_L3_ADDR3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_L3_ADDR3_L3A3               0            /*  Layer 3 Address 3 Field */
#define BITM_EMAC_L3_ADDR3_L3A3              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Layer 3 Address 3 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_VLAN_INCL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_VLAN_INCL_CSVL             19            /*  C-VLAN or S-VLAN */
#define BITP_EMAC_VLAN_INCL_VLP              18            /*  VLAN Priority Control */
#define BITP_EMAC_VLAN_INCL_VLC              16            /*  VLAN Tag Control in Transmit Frames */
#define BITP_EMAC_VLAN_INCL_VLT               0            /*  VLAN Tag for Transmit Frames */
#define BITM_EMAC_VLAN_INCL_CSVL             (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  C-VLAN or S-VLAN */
#define BITM_EMAC_VLAN_INCL_VLP              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  VLAN Priority Control */
#define BITM_EMAC_VLAN_INCL_VLC              (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  VLAN Tag Control in Transmit Frames */
#define BITM_EMAC_VLAN_INCL_VLT              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  VLAN Tag for Transmit Frames */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_VLAN_HSHTBL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_VLAN_HSHTBL_VLHT            0            /*  VLAN Hash Table */
#define BITM_EMAC_VLAN_HSHTBL_VLHT           (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  VLAN Hash Table */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_CTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_CTL_ATSEN3              28            /*  Auxiliary Snapshot 3 Enable */
#define BITP_EMAC_TM_CTL_ATSEN2              27            /*  Auxiliary Snapshot 2 Enable */
#define BITP_EMAC_TM_CTL_ATSEN1              26            /*  Auxiliary Snapshot 1 Enable */
#define BITP_EMAC_TM_CTL_ATSEN0              25            /*  Auxiliary Snapshot 0 Enable */
#define BITP_EMAC_TM_CTL_ATSFC               24            /*  Auxiliary Time Stamp FIFO Clear */
#define BITP_EMAC_TM_CTL_TSENMACADDR         18            /*  Time Stamp Enable MAC Address */
#define BITP_EMAC_TM_CTL_SNAPTYPSEL          16            /*  Snapshot Type Select */
#define BITP_EMAC_TM_CTL_TSMSTRENA           15            /*  Time Stamp Master (Frames) Enable */
#define BITP_EMAC_TM_CTL_TSEVNTENA           14            /*  Time Stamp Event (PTP Frames) Enable */
#define BITP_EMAC_TM_CTL_TSIPV4ENA           13            /*  Time Stamp IPV4 (PTP Frames) Enable */
#define BITP_EMAC_TM_CTL_TSIPV6ENA           12            /*  Time Stamp IPV6 (PTP Frames) Enable */
#define BITP_EMAC_TM_CTL_TSIPENA             11            /*  Time Stamp IP Enable */
#define BITP_EMAC_TM_CTL_TSVER2ENA           10            /*  Time Stamp VER2 (Snooping) Enable */
#define BITP_EMAC_TM_CTL_TSCTRLSSR            9            /*  Time Stamp Control Nanosecond Rollover */
#define BITP_EMAC_TM_CTL_TSENALL              8            /*  Time Stamp Enable All (Frames) */
#define BITP_EMAC_TM_CTL_TSADDREG             5            /*  Time Stamp Addend Register Update */
#define BITP_EMAC_TM_CTL_TSTRIG               4            /*  Time Stamp (Target Time) Trigger Enable */
#define BITP_EMAC_TM_CTL_TSUPDT               3            /*  Time Stamp (System Time) Update */
#define BITP_EMAC_TM_CTL_TSINIT               2            /*  Time Stamp (System Time) Initialize */
#define BITP_EMAC_TM_CTL_TSCFUPDT             1            /*  Time Stamp (System Time) Fine/Coarse Update */
#define BITP_EMAC_TM_CTL_TSENA                0            /*  Time Stamp (PTP) Enable */
#define BITM_EMAC_TM_CTL_ATSEN3              (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Auxiliary Snapshot 3 Enable */
#define BITM_EMAC_TM_CTL_ATSEN2              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Auxiliary Snapshot 2 Enable */
#define BITM_EMAC_TM_CTL_ATSEN1              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Auxiliary Snapshot 1 Enable */
#define BITM_EMAC_TM_CTL_ATSEN0              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Auxiliary Snapshot 0 Enable */
#define BITM_EMAC_TM_CTL_ATSFC               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Auxiliary Time Stamp FIFO Clear */
#define BITM_EMAC_TM_CTL_TSENMACADDR         (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Time Stamp Enable MAC Address */
#define BITM_EMAC_TM_CTL_SNAPTYPSEL          (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Snapshot Type Select */
#define BITM_EMAC_TM_CTL_TSMSTRENA           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Time Stamp Master (Frames) Enable */
#define BITM_EMAC_TM_CTL_TSEVNTENA           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Time Stamp Event (PTP Frames) Enable */
#define BITM_EMAC_TM_CTL_TSIPV4ENA           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Time Stamp IPV4 (PTP Frames) Enable */
#define BITM_EMAC_TM_CTL_TSIPV6ENA           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Time Stamp IPV6 (PTP Frames) Enable */
#define BITM_EMAC_TM_CTL_TSIPENA             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Time Stamp IP Enable */
#define BITM_EMAC_TM_CTL_TSVER2ENA           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Time Stamp VER2 (Snooping) Enable */
#define BITM_EMAC_TM_CTL_TSCTRLSSR           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Time Stamp Control Nanosecond Rollover */
#define BITM_EMAC_TM_CTL_TSENALL             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Time Stamp Enable All (Frames) */
#define BITM_EMAC_TM_CTL_TSADDREG            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Time Stamp Addend Register Update */
#define BITM_EMAC_TM_CTL_TSTRIG              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Time Stamp (Target Time) Trigger Enable */
#define BITM_EMAC_TM_CTL_TSUPDT              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Time Stamp (System Time) Update */
#define BITM_EMAC_TM_CTL_TSINIT              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Time Stamp (System Time) Initialize */
#define BITM_EMAC_TM_CTL_TSCFUPDT            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Time Stamp (System Time) Fine/Coarse Update */
#define BITM_EMAC_TM_CTL_TSENA               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Time Stamp (PTP) Enable */
#define ENUM_EMAC_TM_CTL_D_PTP_ADDRFILT      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSENMACADDR: Disable PTP MAC address filter */
#define ENUM_EMAC_TM_CTL_E_PTP_ADDRFILT      (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  TSENMACADDR: Enable PTP MAC address filter */
#define ENUM_EMAC_TM_CTL_E_SLVSNPT_MSGS      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSMSTRENA: Enable Snapshot for Slave Messages */
#define ENUM_EMAC_TM_CTL_E_MSSNPST_MSGS      (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  TSMSTRENA: Enable Snapshot for Master Messages */
#define ENUM_EMAC_TM_CTL_E_ATSTMP_MSGS       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSEVNTENA: Enable Time Stamp for All Messages */
#define ENUM_EMAC_TM_CTL_E_ETSTMP_MSGS       (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  TSEVNTENA: Enable Time Stamp for Event Messages Only */
#define ENUM_EMAC_TM_CTL_D_TSTMP_IPV4        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSIPV4ENA: Disable Time Stamp for PTP Over IPv4 Frames */
#define ENUM_EMAC_TM_CTL_E_TSTMP_IPV4        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  TSIPV4ENA: Enable Time Stamp for PTP Over IPv4 Frames */
#define ENUM_EMAC_TM_CTL_D_TSTMP_IPV6        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSIPV6ENA: Disable Time Stamp for PTP Over IPv6 frames */
#define ENUM_EMAC_TM_CTL_E_TSTMP_IPV6        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  TSIPV6ENA: Enable Time Stamp for PTP Over IPv6 Frames */
#define ENUM_EMAC_TM_CTL_D_PTP_OV_ETHER      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSIPENA: Disable PTP Over Ethernet Frames */
#define ENUM_EMAC_TM_CTL_E_PTP_OV_ETHER      (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  TSIPENA: Enable PTP Over Ethernet Frames */
#define ENUM_EMAC_TM_CTL_D_PKT_SNOOP_V2      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSVER2ENA: Disable packet snooping for V2 frames */
#define ENUM_EMAC_TM_CTL_E_PKT_SNOOP_V2      (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  TSVER2ENA: Enable packet snooping for V2 frames */
#define ENUM_EMAC_TM_CTL_RO_SUBSEC_RES       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSCTRLSSR: Roll Over Nanosecond After 0x7FFFFFFF */
#define ENUM_EMAC_TM_CTL_RO_NANO_RES         (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  TSCTRLSSR: Roll Over Nanosecond After 0x3B9AC9FF */
#define ENUM_EMAC_TM_CTL_D_TSALL_FRAMES      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSENALL: Disable timestamp for all frames */
#define ENUM_EMAC_TM_CTL_E_TSALL_FRAMES      (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  TSENALL: Enable timestamp for all frames */
#define ENUM_EMAC_TM_CTL_EN_TRIGGER          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  TSTRIG: Interrupt (TS) if system time is greater than target time register */
#define ENUM_EMAC_TM_CTL_EN_UPDATE           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TSUPDT: System time updated with Time stamp register values */
#define ENUM_EMAC_TM_CTL_EN_TS_INIT          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  TSINIT: System time initialized with Time stamp register values */
#define ENUM_EMAC_TM_CTL_EN_COARSE_UPDT      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSCFUPDT: Use Coarse Correction Method for System Time Update */
#define ENUM_EMAC_TM_CTL_EN_FINE_UPDT        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  TSCFUPDT: Use Fine Correction Method for System Time Update */
#define ENUM_EMAC_TM_CTL_DTS                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSENA: Disable PTP Module */
#define ENUM_EMAC_TM_CTL_TS                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  TSENA: Enable PTP Module */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_SUBSEC                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_SUBSEC_SSINC             0            /*  Sub-Second Increment Value */
#define BITM_EMAC_TM_SUBSEC_SSINC            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Sub-Second Increment Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_SEC                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_SEC_TSS                  0            /*  Time Stamp Second */
#define BITM_EMAC_TM_SEC_TSS                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Time Stamp Second */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_NSEC                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_NSEC_TSSS                0            /*  Time Stamp Nanoseconds */
#define BITM_EMAC_TM_NSEC_TSSS               (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Time Stamp Nanoseconds */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_SECUPDT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_SECUPDT_TSS              0            /*  Time Stamp Second Initialize/Update */
#define BITM_EMAC_TM_SECUPDT_TSS             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Time Stamp Second Initialize/Update */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_NSECUPDT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_NSECUPDT_ADDSUB         31            /*  Add or Subtract the Time */
#define BITP_EMAC_TM_NSECUPDT_TSSS            0            /*  Time Stamp Sub Second Initialize/Increment */
#define BITM_EMAC_TM_NSECUPDT_ADDSUB         (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Add or Subtract the Time */
#define BITM_EMAC_TM_NSECUPDT_TSSS           (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Time Stamp Sub Second Initialize/Increment */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_ADDEND                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_ADDEND_TSAR              0            /*  Time Stamp Addend Register */
#define BITM_EMAC_TM_ADDEND_TSAR             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Time Stamp Addend Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS0TGTM                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS0TGTM_TSTR            0            /*  Target Time Seconds Register */
#define BITM_EMAC_TM_PPS0TGTM_TSTR           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Target Time Seconds Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS0NTGTM                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS0NTGTM_TSTRBUSY      31            /*  Target Time Register Busy */
#define BITP_EMAC_TM_PPS0NTGTM_TSTR           0            /*  Target Time Nano Seconds */
#define BITM_EMAC_TM_PPS0NTGTM_TSTRBUSY      (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Target Time Register Busy */
#define BITM_EMAC_TM_PPS0NTGTM_TSTR          (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Target Time Nano Seconds */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_HISEC                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_HISEC_TSHWR              0            /*  Time Stamp Higher Word Seconds Register */
#define BITM_EMAC_TM_HISEC_TSHWR             (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Time Stamp Higher Word Seconds Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_STMPSTAT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_STMPSTAT_ATSNS          25            /*  Auxiliary Time Stamp Number of Snapshots */
#define BITP_EMAC_TM_STMPSTAT_ATSSTM         24            /*  Auxiliary Time Stamp Snapshot Trigger Missed */
#define BITP_EMAC_TM_STMPSTAT_ATSSTN         16            /*  Auxiliary Timestamp Snapshot Trigger Identifier */
#define BITP_EMAC_TM_STMPSTAT_TSTRGTERR3      9            /*  Timestamp Target Time Error 3 */
#define BITP_EMAC_TM_STMPSTAT_TSTARGT3        8            /*  Timestamp Target Time Reached for Target Time PPS3 */
#define BITP_EMAC_TM_STMPSTAT_TSTRGTERR2      7            /*  Timestamp Target Time Error 2 */
#define BITP_EMAC_TM_STMPSTAT_TSTARGT2        6            /*  Timestamp Target Time Reached for Target Time PPS2 */
#define BITP_EMAC_TM_STMPSTAT_TSTRGTERR1      5            /*  Timestamp Target Time Error 1 */
#define BITP_EMAC_TM_STMPSTAT_TSTARGT1        4            /*  Timestamp Target Time Reached for Target Time PPS1 */
#define BITP_EMAC_TM_STMPSTAT_TSTRGTERR0      3            /*  Time Stamp Target Time Programming Error */
#define BITP_EMAC_TM_STMPSTAT_ATSTS           2            /*  Auxiliary Time Stamp Trigger Snapshot */
#define BITP_EMAC_TM_STMPSTAT_TSTARGT0        1            /*  Time Stamp Target Time Reached */
#define BITP_EMAC_TM_STMPSTAT_TSSOVF          0            /*  Time Stamp Seconds Overflow */
#define BITM_EMAC_TM_STMPSTAT_ATSNS          (_ADI_MSK_3(0x0E000000,0x0E000000UL, uint32_t  ))    /*  Auxiliary Time Stamp Number of Snapshots */
#define BITM_EMAC_TM_STMPSTAT_ATSSTM         (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Auxiliary Time Stamp Snapshot Trigger Missed */
#define BITM_EMAC_TM_STMPSTAT_ATSSTN         (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Auxiliary Timestamp Snapshot Trigger Identifier */
#define BITM_EMAC_TM_STMPSTAT_TSTRGTERR3     (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Timestamp Target Time Error 3 */
#define BITM_EMAC_TM_STMPSTAT_TSTARGT3       (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Timestamp Target Time Reached for Target Time PPS3 */
#define BITM_EMAC_TM_STMPSTAT_TSTRGTERR2     (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Timestamp Target Time Error 2 */
#define BITM_EMAC_TM_STMPSTAT_TSTARGT2       (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Timestamp Target Time Reached for Target Time PPS2 */
#define BITM_EMAC_TM_STMPSTAT_TSTRGTERR1     (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Timestamp Target Time Error 1 */
#define BITM_EMAC_TM_STMPSTAT_TSTARGT1       (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Timestamp Target Time Reached for Target Time PPS1 */
#define BITM_EMAC_TM_STMPSTAT_TSTRGTERR0     (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Time Stamp Target Time Programming Error */
#define BITM_EMAC_TM_STMPSTAT_ATSTS          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Auxiliary Time Stamp Trigger Snapshot */
#define BITM_EMAC_TM_STMPSTAT_TSTARGT0       (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Time Stamp Target Time Reached */
#define BITM_EMAC_TM_STMPSTAT_TSSOVF         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Time Stamp Seconds Overflow */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPSCTL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPSCTL_TRGTMODSEL3      29            /*  Target Time Register Mode for PPS3 */
#define BITP_EMAC_TM_PPSCTL_PPSCMD3          24            /*  Flexible PPS3 Output Control */
#define BITP_EMAC_TM_PPSCTL_TRGTMODSEL2      21            /*  Target Time Register Mode for PPS2 */
#define BITP_EMAC_TM_PPSCTL_PPSCMD2          16            /*  Flexible PPS2 Output Control */
#define BITP_EMAC_TM_PPSCTL_TRGTMODSEL1      13            /*  Target Time Register Mode for PPS1 */
#define BITP_EMAC_TM_PPSCTL_PPSCMD1           8            /*  Flexible PPS1 Output Control */
#define BITP_EMAC_TM_PPSCTL_TRGTMODSEL0       5            /*  Target Time Register Mode */
#define BITP_EMAC_TM_PPSCTL_PPSEN             4            /*  Enable the flexible PPS output mode */
#define BITP_EMAC_TM_PPSCTL_PPSCTL0           0            /*  PPS Frequency Control */
#define BITM_EMAC_TM_PPSCTL_TRGTMODSEL3      (_ADI_MSK_3(0x60000000,0x60000000UL, uint32_t  ))    /*  Target Time Register Mode for PPS3 */
#define BITM_EMAC_TM_PPSCTL_PPSCMD3          (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  Flexible PPS3 Output Control */
#define BITM_EMAC_TM_PPSCTL_TRGTMODSEL2      (_ADI_MSK_3(0x00600000,0x00600000UL, uint32_t  ))    /*  Target Time Register Mode for PPS2 */
#define BITM_EMAC_TM_PPSCTL_PPSCMD2          (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  Flexible PPS2 Output Control */
#define BITM_EMAC_TM_PPSCTL_TRGTMODSEL1      (_ADI_MSK_3(0x00006000,0x00006000UL, uint32_t  ))    /*  Target Time Register Mode for PPS1 */
#define BITM_EMAC_TM_PPSCTL_PPSCMD1          (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  Flexible PPS1 Output Control */
#define BITM_EMAC_TM_PPSCTL_TRGTMODSEL0      (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  Target Time Register Mode */
#define BITM_EMAC_TM_PPSCTL_PPSEN            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Enable the flexible PPS output mode */
#define BITM_EMAC_TM_PPSCTL_PPSCTL0          (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  PPS Frequency Control */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_AUXSTMP_NSEC                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_AUXSTMP_NSEC_VALUE       0            /*  Time Value */
#define BITM_EMAC_TM_AUXSTMP_NSEC_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Time Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_AUXSTMP_SEC                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_AUXSTMP_SEC_VALUE        0            /*  Time Value */
#define BITM_EMAC_TM_AUXSTMP_SEC_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Time Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_MAC_AVCTL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_MAC_AVCTL_PTPCH            24            /*  Channel for Queuing the PTP Packets */
#define BITP_EMAC_MAC_AVCTL_AVCH             21            /*  Channel for Queuing AV Control Packets */
#define BITP_EMAC_MAC_AVCTL_AVCD             20            /*  AV Channel Disable */
#define BITP_EMAC_MAC_AVCTL_VQE              19            /*  VLAN Tagged non-AV packets queuing enable */
#define BITP_EMAC_MAC_AVCTL_AVP              16            /*  AV Priority for Queuing */
#define BITP_EMAC_MAC_AVCTL_AVT               0            /*  AV Ether Type Value */
#define BITM_EMAC_MAC_AVCTL_PTPCH            (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  Channel for Queuing the PTP Packets */
#define BITM_EMAC_MAC_AVCTL_AVCH             (_ADI_MSK_3(0x00600000,0x00600000UL, uint32_t  ))    /*  Channel for Queuing AV Control Packets */
#define BITM_EMAC_MAC_AVCTL_AVCD             (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  AV Channel Disable */
#define BITM_EMAC_MAC_AVCTL_VQE              (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  VLAN Tagged non-AV packets queuing enable */
#define BITM_EMAC_MAC_AVCTL_AVP              (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  AV Priority for Queuing */
#define BITM_EMAC_MAC_AVCTL_AVT              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  AV Ether Type Value */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS0INTVL                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS0INTVL_PPSINT         0            /*  PPS Output Signal Interval */
#define BITM_EMAC_TM_PPS0INTVL_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Interval */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS0WIDTH                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS0WIDTH_PPSINT         0            /*  PPS Output Signal Interval */
#define BITM_EMAC_TM_PPS0WIDTH_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Interval */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS1TGTM                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS1TGTM_TSTR            0            /*  Target Time Seconds Register */
#define BITM_EMAC_TM_PPS1TGTM_TSTR           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Target Time Seconds Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS1NTGTM                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS1NTGTM_TSTRBUSY      31            /*  Target-Time Register */
#define BITP_EMAC_TM_PPS1NTGTM_TSTR           0            /*  Target-Time Low Register */
#define BITM_EMAC_TM_PPS1NTGTM_TSTRBUSY      (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Target-Time Register */
#define BITM_EMAC_TM_PPS1NTGTM_TSTR          (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Target-Time Low Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS1INTVL                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS1INTVL_PPSINT         0            /*  PPS Output Signal Interval */
#define BITM_EMAC_TM_PPS1INTVL_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Interval */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS1WIDTH                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS1WIDTH_PPSINT         0            /*  PPS Output Signal Width */
#define BITM_EMAC_TM_PPS1WIDTH_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Width */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS2TGTM                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS2TGTM_TSTR            0            /*  Target time seconds register */
#define BITM_EMAC_TM_PPS2TGTM_TSTR           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Target time seconds register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS2NTGTM                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS2NTGTM_TSTRBUSY      31            /*  Target time register */
#define BITP_EMAC_TM_PPS2NTGTM_TSTR           0            /*  Target Time Low Register */
#define BITM_EMAC_TM_PPS2NTGTM_TSTRBUSY      (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Target time register */
#define BITM_EMAC_TM_PPS2NTGTM_TSTR          (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Target Time Low Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS2INTVL                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS2INTVL_PPSINT         0            /*  PPS Output Signal Interval */
#define BITM_EMAC_TM_PPS2INTVL_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Interval */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS2WIDTH                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS2WIDTH_PPSINT         0            /*  PPS Output Signal Width */
#define BITM_EMAC_TM_PPS2WIDTH_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Width */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS3TGTM                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS3TGTM_TSTR            0            /*  Target time seconds register */
#define BITM_EMAC_TM_PPS3TGTM_TSTR           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Target time seconds register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS3NTGTM                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS3NTGTM_TSTRBUSY      31            /*  Target Time Register */
#define BITP_EMAC_TM_PPS3NTGTM_TSTR           0            /*  Target Time Low Register */
#define BITM_EMAC_TM_PPS3NTGTM_TSTRBUSY      (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Target Time Register */
#define BITM_EMAC_TM_PPS3NTGTM_TSTR          (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Target Time Low Register */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS3INTVL                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS3INTVL_PPSINT         0            /*  PPS Output Signal Interval */
#define BITM_EMAC_TM_PPS3INTVL_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Interval */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_TM_PPS3WIDTH                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_TM_PPS3WIDTH_PPSINT         0            /*  PPS Output Signal Width */
#define BITM_EMAC_TM_PPS3WIDTH_PPSINT        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PPS Output Signal Width */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_BUSMODE                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_BUSMODE_AAL           25            /*  Address Aligned Bursts */
#define BITP_EMAC_DMA0_BUSMODE_PBL8          24            /*  PBL * 8 */
#define BITP_EMAC_DMA0_BUSMODE_USP           23            /*  Use Separate PBL */
#define BITP_EMAC_DMA0_BUSMODE_RPBL          17            /*  Receive Programmable Burst Length */
#define BITP_EMAC_DMA0_BUSMODE_FB            16            /*  Fixed Burst */
#define BITP_EMAC_DMA0_BUSMODE_PBL            8            /*  Programmable Burst Length */
#define BITP_EMAC_DMA0_BUSMODE_ATDS           7            /*  Alternate Descriptor Size */
#define BITP_EMAC_DMA0_BUSMODE_DSL            2            /*  Descriptor Skip Length */
#define BITP_EMAC_DMA0_BUSMODE_SWR            0            /*  Software Reset */
#define BITM_EMAC_DMA0_BUSMODE_AAL           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Address Aligned Bursts */
#define BITM_EMAC_DMA0_BUSMODE_PBL8          (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  PBL * 8 */
#define BITM_EMAC_DMA0_BUSMODE_USP           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Use Separate PBL */
#define BITM_EMAC_DMA0_BUSMODE_RPBL          (_ADI_MSK_3(0x007E0000,0x007E0000UL, uint32_t  ))    /*  Receive Programmable Burst Length */
#define BITM_EMAC_DMA0_BUSMODE_FB            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Fixed Burst */
#define BITM_EMAC_DMA0_BUSMODE_PBL           (_ADI_MSK_3(0x00003F00,0x00003F00UL, uint32_t  ))    /*  Programmable Burst Length */
#define BITM_EMAC_DMA0_BUSMODE_ATDS          (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Alternate Descriptor Size */
#define BITM_EMAC_DMA0_BUSMODE_DSL           (_ADI_MSK_3(0x0000007C,0x0000007CUL, uint32_t  ))    /*  Descriptor Skip Length */
#define BITM_EMAC_DMA0_BUSMODE_SWR           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Software Reset */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_TXPOLL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_TXPOLL_START           0            /*  Transmit Poll Demand */
#define BITM_EMAC_DMA0_TXPOLL_START          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Poll Demand */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_RXPOLL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_RXPOLL_START           0            /*  Receive Poll Demand */
#define BITM_EMAC_DMA0_RXPOLL_START          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Poll Demand */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_RXDSC_ADDR                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_RXDSC_ADDR_VALUE       0            /*  Start of Receive List */
#define BITM_EMAC_DMA0_RXDSC_ADDR_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Start of Receive List */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_TXDSC_ADDR                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_TXDSC_ADDR_VALUE       0            /*  Start of Transmit List */
#define BITM_EMAC_DMA0_TXDSC_ADDR_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Start of Transmit List */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_STAT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_STAT_GLPII            30            /*  GMAC LPI Interrupt */
#define BITP_EMAC_DMA0_STAT_TTI              29            /*  Time Stamp Trigger Interrupt */
#define BITP_EMAC_DMA0_STAT_MCI              27            /*  MAC MMC Interrupt */
#define BITP_EMAC_DMA0_STAT_GLI              26            /*  Line Interface Interrupt */
#define BITP_EMAC_DMA0_STAT_EB               23            /*  Error Bits */
#define BITP_EMAC_DMA0_STAT_TS               20            /*  Tx Process State */
#define BITP_EMAC_DMA0_STAT_RS               17            /*  Rx Process State */
#define BITP_EMAC_DMA0_STAT_NIS              16            /*  Normal Interrupt Summary */
#define BITP_EMAC_DMA0_STAT_AIS              15            /*  Abnormal Interrupt Summary */
#define BITP_EMAC_DMA0_STAT_ERI              14            /*  Early Receive Interrupt */
#define BITP_EMAC_DMA0_STAT_FBI              13            /*  Fatal Bus Error Interrupt */
#define BITP_EMAC_DMA0_STAT_ETI              10            /*  Early Transmit Interrupt */
#define BITP_EMAC_DMA0_STAT_RWT               9            /*  Receive WatchDog Timeout */
#define BITP_EMAC_DMA0_STAT_RPS               8            /*  Receive Process Stopped */
#define BITP_EMAC_DMA0_STAT_RU                7            /*  Receive Buffer Unavailable */
#define BITP_EMAC_DMA0_STAT_RI                6            /*  Receive Interrupt */
#define BITP_EMAC_DMA0_STAT_UNF               5            /*  Transmit Buffer Underflow */
#define BITP_EMAC_DMA0_STAT_OVF               4            /*  Receive Buffer Overflow */
#define BITP_EMAC_DMA0_STAT_TJT               3            /*  Transmit Jabber Timeout */
#define BITP_EMAC_DMA0_STAT_TU                2            /*  Transmit Buffer Unavailable */
#define BITP_EMAC_DMA0_STAT_TPS               1            /*  Transmit Process Stopped */
#define BITP_EMAC_DMA0_STAT_TI                0            /*  Transmit Interrupt */
#define BITM_EMAC_DMA0_STAT_GLPII            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  GMAC LPI Interrupt */
#define BITM_EMAC_DMA0_STAT_TTI              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Time Stamp Trigger Interrupt */
#define BITM_EMAC_DMA0_STAT_MCI              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  MAC MMC Interrupt */
#define BITM_EMAC_DMA0_STAT_GLI              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Line Interface Interrupt */
#define BITM_EMAC_DMA0_STAT_EB               (_ADI_MSK_3(0x03800000,0x03800000UL, uint32_t  ))    /*  Error Bits */
#define BITM_EMAC_DMA0_STAT_TS               (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  Tx Process State */
#define BITM_EMAC_DMA0_STAT_RS               (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  Rx Process State */
#define BITM_EMAC_DMA0_STAT_NIS              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Normal Interrupt Summary */
#define BITM_EMAC_DMA0_STAT_AIS              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Abnormal Interrupt Summary */
#define BITM_EMAC_DMA0_STAT_ERI              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Early Receive Interrupt */
#define BITM_EMAC_DMA0_STAT_FBI              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Fatal Bus Error Interrupt */
#define BITM_EMAC_DMA0_STAT_ETI              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Early Transmit Interrupt */
#define BITM_EMAC_DMA0_STAT_RWT              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive WatchDog Timeout */
#define BITM_EMAC_DMA0_STAT_RPS              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Process Stopped */
#define BITM_EMAC_DMA0_STAT_RU               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Receive Buffer Unavailable */
#define BITM_EMAC_DMA0_STAT_RI               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Receive Interrupt */
#define BITM_EMAC_DMA0_STAT_UNF              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Buffer Underflow */
#define BITM_EMAC_DMA0_STAT_OVF              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Buffer Overflow */
#define BITM_EMAC_DMA0_STAT_TJT              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Jabber Timeout */
#define BITM_EMAC_DMA0_STAT_TU               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Buffer Unavailable */
#define BITM_EMAC_DMA0_STAT_TPS              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Process Stopped */
#define BITM_EMAC_DMA0_STAT_TI               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Interrupt */
#define ENUM_EMAC_DMA0_STAT_TS_STOPPED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TS: Stopped; Reset or Stop Tx Command Issued */
#define ENUM_EMAC_DMA0_STAT_TS_R_FTD         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  TS: Running; Fetching Tx Transfer Descriptor */
#define ENUM_EMAC_DMA0_STAT_TS_R_WSTAT       (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  TS: Running; Waiting for Status */
#define ENUM_EMAC_DMA0_STAT_TS_R_TXHMBUF     (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  TS: Reading Data from Host Memory Buffer and Queuing It to Tx Buffer */
#define ENUM_EMAC_DMA0_STAT_TS_WR_TSTMP      (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  TS: TIME_STAMP Write State */
#define ENUM_EMAC_DMA0_STAT_TS_SUSPENDED     (_ADI_MSK_3(0x00600000,0x00600000UL, uint32_t  ))    /*  TS: Suspended; Tx Descriptor Unavailable or Tx Buffer Underflow */
#define ENUM_EMAC_DMA0_STAT_TS_R_CLSTD       (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  TS: Closing Tx Descriptor */
#define ENUM_EMAC_DMA0_STAT_RS_STOPPED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RS: Stopped: Reset or Stop Rx Command Issued. */
#define ENUM_EMAC_DMA0_STAT_RS_R_FRD         (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  RS: Running: Fetching Rx Transfer Descriptor. */
#define ENUM_EMAC_DMA0_STAT_RS_R_WTRX        (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  RS: Running: Waiting for Rx Packet */
#define ENUM_EMAC_DMA0_STAT_RS_SUSPENDED     (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  RS: Suspended: Rx Descriptor Unavailable */
#define ENUM_EMAC_DMA0_STAT_RS_R_CLSRD       (_ADI_MSK_3(0x000A0000,0x000A0000UL, uint32_t  ))    /*  RS: Running: Closing Rx Descriptor */
#define ENUM_EMAC_DMA0_STAT_RS_WR_TSTMP      (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))    /*  RS: TIME_STAMP Write State */
#define ENUM_EMAC_DMA0_STAT_RS_R_RXWRHM      (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  RS: Running: Transferring Rx Packet Data from Rx Buffer to Host Memory */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_OPMODE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_OPMODE_DT             26            /*  Disable Dropping TCP/IP Errors */
#define BITP_EMAC_DMA0_OPMODE_RSF            25            /*  Receive Store and Forward */
#define BITP_EMAC_DMA0_OPMODE_DFF            24            /*  Disable Flushing of received Frames */
#define BITP_EMAC_DMA0_OPMODE_TSF            21            /*  Transmit Store and Forward */
#define BITP_EMAC_DMA0_OPMODE_FTF            20            /*  Flush Transmit FIFO */
#define BITP_EMAC_DMA0_OPMODE_TTC            14            /*  Transmit Threshold Control */
#define BITP_EMAC_DMA0_OPMODE_ST             13            /*  Start/Stop Transmission */
#define BITP_EMAC_DMA0_OPMODE_FEF             7            /*  Forward Error Frames */
#define BITP_EMAC_DMA0_OPMODE_FUF             6            /*  Forward Undersized good Frames */
#define BITP_EMAC_DMA0_OPMODE_DGF             5            /*  Drop Gaint Frames */
#define BITP_EMAC_DMA0_OPMODE_RTC             3            /*  Receive Threshold Control */
#define BITP_EMAC_DMA0_OPMODE_OSF             2            /*  Operate on Second Frame */
#define BITP_EMAC_DMA0_OPMODE_SR              1            /*  Start/Stop Receive */
#define BITM_EMAC_DMA0_OPMODE_DT             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Disable Dropping TCP/IP Errors */
#define BITM_EMAC_DMA0_OPMODE_RSF            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Receive Store and Forward */
#define BITM_EMAC_DMA0_OPMODE_DFF            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Disable Flushing of received Frames */
#define BITM_EMAC_DMA0_OPMODE_TSF            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Transmit Store and Forward */
#define BITM_EMAC_DMA0_OPMODE_FTF            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Flush Transmit FIFO */
#define BITM_EMAC_DMA0_OPMODE_TTC            (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Transmit Threshold Control */
#define BITM_EMAC_DMA0_OPMODE_ST             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Start/Stop Transmission */
#define BITM_EMAC_DMA0_OPMODE_FEF            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Forward Error Frames */
#define BITM_EMAC_DMA0_OPMODE_FUF            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Forward Undersized good Frames */
#define BITM_EMAC_DMA0_OPMODE_DGF            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Drop Gaint Frames */
#define BITM_EMAC_DMA0_OPMODE_RTC            (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  Receive Threshold Control */
#define BITM_EMAC_DMA0_OPMODE_OSF            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Operate on Second Frame */
#define BITM_EMAC_DMA0_OPMODE_SR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Start/Stop Receive */
#define ENUM_EMAC_DMA0_OPMODE_TTC_64         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TTC: 64 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_128        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  TTC: 128 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_192        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  TTC: 192 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_256        (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  TTC: 256 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_40         (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TTC: 40 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_32         (_ADI_MSK_3(0x00014000,0x00014000UL, uint32_t  ))    /*  TTC: 32 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_24         (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))    /*  TTC: 24 */
#define ENUM_EMAC_DMA0_OPMODE_TTC_16         (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  TTC: 16 */
#define ENUM_EMAC_DMA0_OPMODE_RTC_64         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RTC: 64 */
#define ENUM_EMAC_DMA0_OPMODE_RTC_32         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RTC: 32 */
#define ENUM_EMAC_DMA0_OPMODE_RTC_96         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RTC: 96 */
#define ENUM_EMAC_DMA0_OPMODE_RTC_128        (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  RTC: 128 */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_IEN                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_IEN_NIE               16            /*  Normal Interrupt Summary Enable */
#define BITP_EMAC_DMA0_IEN_AIE               15            /*  Abnormal Interrupt Summary Enable */
#define BITP_EMAC_DMA0_IEN_ERE               14            /*  Early Receive Interrupt Enable */
#define BITP_EMAC_DMA0_IEN_FBE               13            /*  Fatal Bus Error Enable */
#define BITP_EMAC_DMA0_IEN_ETE               10            /*  Early Transmit Interrupt Enable */
#define BITP_EMAC_DMA0_IEN_RWE                9            /*  Receive WatchdogTimeout Enable */
#define BITP_EMAC_DMA0_IEN_RSE                8            /*  Receive Stopped Enable */
#define BITP_EMAC_DMA0_IEN_RUE                7            /*  Receive Buffer Unavailable Enable */
#define BITP_EMAC_DMA0_IEN_RIE                6            /*  Receive Interrupt Enable */
#define BITP_EMAC_DMA0_IEN_UNE                5            /*  Underflow Interrupt Enable */
#define BITP_EMAC_DMA0_IEN_OVE                4            /*  Overflow Interrupt Enable */
#define BITP_EMAC_DMA0_IEN_TJE                3            /*  Transmit Jabber Timeout Enable */
#define BITP_EMAC_DMA0_IEN_TUE                2            /*  Transmit Buffer Unavailable Enable */
#define BITP_EMAC_DMA0_IEN_TSE                1            /*  Transmit Stopped Enable */
#define BITP_EMAC_DMA0_IEN_TIE                0            /*  Transmit Interrupt Enable */
#define BITM_EMAC_DMA0_IEN_NIE               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Normal Interrupt Summary Enable */
#define BITM_EMAC_DMA0_IEN_AIE               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Abnormal Interrupt Summary Enable */
#define BITM_EMAC_DMA0_IEN_ERE               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Early Receive Interrupt Enable */
#define BITM_EMAC_DMA0_IEN_FBE               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Fatal Bus Error Enable */
#define BITM_EMAC_DMA0_IEN_ETE               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Early Transmit Interrupt Enable */
#define BITM_EMAC_DMA0_IEN_RWE               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive WatchdogTimeout Enable */
#define BITM_EMAC_DMA0_IEN_RSE               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Stopped Enable */
#define BITM_EMAC_DMA0_IEN_RUE               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Receive Buffer Unavailable Enable */
#define BITM_EMAC_DMA0_IEN_RIE               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Receive Interrupt Enable */
#define BITM_EMAC_DMA0_IEN_UNE               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Underflow Interrupt Enable */
#define BITM_EMAC_DMA0_IEN_OVE               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Overflow Interrupt Enable */
#define BITM_EMAC_DMA0_IEN_TJE               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Jabber Timeout Enable */
#define BITM_EMAC_DMA0_IEN_TUE               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Buffer Unavailable Enable */
#define BITM_EMAC_DMA0_IEN_TSE               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Stopped Enable */
#define BITM_EMAC_DMA0_IEN_TIE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Interrupt Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_MISS_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_MISS_FRM_OVFFIFO      28            /*  Overflow bit for FIFO Overflow Counter */
#define BITP_EMAC_DMA0_MISS_FRM_MISSFROV     17            /*  Missed Frames Buffer Overflow */
#define BITP_EMAC_DMA0_MISS_FRM_OVFMISS      16            /*  Overflow bit for Missed Frame Counter */
#define BITP_EMAC_DMA0_MISS_FRM_MISSFRUN      0            /*  Missed Frames Unavailable Buffer */
#define BITM_EMAC_DMA0_MISS_FRM_OVFFIFO      (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Overflow bit for FIFO Overflow Counter */
#define BITM_EMAC_DMA0_MISS_FRM_MISSFROV     (_ADI_MSK_3(0x0FFE0000,0x0FFE0000UL, uint32_t  ))    /*  Missed Frames Buffer Overflow */
#define BITM_EMAC_DMA0_MISS_FRM_OVFMISS      (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Overflow bit for Missed Frame Counter */
#define BITM_EMAC_DMA0_MISS_FRM_MISSFRUN     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Missed Frames Unavailable Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_RXIWDOG                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_RXIWDOG_RIWT           0            /*  RI WatchDog Timer Count */
#define BITM_EMAC_DMA0_RXIWDOG_RIWT          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  RI WatchDog Timer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_BMMODE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_BMMODE_ENLPI          31            /*  Enable Low Power Interface */
#define BITP_EMAC_DMA0_BMMODE_WROSRLMT       20            /*  SCB Maximum Write Outstanding Request */
#define BITP_EMAC_DMA0_BMMODE_RDOSRLMT       16            /*  SCB Maximum Read Outstanding Request */
#define BITP_EMAC_DMA0_BMMODE_ONEKBBE        13            /*  1K Boundary Crossing Enable */
#define BITP_EMAC_DMA0_BMMODE_AAL            12            /*  Address Aligned Beats */
#define BITP_EMAC_DMA0_BMMODE_BLEN16          3            /*  SCB Burst Length 16 */
#define BITP_EMAC_DMA0_BMMODE_BLEN8           2            /*  SCB Burst Length 8 */
#define BITP_EMAC_DMA0_BMMODE_BLEN4           1            /*  SCB Burst Length 4 */
#define BITP_EMAC_DMA0_BMMODE_UNDEF           0            /*  SCB Undefined Burst Length */
#define BITM_EMAC_DMA0_BMMODE_ENLPI          (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Enable Low Power Interface */
#define BITM_EMAC_DMA0_BMMODE_WROSRLMT       (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  SCB Maximum Write Outstanding Request */
#define BITM_EMAC_DMA0_BMMODE_RDOSRLMT       (_ADI_MSK_3(0x00070000,0x00070000UL, uint32_t  ))    /*  SCB Maximum Read Outstanding Request */
#define BITM_EMAC_DMA0_BMMODE_ONEKBBE        (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  1K Boundary Crossing Enable */
#define BITM_EMAC_DMA0_BMMODE_AAL            (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Address Aligned Beats */
#define BITM_EMAC_DMA0_BMMODE_BLEN16         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  SCB Burst Length 16 */
#define BITM_EMAC_DMA0_BMMODE_BLEN8          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SCB Burst Length 8 */
#define BITM_EMAC_DMA0_BMMODE_BLEN4          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SCB Burst Length 4 */
#define BITM_EMAC_DMA0_BMMODE_UNDEF          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SCB Undefined Burst Length */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_BMSTAT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_BMSTAT_BUSRD           1            /*  Bus (SCB master) Read Active */
#define BITP_EMAC_DMA0_BMSTAT_BUSWR           0            /*  Bus (SCB master) Write Active */
#define BITM_EMAC_DMA0_BMSTAT_BUSRD          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Bus (SCB master) Read Active */
#define BITM_EMAC_DMA0_BMSTAT_BUSWR          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Bus (SCB master) Write Active */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_TXDSC_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_TXDSC_CUR_ADDR         0            /*  Host Transmit Descriptor Address */
#define BITM_EMAC_DMA0_TXDSC_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Transmit Descriptor Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_RXDSC_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_RXDSC_CUR_ADDR         0            /*  Host Receive Current Descriptor Address */
#define BITM_EMAC_DMA0_RXDSC_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Receive Current Descriptor Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_TXBUF_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_TXBUF_CUR_ADDR         0            /*  Host Transmit Current Buffer Address */
#define BITM_EMAC_DMA0_TXBUF_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Transmit Current Buffer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA0_RXBUF_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA0_RXBUF_CUR_ADDR         0            /*  Host Receive Current Buffer Address */
#define BITM_EMAC_DMA0_RXBUF_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Receive Current Buffer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_BUSMODE                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_BUSMODE_AAL           25            /*  Address Aligned Bursts */
#define BITP_EMAC_DMA1_BUSMODE_PBL8          24            /*  PBL * 8 */
#define BITP_EMAC_DMA1_BUSMODE_USP           23            /*  Use Separate PBL */
#define BITP_EMAC_DMA1_BUSMODE_RPBL          17            /*  Receive Programmable Burst Length */
#define BITP_EMAC_DMA1_BUSMODE_FB            16            /*  Fixed Burst */
#define BITP_EMAC_DMA1_BUSMODE_PBL            8            /*  Programmable Burst Length */
#define BITP_EMAC_DMA1_BUSMODE_ATDS           7            /*  Alternate Descriptor Size */
#define BITP_EMAC_DMA1_BUSMODE_DSL            2            /*  Descriptor Skip Length */
#define BITM_EMAC_DMA1_BUSMODE_AAL           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Address Aligned Bursts */
#define BITM_EMAC_DMA1_BUSMODE_PBL8          (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  PBL * 8 */
#define BITM_EMAC_DMA1_BUSMODE_USP           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Use Separate PBL */
#define BITM_EMAC_DMA1_BUSMODE_RPBL          (_ADI_MSK_3(0x007E0000,0x007E0000UL, uint32_t  ))    /*  Receive Programmable Burst Length */
#define BITM_EMAC_DMA1_BUSMODE_FB            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Fixed Burst */
#define BITM_EMAC_DMA1_BUSMODE_PBL           (_ADI_MSK_3(0x00003F00,0x00003F00UL, uint32_t  ))    /*  Programmable Burst Length */
#define BITM_EMAC_DMA1_BUSMODE_ATDS          (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Alternate Descriptor Size */
#define BITM_EMAC_DMA1_BUSMODE_DSL           (_ADI_MSK_3(0x0000007C,0x0000007CUL, uint32_t  ))    /*  Descriptor Skip Length */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_TXPOLL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_TXPOLL_START           0            /*  Transmit Poll Demand */
#define BITM_EMAC_DMA1_TXPOLL_START          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Poll Demand */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_RXPOLL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_RXPOLL_START           0            /*  Receive Poll Demand */
#define BITM_EMAC_DMA1_RXPOLL_START          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Poll Demand */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_RXDSC_ADDR                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_RXDSC_ADDR_VALUE       0            /*  Start of Receive List */
#define BITM_EMAC_DMA1_RXDSC_ADDR_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Start of Receive List */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_TXDSC_ADDR                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_TXDSC_ADDR_VALUE       0            /*  Start of Transmit List */
#define BITM_EMAC_DMA1_TXDSC_ADDR_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Start of Transmit List */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_STAT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_STAT_GTMSI            30            /*  MAC TMS Interrupt */
#define BITP_EMAC_DMA1_STAT_TTI              29            /*  Time Stamp Trigger Interrupt */
#define BITP_EMAC_DMA1_STAT_MCI              27            /*  MAC MMC Interrupt */
#define BITP_EMAC_DMA1_STAT_GLI              26            /*  Line Interface Interrupt */
#define BITP_EMAC_DMA1_STAT_EB               23            /*  Error Bits */
#define BITP_EMAC_DMA1_STAT_TS               20            /*  Tx Process State */
#define BITP_EMAC_DMA1_STAT_RS               17            /*  Rx Process State */
#define BITP_EMAC_DMA1_STAT_NIS              16            /*  Normal Interrupt Summary */
#define BITP_EMAC_DMA1_STAT_AIS              15            /*  Abnormal Interrupt Summary */
#define BITP_EMAC_DMA1_STAT_ERI              14            /*  Early Receive Interrupt */
#define BITP_EMAC_DMA1_STAT_FBI              13            /*  Fatal Bus Error Interrupt */
#define BITP_EMAC_DMA1_STAT_ETI              10            /*  Early Transmit Interrupt */
#define BITP_EMAC_DMA1_STAT_RWT               9            /*  Receive WatchDog Timeout */
#define BITP_EMAC_DMA1_STAT_RPS               8            /*  Receive Process Stopped */
#define BITP_EMAC_DMA1_STAT_RU                7            /*  Receive Buffer Unavailable */
#define BITP_EMAC_DMA1_STAT_RI                6            /*  Receive Interrupt */
#define BITP_EMAC_DMA1_STAT_UNF               5            /*  Transmit Buffer Underflow */
#define BITP_EMAC_DMA1_STAT_OVF               4            /*  Receive Buffer Overflow */
#define BITP_EMAC_DMA1_STAT_TJT               3            /*  Transmit Jabber Timeout */
#define BITP_EMAC_DMA1_STAT_TU                2            /*  Transmit Buffer Unavailable */
#define BITP_EMAC_DMA1_STAT_TPS               1            /*  Transmit Process Stopped */
#define BITP_EMAC_DMA1_STAT_TI                0            /*  Transmit Interrupt */
#define BITM_EMAC_DMA1_STAT_GTMSI            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  MAC TMS Interrupt */
#define BITM_EMAC_DMA1_STAT_TTI              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Time Stamp Trigger Interrupt */
#define BITM_EMAC_DMA1_STAT_MCI              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  MAC MMC Interrupt */
#define BITM_EMAC_DMA1_STAT_GLI              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Line Interface Interrupt */
#define BITM_EMAC_DMA1_STAT_EB               (_ADI_MSK_3(0x03800000,0x03800000UL, uint32_t  ))    /*  Error Bits */
#define BITM_EMAC_DMA1_STAT_TS               (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  Tx Process State */
#define BITM_EMAC_DMA1_STAT_RS               (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  Rx Process State */
#define BITM_EMAC_DMA1_STAT_NIS              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Normal Interrupt Summary */
#define BITM_EMAC_DMA1_STAT_AIS              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Abnormal Interrupt Summary */
#define BITM_EMAC_DMA1_STAT_ERI              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Early Receive Interrupt */
#define BITM_EMAC_DMA1_STAT_FBI              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Fatal Bus Error Interrupt */
#define BITM_EMAC_DMA1_STAT_ETI              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Early Transmit Interrupt */
#define BITM_EMAC_DMA1_STAT_RWT              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive WatchDog Timeout */
#define BITM_EMAC_DMA1_STAT_RPS              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Process Stopped */
#define BITM_EMAC_DMA1_STAT_RU               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Receive Buffer Unavailable */
#define BITM_EMAC_DMA1_STAT_RI               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Receive Interrupt */
#define BITM_EMAC_DMA1_STAT_UNF              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Buffer Underflow */
#define BITM_EMAC_DMA1_STAT_OVF              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Buffer Overflow */
#define BITM_EMAC_DMA1_STAT_TJT              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Jabber Timeout */
#define BITM_EMAC_DMA1_STAT_TU               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Buffer Unavailable */
#define BITM_EMAC_DMA1_STAT_TPS              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Process Stopped */
#define BITM_EMAC_DMA1_STAT_TI               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Interrupt */
#define ENUM_EMAC_DMA1_STAT_TS_STOPPED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TS: Stopped; Reset or Stop Tx Command Issued */
#define ENUM_EMAC_DMA1_STAT_TS_R_FTD         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  TS: Running; Fetching Tx Transfer Descriptor */
#define ENUM_EMAC_DMA1_STAT_TS_R_WSTAT       (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  TS: Running; Waiting for Status */
#define ENUM_EMAC_DMA1_STAT_TS_R_TXHMBUF     (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  TS: Reading Data from Host Memory Buffer and Queuing It to Tx Buffer */
#define ENUM_EMAC_DMA1_STAT_TS_WR_TSTMP      (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  TS: TIME_STAMP Write State */
#define ENUM_EMAC_DMA1_STAT_TS_SUSPENDED     (_ADI_MSK_3(0x00600000,0x00600000UL, uint32_t  ))    /*  TS: Suspended; Tx Descriptor Unavailable or Tx Buffer Underflow */
#define ENUM_EMAC_DMA1_STAT_TS_R_CLSTD       (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  TS: Closing Tx Descriptor */
#define ENUM_EMAC_DMA1_STAT_RS_STOPPED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RS: Stopped: Reset or Stop Rx Command Issued. */
#define ENUM_EMAC_DMA1_STAT_RS_R_FRD         (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  RS: Running: Fetching Rx Transfer Descriptor. */
#define ENUM_EMAC_DMA1_STAT_RS_R_WTRX        (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  RS: Running: Waiting for Rx Packet */
#define ENUM_EMAC_DMA1_STAT_RS_SUSPENDED     (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  RS: Suspended: Rx Descriptor Unavailable */
#define ENUM_EMAC_DMA1_STAT_RS_R_CLSRD       (_ADI_MSK_3(0x000A0000,0x000A0000UL, uint32_t  ))    /*  RS: Running: Closing Rx Descriptor */
#define ENUM_EMAC_DMA1_STAT_RS_WR_TSTMP      (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))    /*  RS: TIME_STAMP Write State */
#define ENUM_EMAC_DMA1_STAT_RS_R_RXWRHM      (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  RS: Running: Transferring Rx Packet Data from Rx Buffer to Host Memory */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_OPMODE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_OPMODE_DT             26            /*  Disable Dropping TCP/IP Errors */
#define BITP_EMAC_DMA1_OPMODE_RSF            25            /*  Receive Store and Forward */
#define BITP_EMAC_DMA1_OPMODE_DFF            24            /*  Disable Flushing of received Frames */
#define BITP_EMAC_DMA1_OPMODE_TSF            21            /*  Transmit Store and Forward */
#define BITP_EMAC_DMA1_OPMODE_FTF            20            /*  Flush Transmit FIFO */
#define BITP_EMAC_DMA1_OPMODE_TTC            14            /*  Transmit Threshold Control */
#define BITP_EMAC_DMA1_OPMODE_ST             13            /*  Start/Stop Transmission */
#define BITP_EMAC_DMA1_OPMODE_FEF             7            /*  Forward Error Frames */
#define BITP_EMAC_DMA1_OPMODE_FUF             6            /*  Forward Undersized Good Frames */
#define BITP_EMAC_DMA1_OPMODE_DGF             5            /*  Drop Giant Frames */
#define BITP_EMAC_DMA1_OPMODE_RTC             3            /*  Receive Threshold Control */
#define BITP_EMAC_DMA1_OPMODE_OSF             2            /*  Operate on Second Frame */
#define BITP_EMAC_DMA1_OPMODE_SR              1            /*  Start/Stop Receive */
#define BITM_EMAC_DMA1_OPMODE_DT             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Disable Dropping TCP/IP Errors */
#define BITM_EMAC_DMA1_OPMODE_RSF            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Receive Store and Forward */
#define BITM_EMAC_DMA1_OPMODE_DFF            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Disable Flushing of received Frames */
#define BITM_EMAC_DMA1_OPMODE_TSF            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Transmit Store and Forward */
#define BITM_EMAC_DMA1_OPMODE_FTF            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Flush Transmit FIFO */
#define BITM_EMAC_DMA1_OPMODE_TTC            (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Transmit Threshold Control */
#define BITM_EMAC_DMA1_OPMODE_ST             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Start/Stop Transmission */
#define BITM_EMAC_DMA1_OPMODE_FEF            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Forward Error Frames */
#define BITM_EMAC_DMA1_OPMODE_FUF            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Forward Undersized Good Frames */
#define BITM_EMAC_DMA1_OPMODE_DGF            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Drop Giant Frames */
#define BITM_EMAC_DMA1_OPMODE_RTC            (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  Receive Threshold Control */
#define BITM_EMAC_DMA1_OPMODE_OSF            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Operate on Second Frame */
#define BITM_EMAC_DMA1_OPMODE_SR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Start/Stop Receive */
#define ENUM_EMAC_DMA1_OPMODE_TTC_64         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TTC: 64 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_128        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  TTC: 128 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_192        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  TTC: 192 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_256        (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  TTC: 256 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_40         (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TTC: 40 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_32         (_ADI_MSK_3(0x00014000,0x00014000UL, uint32_t  ))    /*  TTC: 32 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_24         (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))    /*  TTC: 24 */
#define ENUM_EMAC_DMA1_OPMODE_TTC_16         (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  TTC: 16 */
#define ENUM_EMAC_DMA1_OPMODE_RTC_64         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RTC: 64 */
#define ENUM_EMAC_DMA1_OPMODE_RTC_32         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RTC: 32 */
#define ENUM_EMAC_DMA1_OPMODE_RTC_96         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RTC: 96 */
#define ENUM_EMAC_DMA1_OPMODE_RTC_128        (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  RTC: 128 */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_IEN                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_IEN_NIE               16            /*  Normal Interrupt Summary Enable */
#define BITP_EMAC_DMA1_IEN_AIE               15            /*  Abnormal Interrupt Summary Enable */
#define BITP_EMAC_DMA1_IEN_ERE               14            /*  Early Receive Interrupt Enable */
#define BITP_EMAC_DMA1_IEN_FBE               13            /*  Fatal Bus Error Enable */
#define BITP_EMAC_DMA1_IEN_ETE               10            /*  Early Transmit Interrupt Enable */
#define BITP_EMAC_DMA1_IEN_RWE                9            /*  Receive Watchdog Timeout Enable */
#define BITP_EMAC_DMA1_IEN_RSE                8            /*  Receive Stopped Enable */
#define BITP_EMAC_DMA1_IEN_RUE                7            /*  Receive Buffer Unavailable Enable */
#define BITP_EMAC_DMA1_IEN_RIE                6            /*  Receive Interrupt Enable */
#define BITP_EMAC_DMA1_IEN_UNE                5            /*  Underflow Interrupt Enable */
#define BITP_EMAC_DMA1_IEN_OVE                4            /*  Overflow Interrupt Enable */
#define BITP_EMAC_DMA1_IEN_TJE                3            /*  Transmit Jabber Timeout Enable */
#define BITP_EMAC_DMA1_IEN_TUE                2            /*  Transmit Buffer Unavailable Enable */
#define BITP_EMAC_DMA1_IEN_TSE                1            /*  Transmit Stopped Enable */
#define BITP_EMAC_DMA1_IEN_TIE                0            /*  Transmit Interrupt Enable */
#define BITM_EMAC_DMA1_IEN_NIE               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Normal Interrupt Summary Enable */
#define BITM_EMAC_DMA1_IEN_AIE               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Abnormal Interrupt Summary Enable */
#define BITM_EMAC_DMA1_IEN_ERE               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Early Receive Interrupt Enable */
#define BITM_EMAC_DMA1_IEN_FBE               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Fatal Bus Error Enable */
#define BITM_EMAC_DMA1_IEN_ETE               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Early Transmit Interrupt Enable */
#define BITM_EMAC_DMA1_IEN_RWE               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive Watchdog Timeout Enable */
#define BITM_EMAC_DMA1_IEN_RSE               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Stopped Enable */
#define BITM_EMAC_DMA1_IEN_RUE               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Receive Buffer Unavailable Enable */
#define BITM_EMAC_DMA1_IEN_RIE               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Receive Interrupt Enable */
#define BITM_EMAC_DMA1_IEN_UNE               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Underflow Interrupt Enable */
#define BITM_EMAC_DMA1_IEN_OVE               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Overflow Interrupt Enable */
#define BITM_EMAC_DMA1_IEN_TJE               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Jabber Timeout Enable */
#define BITM_EMAC_DMA1_IEN_TUE               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Buffer Unavailable Enable */
#define BITM_EMAC_DMA1_IEN_TSE               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Stopped Enable */
#define BITM_EMAC_DMA1_IEN_TIE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Interrupt Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_MISS_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_MISS_FRM_OVFFIFO      28            /*  Overflow bit for FIFO Overflow Counter */
#define BITP_EMAC_DMA1_MISS_FRM_MISSFROV     17            /*  Missed Frames Buffer Overflow */
#define BITP_EMAC_DMA1_MISS_FRM_OVFMISS      16            /*  Overflow bit for Missed Frame Counter */
#define BITP_EMAC_DMA1_MISS_FRM_MISSFRUN      0            /*  Missed Frames Unavailable Buffer */
#define BITM_EMAC_DMA1_MISS_FRM_OVFFIFO      (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Overflow bit for FIFO Overflow Counter */
#define BITM_EMAC_DMA1_MISS_FRM_MISSFROV     (_ADI_MSK_3(0x0FFE0000,0x0FFE0000UL, uint32_t  ))    /*  Missed Frames Buffer Overflow */
#define BITM_EMAC_DMA1_MISS_FRM_OVFMISS      (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Overflow bit for Missed Frame Counter */
#define BITM_EMAC_DMA1_MISS_FRM_MISSFRUN     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Missed Frames Unavailable Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_RXIWDOG                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_RXIWDOG_RIWT           0            /*  RI Watch Dog Timer Count */
#define BITM_EMAC_DMA1_RXIWDOG_RIWT          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  RI Watch Dog Timer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHSFCS                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHSFCS_RSN            16            /*  Reference Slot Number */
#define BITP_EMAC_DMA1_CHSFCS_ASC             1            /*  Advance Slot Check */
#define BITP_EMAC_DMA1_CHSFCS_ESC             0            /*  Enable Slot Comparison */
#define BITM_EMAC_DMA1_CHSFCS_RSN            (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Reference Slot Number */
#define BITM_EMAC_DMA1_CHSFCS_ASC            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Advance Slot Check */
#define BITM_EMAC_DMA1_CHSFCS_ESC            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Slot Comparison */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_TXDSC_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_TXDSC_CUR_ADDR         0            /*  Host Transmit Descriptor Address */
#define BITM_EMAC_DMA1_TXDSC_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Transmit Descriptor Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_RXDSC_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_RXDSC_CUR_ADDR         0            /*  Host Receive Current Descriptor Address */
#define BITM_EMAC_DMA1_RXDSC_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Receive Current Descriptor Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_TXBUF_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_TXBUF_CUR_ADDR         0            /*  Host Transmit Current Buffer Address */
#define BITM_EMAC_DMA1_TXBUF_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Transmit Current Buffer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_RXBUF_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_RXBUF_CUR_ADDR         0            /*  Host Receive Current Buffer Address */
#define BITM_EMAC_DMA1_RXBUF_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Receive Current Buffer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHCBSCTL                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHCBSCTL_ABPSSIE      17            /*  Average Bits Per Slot Interrupt Enable */
#define BITP_EMAC_DMA1_CHCBSCTL_SLC           4            /*  Slot Count */
#define BITP_EMAC_DMA1_CHCBSCTL_CC            1            /*  Credit Control */
#define BITP_EMAC_DMA1_CHCBSCTL_CBSD          0            /*  Credit based shaper disable */
#define BITM_EMAC_DMA1_CHCBSCTL_ABPSSIE      (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Average Bits Per Slot Interrupt Enable */
#define BITM_EMAC_DMA1_CHCBSCTL_SLC          (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  Slot Count */
#define BITM_EMAC_DMA1_CHCBSCTL_CC           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Credit Control */
#define BITM_EMAC_DMA1_CHCBSCTL_CBSD         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Credit based shaper disable */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHCBSSTAT                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHCBSSTAT_ABSU        17            /*  ABS Updated */
#define BITP_EMAC_DMA1_CHCBSSTAT_ABS          0            /*  Average Bits Per Slot */
#define BITM_EMAC_DMA1_CHCBSSTAT_ABSU        (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  ABS Updated */
#define BITM_EMAC_DMA1_CHCBSSTAT_ABS         (_ADI_MSK_3(0x0001FFFF,0x0001FFFFUL, uint32_t  ))    /*  Average Bits Per Slot */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHISC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHISC_ISC              0            /*  Idle Slope Credit */
#define BITM_EMAC_DMA1_CHISC_ISC             (_ADI_MSK_3(0x00003FFF,0x00003FFFUL, uint32_t  ))    /*  Idle Slope Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHSSC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHSSC_SSC              0            /*  Send Slope Credit */
#define BITM_EMAC_DMA1_CHSSC_SSC             (_ADI_MSK_3(0x00003FFF,0x00003FFFUL, uint32_t  ))    /*  Send Slope Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHHIC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHHIC_HC               0            /*  High Credit */
#define BITM_EMAC_DMA1_CHHIC_HC              (_ADI_MSK_3(0x1FFFFFFF,0x1FFFFFFFUL, uint32_t  ))    /*  High Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA1_CHLOC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA1_CHLOC_LC               0            /*  Low Credit */
#define BITM_EMAC_DMA1_CHLOC_LC              (_ADI_MSK_3(0x1FFFFFFF,0x1FFFFFFFUL, uint32_t  ))    /*  Low Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_BUSMODE                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_BUSMODE_AAL           25            /*  Address Aligned Bursts */
#define BITP_EMAC_DMA2_BUSMODE_PBL8          24            /*  PBL * 8 */
#define BITP_EMAC_DMA2_BUSMODE_USP           23            /*  Use Separate PBL */
#define BITP_EMAC_DMA2_BUSMODE_RPBL          17            /*  Receive Programmable Burst Length */
#define BITP_EMAC_DMA2_BUSMODE_FB            16            /*  Fixed Burst */
#define BITP_EMAC_DMA2_BUSMODE_PBL            8            /*  Programmable Burst Length */
#define BITP_EMAC_DMA2_BUSMODE_ATDS           7            /*  Alternate Descriptor Size */
#define BITP_EMAC_DMA2_BUSMODE_DSL            2            /*  Descriptor Skip Length */
#define BITP_EMAC_DMA2_BUSMODE_SWR            0            /*  Software Reset */
#define BITM_EMAC_DMA2_BUSMODE_AAL           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Address Aligned Bursts */
#define BITM_EMAC_DMA2_BUSMODE_PBL8          (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  PBL * 8 */
#define BITM_EMAC_DMA2_BUSMODE_USP           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Use Separate PBL */
#define BITM_EMAC_DMA2_BUSMODE_RPBL          (_ADI_MSK_3(0x007E0000,0x007E0000UL, uint32_t  ))    /*  Receive Programmable Burst Length */
#define BITM_EMAC_DMA2_BUSMODE_FB            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Fixed Burst */
#define BITM_EMAC_DMA2_BUSMODE_PBL           (_ADI_MSK_3(0x00003F00,0x00003F00UL, uint32_t  ))    /*  Programmable Burst Length */
#define BITM_EMAC_DMA2_BUSMODE_ATDS          (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Alternate Descriptor Size */
#define BITM_EMAC_DMA2_BUSMODE_DSL           (_ADI_MSK_3(0x0000007C,0x0000007CUL, uint32_t  ))    /*  Descriptor Skip Length */
#define BITM_EMAC_DMA2_BUSMODE_SWR           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Software Reset */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_TXPOLL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_TXPOLL_START           0            /*  Transmit Poll Demand */
#define BITM_EMAC_DMA2_TXPOLL_START          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Transmit Poll Demand */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_RXPOLL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_RXPOLL_START           0            /*  Receive Poll Demand */
#define BITM_EMAC_DMA2_RXPOLL_START          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Receive Poll Demand */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_RXDSC_ADDR                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_RXDSC_ADDR_VALUE       0            /*  Start of Receive List */
#define BITM_EMAC_DMA2_RXDSC_ADDR_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Start of Receive List */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_TXDSC_ADDR                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_TXDSC_ADDR_VALUE       0            /*  Start of Transmit List */
#define BITM_EMAC_DMA2_TXDSC_ADDR_VALUE      (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Start of Transmit List */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_STAT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_STAT_GTMSI            30            /*  MAC TMS Interrupt */
#define BITP_EMAC_DMA2_STAT_TTI              29            /*  Time Stamp Trigger Interrupt */
#define BITP_EMAC_DMA2_STAT_MCI              27            /*  MAC MMC Interrupt */
#define BITP_EMAC_DMA2_STAT_GLI              26            /*  Line Interface Interrupt */
#define BITP_EMAC_DMA2_STAT_EB               23            /*  Error Bits */
#define BITP_EMAC_DMA2_STAT_TS               20            /*  Tx Process State */
#define BITP_EMAC_DMA2_STAT_RS               17            /*  Rx Process State */
#define BITP_EMAC_DMA2_STAT_NIS              16            /*  Normal Interrupt Summary */
#define BITP_EMAC_DMA2_STAT_AIS              15            /*  Abnormal Interrupt Summary */
#define BITP_EMAC_DMA2_STAT_ERI              14            /*  Early Receive Interrupt */
#define BITP_EMAC_DMA2_STAT_FBI              13            /*  Fatal Bus Error Interrupt */
#define BITP_EMAC_DMA2_STAT_ETI              10            /*  Early Transmit Interrupt */
#define BITP_EMAC_DMA2_STAT_RWT               9            /*  Receive WatchDog Timeout */
#define BITP_EMAC_DMA2_STAT_RPS               8            /*  Receive Process Stopped */
#define BITP_EMAC_DMA2_STAT_RU                7            /*  Receive Buffer Unavailable */
#define BITP_EMAC_DMA2_STAT_RI                6            /*  Receive Interrupt */
#define BITP_EMAC_DMA2_STAT_UNF               5            /*  Transmit Buffer Underflow */
#define BITP_EMAC_DMA2_STAT_OVF               4            /*  Receive Buffer Overflow */
#define BITP_EMAC_DMA2_STAT_TJT               3            /*  Transmit Jabber Timeout */
#define BITP_EMAC_DMA2_STAT_TU                2            /*  Transmit Buffer Unavailable */
#define BITP_EMAC_DMA2_STAT_TPS               1            /*  Transmit Process Stopped */
#define BITP_EMAC_DMA2_STAT_TI                0            /*  Transmit Interrupt */
#define BITM_EMAC_DMA2_STAT_GTMSI            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  MAC TMS Interrupt */
#define BITM_EMAC_DMA2_STAT_TTI              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Time Stamp Trigger Interrupt */
#define BITM_EMAC_DMA2_STAT_MCI              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  MAC MMC Interrupt */
#define BITM_EMAC_DMA2_STAT_GLI              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Line Interface Interrupt */
#define BITM_EMAC_DMA2_STAT_EB               (_ADI_MSK_3(0x03800000,0x03800000UL, uint32_t  ))    /*  Error Bits */
#define BITM_EMAC_DMA2_STAT_TS               (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  Tx Process State */
#define BITM_EMAC_DMA2_STAT_RS               (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  Rx Process State */
#define BITM_EMAC_DMA2_STAT_NIS              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Normal Interrupt Summary */
#define BITM_EMAC_DMA2_STAT_AIS              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Abnormal Interrupt Summary */
#define BITM_EMAC_DMA2_STAT_ERI              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Early Receive Interrupt */
#define BITM_EMAC_DMA2_STAT_FBI              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Fatal Bus Error Interrupt */
#define BITM_EMAC_DMA2_STAT_ETI              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Early Transmit Interrupt */
#define BITM_EMAC_DMA2_STAT_RWT              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive WatchDog Timeout */
#define BITM_EMAC_DMA2_STAT_RPS              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Process Stopped */
#define BITM_EMAC_DMA2_STAT_RU               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Receive Buffer Unavailable */
#define BITM_EMAC_DMA2_STAT_RI               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Receive Interrupt */
#define BITM_EMAC_DMA2_STAT_UNF              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Transmit Buffer Underflow */
#define BITM_EMAC_DMA2_STAT_OVF              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Buffer Overflow */
#define BITM_EMAC_DMA2_STAT_TJT              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Jabber Timeout */
#define BITM_EMAC_DMA2_STAT_TU               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Buffer Unavailable */
#define BITM_EMAC_DMA2_STAT_TPS              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Process Stopped */
#define BITM_EMAC_DMA2_STAT_TI               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Interrupt */
#define ENUM_EMAC_DMA2_STAT_TS_STOPPED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TS: Stopped; Reset or Stop Tx Command Issued */
#define ENUM_EMAC_DMA2_STAT_TS_R_FTD         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  TS: Running; Fetching Tx Transfer Descriptor */
#define ENUM_EMAC_DMA2_STAT_TS_R_WSTAT       (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  TS: Running; Waiting for Status */
#define ENUM_EMAC_DMA2_STAT_TS_R_TXHMBUF     (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  TS: Reading Data from Host Memory Buffer and Queuing It to Tx Buffer */
#define ENUM_EMAC_DMA2_STAT_TS_WR_TSTMP      (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  TS: TIME_STAMP Write State */
#define ENUM_EMAC_DMA2_STAT_TS_SUSPENDED     (_ADI_MSK_3(0x00600000,0x00600000UL, uint32_t  ))    /*  TS: Suspended; Tx Descriptor Unavailable or Tx Buffer Underflow */
#define ENUM_EMAC_DMA2_STAT_TS_R_CLSTD       (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  TS: Closing Tx Descriptor */
#define ENUM_EMAC_DMA2_STAT_RS_STOPPED       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RS: Stopped: Reset or Stop Rx Command Issued. */
#define ENUM_EMAC_DMA2_STAT_RS_R_FRD         (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  RS: Running: Fetching Rx Transfer Descriptor. */
#define ENUM_EMAC_DMA2_STAT_RS_R_WTRX        (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))    /*  RS: Running: Waiting for Rx Packet */
#define ENUM_EMAC_DMA2_STAT_RS_SUSPENDED     (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  RS: Suspended: Rx Descriptor Unavailable */
#define ENUM_EMAC_DMA2_STAT_RS_R_CLSRD       (_ADI_MSK_3(0x000A0000,0x000A0000UL, uint32_t  ))    /*  RS: Running: Closing Rx Descriptor */
#define ENUM_EMAC_DMA2_STAT_RS_WR_TSTMP      (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))    /*  RS: TIME_STAMP Write State */
#define ENUM_EMAC_DMA2_STAT_RS_R_RXWRHM      (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  RS: Running: Transferring Rx Packet Data from Rx Buffer to Host Memory */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_OPMODE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_OPMODE_DT             26            /*  Disable Dropping TCP/IP Errors */
#define BITP_EMAC_DMA2_OPMODE_RSF            25            /*  Receive Store and Forward */
#define BITP_EMAC_DMA2_OPMODE_DFF            24            /*  Disable Flushing of Received Frames */
#define BITP_EMAC_DMA2_OPMODE_TSF            21            /*  Transmit Store and Forward */
#define BITP_EMAC_DMA2_OPMODE_FTF            20            /*  Flush Transmit FIFO */
#define BITP_EMAC_DMA2_OPMODE_TTC            14            /*  Transmit Threshold Control */
#define BITP_EMAC_DMA2_OPMODE_ST             13            /*  Start/Stop Transmission */
#define BITP_EMAC_DMA2_OPMODE_FEF             7            /*  Forward Error Frames */
#define BITP_EMAC_DMA2_OPMODE_FUF             6            /*  Forward Undersized good Frames */
#define BITP_EMAC_DMA2_OPMODE_DGF             5            /*  Drop Giant Frames */
#define BITP_EMAC_DMA2_OPMODE_RTC             3            /*  Receive Threshold Control */
#define BITP_EMAC_DMA2_OPMODE_OSF             2            /*  Operate on Second Frame */
#define BITP_EMAC_DMA2_OPMODE_SR              1            /*  Start/Stop Receive */
#define BITM_EMAC_DMA2_OPMODE_DT             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Disable Dropping TCP/IP Errors */
#define BITM_EMAC_DMA2_OPMODE_RSF            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Receive Store and Forward */
#define BITM_EMAC_DMA2_OPMODE_DFF            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Disable Flushing of Received Frames */
#define BITM_EMAC_DMA2_OPMODE_TSF            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Transmit Store and Forward */
#define BITM_EMAC_DMA2_OPMODE_FTF            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Flush Transmit FIFO */
#define BITM_EMAC_DMA2_OPMODE_TTC            (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Transmit Threshold Control */
#define BITM_EMAC_DMA2_OPMODE_ST             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Start/Stop Transmission */
#define BITM_EMAC_DMA2_OPMODE_FEF            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Forward Error Frames */
#define BITM_EMAC_DMA2_OPMODE_FUF            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Forward Undersized good Frames */
#define BITM_EMAC_DMA2_OPMODE_DGF            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Drop Giant Frames */
#define BITM_EMAC_DMA2_OPMODE_RTC            (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  Receive Threshold Control */
#define BITM_EMAC_DMA2_OPMODE_OSF            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Operate on Second Frame */
#define BITM_EMAC_DMA2_OPMODE_SR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Start/Stop Receive */
#define ENUM_EMAC_DMA2_OPMODE_TTC_64         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TTC: 64 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_128        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  TTC: 128 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_192        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  TTC: 192 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_256        (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  TTC: 256 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_40         (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  TTC: 40 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_32         (_ADI_MSK_3(0x00014000,0x00014000UL, uint32_t  ))    /*  TTC: 32 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_24         (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))    /*  TTC: 24 */
#define ENUM_EMAC_DMA2_OPMODE_TTC_16         (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  TTC: 16 */
#define ENUM_EMAC_DMA2_OPMODE_RTC_64         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RTC: 64 */
#define ENUM_EMAC_DMA2_OPMODE_RTC_32         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  RTC: 32 */
#define ENUM_EMAC_DMA2_OPMODE_RTC_96         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  RTC: 96 */
#define ENUM_EMAC_DMA2_OPMODE_RTC_128        (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  RTC: 128 */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_IEN                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_IEN_NIE               16            /*  Normal Interrupt Summary Enable */
#define BITP_EMAC_DMA2_IEN_AIE               15            /*  Abnormal Interrupt Summary Enable */
#define BITP_EMAC_DMA2_IEN_ERE               14            /*  Early Receive Interrupt Enable */
#define BITP_EMAC_DMA2_IEN_FBE               13            /*  Fatal Bus Error Enable */
#define BITP_EMAC_DMA2_IEN_ETE               10            /*  Early Transmit Interrupt Enable */
#define BITP_EMAC_DMA2_IEN_RWE                9            /*  Receive Watchdog Timeout Enable */
#define BITP_EMAC_DMA2_IEN_RSE                8            /*  Receive Stopped Enable */
#define BITP_EMAC_DMA2_IEN_RUE                7            /*  Receive Buffer Unavailable Enable */
#define BITP_EMAC_DMA2_IEN_RIE                6            /*  Receive Interrupt Enable */
#define BITP_EMAC_DMA2_IEN_UNE                5            /*  Underflow Interrupt Enable */
#define BITP_EMAC_DMA2_IEN_OVE                4            /*  Overflow Interrupt Enable */
#define BITP_EMAC_DMA2_IEN_TJE                3            /*  Transmit Jabber Timeout Enable */
#define BITP_EMAC_DMA2_IEN_TUE                2            /*  Transmit Buffer Unavailable Enable */
#define BITP_EMAC_DMA2_IEN_TSE                1            /*  Transmit Stopped Enable */
#define BITP_EMAC_DMA2_IEN_TIE                0            /*  Transmit Interrupt Enable */
#define BITM_EMAC_DMA2_IEN_NIE               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Normal Interrupt Summary Enable */
#define BITM_EMAC_DMA2_IEN_AIE               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Abnormal Interrupt Summary Enable */
#define BITM_EMAC_DMA2_IEN_ERE               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Early Receive Interrupt Enable */
#define BITM_EMAC_DMA2_IEN_FBE               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Fatal Bus Error Enable */
#define BITM_EMAC_DMA2_IEN_ETE               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Early Transmit Interrupt Enable */
#define BITM_EMAC_DMA2_IEN_RWE               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Receive Watchdog Timeout Enable */
#define BITM_EMAC_DMA2_IEN_RSE               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Receive Stopped Enable */
#define BITM_EMAC_DMA2_IEN_RUE               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Receive Buffer Unavailable Enable */
#define BITM_EMAC_DMA2_IEN_RIE               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Receive Interrupt Enable */
#define BITM_EMAC_DMA2_IEN_UNE               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Underflow Interrupt Enable */
#define BITM_EMAC_DMA2_IEN_OVE               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Overflow Interrupt Enable */
#define BITM_EMAC_DMA2_IEN_TJE               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Transmit Jabber Timeout Enable */
#define BITM_EMAC_DMA2_IEN_TUE               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Transmit Buffer Unavailable Enable */
#define BITM_EMAC_DMA2_IEN_TSE               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transmit Stopped Enable */
#define BITM_EMAC_DMA2_IEN_TIE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmit Interrupt Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_MISS_FRM                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_MISS_FRM_OVFFIFO      28            /*  Overflow bit for FIFO Overflow Counter */
#define BITP_EMAC_DMA2_MISS_FRM_MISSFROV     17            /*  Missed Frames Buffer Overflow */
#define BITP_EMAC_DMA2_MISS_FRM_OVFMISS      16            /*  Overflow bit for Missed Frame Counter */
#define BITP_EMAC_DMA2_MISS_FRM_MISSFRUN      0            /*  Missed Frames Unavailable Buffer */
#define BITM_EMAC_DMA2_MISS_FRM_OVFFIFO      (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Overflow bit for FIFO Overflow Counter */
#define BITM_EMAC_DMA2_MISS_FRM_MISSFROV     (_ADI_MSK_3(0x0FFE0000,0x0FFE0000UL, uint32_t  ))    /*  Missed Frames Buffer Overflow */
#define BITM_EMAC_DMA2_MISS_FRM_OVFMISS      (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Overflow bit for Missed Frame Counter */
#define BITM_EMAC_DMA2_MISS_FRM_MISSFRUN     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Missed Frames Unavailable Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_RXIWDOG                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_RXIWDOG_RIWT           0            /*  RI WatchDog Timer Count */
#define BITM_EMAC_DMA2_RXIWDOG_RIWT          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  RI WatchDog Timer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHSFCS                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHSFCS_RSN            16            /*  Reference Slot number */
#define BITP_EMAC_DMA2_CHSFCS_ASC             1            /*  Advance Slot Check */
#define BITP_EMAC_DMA2_CHSFCS_ESC             0            /*  Enable Slot Comparison */
#define BITM_EMAC_DMA2_CHSFCS_RSN            (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Reference Slot number */
#define BITM_EMAC_DMA2_CHSFCS_ASC            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Advance Slot Check */
#define BITM_EMAC_DMA2_CHSFCS_ESC            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Slot Comparison */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_TXDSC_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_TXDSC_CUR_ADDR         0            /*  Host Transmit Descriptor Address */
#define BITM_EMAC_DMA2_TXDSC_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Transmit Descriptor Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_RXDSC_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_RXDSC_CUR_ADDR         0            /*  Host Receive Current Descriptor Address */
#define BITM_EMAC_DMA2_RXDSC_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Receive Current Descriptor Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_TXBUF_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_TXBUF_CUR_ADDR         0            /*  Host Transmit Current Buffer Address */
#define BITM_EMAC_DMA2_TXBUF_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Transmit Current Buffer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_RXBUF_CUR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_RXBUF_CUR_ADDR         0            /*  Host Receive Current Buffer Address */
#define BITM_EMAC_DMA2_RXBUF_CUR_ADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Host Receive Current Buffer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHCBSCTL                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHCBSCTL_ABPSSIE      17            /*  Average bits per slot Interrupt Enable */
#define BITP_EMAC_DMA2_CHCBSCTL_SLC           4            /*  Slot Count */
#define BITP_EMAC_DMA2_CHCBSCTL_CC            1            /*  Credit Control */
#define BITP_EMAC_DMA2_CHCBSCTL_CBSD          0            /*  Credit Based Shaper Disable */
#define BITM_EMAC_DMA2_CHCBSCTL_ABPSSIE      (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Average bits per slot Interrupt Enable */
#define BITM_EMAC_DMA2_CHCBSCTL_SLC          (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  Slot Count */
#define BITM_EMAC_DMA2_CHCBSCTL_CC           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Credit Control */
#define BITM_EMAC_DMA2_CHCBSCTL_CBSD         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Credit Based Shaper Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHCBSSTAT                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHCBSSTAT_ABSU        17            /*  ABS Updated */
#define BITP_EMAC_DMA2_CHCBSSTAT_ABS          0            /*  Average Bits per Slot */
#define BITM_EMAC_DMA2_CHCBSSTAT_ABSU        (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  ABS Updated */
#define BITM_EMAC_DMA2_CHCBSSTAT_ABS         (_ADI_MSK_3(0x0001FFFF,0x0001FFFFUL, uint32_t  ))    /*  Average Bits per Slot */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHISC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHISC_ISC              0            /*  Idle Slope Credit */
#define BITM_EMAC_DMA2_CHISC_ISC             (_ADI_MSK_3(0x00003FFF,0x00003FFFUL, uint32_t  ))    /*  Idle Slope Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHSSC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHSSC_SSC              0            /*  Send Slope Credit */
#define BITM_EMAC_DMA2_CHSSC_SSC             (_ADI_MSK_3(0x00003FFF,0x00003FFFUL, uint32_t  ))    /*  Send Slope Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHHIC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHHIC_HC               0            /*  High Credit */
#define BITM_EMAC_DMA2_CHHIC_HC              (_ADI_MSK_3(0x1FFFFFFF,0x1FFFFFFFUL, uint32_t  ))    /*  High Credit */

/* -------------------------------------------------------------------------------------------------------------------------
          EMAC_DMA2_CHLOC                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMAC_DMA2_CHLOC_LC               0            /*  Low Credit */
#define BITM_EMAC_DMA2_CHLOC_LC              (_ADI_MSK_3(0x1FFFFFFF,0x1FFFFFFFUL, uint32_t  ))    /*  Low Credit */


/* ============================================================================================================================
        Ethernet MAC
   ============================================================================================================================ */

/* ============================================================================================================================
        EMAC1
   ============================================================================================================================ */
#define REG_EMAC1_MACCFG                     0x31042000            /*  EMAC1 MAC Configuration Register */
#define REG_EMAC1_MACFRMFILT                 0x31042004            /*  EMAC1 MAC Rx Frame Filter Register */
#define REG_EMAC1_HASHTBL_HI                 0x31042008            /*  EMAC1 Hash Table High Register */
#define REG_EMAC1_HASHTBL_LO                 0x3104200C            /*  EMAC1 Hash Table Low Register */
#define REG_EMAC1_SMI_ADDR                   0x31042010            /*  EMAC1 SMI Address Register */
#define REG_EMAC1_SMI_DATA                   0x31042014            /*  EMAC1 SMI Data Register */
#define REG_EMAC1_FLOWCTL                    0x31042018            /*  EMAC1 FLow Control Register */
#define REG_EMAC1_VLANTAG                    0x3104201C            /*  EMAC1 VLAN Tag Register */
#define REG_EMAC1_DBG                        0x31042024            /*  EMAC1 Debug Register */
#define REG_EMAC1_ISTAT                      0x31042038            /*  EMAC1 Interrupt Status Register */
#define REG_EMAC1_IMSK                       0x3104203C            /*  EMAC1 Interrupt Mask Register */
#define REG_EMAC1_ADDR0_HI                   0x31042040            /*  EMAC1 MAC Address 0 High Register */
#define REG_EMAC1_ADDR0_LO                   0x31042044            /*  EMAC1 MAC Address 0 Low Register */
#define REG_EMAC1_ADDR1_HI                   0x31042048            /*  EMAC1 MAC Address 1 High Register */
#define REG_EMAC1_ADDR1_LO                   0x3104204C            /*  EMAC1 MAC Address 1 Low Register */
#define REG_EMAC1_WDOG_TIMOUT                0x310420DC            /*  EMAC1 Watchdog Timeout Register */
#define REG_EMAC1_MMC_CTL                    0x31042100            /*  EMAC1 MMC Control Register */
#define REG_EMAC1_MMC_RXINT                  0x31042104            /*  EMAC1 MMC Rx Interrupt Register */
#define REG_EMAC1_MMC_TXINT                  0x31042108            /*  EMAC1 MMC Tx Interrupt Register */
#define REG_EMAC1_MMC_RXIMSK                 0x3104210C            /*  EMAC1 MMC Rx Interrupt Mask Register */
#define REG_EMAC1_MMC_TXIMSK                 0x31042110            /*  EMAC1 MMC TX Interrupt Mask Register */
#define REG_EMAC1_TXOCTCNT_GB                0x31042114            /*  EMAC1 Tx OCT Count (Good/Bad) Register */
#define REG_EMAC1_TXFRMCNT_GB                0x31042118            /*  EMAC1 Tx Frame Count (Good/Bad) Register */
#define REG_EMAC1_TXBCASTFRM_G               0x3104211C            /*  EMAC1 Tx Broadcast Frames (Good) Register */
#define REG_EMAC1_TXMCASTFRM_G               0x31042120            /*  EMAC1 Tx Multicast Frames (Good) Register */
#define REG_EMAC1_TX64_GB                    0x31042124            /*  EMAC1 Tx 64-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_TX65TO127_GB               0x31042128            /*  EMAC1 Tx 65- to 127-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_TX128TO255_GB              0x3104212C            /*  EMAC1 Tx 128- to 255-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_TX256TO511_GB              0x31042130            /*  EMAC1 Tx 256- to 511-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_TX512TO1023_GB             0x31042134            /*  EMAC1 Tx 512- to 1023-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_TX1024TOMAX_GB             0x31042138            /*  EMAC1 Tx 1024- to Max-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_TXUCASTFRM_GB              0x3104213C            /*  EMAC1 Tx Unicast Frames (Good/Bad) Register */
#define REG_EMAC1_TXMCASTFRM_GB              0x31042140            /*  EMAC1 Tx Multicast Frames (Good/Bad) Register */
#define REG_EMAC1_TXBCASTFRM_GB              0x31042144            /*  EMAC1 Tx Broadcast Frames (Good/Bad) Register */
#define REG_EMAC1_TXUNDR_ERR                 0x31042148            /*  EMAC1 Tx Underflow Error Register */
#define REG_EMAC1_TXSNGCOL_G                 0x3104214C            /*  EMAC1 Tx Single Collision (Good) Register */
#define REG_EMAC1_TXMULTCOL_G                0x31042150            /*  EMAC1 Tx Multiple Collision (Good) Register */
#define REG_EMAC1_TXDEFERRED                 0x31042154            /*  EMAC1 Tx Deferred Register */
#define REG_EMAC1_TXLATECOL                  0x31042158            /*  EMAC1 Tx Late Collision Register */
#define REG_EMAC1_TXEXCESSCOL                0x3104215C            /*  EMAC1 Tx Excess Collision Register */
#define REG_EMAC1_TXCARR_ERR                 0x31042160            /*  EMAC1 Tx Carrier Error Register */
#define REG_EMAC1_TXOCTCNT_G                 0x31042164            /*  EMAC1 Tx Octet Count (Good) Register */
#define REG_EMAC1_TXFRMCNT_G                 0x31042168            /*  EMAC1 Tx Frame Count (Good) Register */
#define REG_EMAC1_TXEXCESSDEF                0x3104216C            /*  EMAC1 Tx Excess Deferral Register */
#define REG_EMAC1_TXPAUSEFRM                 0x31042170            /*  EMAC1 Tx Pause Frame Register */
#define REG_EMAC1_TXVLANFRM_G                0x31042174            /*  EMAC1 Tx VLAN Frames (Good) Register */
#define REG_EMAC1_TXOVRSIZE_G                0x31042178            /*  EMAC1 Number of Tx Frames (Good) greater than maxsize */
#define REG_EMAC1_RXFRMCNT_GB                0x31042180            /*  EMAC1 Rx Frame Count (Good/Bad) Register */
#define REG_EMAC1_RXOCTCNT_GB                0x31042184            /*  EMAC1 Rx Octet Count (Good/Bad) Register */
#define REG_EMAC1_RXOCTCNT_G                 0x31042188            /*  EMAC1 Rx Octet Count (Good) Register */
#define REG_EMAC1_RXBCASTFRM_G               0x3104218C            /*  EMAC1 Rx Broadcast Frames (Good) Register */
#define REG_EMAC1_RXMCASTFRM_G               0x31042190            /*  EMAC1 Rx Multicast Frames (Good) Register */
#define REG_EMAC1_RXCRC_ERR                  0x31042194            /*  EMAC1 Rx CRC Error Register */
#define REG_EMAC1_RXALIGN_ERR                0x31042198            /*  EMAC1 Rx alignment Error Register */
#define REG_EMAC1_RXRUNT_ERR                 0x3104219C            /*  EMAC1 Rx Runt Error Register */
#define REG_EMAC1_RXJAB_ERR                  0x310421A0            /*  EMAC1 Rx Jab Error Register */
#define REG_EMAC1_RXUSIZE_G                  0x310421A4            /*  EMAC1 Rx Undersize (Good) Register */
#define REG_EMAC1_RXOSIZE_G                  0x310421A8            /*  EMAC1 Rx Oversize (Good) Register */
#define REG_EMAC1_RX64_GB                    0x310421AC            /*  EMAC1 Rx 64-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_RX65TO127_GB               0x310421B0            /*  EMAC1 Rx 65- to 127-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_RX128TO255_GB              0x310421B4            /*  EMAC1 Rx 128- to 255-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_RX256TO511_GB              0x310421B8            /*  EMAC1 Rx 256- to 511-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_RX512TO1023_GB             0x310421BC            /*  EMAC1 Rx 512- to 1023-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_RX1024TOMAX_GB             0x310421C0            /*  EMAC1 Rx 1024- to Max-Byte Frames (Good/Bad) Register */
#define REG_EMAC1_RXUCASTFRM_G               0x310421C4            /*  EMAC1 Rx Unicast Frames (Good) Register */
#define REG_EMAC1_RXLEN_ERR                  0x310421C8            /*  EMAC1 Rx Length Error Register */
#define REG_EMAC1_RXOORTYPE                  0x310421CC            /*  EMAC1 Rx Out Of Range Type Register */
#define REG_EMAC1_RXPAUSEFRM                 0x310421D0            /*  EMAC1 Rx Pause Frames Register */
#define REG_EMAC1_RXFIFO_OVF                 0x310421D4            /*  EMAC1 Rx FIFO Overflow Register */
#define REG_EMAC1_RXVLANFRM_GB               0x310421D8            /*  EMAC1 Rx VLAN Frames (Good/Bad) Register */
#define REG_EMAC1_RXWDOG_ERR                 0x310421DC            /*  EMAC1 Rx Watch Dog Error Register */
#define REG_EMAC1_RXRCV_ERR                  0x310421E0            /*  EMAC1 Rx Error Frames Received Register */
#define REG_EMAC1_RXCTLFRM_G                 0x310421E4            /*  EMAC1 Rx Good Control Frames Register */
#define REG_EMAC1_IPC_RXIMSK                 0x31042200            /*  EMAC1 MMC IPC Rx Interrupt Mask Register */
#define REG_EMAC1_IPC_RXINT                  0x31042208            /*  EMAC1 MMC IPC Rx Interrupt Register */
#define REG_EMAC1_RXIPV4_GD_FRM              0x31042210            /*  EMAC1 Rx IPv4 Datagrams (Good) Register */
#define REG_EMAC1_RXIPV4_HDR_ERR_FRM         0x31042214            /*  EMAC1 Rx IPv4 Datagrams Header Errors Register */
#define REG_EMAC1_RXIPV4_NOPAY_FRM           0x31042218            /*  EMAC1 Rx IPv4 Datagrams No Payload Frame Register */
#define REG_EMAC1_RXIPV4_FRAG_FRM            0x3104221C            /*  EMAC1 Rx IPv4 Datagrams Fragmented Frames Register */
#define REG_EMAC1_RXIPV4_UDSBL_FRM           0x31042220            /*  EMAC1 Rx IPv4 UDP Disabled Frames Register */
#define REG_EMAC1_RXIPV6_GD_FRM              0x31042224            /*  EMAC1 Rx IPv6 Datagrams Good Frames Register */
#define REG_EMAC1_RXIPV6_HDR_ERR_FRM         0x31042228            /*  EMAC1 Rx IPv6 Datagrams Header Error Frames Register */
#define REG_EMAC1_RXIPV6_NOPAY_FRM           0x3104222C            /*  EMAC1 Rx IPv6 Datagrams No Payload Frames Register */
#define REG_EMAC1_RXUDP_GD_FRM               0x31042230            /*  EMAC1 Rx UDP Good Frames Register */
#define REG_EMAC1_RXUDP_ERR_FRM              0x31042234            /*  EMAC1 Rx UDP Error Frames Register */
#define REG_EMAC1_RXTCP_GD_FRM               0x31042238            /*  EMAC1 Rx TCP Good Frames Register */
#define REG_EMAC1_RXTCP_ERR_FRM              0x3104223C            /*  EMAC1 Rx TCP Error Frames Register */
#define REG_EMAC1_RXICMP_GD_FRM              0x31042240            /*  EMAC1 Rx ICMP Good Frames Register */
#define REG_EMAC1_RXICMP_ERR_FRM             0x31042244            /*  EMAC1 Rx ICMP Error Frames Register */
#define REG_EMAC1_RXIPV4_GD_OCT              0x31042250            /*  EMAC1 Rx IPv4 Datagrams Good Octets Register */
#define REG_EMAC1_RXIPV4_HDR_ERR_OCT         0x31042254            /*  EMAC1 Rx IPv4 Datagrams Header Errors Register */
#define REG_EMAC1_RXIPV4_NOPAY_OCT           0x31042258            /*  EMAC1 Rx IPv4 Datagrams No Payload Octets Register */
#define REG_EMAC1_RXIPV4_FRAG_OCT            0x3104225C            /*  EMAC1 Rx IPv4 Datagrams Fragmented Octets Register */
#define REG_EMAC1_RXIPV4_UDSBL_OCT           0x31042260            /*  EMAC1 Rx IPv4 UDP Disabled Octets Register */
#define REG_EMAC1_RXIPV6_GD_OCT              0x31042264            /*  EMAC1 Rx IPv6 Good Octets Register */
#define REG_EMAC1_RXIPV6_HDR_ERR_OCT         0x31042268            /*  EMAC1 Rx IPv6 Header Errors Register */
#define REG_EMAC1_RXIPV6_NOPAY_OCT           0x3104226C            /*  EMAC1 Rx IPv6 No Payload Octets Register */
#define REG_EMAC1_RXUDP_GD_OCT               0x31042270            /*  EMAC1 Rx UDP Good Octets Register */
#define REG_EMAC1_RXUDP_ERR_OCT              0x31042274            /*  EMAC1 Rx UDP Error Octets Register */
#define REG_EMAC1_RXTCP_GD_OCT               0x31042278            /*  EMAC1 Rx TCP Good Octets Register */
#define REG_EMAC1_RXTCP_ERR_OCT              0x3104227C            /*  EMAC1 Rx TCP Error Octets Register */
#define REG_EMAC1_RXICMP_GD_OCT              0x31042280            /*  EMAC1 Rx ICMP Good Octets Register */
#define REG_EMAC1_RXICMP_ERR_OCT             0x31042284            /*  EMAC1 Rx ICMP Error Octets Register */
#define REG_EMAC1_L3L4_CTL                   0x31042400            /*  EMAC1 Layer3 and Layer4 Control Register */
#define REG_EMAC1_L4_ADDR                    0x31042404            /*  EMAC1 Layer 4 Address Register */
#define REG_EMAC1_L3_ADDR0                   0x31042410            /*  EMAC1 Layer 3 Address0 Register */
#define REG_EMAC1_L3_ADDR1                   0x31042414            /*  EMAC1 Layer 3 Address1 Register */
#define REG_EMAC1_L3_ADDR2                   0x31042418            /*  EMAC1 Layer 3 Address2 Register */
#define REG_EMAC1_L3_ADDR3                   0x3104241C            /*  EMAC1 Layer 3 Address3 Register */
#define REG_EMAC1_VLAN_INCL                  0x31042584            /*  EMAC1 VLAN Tag Inclusion or Replacement Register */
#define REG_EMAC1_VLAN_HSHTBL                0x31042588            /*  EMAC1 VLAN Hash Table Register */
#define REG_EMAC1_TM_PPS0INTVL               0x31042760            /*  EMAC1 Time Stamp PPS Interval Register */
#define REG_EMAC1_TM_PPS0WIDTH               0x31042764            /*  EMAC1 PPS Width Register */
#define REG_EMAC1_DMA0_BUSMODE               0x31043000            /*  EMAC1 DMA Bus Mode Register */
#define REG_EMAC1_DMA0_TXPOLL                0x31043004            /*  EMAC1 DMA Tx Poll Demand Register */
#define REG_EMAC1_DMA0_RXPOLL                0x31043008            /*  EMAC1 DMA Rx Poll Demand register */
#define REG_EMAC1_DMA0_RXDSC_ADDR            0x3104300C            /*  EMAC1 DMA Rx Descriptor List Address Register */
#define REG_EMAC1_DMA0_TXDSC_ADDR            0x31043010            /*  EMAC1 DMA Tx Descriptor List Address Register */
#define REG_EMAC1_DMA0_STAT                  0x31043014            /*  EMAC1 DMA Status Register */
#define REG_EMAC1_DMA0_OPMODE                0x31043018            /*  EMAC1 DMA Operation Mode Register */
#define REG_EMAC1_DMA0_IEN                   0x3104301C            /*  EMAC1 DMA Interrupt Enable Register */
#define REG_EMAC1_DMA0_MISS_FRM              0x31043020            /*  EMAC1 DMA Missed Frame Register */
#define REG_EMAC1_DMA0_RXIWDOG               0x31043024            /*  EMAC1 DMA Rx Interrupt Watch Dog Register */
#define REG_EMAC1_DMA0_BMMODE                0x31043028            /*  EMAC1 DMA SCB Bus Mode Register */
#define REG_EMAC1_DMA0_BMSTAT                0x3104302C            /*  EMAC1 DMA SCB Status Register */
#define REG_EMAC1_DMA0_TXDSC_CUR             0x31043048            /*  EMAC1 DMA Tx Descriptor Current Register */
#define REG_EMAC1_DMA0_RXDSC_CUR             0x3104304C            /*  EMAC1 DMA Rx Descriptor Current Register */
#define REG_EMAC1_DMA0_TXBUF_CUR             0x31043050            /*  EMAC1 DMA Tx Buffer Current Register */
#define REG_EMAC1_DMA0_RXBUF_CUR             0x31043054            /*  EMAC1 DMA Rx Buffer Current Register */

/* ============================================================================================================================
        EMAC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Dynamic Memory Controller
   ============================================================================================================================ */

/* ============================================================================================================================
        DMC0
   ============================================================================================================================ */
#define REG_DMC0_CTL                         0x31070004            /*  DMC0 Control Register */
#define REG_DMC0_STAT                        0x31070008            /*  DMC0 Status Register */
#define REG_DMC0_EFFCTL                      0x3107000C            /*  DMC0 Efficiency Control Register */
#define REG_DMC0_PRIO                        0x31070010            /*  DMC0 Priority ID Register 1 */
#define REG_DMC0_PRIOMSK                     0x31070014            /*  DMC0 Priority ID Mask Register 1 */
#define REG_DMC0_PRIO2                       0x31070018            /*  DMC0 Priority ID Register 2 */
#define REG_DMC0_PRIOMSK2                    0x3107001C            /*  DMC0 Priority ID Mask Register 2 */
#define REG_DMC0_CFG                         0x31070040            /*  DMC0 Configuration Register */
#define REG_DMC0_TR0                         0x31070044            /*  DMC0 Timing 0 Register */
#define REG_DMC0_TR1                         0x31070048            /*  DMC0 Timing 1 Register */
#define REG_DMC0_TR2                         0x3107004C            /*  DMC0 Timing 2 Register */
#define REG_DMC0_MSK                         0x3107005C            /*  DMC0 Mask (Mode Register Shadow) Register */
#define REG_DMC0_MR                          0x31070060            /*  DMC0 Shadow MR0 Register (DDR3) */
#define REG_DMC0_MR1                         0x31070064            /*  DMC0 Shadow MR1 Register (DDR3) */
#define REG_DMC0_MR2                         0x31070068            /*  DMC0 Shadow MR2 Register (DDR3) */
#define REG_DMC0_EMR3                        0x3107006C            /*  DMC0 Shadow EMR3 Register */
#define REG_DMC0_DLLCTL                      0x31070080            /*  DMC0 DLL Control Register */
#define REG_DMC0_DT_CALIB_ADDR               0x31070090            /*  DMC0 Data Calibration Address Register */
#define REG_DMC0_DT_DATA_CALIB_DATA0         0x31070094            /*  DMC0 Data Calibration Data 0 Register */
#define REG_DMC0_DT_DATA_CALIB_DATA1         0x31070098            /*  DMC0 Data Calibration Data 1 Register */
#define REG_DMC0_RDDATABUFID1                0x31070100            /*  DMC0 DMC Read Data Buffer ID Register 1 */
#define REG_DMC0_RDDATABUFMSK1               0x31070104            /*  DMC0 DMC Read Data Buffer Mask Register 1 */
#define REG_DMC0_RDDATABUFID2                0x31070108            /*  DMC0 DMC Read Data Buffer ID Register 2 */
#define REG_DMC0_RDDATABUFMSK2               0x3107010C            /*  DMC0 DMC Read Data Buffer Mask Register 2 */

/* ============================================================================================================================
        DMC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          DMC_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_CTL_AL_EN                   27            /*  AL_EN */
#define BITP_DMC_CTL_RL_DQS                  26            /*  RL_DQS */
#define BITP_DMC_CTL_ZQCL                    25            /*  ZQ Calibration Long */
#define BITP_DMC_CTL_ZQCS                    24            /*  ZQ Calibration Short */
#define BITP_DMC_CTL_DLLCAL                  13            /*  DLL Calibration Start */
#define BITP_DMC_CTL_PPREF                   12            /*  Postpone Refresh */
#define BITP_DMC_CTL_RDTOWR                   9            /*  Read-to-Write Cycle */
#define BITP_DMC_CTL_ADDRMODE                 8            /*  Addressing (Page/Bank) Mode */
#define BITP_DMC_CTL_RESET                    7            /*  Reset SDRAM */
#define BITP_DMC_CTL_PREC                     6            /*  Precharge */
#define BITP_DMC_CTL_PDREQ                    4            /*  Power Down Request */
#define BITP_DMC_CTL_SRREQ                    3            /*  Self-Refresh Request */
#define BITP_DMC_CTL_INIT                     2            /*  Initialize DRAM Start */
#define BITP_DMC_CTL_DDR3EN                   0            /*  DDR3 Mode */
#define BITM_DMC_CTL_AL_EN                   (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  AL_EN */
#define BITM_DMC_CTL_RL_DQS                  (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  RL_DQS */
#define BITM_DMC_CTL_ZQCL                    (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  ZQ Calibration Long */
#define BITM_DMC_CTL_ZQCS                    (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  ZQ Calibration Short */
#define BITM_DMC_CTL_DLLCAL                  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  DLL Calibration Start */
#define BITM_DMC_CTL_PPREF                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Postpone Refresh */
#define BITM_DMC_CTL_RDTOWR                  (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  Read-to-Write Cycle */
#define BITM_DMC_CTL_ADDRMODE                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Addressing (Page/Bank) Mode */
#define BITM_DMC_CTL_RESET                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Reset SDRAM */
#define BITM_DMC_CTL_PREC                    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Precharge */
#define BITM_DMC_CTL_PDREQ                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Power Down Request */
#define BITM_DMC_CTL_SRREQ                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Self-Refresh Request */
#define BITM_DMC_CTL_INIT                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Initialize DRAM Start */
#define BITM_DMC_CTL_DDR3EN                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  DDR3 Mode */
#define ENUM_DMC_CTL_DISGT667MHZ             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  AL_EN: Disables greater than 667MHz operation */
#define ENUM_DMC_CTL_ENGT667MHZ              (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  AL_EN: Enables greater than 667MHz operation */
#define ENUM_DMC_CTL_RDTOWR0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RDTOWR: 1 Cycle Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR1                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  RDTOWR: 2 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR2                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  RDTOWR: 3 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR3                 (_ADI_MSK_3(0x00000600,0x00000600UL, uint32_t  ))    /*  RDTOWR: 4 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR4                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  RDTOWR: 5 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR5                 (_ADI_MSK_3(0x00000A00,0x00000A00UL, uint32_t  ))    /*  RDTOWR: 6 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR6                 (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))    /*  RDTOWR: 7 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_RDTOWR7                 (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  RDTOWR: 8 Cycles Added from JEDEC Spec Value */
#define ENUM_DMC_CTL_DDR3MODE                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  DDR3EN: Enable DDR3 mode */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_STAT_ZQCLDONE               25            /*  ZQ Calibration Long Done */
#define BITP_DMC_STAT_ZQCSDONE               24            /*  ZQ Calibration Short Done */
#define BITP_DMC_STAT_PHYRDPHASE             20            /*  PHY Read Phase */
#define BITP_DMC_STAT_PENDREF                16            /*  Pending Refresh */
#define BITP_DMC_STAT_DLLCALDONE             13            /*  DLL Calibration Done */
#define BITP_DMC_STAT_RESETDONE               7            /*  Reset Done */
#define BITP_DMC_STAT_PDACK                   4            /*  Power-Down Acknowledge */
#define BITP_DMC_STAT_SRACK                   3            /*  Self-Refresh Acknowledge */
#define BITP_DMC_STAT_INITDONE                2            /*  Initialization Done */
#define BITP_DMC_STAT_IDLE                    0            /*  Idle State */
#define BITM_DMC_STAT_ZQCLDONE               (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  ZQ Calibration Long Done */
#define BITM_DMC_STAT_ZQCSDONE               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  ZQ Calibration Short Done */
#define BITM_DMC_STAT_PHYRDPHASE             (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  PHY Read Phase */
#define BITM_DMC_STAT_PENDREF                (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Pending Refresh */
#define BITM_DMC_STAT_DLLCALDONE             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  DLL Calibration Done */
#define BITM_DMC_STAT_RESETDONE              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Reset Done */
#define BITM_DMC_STAT_PDACK                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Power-Down Acknowledge */
#define BITM_DMC_STAT_SRACK                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Self-Refresh Acknowledge */
#define BITM_DMC_STAT_INITDONE               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Initialization Done */
#define BITM_DMC_STAT_IDLE                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Idle State */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_EFFCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_EFFCTL_IDLECYC              20            /*  Idle Cycle */
#define BITP_DMC_EFFCTL_NUMREF               16            /*  Number of Refresh Commands */
#define BITP_DMC_EFFCTL_PRECBANK7            15            /*  Precharge Bank 7 */
#define BITP_DMC_EFFCTL_PRECBANK6            14            /*  Precharge Bank 6 */
#define BITP_DMC_EFFCTL_PRECBANK5            13            /*  Precharge Bank 5 */
#define BITP_DMC_EFFCTL_PRECBANK4            12            /*  Precharge Bank 4 */
#define BITP_DMC_EFFCTL_PRECBANK3            11            /*  Precharge Bank 3 */
#define BITP_DMC_EFFCTL_PRECBANK2            10            /*  Precharge Bank 2 */
#define BITP_DMC_EFFCTL_PRECBANK1             9            /*  Precharge Bank 1 */
#define BITP_DMC_EFFCTL_PRECBANK0             8            /*  Precharge Bank 0 */
#define BITM_DMC_EFFCTL_IDLECYC              (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  Idle Cycle */
#define BITM_DMC_EFFCTL_NUMREF               (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Number of Refresh Commands */
#define BITM_DMC_EFFCTL_PRECBANK7            (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Precharge Bank 7 */
#define BITM_DMC_EFFCTL_PRECBANK6            (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Precharge Bank 6 */
#define BITM_DMC_EFFCTL_PRECBANK5            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Precharge Bank 5 */
#define BITM_DMC_EFFCTL_PRECBANK4            (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Precharge Bank 4 */
#define BITM_DMC_EFFCTL_PRECBANK3            (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Precharge Bank 3 */
#define BITM_DMC_EFFCTL_PRECBANK2            (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Precharge Bank 2 */
#define BITM_DMC_EFFCTL_PRECBANK1            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Precharge Bank 1 */
#define BITM_DMC_EFFCTL_PRECBANK0            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Precharge Bank 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_PRIO                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_PRIO_ID1                     0            /*  SCB ID1 that Requires Elevated Priority */
#define BITM_DMC_PRIO_ID1                    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SCB ID1 that Requires Elevated Priority */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_PRIOMSK                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_PRIOMSK_ID1MSK               0            /*  Mask for SCB ID1 */
#define BITM_DMC_PRIOMSK_ID1MSK              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mask for SCB ID1 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_PRIO2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_PRIO2_ID2                    0            /*  SCB ID2 that Requires Elevated Priority */
#define BITM_DMC_PRIO2_ID2                   (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SCB ID2 that Requires Elevated Priority */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_PRIOMSK2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_PRIOMSK2_ID2MSK              0            /*  Mask for SCB ID2 */
#define BITM_DMC_PRIOMSK2_ID2MSK             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mask for SCB ID2 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_CFG                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_CFG_EXTBANK                 12            /*  External Banks */
#define BITP_DMC_CFG_SDRSIZE                  8            /*  SDRAM Size */
#define BITP_DMC_CFG_SDRWID                   4            /*  SDRAM Width */
#define BITP_DMC_CFG_IFWID                    0            /*  Interface Width */
#define BITM_DMC_CFG_EXTBANK                 (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  External Banks */
#define BITM_DMC_CFG_SDRSIZE                 (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  SDRAM Size */
#define BITM_DMC_CFG_SDRWID                  (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  SDRAM Width */
#define BITM_DMC_CFG_IFWID                   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Interface Width */
#define ENUM_DMC_CFG_EXTBANK1                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EXTBANK: 1 External Bank */
#define ENUM_DMC_CFG_SDRSIZE512              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  SDRSIZE: 512M Bit SDRAM */
#define ENUM_DMC_CFG_SDRSIZE1G               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SDRSIZE: 1G Bit SDRAM */
#define ENUM_DMC_CFG_SDRSIZE2G               (_ADI_MSK_3(0x00000500,0x00000500UL, uint32_t  ))    /*  SDRSIZE: 2G Bit SDRAM */
#define ENUM_DMC_CFG_SDRSIZE4G               (_ADI_MSK_3(0x00000600,0x00000600UL, uint32_t  ))    /*  SDRSIZE: 4G Bit SDRAM */
#define ENUM_DMC_CFG_SDRSIZE8G               (_ADI_MSK_3(0x00000700,0x00000700UL, uint32_t  ))    /*  SDRSIZE: 8G Bit SDRAM */
#define ENUM_DMC_CFG_SDRWID16                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  SDRWID: 16-Bit Wide SDRAM */
#define ENUM_DMC_CFG_IFWID16                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  IFWID: 16-Bit Wide Interface. */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_TR0                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_TR0_TMRD                    28            /*  Timing Mode Register Delay */
#define BITP_DMC_TR0_TRC                     20            /*  Timing Row Cycle */
#define BITP_DMC_TR0_TRAS                    12            /*  Timing Row Active Time */
#define BITP_DMC_TR0_TRP                      8            /*  Timing RAS Precharge */
#define BITP_DMC_TR0_TWTR                     4            /*  Timing Write to Read */
#define BITP_DMC_TR0_TRCD                     0            /*  Timing RAS to CAS Delay */
#define BITM_DMC_TR0_TMRD                    (_ADI_MSK_3(0xF0000000,0xF0000000UL, uint32_t  ))    /*  Timing Mode Register Delay */
#define BITM_DMC_TR0_TRC                     (_ADI_MSK_3(0x03F00000,0x03F00000UL, uint32_t  ))    /*  Timing Row Cycle */
#define BITM_DMC_TR0_TRAS                    (_ADI_MSK_3(0x0001F000,0x0001F000UL, uint32_t  ))    /*  Timing Row Active Time */
#define BITM_DMC_TR0_TRP                     (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Timing RAS Precharge */
#define BITM_DMC_TR0_TWTR                    (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Timing Write to Read */
#define BITM_DMC_TR0_TRCD                    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Timing RAS to CAS Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_TR1                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_TR1_TRRD                    28            /*  Timing Read-Read Delay */
#define BITP_DMC_TR1_TRFC                    16            /*  Timing Refresh-to-Command */
#define BITP_DMC_TR1_TREF                     0            /*  Timing Refresh Interval */
#define BITM_DMC_TR1_TRRD                    (_ADI_MSK_3(0x70000000,0x70000000UL, uint32_t  ))    /*  Timing Read-Read Delay */
#define BITM_DMC_TR1_TRFC                    (_ADI_MSK_3(0x01FF0000,0x01FF0000UL, uint32_t  ))    /*  Timing Refresh-to-Command */
#define BITM_DMC_TR1_TREF                    (_ADI_MSK_3(0x00003FFF,0x00003FFFUL, uint32_t  ))    /*  Timing Refresh Interval */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_TR2                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_TR2_TCKE                    20            /*  Timing Clock Enable */
#define BITP_DMC_TR2_TXP                     16            /*  Timing Exit Power Down */
#define BITP_DMC_TR2_TRTP                     8            /*  Timing Read-to-Precharge */
#define BITP_DMC_TR2_TFAW5                    5            /*  Extended Timing Four-Active Window Bit 5 */
#define BITP_DMC_TR2_TFAW                     0            /*  Timing Four-Activated-Window */
#define BITM_DMC_TR2_TCKE                    (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  Timing Clock Enable */
#define BITM_DMC_TR2_TXP                     (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Timing Exit Power Down */
#define BITM_DMC_TR2_TRTP                    (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Timing Read-to-Precharge */
#define BITM_DMC_TR2_TFAW5                   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Timing Four-Active Window Bit 5 */
#define BITM_DMC_TR2_TFAW                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Timing Four-Activated-Window */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_MSK                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_MSK_EMR3                    11            /*  Shadow EMR3 Unmask */
#define BITP_DMC_MSK_MR2                     10            /*  Shadow MR2 Unmask */
#define BITP_DMC_MSK_MR1                      9            /*  Shadow MR1 Unmask */
#define BITP_DMC_MSK_MR                       8            /*  Shadow MR Unmask */
#define BITM_DMC_MSK_EMR3                    (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Shadow EMR3 Unmask */
#define BITM_DMC_MSK_MR2                     (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Shadow MR2 Unmask */
#define BITM_DMC_MSK_MR1                     (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Shadow MR1 Unmask */
#define BITM_DMC_MSK_MR                      (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Shadow MR Unmask */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_MR                               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_MR_PD                       12            /*  Active Power Down Mode */
#define BITP_DMC_MR_WRRECOV                   9            /*  Write Recovery */
#define BITP_DMC_MR_DLLRST                    8            /*  DLL Reset */
#define BITP_DMC_MR_CL                        4            /*  CAS Latency */
#define BITP_DMC_MR_CL0                       2            /*  CAS Latency 0 */
#define BITP_DMC_MR_BLEN                      0            /*  Burst Length */
#define BITM_DMC_MR_PD                       (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Active Power Down Mode */
#define BITM_DMC_MR_WRRECOV                  (_ADI_MSK_3(0x00000E00,0x00000E00UL, uint32_t  ))    /*  Write Recovery */
#define BITM_DMC_MR_DLLRST                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  DLL Reset */
#define BITM_DMC_MR_CL                       (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  CAS Latency */
#define BITM_DMC_MR_CL0                      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  CAS Latency 0 */
#define BITM_DMC_MR_BLEN                     (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Burst Length */
#define ENUM_DMC_MR_BLEN8_DDR3               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BLEN: 8-Bit Burst Length - DDR3 only */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_MR1                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_MR1_QOFF                    12            /*  Output Buffer Enable */
#define BITP_DMC_MR1_TDQS                    11            /*  Termination Data Strobe */
#define BITP_DMC_MR1_RTT2                     9            /*  Rtt_nom */
#define BITP_DMC_MR1_WL                       7            /*  Write Leveling Enable. */
#define BITP_DMC_MR1_RTT1                     6            /*  Rtt_nom */
#define BITP_DMC_MR1_DIC1                     5            /*  Output Driver Impedance Control */
#define BITP_DMC_MR1_AL                       3            /*  Additive Latency */
#define BITP_DMC_MR1_RTT0                     2            /*  Rtt_nom */
#define BITP_DMC_MR1_DIC0                     1            /*  Output Driver Impedance control */
#define BITP_DMC_MR1_DLLEN                    0            /*  DLL Enable */
#define BITM_DMC_MR1_QOFF                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Output Buffer Enable */
#define BITM_DMC_MR1_TDQS                    (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Termination Data Strobe */
#define BITM_DMC_MR1_RTT2                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Rtt_nom */
#define BITM_DMC_MR1_WL                      (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Write Leveling Enable. */
#define BITM_DMC_MR1_RTT1                    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Rtt_nom */
#define BITM_DMC_MR1_DIC1                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Output Driver Impedance Control */
#define BITM_DMC_MR1_AL                      (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))    /*  Additive Latency */
#define BITM_DMC_MR1_RTT0                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Rtt_nom */
#define BITM_DMC_MR1_DIC0                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Output Driver Impedance control */
#define BITM_DMC_MR1_DLLEN                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  DLL Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_MR2                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_MR2_SRT                      7            /*  Self Refresh Temperature Range */
#define BITP_DMC_MR2_ASR                      6            /*  Auto Self Refresh */
#define BITP_DMC_MR2_CWL                      3            /*  CAS Write Latency */
#define BITP_DMC_MR2_PASR                     0            /*  Partial Array Self refresh */
#define BITM_DMC_MR2_SRT                     (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Self Refresh Temperature Range */
#define BITM_DMC_MR2_ASR                     (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Auto Self Refresh */
#define BITM_DMC_MR2_CWL                     (_ADI_MSK_3(0x00000038,0x00000038UL, uint32_t  ))    /*  CAS Write Latency */
#define BITM_DMC_MR2_PASR                    (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Partial Array Self refresh */
#define ENUM_DMC_MR2_SRT                     (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ASR: Manual SR Reference (SRT) */
#define ENUM_DMC_MR2_ASREN                   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  ASR: ASR enable (Optional) */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_EMR3                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_EMR3_MPR                     2            /*  Multi Purpose Read Enable (Read Leveling) */
#define BITP_DMC_EMR3_MPR_LOC                 0            /*  Hardcoded to "00". Reads a pre-defined pattern on MPR Read */
#define BITM_DMC_EMR3_MPR                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Multi Purpose Read Enable (Read Leveling) */
#define BITM_DMC_EMR3_MPR_LOC                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Hardcoded to "00". Reads a pre-defined pattern on MPR Read */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DLLCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DLLCTL_DATACYC               8            /*  Data Cycles */
#define BITP_DMC_DLLCTL_DLLCALRDCNT           0            /*  DLL Calibration RD Count */
#define BITM_DMC_DLLCTL_DATACYC              (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Data Cycles */
#define BITM_DMC_DLLCTL_DLLCALRDCNT          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  DLL Calibration RD Count */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DT_CALIB_ADDR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DT_CALIB_ADDR_DMC_DT_CALIB_ADDR  0            /*  Data calibration address */
#define BITM_DMC_DT_CALIB_ADDR_DMC_DT_CALIB_ADDR (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data calibration address */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DT_DATA_CALIB_DATA0              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DT_DATA_CALIB_DATA0_DMC_DT_DATA_CALIB_DATA0  0            /*  Data Calibration Data 0 */
#define BITM_DMC_DT_DATA_CALIB_DATA0_DMC_DT_DATA_CALIB_DATA0 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Calibration Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DT_DATA_CALIB_DATA1              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DT_DATA_CALIB_DATA1_DMC_DT_DATA_CALIB_DATA1  0            /*  Data Calibration Data 1 */
#define BITM_DMC_DT_DATA_CALIB_DATA1_DMC_DT_DATA_CALIB_DATA1 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Calibration Data 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_RDDATABUFID1                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_RDDATABUFID1_VALUE           0            /*  Mask for Read Data Buffer ID1 */
#define BITM_DMC_RDDATABUFID1_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mask for Read Data Buffer ID1 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_RDDATABUFMSK1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_RDDATABUFMSK1_VALUE          0            /*  Mask for Read Data Buffer ID1 */
#define BITM_DMC_RDDATABUFMSK1_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mask for Read Data Buffer ID1 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_RDDATABUFID2                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_RDDATABUFID2_VALUE           0            /*  Mask for Read Data Buffer ID2 */
#define BITM_DMC_RDDATABUFID2_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mask for Read Data Buffer ID2 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_RDDATABUFMSK2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_RDDATABUFMSK2_VALUE          0            /*  Mask for Read Data Buffer ID2 */
#define BITM_DMC_RDDATABUFMSK2_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Mask for Read Data Buffer ID2 */


/* ============================================================================================================================
        1600MHz DMCPHY (DDR3/DDR3L)
   ============================================================================================================================ */

/* ============================================================================================================================
        DMC0
   ============================================================================================================================ */
#define REG_DMC0_DDR_LANE0_CTL0              0x31071000            /*  DMC0 Data Lane 0 Control Register 0 */
#define REG_DMC0_DDR_LANE0_CTL1              0x31071004            /*  DMC0 Data Lane 0 Control Register 1 */
#define REG_DMC0_DDR_LANE1_CTL0              0x3107100C            /*  DMC0 Data Lane 1 Control Register 0 */
#define REG_DMC0_DDR_LANE1_CTL1              0x31071010            /*  DMC0 Data Lane 1 Control Register 1 */
#define REG_DMC0_DDR_ROOT_CTL                0x31071018            /*  DMC0 DDR ROOT Module Control Register */
#define REG_DMC0_DDR_ZQ_CTL0                 0x31071034            /*  DMC0 DDR Calibration Control Register 0 */
#define REG_DMC0_DDR_ZQ_CTL1                 0x31071038            /*  DMC0 DDR Calibration Control Register 1 */
#define REG_DMC0_DDR_ZQ_CTL2                 0x3107103C            /*  DMC0 DDR Calibration Control Register 2 */
#define REG_DMC0_DDR_CA_CTL                  0x31071068            /*  DMC0 DDR CA Lane Control Register */

/* ============================================================================================================================
        DMC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_LANE0_CTL0                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_LANE0_CTL0_CB_RSTDAT    27            /*  Reset the Data Pads */
#define BITP_DMC_DDR_LANE0_CTL0_BYPCODE      12            /*  Used to select from four levels of duty cycle adjustment */
#define BITP_DMC_DDR_LANE0_CTL0_BYPSELP      11            /*  Duty Cycle Offset Direction Select */
#define BITP_DMC_DDR_LANE0_CTL0_BYPENB       10            /*  DQS Duty Cycle Offset Adjustment Enable */
#define BITP_DMC_DDR_LANE0_CTL0_CB_RSTDLL     8            /*  Reset the Lane DLL */
#define BITP_DMC_DDR_LANE0_CTL0_MF_SEL        5            /*  SPI Master Frequency Divider Select */
#define BITP_DMC_DDR_LANE0_CTL0_DDR_MODE      1            /*  DDR Mode */
#define BITP_DMC_DDR_LANE0_CTL0_LANE_DIS      0            /*  Clock Gate Data Lane */
#define BITM_DMC_DDR_LANE0_CTL0_CB_RSTDAT    (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Reset the Data Pads */
#define BITM_DMC_DDR_LANE0_CTL0_BYPCODE      (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  Used to select from four levels of duty cycle adjustment */
#define BITM_DMC_DDR_LANE0_CTL0_BYPSELP      (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Duty Cycle Offset Direction Select */
#define BITM_DMC_DDR_LANE0_CTL0_BYPENB       (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  DQS Duty Cycle Offset Adjustment Enable */
#define BITM_DMC_DDR_LANE0_CTL0_CB_RSTDLL    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Reset the Lane DLL */
#define BITM_DMC_DDR_LANE0_CTL0_MF_SEL       (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  SPI Master Frequency Divider Select */
#define BITM_DMC_DDR_LANE0_CTL0_DDR_MODE     (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  DDR Mode */
#define BITM_DMC_DDR_LANE0_CTL0_LANE_DIS     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Clock Gate Data Lane */
#define ENUM_DMC_DDR_LANE0_CTL0_DUTY_ADJ_L1  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE0_CTL0_DUTY_ADJ_L2  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE0_CTL0_DUTY_ADJ_L3  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE0_CTL0_DUTY_ADJ_L4  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE0_CTL0_DIRECTION_NEG (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BYPSELP: Negative */
#define ENUM_DMC_DDR_LANE0_CTL0_DIRECTION_POS (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  BYPSELP: Positive */
#define ENUM_DMC_DDR_LANE0_CTL0_DQS_DUTY_DISABLE (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BYPENB: Disable */
#define ENUM_DMC_DDR_LANE0_CTL0_DQS_DUTY_ENABLE (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  BYPENB: Enable */
#define ENUM_DMC_DDR_LANE0_CTL0_DIVBY2       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF_SEL: Divide by 2 */
#define ENUM_DMC_DDR_LANE0_CTL0_DIVBY4       (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  MF_SEL: Divide by 4 */
#define ENUM_DMC_DDR_LANE0_CTL0_DIVBY8       (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  MF_SEL: Divide by 8 */
#define ENUM_DMC_DDR_LANE0_CTL0_DIVBY16      (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  MF_SEL: Divide by 16 */
#define ENUM_DMC_DDR_LANE0_CTL0_DDR3         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DDR_MODE: DDR3/3L Mode */
#define ENUM_DMC_DDR_LANE0_CTL0_ENABLED      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LANE_DIS: Lane is Enabled */
#define ENUM_DMC_DDR_LANE0_CTL0_DISABLED     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  LANE_DIS: Lane is Clock Gated */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_LANE0_CTL1                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_LANE0_CTL1_BYPDELCHAINEN 15            /*  Bypass enable for delay chain controlling extra delay on DATA pins */
#define BITP_DMC_DDR_LANE0_CTL1_BYPCODE      10            /*  Bypass Code for extra delay on DATA pins */
#define BITP_DMC_DDR_LANE0_CTL1_COMP_DCYCLE   1            /*  Compute Datacycle */
#define BITM_DMC_DDR_LANE0_CTL1_BYPDELCHAINEN (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Bypass enable for delay chain controlling extra delay on DATA pins */
#define BITM_DMC_DDR_LANE0_CTL1_BYPCODE      (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Bypass Code for extra delay on DATA pins */
#define BITM_DMC_DDR_LANE0_CTL1_COMP_DCYCLE  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compute Datacycle */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_LANE1_CTL0                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_LANE1_CTL0_CB_RSTDAT    27            /*  Reset the Data Pads */
#define BITP_DMC_DDR_LANE1_CTL0_BYPCODE      12            /*  Used to select from four levels of duty cycle adjustment */
#define BITP_DMC_DDR_LANE1_CTL0_BYPSELP      11            /*  Duty Cycle Offset Direction Select */
#define BITP_DMC_DDR_LANE1_CTL0_BYPENB       10            /*  DQS Duty Cycle Offset Adjustment Enable */
#define BITP_DMC_DDR_LANE1_CTL0_CB_RSTDLL     8            /*  Reset the Lane DLL */
#define BITP_DMC_DDR_LANE1_CTL0_MF_SEL        5            /*  SPI Master Frequency Divider Select */
#define BITP_DMC_DDR_LANE1_CTL0_DDR_MODE      1            /*  DDR Mode */
#define BITP_DMC_DDR_LANE1_CTL0_LANE_DIS      0            /*  Clock Gate Data Lane */
#define BITM_DMC_DDR_LANE1_CTL0_CB_RSTDAT    (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Reset the Data Pads */
#define BITM_DMC_DDR_LANE1_CTL0_BYPCODE      (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  Used to select from four levels of duty cycle adjustment */
#define BITM_DMC_DDR_LANE1_CTL0_BYPSELP      (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Duty Cycle Offset Direction Select */
#define BITM_DMC_DDR_LANE1_CTL0_BYPENB       (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  DQS Duty Cycle Offset Adjustment Enable */
#define BITM_DMC_DDR_LANE1_CTL0_CB_RSTDLL    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Reset the Lane DLL */
#define BITM_DMC_DDR_LANE1_CTL0_MF_SEL       (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  SPI Master Frequency Divider Select */
#define BITM_DMC_DDR_LANE1_CTL0_DDR_MODE     (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  DDR Mode */
#define BITM_DMC_DDR_LANE1_CTL0_LANE_DIS     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Clock Gate Data Lane */
#define ENUM_DMC_DDR_LANE1_CTL0_DUTY_ADJ_L1  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE1_CTL0_DUTY_ADJ_L2  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE1_CTL0_DUTY_ADJ_L3  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE1_CTL0_DUTY_ADJ_L4  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define ENUM_DMC_DDR_LANE1_CTL0_DIRECTION_NEG (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BYPSELP: Negative */
#define ENUM_DMC_DDR_LANE1_CTL0_DIRECTION_POS (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  BYPSELP: Positive */
#define ENUM_DMC_DDR_LANE1_CTL0_DQS_DUTY_DISABLE (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BYPENB: Disable */
#define ENUM_DMC_DDR_LANE1_CTL0_DQS_DUTY_ENABLE (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  BYPENB: Enable */
#define ENUM_DMC_DDR_LANE1_CTL0_DIVBY2       (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF_SEL: Divide by 2 */
#define ENUM_DMC_DDR_LANE1_CTL0_DIVBY4       (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  MF_SEL: Divide by 4 */
#define ENUM_DMC_DDR_LANE1_CTL0_DIVBY8       (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  MF_SEL: Divide by 8 */
#define ENUM_DMC_DDR_LANE1_CTL0_DIVBY16      (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  MF_SEL: Divide by 16 */
#define ENUM_DMC_DDR_LANE1_CTL0_DDR3         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DDR_MODE: DDR3/3L Mode */
#define ENUM_DMC_DDR_LANE1_CTL0_ENABLED      (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LANE_DIS: Lane is Enabled */
#define ENUM_DMC_DDR_LANE1_CTL0_DISABLED     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  LANE_DIS: Lane is Clock Gated */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_LANE1_CTL1                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_LANE1_CTL1_BYPDELCHAINEN 15            /*  Bypass enable for delay chain controlling extra delay on DATA pins */
#define BITP_DMC_DDR_LANE1_CTL1_BYPCODE      10            /*  Bypass Code for extra delay on DATA pins */
#define BITP_DMC_DDR_LANE1_CTL1_COMP_DCYCLE   1            /*  Compute Datacycle */
#define BITM_DMC_DDR_LANE1_CTL1_BYPDELCHAINEN (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Bypass enable for delay chain controlling extra delay on DATA pins */
#define BITM_DMC_DDR_LANE1_CTL1_BYPCODE      (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Bypass Code for extra delay on DATA pins */
#define BITM_DMC_DDR_LANE1_CTL1_COMP_DCYCLE  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compute Datacycle */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_ROOT_CTL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_ROOT_CTL_TRIG_RD_XFER_ALL 21            /*  All Lane Read Status */
#define BITP_DMC_DDR_ROOT_CTL_TRIG_WR_XFER_L1 18            /*  Write Transfer from Root to Lane1 */
#define BITP_DMC_DDR_ROOT_CTL_TRIG_WR_XFER_L0 17            /*  Write Transfer from Root to Lane 0 */
#define BITP_DMC_DDR_ROOT_CTL_TRIG_WR_XFER_CA 16            /*  Write Transfer from Root to CA Lane */
#define BITP_DMC_DDR_ROOT_CTL_MF_SEL         14            /*  SPI Master Frequency Divider Select */
#define BITP_DMC_DDR_ROOT_CTL_SW_REFRESH     13            /*  Refresh Lane DLL Code */
#define BITP_DMC_DDR_ROOT_CTL_PIPE_OFSTDCYCLE 10            /*  Pipeline offset for PHYC_DATACYCLE */
#define BITP_DMC_DDR_ROOT_CTL_CPHY_DCYCLE_VAL  6            /*  Bypass Value for CPHY_DATACYCLE */
#define BITP_DMC_DDR_ROOT_CTL_CPHY_DCYCLE_BYP  5            /*  Bypass Enable for CPHY_DATACYCLE */
#define BITP_DMC_DDR_ROOT_CTL_PHYC_DCYCLE_VAL  1            /*  Bypass Value for PHYC_DATACYCLE */
#define BITP_DMC_DDR_ROOT_CTL_PHYC_DCYCLE_BYP  0            /*  Bypass Enable for PHYC_DATACYCLE */
#define BITM_DMC_DDR_ROOT_CTL_TRIG_RD_XFER_ALL (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  All Lane Read Status */
#define BITM_DMC_DDR_ROOT_CTL_TRIG_WR_XFER_L1 (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Write Transfer from Root to Lane1 */
#define BITM_DMC_DDR_ROOT_CTL_TRIG_WR_XFER_L0 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Write Transfer from Root to Lane 0 */
#define BITM_DMC_DDR_ROOT_CTL_TRIG_WR_XFER_CA (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Write Transfer from Root to CA Lane */
#define BITM_DMC_DDR_ROOT_CTL_MF_SEL         (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  SPI Master Frequency Divider Select */
#define BITM_DMC_DDR_ROOT_CTL_SW_REFRESH     (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Refresh Lane DLL Code */
#define BITM_DMC_DDR_ROOT_CTL_PIPE_OFSTDCYCLE (_ADI_MSK_3(0x00001C00,0x00001C00UL, uint32_t  ))    /*  Pipeline offset for PHYC_DATACYCLE */
#define BITM_DMC_DDR_ROOT_CTL_CPHY_DCYCLE_VAL (_ADI_MSK_3(0x000003C0,0x000003C0UL, uint32_t  ))    /*  Bypass Value for CPHY_DATACYCLE */
#define BITM_DMC_DDR_ROOT_CTL_CPHY_DCYCLE_BYP (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bypass Enable for CPHY_DATACYCLE */
#define BITM_DMC_DDR_ROOT_CTL_PHYC_DCYCLE_VAL (_ADI_MSK_3(0x0000001E,0x0000001EUL, uint32_t  ))    /*  Bypass Value for PHYC_DATACYCLE */
#define BITM_DMC_DDR_ROOT_CTL_PHYC_DCYCLE_BYP (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Bypass Enable for PHYC_DATACYCLE */
#define ENUM_DMC_DDR_ROOT_CTL_DIVBY2         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF_SEL: Divide by 2 */
#define ENUM_DMC_DDR_ROOT_CTL_DIVBY4         (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  MF_SEL: Divide by 4 */
#define ENUM_DMC_DDR_ROOT_CTL_DIVBY8         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  MF_SEL: Divide by 8 */
#define ENUM_DMC_DDR_ROOT_CTL_DIVBY16        (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  MF_SEL: Divide by 16 */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_ZQ_CTL0                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_ZQ_CTL0_IMPRTT          16            /*  Data/DQS ODT */
#define BITP_DMC_DDR_ZQ_CTL0_IMPWRDQ          8            /*  Data/DQS/DM/CLK Drive Strength */
#define BITP_DMC_DDR_ZQ_CTL0_IMPWRADD         0            /*  Address/Command Drive Strength */
#define BITM_DMC_DDR_ZQ_CTL0_IMPRTT          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Data/DQS ODT */
#define BITM_DMC_DDR_ZQ_CTL0_IMPWRDQ         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Data/DQS/DM/CLK Drive Strength */
#define BITM_DMC_DDR_ZQ_CTL0_IMPWRADD        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Address/Command Drive Strength */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_ZQ_CTL1                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_ZQ_CTL1_USEFNBUS        22            /*  BSCAN Mode */
#define BITP_DMC_DDR_ZQ_CTL1_PDCAL           12            /*  Calibration Pad Power Down */
#define BITP_DMC_DDR_ZQ_CTL1_BYPRDPD          6            /*  Pull-down Termination Bypass Code */
#define BITP_DMC_DDR_ZQ_CTL1_BYPRDPU          0            /*  Pull-up Termination Bypass Code */
#define BITM_DMC_DDR_ZQ_CTL1_USEFNBUS        (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  BSCAN Mode */
#define BITM_DMC_DDR_ZQ_CTL1_PDCAL           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Calibration Pad Power Down */
#define BITM_DMC_DDR_ZQ_CTL1_BYPRDPD         (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Pull-down Termination Bypass Code */
#define BITM_DMC_DDR_ZQ_CTL1_BYPRDPU         (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Pull-up Termination Bypass Code */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_ZQ_CTL2                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_ZQ_CTL2_RTTCALEN        31            /*  Pad ODT Strength Calibration Enable */
#define BITP_DMC_DDR_ZQ_CTL2_PDCALEN         30            /*  Driver Pull-down Strength Calibration Enable */
#define BITP_DMC_DDR_ZQ_CTL2_PUCALEN         29            /*  Driver Pull-up Strength Calibration Enable */
#define BITP_DMC_DDR_ZQ_CTL2_CALSTRT         28            /*  New Impedance Calibration Enable */
#define BITP_DMC_DDR_ZQ_CTL2_CALTYPE         27            /*  Calibration Type */
#define BITP_DMC_DDR_ZQ_CTL2_BYPPDDQ         21            /*  Bypass Code for DQ,DQS,CLK,DM Pull-down Driver Code */
#define BITP_DMC_DDR_ZQ_CTL2_BYPPUDQ         15            /*  Bypass Code for DQ,DQS,CLK,DM Pull-up Code */
#define BITP_DMC_DDR_ZQ_CTL2_BYPPDADD         9            /*  Address/Command Bypass Pull-down Code */
#define BITP_DMC_DDR_ZQ_CTL2_BYPPUADD         3            /*  Address/Command Bypass Pull-up Codes */
#define BITP_DMC_DDR_ZQ_CTL2_BYPIMRD          2            /*  Bypass Termination Code Enable */
#define BITP_DMC_DDR_ZQ_CTL2_BYPIMDQ          1            /*  DQ/DQS/CLK/DM Bypass Driver Code Enable */
#define BITP_DMC_DDR_ZQ_CTL2_BYPIMAD          0            /*  Address/Command Bypass Code Enable */
#define BITM_DMC_DDR_ZQ_CTL2_RTTCALEN        (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Pad ODT Strength Calibration Enable */
#define BITM_DMC_DDR_ZQ_CTL2_PDCALEN         (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Driver Pull-down Strength Calibration Enable */
#define BITM_DMC_DDR_ZQ_CTL2_PUCALEN         (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Driver Pull-up Strength Calibration Enable */
#define BITM_DMC_DDR_ZQ_CTL2_CALSTRT         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  New Impedance Calibration Enable */
#define BITM_DMC_DDR_ZQ_CTL2_CALTYPE         (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Calibration Type */
#define BITM_DMC_DDR_ZQ_CTL2_BYPPDDQ         (_ADI_MSK_3(0x07E00000,0x07E00000UL, uint32_t  ))    /*  Bypass Code for DQ,DQS,CLK,DM Pull-down Driver Code */
#define BITM_DMC_DDR_ZQ_CTL2_BYPPUDQ         (_ADI_MSK_3(0x001F8000,0x001F8000UL, uint32_t  ))    /*  Bypass Code for DQ,DQS,CLK,DM Pull-up Code */
#define BITM_DMC_DDR_ZQ_CTL2_BYPPDADD        (_ADI_MSK_3(0x00007E00,0x00007E00UL, uint32_t  ))    /*  Address/Command Bypass Pull-down Code */
#define BITM_DMC_DDR_ZQ_CTL2_BYPPUADD        (_ADI_MSK_3(0x000001F8,0x000001F8UL, uint32_t  ))    /*  Address/Command Bypass Pull-up Codes */
#define BITM_DMC_DDR_ZQ_CTL2_BYPIMRD         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Bypass Termination Code Enable */
#define BITM_DMC_DDR_ZQ_CTL2_BYPIMDQ         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DQ/DQS/CLK/DM Bypass Driver Code Enable */
#define BITM_DMC_DDR_ZQ_CTL2_BYPIMAD         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Address/Command Bypass Code Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          DMC_DDR_CA_CTL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DMC_DDR_CA_CTL_SLAVE_ID         26            /*  SW Slave Read/Write Slave ID */
#define BITP_DMC_DDR_CA_CTL_BYPCODE1         23            /*  Duty Cycle Level Select */
#define BITP_DMC_DDR_CA_CTL_BYPCODE0         19            /*  Duty Cycle Level Select */
#define BITP_DMC_DDR_CA_CTL_BYPSELP          18            /*  Duty Cycle Offset Direction Select */
#define BITP_DMC_DDR_CA_CTL_BYPENB           17            /*  CLK Duty Cycle Offset Adjustment Enable */
#define BITP_DMC_DDR_CA_CTL_MF_SEL           15            /*  SPI Master Frequency Divider Select */
#define BITP_DMC_DDR_CA_CTL_SW_REFRESH       14            /*  Refresh Lane DLL Code */
#define BITM_DMC_DDR_CA_CTL_SLAVE_ID         (_ADI_MSK_3(0x7C000000,0x7C000000UL, uint32_t  ))    /*  SW Slave Read/Write Slave ID */
#define BITM_DMC_DDR_CA_CTL_BYPCODE1         (_ADI_MSK_3(0x01800000,0x01800000UL, uint32_t  ))    /*  Duty Cycle Level Select */
#define BITM_DMC_DDR_CA_CTL_BYPCODE0         (_ADI_MSK_3(0x00180000,0x00180000UL, uint32_t  ))    /*  Duty Cycle Level Select */
#define BITM_DMC_DDR_CA_CTL_BYPSELP          (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Duty Cycle Offset Direction Select */
#define BITM_DMC_DDR_CA_CTL_BYPENB           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  CLK Duty Cycle Offset Adjustment Enable */
#define BITM_DMC_DDR_CA_CTL_MF_SEL           (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))    /*  SPI Master Frequency Divider Select */
#define BITM_DMC_DDR_CA_CTL_SW_REFRESH       (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Refresh Lane DLL Code */
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_1_L2    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_1_L1    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_1_L3    (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_1_L4    (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_0_L4    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_0_L3    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_0_L1    (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DUTY_ADJ_0_L2    (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define ENUM_DMC_DDR_CA_CTL_DIRECTION_NEG    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BYPSELP: Negative */
#define ENUM_DMC_DDR_CA_CTL_DIRECTION_POS    (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  BYPSELP: Positive */
#define ENUM_DMC_DDR_CA_CTL_DISABLE          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BYPENB: Disable */
#define ENUM_DMC_DDR_CA_CTL_ENABLE           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  BYPENB: Enable */
#define ENUM_DMC_DDR_CA_CTL_DIVBY2           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MF_SEL: Divide by 2 */
#define ENUM_DMC_DDR_CA_CTL_DIVBY4           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  MF_SEL: Divide by 4 */
#define ENUM_DMC_DDR_CA_CTL_DIVBY8           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  MF_SEL: Divide by 8 */
#define ENUM_DMC_DDR_CA_CTL_DIVBY16          (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))    /*  MF_SEL: Divide by 16 */


/* ============================================================================================================================
        Some description.
   ============================================================================================================================ */

/* ============================================================================================================================
        L2CTL0
   ============================================================================================================================ */
#define REG_L2CTL0_CTL                       0x31080000            /*  L2CTL0 Control Register */
#define REG_L2CTL0_STAT                      0x31080010            /*  L2CTL0 Status Register */
#define REG_L2CTL0_RPCR0                     0x31080014            /*  L2CTL0 Read Priority Count Register */
#define REG_L2CTL0_WPCR0                     0x31080018            /*  L2CTL0 Write Priority Count Register */
#define REG_L2CTL0_INIT                      0x31080024            /*  L2CTL0 Initialization Register */
#define REG_L2CTL0_ISTAT                     0x31080038            /*  L2CTL0 Initialization Status Register */
#define REG_L2CTL0_PCTL                      0x3108003C            /*  L2CTL0 Power Control Register */
#define REG_L2CTL0_ERRADDR0                  0x31080040            /*  L2CTL0 ECC Error Address 0 Register */
#define REG_L2CTL0_ERRADDR1                  0x31080044            /*  L2CTL0 ECC Error Address 1 Register */
#define REG_L2CTL0_ERRADDR2                  0x31080048            /*  L2CTL0 ECC Error Address 2 Register */
#define REG_L2CTL0_ERRADDR3                  0x3108004C            /*  L2CTL0 ECC Error Address 3 Register */
#define REG_L2CTL0_ERRADDR4                  0x31080050            /*  L2CTL0 ECC Error Address 4 Register */
#define REG_L2CTL0_ERRADDR5                  0x31080054            /*  L2CTL0 ECC Error Address 5 Register */
#define REG_L2CTL0_ERRADDR6                  0x31080058            /*  L2CTL0 ECC Error Address 6 Register */
#define REG_L2CTL0_ERRADDR7                  0x3108005C            /*  L2CTL0 ECC Error Address 7 Register */
#define REG_L2CTL0_ERRADDR8                  0x31080060            /*  L2CTL0 ECC Error Address 8 Register */
#define REG_L2CTL0_ET0                       0x31080080            /*  L2CTL0 Error Type 0 Register */
#define REG_L2CTL0_EADDR0                    0x31080084            /*  L2CTL0 Error Type 0 Address Register */
#define REG_L2CTL0_ET1                       0x31080088            /*  L2CTL0 Error Type 1 Register */
#define REG_L2CTL0_EADDR1                    0x3108008C            /*  L2CTL0 Error Type 1 Address Register */
#define REG_L2CTL0_SCTL                      0x310800EC            /*  L2CTL0 Scrub Control Register */
#define REG_L2CTL0_SADR                      0x310800F0            /*  L2CTL0 Scrub Start Address Register */
#define REG_L2CTL0_SCNT                      0x310800F4            /*  L2CTL0 Scrub Count Register */
#define REG_L2CTL0_REVID                     0x310800FC            /*  L2CTL0 Revision ID Register */
#define REG_L2CTL0_STAT_1                    0x31080100            /*  L2CTL0 L2 Port Error Status Register */
#define REG_L2CTL0_ET2                       0x31080104            /*  L2CTL0 Error Type 2 Register */
#define REG_L2CTL0_EADDR2                    0x31080108            /*  L2CTL0 Error Type 2 Address Register */
#define REG_L2CTL0_ET3                       0x3108010C            /*  L2CTL0 Error Type 3 Register */
#define REG_L2CTL0_EADDR3                    0x31080110            /*  L2CTL0 Error Type 3 Address Register */
#define REG_L2CTL0_ET4                       0x31080114            /*  L2CTL0 Error Type 4 Register */
#define REG_L2CTL0_EADDR4                    0x31080118            /*  L2CTL0 Error Type 4 Address Register */
#define REG_L2CTL0_RPCR1                     0x31080130            /*  L2CTL0 Read Priority Count Register */
#define REG_L2CTL0_WPCR1                     0x31080134            /*  L2CTL0 Write Priority Count Register */

/* ============================================================================================================================
        L2CTL Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_CTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_CTL_LOCK                  31            /*  Lock */
#define BITP_L2CTL_CTL_DISURP                28            /*  Disable Urgent Request Priority */
#define BITP_L2CTL_CTL_BK8EDIS                8            /*  Bank 8 (ROM) ECC Disable */
#define BITP_L2CTL_CTL_BK7EDIS                7            /*  Bank 7 ECC Disable */
#define BITP_L2CTL_CTL_BK6EDIS                6            /*  Bank 6 ECC Disable */
#define BITP_L2CTL_CTL_BK5EDIS                5            /*  Bank 5 ECC Disable */
#define BITP_L2CTL_CTL_BK4EDIS                4            /*  Bank 4 ECC Disable */
#define BITP_L2CTL_CTL_BK3EDIS                3            /*  Bank 3 ECC Disable */
#define BITP_L2CTL_CTL_BK2EDIS                2            /*  Bank 2 ECC Disable */
#define BITP_L2CTL_CTL_BK1EDIS                1            /*  Bank 1 ECC Disable */
#define BITP_L2CTL_CTL_BK0EDIS                0            /*  Bank 0 ECC Disable */
#define BITM_L2CTL_CTL_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_L2CTL_CTL_DISURP                (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Disable Urgent Request Priority */
#define BITM_L2CTL_CTL_BK8EDIS               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Bank 8 (ROM) ECC Disable */
#define BITM_L2CTL_CTL_BK7EDIS               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Bank 7 ECC Disable */
#define BITM_L2CTL_CTL_BK6EDIS               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Bank 6 ECC Disable */
#define BITM_L2CTL_CTL_BK5EDIS               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bank 5 ECC Disable */
#define BITM_L2CTL_CTL_BK4EDIS               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Bank 4 ECC Disable */
#define BITM_L2CTL_CTL_BK3EDIS               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Bank 3 ECC Disable */
#define BITM_L2CTL_CTL_BK2EDIS               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Bank 2 ECC Disable */
#define BITM_L2CTL_CTL_BK1EDIS               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Bank 1 ECC Disable */
#define BITM_L2CTL_CTL_BK0EDIS               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Bank 0 ECC Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_STAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_STAT_ECCERR8              16            /*  ECC Error Bank 8 (ROM) */
#define BITP_L2CTL_STAT_ECCERR7              15            /*  ECC Error Bank 7 */
#define BITP_L2CTL_STAT_ECCERR6              14            /*  ECC Error Bank 6 */
#define BITP_L2CTL_STAT_ECCERR5              13            /*  ECC Error Bank 5 */
#define BITP_L2CTL_STAT_ECCERR4              12            /*  ECC Error Bank 4 */
#define BITP_L2CTL_STAT_ECCERR3              11            /*  ECC Error Bank 3 */
#define BITP_L2CTL_STAT_ECCERR2              10            /*  ECC Error Bank 2 */
#define BITP_L2CTL_STAT_ECCERR1               9            /*  ECC Error Bank 1 */
#define BITP_L2CTL_STAT_ECCERR0               8            /*  ECC Error Bank 0 */
#define BITP_L2CTL_STAT_INITDN                5            /*  Initialization Status */
#define BITP_L2CTL_STAT_SCRBDN                4            /*  Scrub Status */
#define BITP_L2CTL_STAT_ERR1                  1            /*  Error Port 1 */
#define BITP_L2CTL_STAT_ERR0                  0            /*  Error Port 0 */
#define BITM_L2CTL_STAT_ECCERR8              (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  ECC Error Bank 8 (ROM) */
#define BITM_L2CTL_STAT_ECCERR7              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  ECC Error Bank 7 */
#define BITM_L2CTL_STAT_ECCERR6              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  ECC Error Bank 6 */
#define BITM_L2CTL_STAT_ECCERR5              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  ECC Error Bank 5 */
#define BITM_L2CTL_STAT_ECCERR4              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  ECC Error Bank 4 */
#define BITM_L2CTL_STAT_ECCERR3              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  ECC Error Bank 3 */
#define BITM_L2CTL_STAT_ECCERR2              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  ECC Error Bank 2 */
#define BITM_L2CTL_STAT_ECCERR1              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ECC Error Bank 1 */
#define BITM_L2CTL_STAT_ECCERR0              (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  ECC Error Bank 0 */
#define BITM_L2CTL_STAT_INITDN               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Initialization Status */
#define BITM_L2CTL_STAT_SCRBDN               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Scrub Status */
#define BITM_L2CTL_STAT_ERR1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Error Port 1 */
#define BITM_L2CTL_STAT_ERR0                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Error Port 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_RPCR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_RPCR0_RPC3                24            /*  Read Priority Count 3 */
#define BITP_L2CTL_RPCR0_RPC2                16            /*  Read Priority Count 2 */
#define BITP_L2CTL_RPCR0_RPC1                 8            /*  Read Priority Count 1 */
#define BITP_L2CTL_RPCR0_RPC0                 0            /*  Read Priority Count 0 */
#define BITM_L2CTL_RPCR0_RPC3                (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Read Priority Count 3 */
#define BITM_L2CTL_RPCR0_RPC2                (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Read Priority Count 2 */
#define BITM_L2CTL_RPCR0_RPC1                (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Read Priority Count 1 */
#define BITM_L2CTL_RPCR0_RPC0                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read Priority Count 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_WPCR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_WPCR0_WPC3                24            /*  Write Priority Count 3 */
#define BITP_L2CTL_WPCR0_WPC2                16            /*  Write Priority Count 2 */
#define BITP_L2CTL_WPCR0_WPC1                 8            /*  Write Priority Count 1 */
#define BITP_L2CTL_WPCR0_WPC0                 0            /*  Write Priority Count 0 */
#define BITM_L2CTL_WPCR0_WPC3                (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Write Priority Count 3 */
#define BITM_L2CTL_WPCR0_WPC2                (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Write Priority Count 2 */
#define BITM_L2CTL_WPCR0_WPC1                (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Write Priority Count 1 */
#define BITM_L2CTL_WPCR0_WPC0                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Write Priority Count 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_INIT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_INIT_BK7                   7            /*  Initialize Bank 7 */
#define BITP_L2CTL_INIT_BK6                   6            /*  Initialize Bank 6 */
#define BITP_L2CTL_INIT_BK5                   5            /*  Initialize Bank 5 */
#define BITP_L2CTL_INIT_BK4                   4            /*  Initialize Bank 4 */
#define BITP_L2CTL_INIT_BK3                   3            /*  Initialize Bank 3 */
#define BITP_L2CTL_INIT_BK2                   2            /*  Initialize Bank 2 */
#define BITP_L2CTL_INIT_BK1                   1            /*  Initialize Bank 1 */
#define BITP_L2CTL_INIT_BK0                   0            /*  Initialize Bank 0 */
#define BITM_L2CTL_INIT_BK7                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Initialize Bank 7 */
#define BITM_L2CTL_INIT_BK6                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Initialize Bank 6 */
#define BITM_L2CTL_INIT_BK5                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Initialize Bank 5 */
#define BITM_L2CTL_INIT_BK4                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Initialize Bank 4 */
#define BITM_L2CTL_INIT_BK3                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Initialize Bank 3 */
#define BITM_L2CTL_INIT_BK2                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Initialize Bank 2 */
#define BITM_L2CTL_INIT_BK1                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Initialize Bank 1 */
#define BITM_L2CTL_INIT_BK0                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Initialize Bank 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ISTAT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ISTAT_BK7                  7            /*  Bank 7 Initialization Status */
#define BITP_L2CTL_ISTAT_BK6                  6            /*  Bank 6 Initialization Status */
#define BITP_L2CTL_ISTAT_BK5                  5            /*  Bank 5 Initialization Status */
#define BITP_L2CTL_ISTAT_BK4                  4            /*  Bank 4 Initialization Status */
#define BITP_L2CTL_ISTAT_BK3                  3            /*  Bank 3 Initialization Status */
#define BITP_L2CTL_ISTAT_BK2                  2            /*  Bank 2 Initialization Status */
#define BITP_L2CTL_ISTAT_BK1                  1            /*  Bank 1 Initialization Status */
#define BITP_L2CTL_ISTAT_BK0                  0            /*  Bank 0 Initialization Status */
#define BITM_L2CTL_ISTAT_BK7                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Bank 7 Initialization Status */
#define BITM_L2CTL_ISTAT_BK6                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Bank 6 Initialization Status */
#define BITM_L2CTL_ISTAT_BK5                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bank 5 Initialization Status */
#define BITM_L2CTL_ISTAT_BK4                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Bank 4 Initialization Status */
#define BITM_L2CTL_ISTAT_BK3                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Bank 3 Initialization Status */
#define BITM_L2CTL_ISTAT_BK2                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Bank 2 Initialization Status */
#define BITM_L2CTL_ISTAT_BK1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Bank 1 Initialization Status */
#define BITM_L2CTL_ISTAT_BK0                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Bank 0 Initialization Status */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_PCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_PCTL_LOCK                 31            /*  Lock */
#define BITP_L2CTL_PCTL_BK7SD                23            /*  Bank 7 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK6SD                22            /*  Bank 6 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK5SD                21            /*  Bank 5 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK4SD                20            /*  Bank 4 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK3SD                19            /*  Bank 3 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK2SD                18            /*  Bank 2 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK1SD                17            /*  Bank 1 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK0SD                16            /*  Bank 0 Shut Down Enable */
#define BITP_L2CTL_PCTL_BK7DS                 7            /*  Bank 7 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK6DS                 6            /*  Bank 6 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK5DS                 5            /*  Bank 5 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK4DS                 4            /*  Bank 4 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK3DS                 3            /*  Bank 3 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK2DS                 2            /*  Bank 2 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK1DS                 1            /*  Bank 1 Deep Sleep Enable */
#define BITP_L2CTL_PCTL_BK0DS                 0            /*  Bank 0 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_LOCK                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_L2CTL_PCTL_BK7SD                (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Bank 7 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK6SD                (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Bank 6 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK5SD                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Bank 5 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK4SD                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Bank 4 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK3SD                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Bank 3 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK2SD                (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Bank 2 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK1SD                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Bank 1 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK0SD                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Bank 0 Shut Down Enable */
#define BITM_L2CTL_PCTL_BK7DS                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Bank 7 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK6DS                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Bank 6 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK5DS                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bank 5 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK4DS                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Bank 4 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK3DS                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Bank 3 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK2DS                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Bank 2 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK1DS                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Bank 1 Deep Sleep Enable */
#define BITM_L2CTL_PCTL_BK0DS                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Bank 0 Deep Sleep Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR0_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR0_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR1_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR1_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR2_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR2_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR3                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR3_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR3_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR4                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR4_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR4_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR5                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR5_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR5_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR6                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR6_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR6_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR7                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR7_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR7_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ERRADDR8                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ERRADDR8_VALUE             0            /*  ERRADDR Value */
#define BITM_L2CTL_ERRADDR8_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ET0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ET0_ID                     8            /*  Error ID */
#define BITP_L2CTL_ET0_RDWR                   4            /*  Read/Write Error */
#define BITP_L2CTL_ET0_ECCERR                 3            /*  ECC Error */
#define BITP_L2CTL_ET0_ACCERR                 2            /*  Access Error */
#define BITP_L2CTL_ET0_ROMERR                 0            /*  ROM Error */
#define BITM_L2CTL_ET0_ID                    (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  Error ID */
#define BITM_L2CTL_ET0_RDWR                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Read/Write Error */
#define BITM_L2CTL_ET0_ECCERR                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ECC Error */
#define BITM_L2CTL_ET0_ACCERR                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Access Error */
#define BITM_L2CTL_ET0_ROMERR                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ROM Error */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_EADDR0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_EADDR0_VALUE               0            /*  ERRADDR Value */
#define BITM_L2CTL_EADDR0_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ET1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ET1_ID                     8            /*  Error ID */
#define BITP_L2CTL_ET1_RDWR                   4            /*  Read/Write Error */
#define BITP_L2CTL_ET1_ECCERR                 3            /*  ECC Error */
#define BITP_L2CTL_ET1_ACCERR                 2            /*  Access Error */
#define BITP_L2CTL_ET1_ROMERR                 0            /*  ROM Error */
#define BITM_L2CTL_ET1_ID                    (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  Error ID */
#define BITM_L2CTL_ET1_RDWR                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Read/Write Error */
#define BITM_L2CTL_ET1_ECCERR                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ECC Error */
#define BITM_L2CTL_ET1_ACCERR                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Access Error */
#define BITM_L2CTL_ET1_ROMERR                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ROM Error */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_EADDR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_EADDR1_VALUE               0            /*  ERRADDR Value */
#define BITM_L2CTL_EADDR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_SCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_SCTL_LOCK                 31            /*  Lock */
#define BITP_L2CTL_SCTL_SEN                  30            /*  Scrub Enable */
#define BITP_L2CTL_SCTL_SRT                   0            /*  Scrub Rate */
#define BITM_L2CTL_SCTL_LOCK                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_L2CTL_SCTL_SEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Scrub Enable */
#define BITM_L2CTL_SCTL_SRT                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Scrub Rate */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_SADR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_SADR_VALUE                 0            /*  Scrub Start Address */
#define BITM_L2CTL_SADR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Scrub Start Address */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_SCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_SCNT_VALUE                 0            /*  Scrub Count */
#define BITM_L2CTL_SCNT_VALUE                (_ADI_MSK_3(0x0003FFFF,0x0003FFFFUL, uint32_t  ))    /*  Scrub Count */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_REVID                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_REVID_MAJOR                4            /*  Major ID */
#define BITP_L2CTL_REVID_REV                  0            /*  Revision ID */
#define BITM_L2CTL_REVID_MAJOR               (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Major ID */
#define BITM_L2CTL_REVID_REV                 (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Revision ID */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_STAT_1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_STAT_1_ERR4                4            /*  Error Port4 */
#define BITP_L2CTL_STAT_1_ERR3                3            /*  Error Port3 */
#define BITP_L2CTL_STAT_1_ERR2                2            /*  Error Port2 */
#define BITM_L2CTL_STAT_1_ERR4               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Error Port4 */
#define BITM_L2CTL_STAT_1_ERR3               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Error Port3 */
#define BITM_L2CTL_STAT_1_ERR2               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Error Port2 */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ET2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ET2_ID                     8            /*  Error ID */
#define BITP_L2CTL_ET2_RDWR                   4            /*  Read/Write Error */
#define BITP_L2CTL_ET2_ECCERR                 3            /*  ECC Error */
#define BITP_L2CTL_ET2_ACCERR                 2            /*  Access Error */
#define BITP_L2CTL_ET2_ROMERR                 0            /*  ROM Error */
#define BITM_L2CTL_ET2_ID                    (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  Error ID */
#define BITM_L2CTL_ET2_RDWR                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Read/Write Error */
#define BITM_L2CTL_ET2_ECCERR                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ECC Error */
#define BITM_L2CTL_ET2_ACCERR                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Access Error */
#define BITM_L2CTL_ET2_ROMERR                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ROM Error */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_EADDR2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_EADDR2_VALUE               0            /*  ERRADDR Value */
#define BITM_L2CTL_EADDR2_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ET3                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ET3_ID                     8            /*  Error ID */
#define BITP_L2CTL_ET3_RDWR                   4            /*  Read/Write Error */
#define BITP_L2CTL_ET3_ECCERR                 3            /*  ECC Error */
#define BITP_L2CTL_ET3_ACCERR                 2            /*  Access Error */
#define BITP_L2CTL_ET3_ROMERR                 0            /*  ROM Error */
#define BITM_L2CTL_ET3_ID                    (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  Error ID */
#define BITM_L2CTL_ET3_RDWR                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Read/Write Error */
#define BITM_L2CTL_ET3_ECCERR                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ECC Error */
#define BITM_L2CTL_ET3_ACCERR                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Access Error */
#define BITM_L2CTL_ET3_ROMERR                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ROM Error */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_EADDR3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_EADDR3_VALUE               0            /*  ERRADDR Value */
#define BITM_L2CTL_EADDR3_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_ET4                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_ET4_ID                     8            /*  Error ID */
#define BITP_L2CTL_ET4_RDWR                   4            /*  Read/Write Error */
#define BITP_L2CTL_ET4_ECCERR                 3            /*  ECC Error */
#define BITP_L2CTL_ET4_ACCERR                 2            /*  Access Error */
#define BITP_L2CTL_ET4_ROMERR                 0            /*  ROM Error */
#define BITM_L2CTL_ET4_ID                    (_ADI_MSK_3(0x001FFF00,0x001FFF00UL, uint32_t  ))    /*  Error ID */
#define BITM_L2CTL_ET4_RDWR                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Read/Write Error */
#define BITM_L2CTL_ET4_ECCERR                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ECC Error */
#define BITM_L2CTL_ET4_ACCERR                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Access Error */
#define BITM_L2CTL_ET4_ROMERR                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ROM Error */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_EADDR4                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_EADDR4_VALUE               0            /*  ERRADDR Value */
#define BITM_L2CTL_EADDR4_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ERRADDR Value */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_RPCR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_RPCR1_RPC4                 0            /*  Read Priority Count 4 */
#define BITM_L2CTL_RPCR1_RPC4                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read Priority Count 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          L2CTL_WPCR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_L2CTL_WPCR1_WPC4                 0            /*  Write Priority Count 4 */
#define BITM_L2CTL_WPCR1_WPC4                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Write Priority Count 4 */


/* ============================================================================================================================
        The System Memory Protection Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        SMPU2
   ============================================================================================================================ */
#define REG_SMPU2_CTL                        0x31083000            /*  SMPU2 SMPU Control Register */
#define REG_SMPU2_STAT                       0x31083004            /*  SMPU2 SMPU Status Register */
#define REG_SMPU2_IADDR                      0x31083008            /*  SMPU2 Interrupt Address Register */
#define REG_SMPU2_IDTLS                      0x3108300C            /*  SMPU2 Interrupt Details Register */
#define REG_SMPU2_BADDR                      0x31083010            /*  SMPU2 Bus Error Address Register */
#define REG_SMPU2_BDTLS                      0x31083014            /*  SMPU2 Bus Error Details Register */
#define REG_SMPU2_REVID                      0x31083220            /*  SMPU2 SMPU Revision ID Register */
#define REG_SMPU2_SECURECTL                  0x31083800            /*  SMPU2 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      EXA[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU2_EXACADD0                   0x310831A0            /*  SMPU2 Exclusive Access IDn Address */
#define REG_SMPU2_EXACADD1                   0x310831A8            /*  SMPU2 Exclusive Access IDn Address */
#define REG_SMPU2_EXACADD2                   0x310831B0            /*  SMPU2 Exclusive Access IDn Address */
#define REG_SMPU2_EXACADDn(i)                (REG_SMPU2_EXACADD0 + ((i) * 8))
#define REG_SMPU2_EXACADDn_COUNT             3
#define REG_SMPU2_EXACSTAT0                  0x310831A4            /*  SMPU2 Exclusive Access Status */
#define REG_SMPU2_EXACSTAT1                  0x310831AC            /*  SMPU2 Exclusive Access Status */
#define REG_SMPU2_EXACSTAT2                  0x310831B4            /*  SMPU2 Exclusive Access Status */
#define REG_SMPU2_EXACSTATn(i)               (REG_SMPU2_EXACSTAT0 + ((i) * 8))
#define REG_SMPU2_EXACSTATn_COUNT            3
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU2_RCTL0                      0x31083020            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL1                      0x31083038            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL2                      0x31083050            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL3                      0x31083068            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL4                      0x31083080            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL5                      0x31083098            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL6                      0x310830B0            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTL7                      0x310830C8            /*  SMPU2 Region n Control Register */
#define REG_SMPU2_RCTLn(i)                   (REG_SMPU2_RCTL0 + ((i) * 24))
#define REG_SMPU2_RCTLn_COUNT                8
#define REG_SMPU2_RADDR0                     0x31083024            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR1                     0x3108303C            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR2                     0x31083054            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR3                     0x3108306C            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR4                     0x31083084            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR5                     0x3108309C            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR6                     0x310830B4            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDR7                     0x310830CC            /*  SMPU2 Region n Address Register */
#define REG_SMPU2_RADDRn(i)                  (REG_SMPU2_RADDR0 + ((i) * 24))
#define REG_SMPU2_RADDRn_COUNT               8
#define REG_SMPU2_RIDA0                      0x31083028            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA1                      0x31083040            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA2                      0x31083058            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA3                      0x31083070            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA4                      0x31083088            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA5                      0x310830A0            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA6                      0x310830B8            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDA7                      0x310830D0            /*  SMPU2 Region n ID A Register */
#define REG_SMPU2_RIDAn(i)                   (REG_SMPU2_RIDA0 + ((i) * 24))
#define REG_SMPU2_RIDAn_COUNT                8
#define REG_SMPU2_RIDMSKA0                   0x3108302C            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA1                   0x31083044            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA2                   0x3108305C            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA3                   0x31083074            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA4                   0x3108308C            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA5                   0x310830A4            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA6                   0x310830BC            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKA7                   0x310830D4            /*  SMPU2 Region n ID Mask A Register */
#define REG_SMPU2_RIDMSKAn(i)                (REG_SMPU2_RIDMSKA0 + ((i) * 24))
#define REG_SMPU2_RIDMSKAn_COUNT             8
#define REG_SMPU2_RIDB0                      0x31083030            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB1                      0x31083048            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB2                      0x31083060            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB3                      0x31083078            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB4                      0x31083090            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB5                      0x310830A8            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB6                      0x310830C0            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDB7                      0x310830D8            /*  SMPU2 Region n ID B Register */
#define REG_SMPU2_RIDBn(i)                   (REG_SMPU2_RIDB0 + ((i) * 24))
#define REG_SMPU2_RIDBn_COUNT                8
#define REG_SMPU2_RIDMSKB0                   0x31083034            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB1                   0x3108304C            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB2                   0x31083064            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB3                   0x3108307C            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB4                   0x31083094            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB5                   0x310830AC            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB6                   0x310830C4            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKB7                   0x310830DC            /*  SMPU2 Region n ID Mask B Register */
#define REG_SMPU2_RIDMSKBn(i)                (REG_SMPU2_RIDMSKB0 + ((i) * 24))
#define REG_SMPU2_RIDMSKBn_COUNT             8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU2_SECURERCTL0                0x31083820            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL1                0x31083824            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL2                0x31083828            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL3                0x3108382C            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL4                0x31083830            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL5                0x31083834            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL6                0x31083838            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTL7                0x3108383C            /*  SMPU2 Region n Control Secure Accesses Register */
#define REG_SMPU2_SECURERCTLn(i)             (REG_SMPU2_SECURERCTL0 + ((i) * 4))
#define REG_SMPU2_SECURERCTLn_COUNT          8

/* ============================================================================================================================
        SMPU4
   ============================================================================================================================ */
#define REG_SMPU4_CTL                        0x31085000            /*  SMPU4 SMPU Control Register */
#define REG_SMPU4_STAT                       0x31085004            /*  SMPU4 SMPU Status Register */
#define REG_SMPU4_IADDR                      0x31085008            /*  SMPU4 Interrupt Address Register */
#define REG_SMPU4_IDTLS                      0x3108500C            /*  SMPU4 Interrupt Details Register */
#define REG_SMPU4_BADDR                      0x31085010            /*  SMPU4 Bus Error Address Register */
#define REG_SMPU4_BDTLS                      0x31085014            /*  SMPU4 Bus Error Details Register */
#define REG_SMPU4_REVID                      0x31085220            /*  SMPU4 SMPU Revision ID Register */
#define REG_SMPU4_SECURECTL                  0x31085800            /*  SMPU4 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      EXA[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU4_EXACADD0                   0x310851A0            /*  SMPU4 Exclusive Access IDn Address */
#define REG_SMPU4_EXACADD1                   0x310851A8            /*  SMPU4 Exclusive Access IDn Address */
#define REG_SMPU4_EXACADD2                   0x310851B0            /*  SMPU4 Exclusive Access IDn Address */
#define REG_SMPU4_EXACADDn(i)                (REG_SMPU4_EXACADD0 + ((i) * 8))
#define REG_SMPU4_EXACADDn_COUNT             3
#define REG_SMPU4_EXACSTAT0                  0x310851A4            /*  SMPU4 Exclusive Access Status */
#define REG_SMPU4_EXACSTAT1                  0x310851AC            /*  SMPU4 Exclusive Access Status */
#define REG_SMPU4_EXACSTAT2                  0x310851B4            /*  SMPU4 Exclusive Access Status */
#define REG_SMPU4_EXACSTATn(i)               (REG_SMPU4_EXACSTAT0 + ((i) * 8))
#define REG_SMPU4_EXACSTATn_COUNT            3
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU4_RCTL0                      0x31085020            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL1                      0x31085038            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL2                      0x31085050            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL3                      0x31085068            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL4                      0x31085080            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL5                      0x31085098            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL6                      0x310850B0            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTL7                      0x310850C8            /*  SMPU4 Region n Control Register */
#define REG_SMPU4_RCTLn(i)                   (REG_SMPU4_RCTL0 + ((i) * 24))
#define REG_SMPU4_RCTLn_COUNT                8
#define REG_SMPU4_RADDR0                     0x31085024            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR1                     0x3108503C            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR2                     0x31085054            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR3                     0x3108506C            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR4                     0x31085084            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR5                     0x3108509C            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR6                     0x310850B4            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDR7                     0x310850CC            /*  SMPU4 Region n Address Register */
#define REG_SMPU4_RADDRn(i)                  (REG_SMPU4_RADDR0 + ((i) * 24))
#define REG_SMPU4_RADDRn_COUNT               8
#define REG_SMPU4_RIDA0                      0x31085028            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA1                      0x31085040            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA2                      0x31085058            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA3                      0x31085070            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA4                      0x31085088            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA5                      0x310850A0            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA6                      0x310850B8            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDA7                      0x310850D0            /*  SMPU4 Region n ID A Register */
#define REG_SMPU4_RIDAn(i)                   (REG_SMPU4_RIDA0 + ((i) * 24))
#define REG_SMPU4_RIDAn_COUNT                8
#define REG_SMPU4_RIDMSKA0                   0x3108502C            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA1                   0x31085044            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA2                   0x3108505C            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA3                   0x31085074            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA4                   0x3108508C            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA5                   0x310850A4            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA6                   0x310850BC            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKA7                   0x310850D4            /*  SMPU4 Region n ID Mask A Register */
#define REG_SMPU4_RIDMSKAn(i)                (REG_SMPU4_RIDMSKA0 + ((i) * 24))
#define REG_SMPU4_RIDMSKAn_COUNT             8
#define REG_SMPU4_RIDB0                      0x31085030            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB1                      0x31085048            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB2                      0x31085060            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB3                      0x31085078            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB4                      0x31085090            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB5                      0x310850A8            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB6                      0x310850C0            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDB7                      0x310850D8            /*  SMPU4 Region n ID B Register */
#define REG_SMPU4_RIDBn(i)                   (REG_SMPU4_RIDB0 + ((i) * 24))
#define REG_SMPU4_RIDBn_COUNT                8
#define REG_SMPU4_RIDMSKB0                   0x31085034            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB1                   0x3108504C            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB2                   0x31085064            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB3                   0x3108507C            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB4                   0x31085094            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB5                   0x310850AC            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB6                   0x310850C4            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKB7                   0x310850DC            /*  SMPU4 Region n ID Mask B Register */
#define REG_SMPU4_RIDMSKBn(i)                (REG_SMPU4_RIDMSKB0 + ((i) * 24))
#define REG_SMPU4_RIDMSKBn_COUNT             8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU4_SECURERCTL0                0x31085820            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL1                0x31085824            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL2                0x31085828            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL3                0x3108582C            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL4                0x31085830            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL5                0x31085834            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL6                0x31085838            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTL7                0x3108583C            /*  SMPU4 Region n Control Secure Accesses Register */
#define REG_SMPU4_SECURERCTLn(i)             (REG_SMPU4_SECURERCTL0 + ((i) * 4))
#define REG_SMPU4_SECURERCTLn_COUNT          8

/* ============================================================================================================================
        SMPU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* ============================================================================================================================
 *    EXA[n] Register Field Definitions
 * ============================================================================================================================ */
/* ============================================================================================================================
 *    R[n] Register Field Definitions
 * ============================================================================================================================ */
/* ============================================================================================================================
 *    SECURERCTL[n] Register Field Definitions
 * ============================================================================================================================ */

/* ============================================================================================================================
        The System Memory Protection Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        SMPU3
   ============================================================================================================================ */
#define REG_SMPU3_CTL                        0x31084000            /*  SMPU3 SMPU Control Register */
#define REG_SMPU3_STAT                       0x31084004            /*  SMPU3 SMPU Status Register */
#define REG_SMPU3_IADDR                      0x31084008            /*  SMPU3 Interrupt Address Register */
#define REG_SMPU3_IDTLS                      0x3108400C            /*  SMPU3 Interrupt Details Register */
#define REG_SMPU3_BADDR                      0x31084010            /*  SMPU3 Bus Error Address Register */
#define REG_SMPU3_BDTLS                      0x31084014            /*  SMPU3 Bus Error Details Register */
#define REG_SMPU3_REVID                      0x31084220            /*  SMPU3 SMPU Revision ID Register */
#define REG_SMPU3_SECURECTL                  0x31084800            /*  SMPU3 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU3_RCTL0                      0x31084020            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL1                      0x31084038            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL2                      0x31084050            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL3                      0x31084068            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL4                      0x31084080            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL5                      0x31084098            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL6                      0x310840B0            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTL7                      0x310840C8            /*  SMPU3 Region n Control Register */
#define REG_SMPU3_RCTLn(i)                   (REG_SMPU3_RCTL0 + ((i) * 24))
#define REG_SMPU3_RCTLn_COUNT                8
#define REG_SMPU3_RADDR0                     0x31084024            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR1                     0x3108403C            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR2                     0x31084054            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR3                     0x3108406C            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR4                     0x31084084            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR5                     0x3108409C            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR6                     0x310840B4            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDR7                     0x310840CC            /*  SMPU3 Region n Address Register */
#define REG_SMPU3_RADDRn(i)                  (REG_SMPU3_RADDR0 + ((i) * 24))
#define REG_SMPU3_RADDRn_COUNT               8
#define REG_SMPU3_RIDA0                      0x31084028            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA1                      0x31084040            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA2                      0x31084058            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA3                      0x31084070            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA4                      0x31084088            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA5                      0x310840A0            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA6                      0x310840B8            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDA7                      0x310840D0            /*  SMPU3 Region n ID A Register */
#define REG_SMPU3_RIDAn(i)                   (REG_SMPU3_RIDA0 + ((i) * 24))
#define REG_SMPU3_RIDAn_COUNT                8
#define REG_SMPU3_RIDMSKA0                   0x3108402C            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA1                   0x31084044            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA2                   0x3108405C            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA3                   0x31084074            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA4                   0x3108408C            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA5                   0x310840A4            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA6                   0x310840BC            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKA7                   0x310840D4            /*  SMPU3 Region n ID Mask A Register */
#define REG_SMPU3_RIDMSKAn(i)                (REG_SMPU3_RIDMSKA0 + ((i) * 24))
#define REG_SMPU3_RIDMSKAn_COUNT             8
#define REG_SMPU3_RIDB0                      0x31084030            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB1                      0x31084048            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB2                      0x31084060            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB3                      0x31084078            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB4                      0x31084090            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB5                      0x310840A8            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB6                      0x310840C0            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDB7                      0x310840D8            /*  SMPU3 Region n ID B Register */
#define REG_SMPU3_RIDBn(i)                   (REG_SMPU3_RIDB0 + ((i) * 24))
#define REG_SMPU3_RIDBn_COUNT                8
#define REG_SMPU3_RIDMSKB0                   0x31084034            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB1                   0x3108404C            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB2                   0x31084064            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB3                   0x3108407C            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB4                   0x31084094            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB5                   0x310840AC            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB6                   0x310840C4            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKB7                   0x310840DC            /*  SMPU3 Region n ID Mask B Register */
#define REG_SMPU3_RIDMSKBn(i)                (REG_SMPU3_RIDMSKB0 + ((i) * 24))
#define REG_SMPU3_RIDMSKBn_COUNT             8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU3_SECURERCTL0                0x31084820            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL1                0x31084824            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL2                0x31084828            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL3                0x3108482C            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL4                0x31084830            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL5                0x31084834            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL6                0x31084838            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTL7                0x3108483C            /*  SMPU3 Region n Control Secure Accesses Register */
#define REG_SMPU3_SECURERCTLn(i)             (REG_SMPU3_SECURERCTL0 + ((i) * 4))
#define REG_SMPU3_SECURERCTLn_COUNT          8

/* ============================================================================================================================
        SMPU5
   ============================================================================================================================ */
#define REG_SMPU5_CTL                        0x31086000            /*  SMPU5 SMPU Control Register */
#define REG_SMPU5_STAT                       0x31086004            /*  SMPU5 SMPU Status Register */
#define REG_SMPU5_IADDR                      0x31086008            /*  SMPU5 Interrupt Address Register */
#define REG_SMPU5_IDTLS                      0x3108600C            /*  SMPU5 Interrupt Details Register */
#define REG_SMPU5_BADDR                      0x31086010            /*  SMPU5 Bus Error Address Register */
#define REG_SMPU5_BDTLS                      0x31086014            /*  SMPU5 Bus Error Details Register */
#define REG_SMPU5_REVID                      0x31086220            /*  SMPU5 SMPU Revision ID Register */
#define REG_SMPU5_SECURECTL                  0x31086800            /*  SMPU5 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU5_RCTL0                      0x31086020            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL1                      0x31086038            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL2                      0x31086050            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL3                      0x31086068            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL4                      0x31086080            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL5                      0x31086098            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL6                      0x310860B0            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTL7                      0x310860C8            /*  SMPU5 Region n Control Register */
#define REG_SMPU5_RCTLn(i)                   (REG_SMPU5_RCTL0 + ((i) * 24))
#define REG_SMPU5_RCTLn_COUNT                8
#define REG_SMPU5_RADDR0                     0x31086024            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR1                     0x3108603C            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR2                     0x31086054            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR3                     0x3108606C            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR4                     0x31086084            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR5                     0x3108609C            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR6                     0x310860B4            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDR7                     0x310860CC            /*  SMPU5 Region n Address Register */
#define REG_SMPU5_RADDRn(i)                  (REG_SMPU5_RADDR0 + ((i) * 24))
#define REG_SMPU5_RADDRn_COUNT               8
#define REG_SMPU5_RIDA0                      0x31086028            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA1                      0x31086040            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA2                      0x31086058            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA3                      0x31086070            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA4                      0x31086088            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA5                      0x310860A0            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA6                      0x310860B8            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDA7                      0x310860D0            /*  SMPU5 Region n ID A Register */
#define REG_SMPU5_RIDAn(i)                   (REG_SMPU5_RIDA0 + ((i) * 24))
#define REG_SMPU5_RIDAn_COUNT                8
#define REG_SMPU5_RIDMSKA0                   0x3108602C            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA1                   0x31086044            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA2                   0x3108605C            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA3                   0x31086074            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA4                   0x3108608C            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA5                   0x310860A4            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA6                   0x310860BC            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKA7                   0x310860D4            /*  SMPU5 Region n ID Mask A Register */
#define REG_SMPU5_RIDMSKAn(i)                (REG_SMPU5_RIDMSKA0 + ((i) * 24))
#define REG_SMPU5_RIDMSKAn_COUNT             8
#define REG_SMPU5_RIDB0                      0x31086030            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB1                      0x31086048            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB2                      0x31086060            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB3                      0x31086078            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB4                      0x31086090            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB5                      0x310860A8            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB6                      0x310860C0            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDB7                      0x310860D8            /*  SMPU5 Region n ID B Register */
#define REG_SMPU5_RIDBn(i)                   (REG_SMPU5_RIDB0 + ((i) * 24))
#define REG_SMPU5_RIDBn_COUNT                8
#define REG_SMPU5_RIDMSKB0                   0x31086034            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB1                   0x3108604C            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB2                   0x31086064            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB3                   0x3108607C            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB4                   0x31086094            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB5                   0x310860AC            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB6                   0x310860C4            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKB7                   0x310860DC            /*  SMPU5 Region n ID Mask B Register */
#define REG_SMPU5_RIDMSKBn(i)                (REG_SMPU5_RIDMSKB0 + ((i) * 24))
#define REG_SMPU5_RIDMSKBn_COUNT             8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU5_SECURERCTL0                0x31086820            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL1                0x31086824            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL2                0x31086828            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL3                0x3108682C            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL4                0x31086830            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL5                0x31086834            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL6                0x31086838            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTL7                0x3108683C            /*  SMPU5 Region n Control Secure Accesses Register */
#define REG_SMPU5_SECURERCTLn(i)             (REG_SMPU5_SECURERCTL0 + ((i) * 4))
#define REG_SMPU5_SECURERCTLn_COUNT          8

/* ============================================================================================================================
        SMPU6
   ============================================================================================================================ */
#define REG_SMPU6_CTL                        0x31087000            /*  SMPU6 SMPU Control Register */
#define REG_SMPU6_STAT                       0x31087004            /*  SMPU6 SMPU Status Register */
#define REG_SMPU6_IADDR                      0x31087008            /*  SMPU6 Interrupt Address Register */
#define REG_SMPU6_IDTLS                      0x3108700C            /*  SMPU6 Interrupt Details Register */
#define REG_SMPU6_BADDR                      0x31087010            /*  SMPU6 Bus Error Address Register */
#define REG_SMPU6_BDTLS                      0x31087014            /*  SMPU6 Bus Error Details Register */
#define REG_SMPU6_REVID                      0x31087220            /*  SMPU6 SMPU Revision ID Register */
#define REG_SMPU6_SECURECTL                  0x31087800            /*  SMPU6 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU6_RCTL0                      0x31087020            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL1                      0x31087038            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL2                      0x31087050            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL3                      0x31087068            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL4                      0x31087080            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL5                      0x31087098            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL6                      0x310870B0            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTL7                      0x310870C8            /*  SMPU6 Region n Control Register */
#define REG_SMPU6_RCTLn(i)                   (REG_SMPU6_RCTL0 + ((i) * 24))
#define REG_SMPU6_RCTLn_COUNT                8
#define REG_SMPU6_RADDR0                     0x31087024            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR1                     0x3108703C            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR2                     0x31087054            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR3                     0x3108706C            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR4                     0x31087084            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR5                     0x3108709C            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR6                     0x310870B4            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDR7                     0x310870CC            /*  SMPU6 Region n Address Register */
#define REG_SMPU6_RADDRn(i)                  (REG_SMPU6_RADDR0 + ((i) * 24))
#define REG_SMPU6_RADDRn_COUNT               8
#define REG_SMPU6_RIDA0                      0x31087028            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA1                      0x31087040            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA2                      0x31087058            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA3                      0x31087070            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA4                      0x31087088            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA5                      0x310870A0            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA6                      0x310870B8            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDA7                      0x310870D0            /*  SMPU6 Region n ID A Register */
#define REG_SMPU6_RIDAn(i)                   (REG_SMPU6_RIDA0 + ((i) * 24))
#define REG_SMPU6_RIDAn_COUNT                8
#define REG_SMPU6_RIDMSKA0                   0x3108702C            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA1                   0x31087044            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA2                   0x3108705C            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA3                   0x31087074            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA4                   0x3108708C            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA5                   0x310870A4            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA6                   0x310870BC            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKA7                   0x310870D4            /*  SMPU6 Region n ID Mask A Register */
#define REG_SMPU6_RIDMSKAn(i)                (REG_SMPU6_RIDMSKA0 + ((i) * 24))
#define REG_SMPU6_RIDMSKAn_COUNT             8
#define REG_SMPU6_RIDB0                      0x31087030            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB1                      0x31087048            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB2                      0x31087060            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB3                      0x31087078            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB4                      0x31087090            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB5                      0x310870A8            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB6                      0x310870C0            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDB7                      0x310870D8            /*  SMPU6 Region n ID B Register */
#define REG_SMPU6_RIDBn(i)                   (REG_SMPU6_RIDB0 + ((i) * 24))
#define REG_SMPU6_RIDBn_COUNT                8
#define REG_SMPU6_RIDMSKB0                   0x31087034            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB1                   0x3108704C            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB2                   0x31087064            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB3                   0x3108707C            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB4                   0x31087094            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB5                   0x310870AC            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB6                   0x310870C4            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKB7                   0x310870DC            /*  SMPU6 Region n ID Mask B Register */
#define REG_SMPU6_RIDMSKBn(i)                (REG_SMPU6_RIDMSKB0 + ((i) * 24))
#define REG_SMPU6_RIDMSKBn_COUNT             8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU6_SECURERCTL0                0x31087820            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL1                0x31087824            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL2                0x31087828            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL3                0x3108782C            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL4                0x31087830            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL5                0x31087834            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL6                0x31087838            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTL7                0x3108783C            /*  SMPU6 Region n Control Secure Accesses Register */
#define REG_SMPU6_SECURERCTLn(i)             (REG_SMPU6_SECURERCTL0 + ((i) * 4))
#define REG_SMPU6_SECURERCTLn_COUNT          8

/* ============================================================================================================================
        SMPU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* ============================================================================================================================
 *    EXA[n] Register Field Definitions
 * ============================================================================================================================ */
/* ============================================================================================================================
 *    R[n] Register Field Definitions
 * ============================================================================================================================ */
/* ============================================================================================================================
 *    SECURERCTL[n] Register Field Definitions
 * ============================================================================================================================ */

/* ============================================================================================================================
        System Event Controller
   ============================================================================================================================ */

/* ============================================================================================================================
        SEC0
   ============================================================================================================================ */
/* ============================================================================================================================
      CB Register Definitions
   ============================================================================================================================ */
#define REG_SEC0_CCTL1                       0x31089440            /*  SEC0 SCI Control Register n */
#define REG_SEC0_CCTL2                       0x31089480            /*  SEC0 SCI Control Register n */
#define REG_SEC0_CCTLn(i)                    (REG_SEC0_CCTL1 + ((i) * 64))
#define REG_SEC0_CCTLn_COUNT                 2
#define REG_SEC0_CSTAT1                      0x31089444            /*  SEC0 SCI Status Register n */
#define REG_SEC0_CSTAT2                      0x31089484            /*  SEC0 SCI Status Register n */
#define REG_SEC0_CSTATn(i)                   (REG_SEC0_CSTAT1 + ((i) * 64))
#define REG_SEC0_CSTATn_COUNT                2
#define REG_SEC0_CPND1                       0x31089448            /*  SEC0 Core Pending Register n */
#define REG_SEC0_CPND2                       0x31089488            /*  SEC0 Core Pending Register n */
#define REG_SEC0_CPNDn(i)                    (REG_SEC0_CPND1 + ((i) * 64))
#define REG_SEC0_CPNDn_COUNT                 2
#define REG_SEC0_CACT1                       0x3108944C            /*  SEC0 SCI Active Register n */
#define REG_SEC0_CACT2                       0x3108948C            /*  SEC0 SCI Active Register n */
#define REG_SEC0_CACTn(i)                    (REG_SEC0_CACT1 + ((i) * 64))
#define REG_SEC0_CACTn_COUNT                 2
#define REG_SEC0_CPMSK1                      0x31089450            /*  SEC0 SCI Priority Mask Register n */
#define REG_SEC0_CPMSK2                      0x31089490            /*  SEC0 SCI Priority Mask Register n */
#define REG_SEC0_CPMSKn(i)                   (REG_SEC0_CPMSK1 + ((i) * 64))
#define REG_SEC0_CPMSKn_COUNT                2
#define REG_SEC0_CGMSK1                      0x31089454            /*  SEC0 SCI Group Mask Register n */
#define REG_SEC0_CGMSK2                      0x31089494            /*  SEC0 SCI Group Mask Register n */
#define REG_SEC0_CGMSKn(i)                   (REG_SEC0_CGMSK1 + ((i) * 64))
#define REG_SEC0_CGMSKn_COUNT                2
#define REG_SEC0_CPLVL1                      0x31089458            /*  SEC0 SCI Priority Level Register n */
#define REG_SEC0_CPLVL2                      0x31089498            /*  SEC0 SCI Priority Level Register n */
#define REG_SEC0_CPLVLn(i)                   (REG_SEC0_CPLVL1 + ((i) * 64))
#define REG_SEC0_CPLVLn_COUNT                2
#define REG_SEC0_CSID1                       0x3108945C            /*  SEC0 SCI Source ID Register n */
#define REG_SEC0_CSID2                       0x3108949C            /*  SEC0 SCI Source ID Register n */
#define REG_SEC0_CSIDn(i)                    (REG_SEC0_CSID1 + ((i) * 64))
#define REG_SEC0_CSIDn_COUNT                 2
/* ============================================================================================================================
      SB Register Definitions
   ============================================================================================================================ */
#define REG_SEC0_SCTL0                       0x31089800            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL1                       0x31089808            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL2                       0x31089810            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL3                       0x31089818            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL4                       0x31089820            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL5                       0x31089828            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL6                       0x31089830            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL7                       0x31089838            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL8                       0x31089840            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL9                       0x31089848            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL10                      0x31089850            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL11                      0x31089858            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL12                      0x31089860            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL13                      0x31089868            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL14                      0x31089870            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL15                      0x31089878            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL16                      0x31089880            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL17                      0x31089888            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL18                      0x31089890            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL19                      0x31089898            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL20                      0x310898A0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL21                      0x310898A8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL22                      0x310898B0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL23                      0x310898B8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL24                      0x310898C0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL25                      0x310898C8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL26                      0x310898D0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL27                      0x310898D8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL28                      0x310898E0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL29                      0x310898E8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL30                      0x310898F0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL31                      0x310898F8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL32                      0x31089900            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL33                      0x31089908            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL34                      0x31089910            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL35                      0x31089918            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL36                      0x31089920            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL37                      0x31089928            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL38                      0x31089930            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL39                      0x31089938            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL40                      0x31089940            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL41                      0x31089948            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL42                      0x31089950            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL43                      0x31089958            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL44                      0x31089960            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL45                      0x31089968            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL46                      0x31089970            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL47                      0x31089978            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL48                      0x31089980            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL49                      0x31089988            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL50                      0x31089990            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL51                      0x31089998            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL52                      0x310899A0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL53                      0x310899A8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL54                      0x310899B0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL55                      0x310899B8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL56                      0x310899C0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL57                      0x310899C8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL58                      0x310899D0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL59                      0x310899D8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL60                      0x310899E0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL61                      0x310899E8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL62                      0x310899F0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL63                      0x310899F8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL64                      0x31089A00            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL65                      0x31089A08            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL66                      0x31089A10            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL67                      0x31089A18            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL68                      0x31089A20            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL69                      0x31089A28            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL70                      0x31089A30            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL71                      0x31089A38            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL72                      0x31089A40            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL73                      0x31089A48            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL74                      0x31089A50            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL75                      0x31089A58            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL76                      0x31089A60            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL77                      0x31089A68            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL78                      0x31089A70            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL79                      0x31089A78            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL80                      0x31089A80            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL81                      0x31089A88            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL82                      0x31089A90            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL83                      0x31089A98            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL84                      0x31089AA0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL85                      0x31089AA8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL86                      0x31089AB0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL87                      0x31089AB8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL88                      0x31089AC0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL89                      0x31089AC8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL90                      0x31089AD0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL91                      0x31089AD8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL92                      0x31089AE0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL93                      0x31089AE8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL94                      0x31089AF0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL95                      0x31089AF8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL96                      0x31089B00            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL97                      0x31089B08            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL98                      0x31089B10            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL99                      0x31089B18            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL100                     0x31089B20            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL101                     0x31089B28            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL102                     0x31089B30            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL103                     0x31089B38            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL104                     0x31089B40            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL105                     0x31089B48            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL106                     0x31089B50            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL107                     0x31089B58            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL108                     0x31089B60            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL109                     0x31089B68            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL110                     0x31089B70            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL111                     0x31089B78            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL112                     0x31089B80            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL113                     0x31089B88            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL114                     0x31089B90            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL115                     0x31089B98            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL116                     0x31089BA0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL117                     0x31089BA8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL118                     0x31089BB0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL119                     0x31089BB8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL120                     0x31089BC0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL121                     0x31089BC8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL122                     0x31089BD0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL123                     0x31089BD8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL124                     0x31089BE0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL125                     0x31089BE8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL126                     0x31089BF0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL127                     0x31089BF8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL128                     0x31089C00            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL129                     0x31089C08            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL130                     0x31089C10            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL131                     0x31089C18            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL132                     0x31089C20            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL133                     0x31089C28            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL134                     0x31089C30            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL135                     0x31089C38            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL136                     0x31089C40            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL137                     0x31089C48            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL138                     0x31089C50            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL139                     0x31089C58            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL140                     0x31089C60            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL141                     0x31089C68            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL142                     0x31089C70            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL143                     0x31089C78            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL144                     0x31089C80            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL145                     0x31089C88            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL146                     0x31089C90            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL147                     0x31089C98            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL148                     0x31089CA0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL149                     0x31089CA8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL150                     0x31089CB0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL151                     0x31089CB8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL152                     0x31089CC0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL153                     0x31089CC8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL154                     0x31089CD0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL155                     0x31089CD8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL156                     0x31089CE0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL157                     0x31089CE8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL158                     0x31089CF0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL159                     0x31089CF8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL160                     0x31089D00            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL161                     0x31089D08            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL162                     0x31089D10            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL163                     0x31089D18            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL164                     0x31089D20            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL165                     0x31089D28            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL166                     0x31089D30            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL167                     0x31089D38            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL168                     0x31089D40            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL169                     0x31089D48            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL170                     0x31089D50            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL171                     0x31089D58            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL172                     0x31089D60            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL173                     0x31089D68            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL174                     0x31089D70            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL175                     0x31089D78            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL176                     0x31089D80            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL177                     0x31089D88            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL178                     0x31089D90            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL179                     0x31089D98            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL180                     0x31089DA0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL181                     0x31089DA8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL182                     0x31089DB0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL183                     0x31089DB8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL184                     0x31089DC0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL185                     0x31089DC8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL186                     0x31089DD0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL187                     0x31089DD8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL188                     0x31089DE0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL189                     0x31089DE8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL190                     0x31089DF0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL191                     0x31089DF8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL192                     0x31089E00            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL193                     0x31089E08            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL194                     0x31089E10            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL195                     0x31089E18            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL196                     0x31089E20            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL197                     0x31089E28            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL198                     0x31089E30            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL199                     0x31089E38            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL200                     0x31089E40            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL201                     0x31089E48            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL202                     0x31089E50            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL203                     0x31089E58            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL204                     0x31089E60            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL205                     0x31089E68            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL206                     0x31089E70            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL207                     0x31089E78            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL208                     0x31089E80            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL209                     0x31089E88            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL210                     0x31089E90            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL211                     0x31089E98            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL212                     0x31089EA0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL213                     0x31089EA8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL214                     0x31089EB0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL215                     0x31089EB8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL216                     0x31089EC0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL217                     0x31089EC8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL218                     0x31089ED0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL219                     0x31089ED8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL220                     0x31089EE0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL221                     0x31089EE8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL222                     0x31089EF0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL223                     0x31089EF8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL224                     0x31089F00            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL225                     0x31089F08            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL226                     0x31089F10            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL227                     0x31089F18            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL228                     0x31089F20            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL229                     0x31089F28            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL230                     0x31089F30            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL231                     0x31089F38            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL232                     0x31089F40            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL233                     0x31089F48            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL234                     0x31089F50            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL235                     0x31089F58            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL236                     0x31089F60            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL237                     0x31089F68            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL238                     0x31089F70            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL239                     0x31089F78            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL240                     0x31089F80            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL241                     0x31089F88            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL242                     0x31089F90            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL243                     0x31089F98            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL244                     0x31089FA0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL245                     0x31089FA8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL246                     0x31089FB0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL247                     0x31089FB8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL248                     0x31089FC0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL249                     0x31089FC8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL250                     0x31089FD0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL251                     0x31089FD8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL252                     0x31089FE0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL253                     0x31089FE8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL254                     0x31089FF0            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTL255                     0x31089FF8            /*  SEC0 Source Control Register n */
#define REG_SEC0_SCTLn(i)                    (REG_SEC0_SCTL0 + ((i) * 8))
#define REG_SEC0_SCTLn_COUNT                 256
#define REG_SEC0_SSTAT0                      0x31089804            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT1                      0x3108980C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT2                      0x31089814            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT3                      0x3108981C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT4                      0x31089824            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT5                      0x3108982C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT6                      0x31089834            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT7                      0x3108983C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT8                      0x31089844            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT9                      0x3108984C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT10                     0x31089854            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT11                     0x3108985C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT12                     0x31089864            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT13                     0x3108986C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT14                     0x31089874            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT15                     0x3108987C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT16                     0x31089884            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT17                     0x3108988C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT18                     0x31089894            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT19                     0x3108989C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT20                     0x310898A4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT21                     0x310898AC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT22                     0x310898B4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT23                     0x310898BC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT24                     0x310898C4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT25                     0x310898CC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT26                     0x310898D4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT27                     0x310898DC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT28                     0x310898E4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT29                     0x310898EC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT30                     0x310898F4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT31                     0x310898FC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT32                     0x31089904            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT33                     0x3108990C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT34                     0x31089914            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT35                     0x3108991C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT36                     0x31089924            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT37                     0x3108992C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT38                     0x31089934            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT39                     0x3108993C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT40                     0x31089944            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT41                     0x3108994C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT42                     0x31089954            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT43                     0x3108995C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT44                     0x31089964            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT45                     0x3108996C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT46                     0x31089974            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT47                     0x3108997C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT48                     0x31089984            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT49                     0x3108998C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT50                     0x31089994            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT51                     0x3108999C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT52                     0x310899A4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT53                     0x310899AC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT54                     0x310899B4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT55                     0x310899BC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT56                     0x310899C4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT57                     0x310899CC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT58                     0x310899D4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT59                     0x310899DC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT60                     0x310899E4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT61                     0x310899EC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT62                     0x310899F4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT63                     0x310899FC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT64                     0x31089A04            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT65                     0x31089A0C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT66                     0x31089A14            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT67                     0x31089A1C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT68                     0x31089A24            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT69                     0x31089A2C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT70                     0x31089A34            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT71                     0x31089A3C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT72                     0x31089A44            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT73                     0x31089A4C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT74                     0x31089A54            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT75                     0x31089A5C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT76                     0x31089A64            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT77                     0x31089A6C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT78                     0x31089A74            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT79                     0x31089A7C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT80                     0x31089A84            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT81                     0x31089A8C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT82                     0x31089A94            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT83                     0x31089A9C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT84                     0x31089AA4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT85                     0x31089AAC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT86                     0x31089AB4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT87                     0x31089ABC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT88                     0x31089AC4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT89                     0x31089ACC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT90                     0x31089AD4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT91                     0x31089ADC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT92                     0x31089AE4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT93                     0x31089AEC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT94                     0x31089AF4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT95                     0x31089AFC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT96                     0x31089B04            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT97                     0x31089B0C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT98                     0x31089B14            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT99                     0x31089B1C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT100                    0x31089B24            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT101                    0x31089B2C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT102                    0x31089B34            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT103                    0x31089B3C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT104                    0x31089B44            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT105                    0x31089B4C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT106                    0x31089B54            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT107                    0x31089B5C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT108                    0x31089B64            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT109                    0x31089B6C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT110                    0x31089B74            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT111                    0x31089B7C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT112                    0x31089B84            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT113                    0x31089B8C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT114                    0x31089B94            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT115                    0x31089B9C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT116                    0x31089BA4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT117                    0x31089BAC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT118                    0x31089BB4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT119                    0x31089BBC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT120                    0x31089BC4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT121                    0x31089BCC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT122                    0x31089BD4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT123                    0x31089BDC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT124                    0x31089BE4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT125                    0x31089BEC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT126                    0x31089BF4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT127                    0x31089BFC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT128                    0x31089C04            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT129                    0x31089C0C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT130                    0x31089C14            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT131                    0x31089C1C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT132                    0x31089C24            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT133                    0x31089C2C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT134                    0x31089C34            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT135                    0x31089C3C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT136                    0x31089C44            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT137                    0x31089C4C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT138                    0x31089C54            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT139                    0x31089C5C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT140                    0x31089C64            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT141                    0x31089C6C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT142                    0x31089C74            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT143                    0x31089C7C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT144                    0x31089C84            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT145                    0x31089C8C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT146                    0x31089C94            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT147                    0x31089C9C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT148                    0x31089CA4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT149                    0x31089CAC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT150                    0x31089CB4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT151                    0x31089CBC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT152                    0x31089CC4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT153                    0x31089CCC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT154                    0x31089CD4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT155                    0x31089CDC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT156                    0x31089CE4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT157                    0x31089CEC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT158                    0x31089CF4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT159                    0x31089CFC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT160                    0x31089D04            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT161                    0x31089D0C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT162                    0x31089D14            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT163                    0x31089D1C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT164                    0x31089D24            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT165                    0x31089D2C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT166                    0x31089D34            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT167                    0x31089D3C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT168                    0x31089D44            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT169                    0x31089D4C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT170                    0x31089D54            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT171                    0x31089D5C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT172                    0x31089D64            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT173                    0x31089D6C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT174                    0x31089D74            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT175                    0x31089D7C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT176                    0x31089D84            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT177                    0x31089D8C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT178                    0x31089D94            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT179                    0x31089D9C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT180                    0x31089DA4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT181                    0x31089DAC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT182                    0x31089DB4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT183                    0x31089DBC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT184                    0x31089DC4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT185                    0x31089DCC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT186                    0x31089DD4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT187                    0x31089DDC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT188                    0x31089DE4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT189                    0x31089DEC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT190                    0x31089DF4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT191                    0x31089DFC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT192                    0x31089E04            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT193                    0x31089E0C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT194                    0x31089E14            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT195                    0x31089E1C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT196                    0x31089E24            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT197                    0x31089E2C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT198                    0x31089E34            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT199                    0x31089E3C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT200                    0x31089E44            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT201                    0x31089E4C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT202                    0x31089E54            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT203                    0x31089E5C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT204                    0x31089E64            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT205                    0x31089E6C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT206                    0x31089E74            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT207                    0x31089E7C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT208                    0x31089E84            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT209                    0x31089E8C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT210                    0x31089E94            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT211                    0x31089E9C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT212                    0x31089EA4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT213                    0x31089EAC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT214                    0x31089EB4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT215                    0x31089EBC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT216                    0x31089EC4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT217                    0x31089ECC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT218                    0x31089ED4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT219                    0x31089EDC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT220                    0x31089EE4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT221                    0x31089EEC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT222                    0x31089EF4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT223                    0x31089EFC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT224                    0x31089F04            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT225                    0x31089F0C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT226                    0x31089F14            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT227                    0x31089F1C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT228                    0x31089F24            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT229                    0x31089F2C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT230                    0x31089F34            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT231                    0x31089F3C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT232                    0x31089F44            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT233                    0x31089F4C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT234                    0x31089F54            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT235                    0x31089F5C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT236                    0x31089F64            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT237                    0x31089F6C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT238                    0x31089F74            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT239                    0x31089F7C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT240                    0x31089F84            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT241                    0x31089F8C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT242                    0x31089F94            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT243                    0x31089F9C            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT244                    0x31089FA4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT245                    0x31089FAC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT246                    0x31089FB4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT247                    0x31089FBC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT248                    0x31089FC4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT249                    0x31089FCC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT250                    0x31089FD4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT251                    0x31089FDC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT252                    0x31089FE4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT253                    0x31089FEC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT254                    0x31089FF4            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTAT255                    0x31089FFC            /*  SEC0 Source Status Register n */
#define REG_SEC0_SSTATn(i)                   (REG_SEC0_SSTAT0 + ((i) * 8))
#define REG_SEC0_SSTATn_COUNT                256
/* ============================================================================================================================
      SEC Fault Management Interface (SFI) Register Definitions
   ============================================================================================================================ */
#define REG_SEC0_FCTL                        0x31089010            /*  SEC0 Fault Control Register */
#define REG_SEC0_FSTAT                       0x31089014            /*  SEC0 Fault Status Register */
#define REG_SEC0_FSID                        0x31089018            /*  SEC0 Fault Source ID Register */
#define REG_SEC0_FEND                        0x3108901C            /*  SEC0 Fault End Register */
#define REG_SEC0_FDLY                        0x31089020            /*  SEC0 Fault Delay Register */
#define REG_SEC0_FDLY_CUR                    0x31089024            /*  SEC0 Fault Delay Current Register */
#define REG_SEC0_FSRDLY                      0x31089028            /*  SEC0 Fault System Reset Delay Register */
#define REG_SEC0_FSRDLY_CUR                  0x3108902C            /*  SEC0 Fault System Reset Delay Current Register */
#define REG_SEC0_FCOPP                       0x31089030            /*  SEC0 Fault COP Period Register */
#define REG_SEC0_FCOPP_CUR                   0x31089034            /*  SEC0 Fault COP Period Current Register */
/* ============================================================================================================================
      SEC Global Register Definitions
   ============================================================================================================================ */
#define REG_SEC0_GCTL                        0x31089000            /*  SEC0 Global Control Register */
#define REG_SEC0_GSTAT                       0x31089004            /*  SEC0 Global Status Register */
#define REG_SEC0_RAISE                       0x31089008            /*  SEC0 Global Raise Register */
#define REG_SEC0_END                         0x3108900C            /*  SEC0 Global End Register */

/* ============================================================================================================================
        SEC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* ============================================================================================================================
 *    CB Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CCTL[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CCTL_LOCK                   31            /*  Lock */
#define BITP_SEC_CCTL_NMIEN                  16            /*  NMI Enable */
#define BITP_SEC_CCTL_WFI                    12            /*  Wait For Idle */
#define BITP_SEC_CCTL_RESET                   1            /*  Reset */
#define BITP_SEC_CCTL_EN                      0            /*  Enable */
#define BITM_SEC_CCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_CCTL_NMIEN                  (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  NMI Enable */
#define BITM_SEC_CCTL_WFI                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Wait For Idle */
#define BITM_SEC_CCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Reset */
#define BITM_SEC_CCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */
#define ENUM_SEC_CCTL_UNLOCK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_SEC_CCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_SEC_CCTL_NMI_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  NMIEN: Disable */
#define ENUM_SEC_CCTL_NMI_EN                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  NMIEN: Enable */
#define ENUM_SEC_CCTL_NO_WAITIDLE            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WFI: No Action */
#define ENUM_SEC_CCTL_WAITIDLE               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  WFI: Wait for Idle */
#define ENUM_SEC_CCTL_NO_RESET               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RESET: No Action */
#define ENUM_SEC_CCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RESET: Reset */
#define ENUM_SEC_CCTL_DIS                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_SEC_CCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CSTAT[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CSTAT_NMI                   16            /*  Non-Maskable Interrupt */
#define BITP_SEC_CSTAT_WFI                   12            /*  Wait For Idle */
#define BITP_SEC_CSTAT_SIDV                  10            /*  SID Valid */
#define BITP_SEC_CSTAT_ACTV                   9            /*  ACT Valid */
#define BITP_SEC_CSTAT_PNDV                   8            /*  PND Valid */
#define BITP_SEC_CSTAT_ERRC                   4            /*  Error Cause */
#define BITP_SEC_CSTAT_ERR                    1            /*  Error */
#define BITM_SEC_CSTAT_NMI                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Non-Maskable Interrupt */
#define BITM_SEC_CSTAT_WFI                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Wait For Idle */
#define BITM_SEC_CSTAT_SIDV                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SID Valid */
#define BITM_SEC_CSTAT_ACTV                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ACT Valid */
#define BITM_SEC_CSTAT_PNDV                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  PND Valid */
#define BITM_SEC_CSTAT_ERRC                  (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Error Cause */
#define BITM_SEC_CSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Error */
#define ENUM_SEC_CSTAT_NO_NMI                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  NMI: No NMI Occurred */
#define ENUM_SEC_CSTAT_NMI                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  NMI: NMI Occurred */
#define ENUM_SEC_CSTAT_NOT_WAITING           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  WFI: Not Waiting */
#define ENUM_SEC_CSTAT_WAITING               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  WFI: Waiting */
#define ENUM_SEC_CSTAT_INVALID_SID           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SIDV: Invalid */
#define ENUM_SEC_CSTAT_VALID_SID             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SIDV: Valid */
#define ENUM_SEC_CSTAT_INVALID_ACT           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ACTV: Invalid */
#define ENUM_SEC_CSTAT_VALID_ACT             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ACTV: Valid */
#define ENUM_SEC_CSTAT_INVALID_PND           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PNDV: Invalid */
#define ENUM_SEC_CSTAT_VALID_PND             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  PNDV: Valid */
#define ENUM_SEC_CSTAT_ACKERR                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ERRC: Acknowledge Error. */
#define ENUM_SEC_CSTAT_NO_ERR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERR: No Error */
#define ENUM_SEC_CSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  ERR: Error Occurred */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CPND[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CPND_PRIO                    8            /*  Highest Pending IRQ Priority */
#define BITP_SEC_CPND_SID                     0            /*  Highest Pending IRQ Source ID */
#define BITM_SEC_CPND_PRIO                   (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Highest Pending IRQ Priority */
#define BITM_SEC_CPND_SID                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Highest Pending IRQ Source ID */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CACT[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CACT_PRIO                    8            /*  Highest Active IRQ Priority */
#define BITP_SEC_CACT_SID                     0            /*  Highest Active IRQ Source ID */
#define BITM_SEC_CACT_PRIO                   (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Highest Active IRQ Priority */
#define BITM_SEC_CACT_SID                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Highest Active IRQ Source ID */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CPMSK[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CPMSK_LOCK                  31            /*  Lock */
#define BITP_SEC_CPMSK_PRIO                   0            /*  IRQ Priority Mask */
#define BITM_SEC_CPMSK_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_CPMSK_PRIO                  (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  IRQ Priority Mask */
#define ENUM_SEC_CPMSK_UNLOCK                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_SEC_CPMSK_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CGMSK[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CGMSK_LOCK                  31            /*  Lock */
#define BITP_SEC_CGMSK_UGRP                   8            /*  Ungrouped Mask */
#define BITP_SEC_CGMSK_GRP                    0            /*  Grouped Mask */
#define BITM_SEC_CGMSK_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_CGMSK_UGRP                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Ungrouped Mask */
#define BITM_SEC_CGMSK_GRP                   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Grouped Mask */
#define ENUM_SEC_CGMSK_UNLOCK                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_SEC_CGMSK_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_SEC_CGMSK_UNMASK                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  UGRP: Unmask Ungrouped Sources */
#define ENUM_SEC_CGMSK_MASK                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  UGRP: Mask Ungrouped Sources */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CPLVL[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CPLVL_LOCK                  31            /*  Lock */
#define BITP_SEC_CPLVL_PLVL                   0            /*  Priority Levels */
#define BITM_SEC_CPLVL_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_CPLVL_PLVL                  (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Priority Levels */
#define ENUM_SEC_CPLVL_UNLOCK                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_SEC_CPLVL_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_CSID[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_CSID_SID                     0            /*  Source ID */
#define BITM_SEC_CSID_SID                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Source ID */

/* ============================================================================================================================
 *    SB Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SEC_SCTL[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_SCTL_LOCK                   31            /*  Lock */
#define BITP_SEC_SCTL_CTG                    24            /*  Core Target Select */
#define BITP_SEC_SCTL_GRP                    16            /*  Group Select */
#define BITP_SEC_SCTL_PRIO                    8            /*  Priority Level Select */
#define BITP_SEC_SCTL_ERREN                   4            /*  Error Enable */
#define BITP_SEC_SCTL_ES                      3            /*  Edge Select */
#define BITP_SEC_SCTL_SEN                     2            /*  Source (signal) Enable */
#define BITP_SEC_SCTL_FEN                     1            /*  Fault Enable */
#define BITP_SEC_SCTL_IEN                     0            /*  Interrupt Enable */
#define BITM_SEC_SCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_SCTL_CTG                    (_ADI_MSK_3(0x0F000000,0x0F000000UL, uint32_t  ))    /*  Core Target Select */
#define BITM_SEC_SCTL_GRP                    (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Group Select */
#define BITM_SEC_SCTL_PRIO                   (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Priority Level Select */
#define BITM_SEC_SCTL_ERREN                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Error Enable */
#define BITM_SEC_SCTL_ES                     (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Edge Select */
#define BITM_SEC_SCTL_SEN                    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Source (signal) Enable */
#define BITM_SEC_SCTL_FEN                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Fault Enable */
#define BITM_SEC_SCTL_IEN                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Interrupt Enable */
#define ENUM_SEC_SCTL_UNLOCK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_SEC_SCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_SEC_SCTL_ERR_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERREN: Disable */
#define ENUM_SEC_SCTL_ERR_EN                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ERREN: Enable */
#define ENUM_SEC_SCTL_LEVEL                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ES: Level Sensitive */
#define ENUM_SEC_SCTL_EDGE                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  ES: Edge Sensitive */
#define ENUM_SEC_SCTL_SRC_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SEN: Disable */
#define ENUM_SEC_SCTL_SRC_EN                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SEN: Enable */
#define ENUM_SEC_SCTL_FAULT_DIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FEN: Disable */
#define ENUM_SEC_SCTL_FAULT_EN               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  FEN: Enable */
#define ENUM_SEC_SCTL_INT_DIS                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IEN: Disable */
#define ENUM_SEC_SCTL_INT_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  IEN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_SSTAT[n]                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_SSTAT_CHID                  16            /*  Channel ID */
#define BITP_SEC_SSTAT_ACT                    9            /*  Active Source */
#define BITP_SEC_SSTAT_PND                    8            /*  Pending Source */
#define BITP_SEC_SSTAT_ERRC                   4            /*  Error Cause */
#define BITP_SEC_SSTAT_ERR                    1            /*  Error */
#define BITM_SEC_SSTAT_CHID                  (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Channel ID */
#define BITM_SEC_SSTAT_ACT                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Active Source */
#define BITM_SEC_SSTAT_PND                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pending Source */
#define BITM_SEC_SSTAT_ERRC                  (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Error Cause */
#define BITM_SEC_SSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Error */
#define ENUM_SEC_SSTAT_NO_SRC                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ACT: Not Active */
#define ENUM_SEC_SSTAT_ACTIVE_SRC            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ACT: Active */
#define ENUM_SEC_SSTAT_NOTPENDING            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PND: Not Pending */
#define ENUM_SEC_SSTAT_PENDING               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  PND: Pending */
#define ENUM_SEC_SSTAT_SOVFERR               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRC: Source Overflow Error */
#define ENUM_SEC_SSTAT_ENDERR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  ERRC: End Error */
#define ENUM_SEC_SSTAT_NO_ERR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERR: No Error */
#define ENUM_SEC_SSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  ERR: Error Occurred */

/* ============================================================================================================================
 *    SEC Fault Management Interface (SFI) Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FCTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FCTL_LOCK                   31            /*  Lock */
#define BITP_SEC_FCTL_TES                    13            /*  Trigger Event Select */
#define BITP_SEC_FCTL_CMS                    12            /*  COP Mode Select */
#define BITP_SEC_FCTL_FIEN                    7            /*  Fault Input Enable */
#define BITP_SEC_FCTL_SREN                    6            /*  System Reset Enable */
#define BITP_SEC_FCTL_TOEN                    5            /*  Trigger Output Enable */
#define BITP_SEC_FCTL_FOEN                    4            /*  Fault Output Enable */
#define BITP_SEC_FCTL_RESET                   1            /*  Reset */
#define BITP_SEC_FCTL_EN                      0            /*  Enable */
#define BITM_SEC_FCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_FCTL_TES                    (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Trigger Event Select */
#define BITM_SEC_FCTL_CMS                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  COP Mode Select */
#define BITM_SEC_FCTL_FIEN                   (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Fault Input Enable */
#define BITM_SEC_FCTL_SREN                   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  System Reset Enable */
#define BITM_SEC_FCTL_TOEN                   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Trigger Output Enable */
#define BITM_SEC_FCTL_FOEN                   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Fault Output Enable */
#define BITM_SEC_FCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Reset */
#define BITM_SEC_FCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */
#define ENUM_SEC_FCTL_UNLOCK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: UnLock */
#define ENUM_SEC_FCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_SEC_FCTL_FLTACT_MODE            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TES: Fault Active Mode */
#define ENUM_SEC_FCTL_FLTPND_MODE            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  TES: Fault Pending Mode */
#define ENUM_SEC_FCTL_FLT_MODE               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CMS: Fault Mode */
#define ENUM_SEC_FCTL_COP_MODE               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  CMS: COP Mode */
#define ENUM_SEC_FCTL_FLTIN_DIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FIEN: Disable */
#define ENUM_SEC_FCTL_FLTIN_EN               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  FIEN: Enable */
#define ENUM_SEC_FCTL_SYSRST_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SREN: Disable */
#define ENUM_SEC_FCTL_SYSRST_EN              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  SREN: Enable */
#define ENUM_SEC_FCTL_TRGOUT_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TOEN: Disable */
#define ENUM_SEC_FCTL_TRGOUT_EN              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  TOEN: Enable */
#define ENUM_SEC_FCTL_FLTOUT_DIS             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FOEN: Disable */
#define ENUM_SEC_FCTL_FLTOUT_EN              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  FOEN: Enable */
#define ENUM_SEC_FCTL_NO_RESET               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RESET: No Action */
#define ENUM_SEC_FCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RESET: Reset */
#define ENUM_SEC_FCTL_DIS                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_SEC_FCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FSTAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FSTAT_NPND                  10            /*  Next Pending Fault */
#define BITP_SEC_FSTAT_ACT                    9            /*  Fault Active */
#define BITP_SEC_FSTAT_PND                    8            /*  Pending Fault */
#define BITP_SEC_FSTAT_ERRC                   4            /*  Error Cause */
#define BITP_SEC_FSTAT_ERR                    1            /*  Error */
#define BITM_SEC_FSTAT_NPND                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Next Pending Fault */
#define BITM_SEC_FSTAT_ACT                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Fault Active */
#define BITM_SEC_FSTAT_PND                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pending Fault */
#define BITM_SEC_FSTAT_ERRC                  (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Error Cause */
#define BITM_SEC_FSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Error */
#define ENUM_SEC_FSTAT_NO_NXTFLT             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  NPND: Not Pending */
#define ENUM_SEC_FSTAT_NXTFLT                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  NPND: Pending */
#define ENUM_SEC_FSTAT_NO_FLTACT             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ACT: No Fault */
#define ENUM_SEC_FSTAT_FLTACT                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  ACT: Active Fault */
#define ENUM_SEC_FSTAT_NO_FLTPND             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PND: Not Pending */
#define ENUM_SEC_FSTAT_FLTPND                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  PND: Pending */
#define ENUM_SEC_FSTAT_SOVFERR               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRC: Source Overflow Error */
#define ENUM_SEC_FSTAT_ENDERR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  ERRC: End Error */
#define ENUM_SEC_FSTAT_NO_ERR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERR: No Error */
#define ENUM_SEC_FSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  ERR: Error Occurred */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FSID                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FSID_FEXT                   16            /*  Fault External */
#define BITP_SEC_FSID_SID                     0            /*  Source ID */
#define BITM_SEC_FSID_FEXT                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Fault External */
#define BITM_SEC_FSID_SID                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Source ID */
#define ENUM_SEC_FSID_SRC_INTFLT             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FEXT: Fault Internal */
#define ENUM_SEC_FSID_SRC_EXTFLT             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  FEXT: Fault External */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FEND                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FEND_FEXT                   16            /*  Fault External */
#define BITP_SEC_FEND_SID                     0            /*  Source ID */
#define BITM_SEC_FEND_FEXT                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Fault External */
#define BITM_SEC_FEND_SID                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Source ID */
#define ENUM_SEC_FEND_END_INTFLT             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FEXT: Fault Internal */
#define ENUM_SEC_FEND_END_EXTFLT             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  FEXT: Fault External */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FDLY                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FDLY_COUNT                   0            /*  Fault Delay */
#define BITM_SEC_FDLY_COUNT                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Fault Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FDLY_CUR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FDLY_CUR_COUNT               0            /*  Fault Delay */
#define BITM_SEC_FDLY_CUR_COUNT              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Fault Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FSRDLY                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FSRDLY_COUNT                 0            /*  Fault System Reset Delay */
#define BITM_SEC_FSRDLY_COUNT                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Fault System Reset Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FSRDLY_CUR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FSRDLY_CUR_COUNT             0            /*  Fault System Reset Delay */
#define BITM_SEC_FSRDLY_CUR_COUNT            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Fault System Reset Delay */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FCOPP                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FCOPP_COUNT                  0            /*  Fault COP Period */
#define BITM_SEC_FCOPP_COUNT                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Fault COP Period */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_FCOPP_CUR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_FCOPP_CUR_COUNT              0            /*  Fault COP Period */
#define BITM_SEC_FCOPP_CUR_COUNT             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Fault COP Period */

/* ============================================================================================================================
 *    SEC Global Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SEC_GCTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_GCTL_LOCK                   31            /*  Lock */
#define BITP_SEC_GCTL_RESET                   1            /*  Reset */
#define BITP_SEC_GCTL_EN                      0            /*  Enable */
#define BITM_SEC_GCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_SEC_GCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Reset */
#define BITM_SEC_GCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */
#define ENUM_SEC_GCTL_UNLOCK                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_SEC_GCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_SEC_GCTL_NO_RESET               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RESET: No Action */
#define ENUM_SEC_GCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RESET: Reset */
#define ENUM_SEC_GCTL_DIS                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: Disable */
#define ENUM_SEC_GCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_GSTAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_GSTAT_LWERR                 31            /*  Lock Write Error */
#define BITP_SEC_GSTAT_ADRERR                30            /*  Address Error */
#define BITP_SEC_GSTAT_SID                   16            /*  Source ID for SSI Error */
#define BITP_SEC_GSTAT_SCI                    8            /*  SCI ID for SCI Error */
#define BITP_SEC_GSTAT_ERRC                   4            /*  Error Cause */
#define BITP_SEC_GSTAT_ERR                    1            /*  Error */
#define BITM_SEC_GSTAT_LWERR                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_SEC_GSTAT_ADRERR                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Address Error */
#define BITM_SEC_GSTAT_SID                   (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Source ID for SSI Error */
#define BITM_SEC_GSTAT_SCI                   (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  SCI ID for SCI Error */
#define BITM_SEC_GSTAT_ERRC                  (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Error Cause */
#define BITM_SEC_GSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Error */
#define ENUM_SEC_GSTAT_NO_LWERR              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Error */
#define ENUM_SEC_GSTAT_LWERR                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LWERR: Error Occurred */
#define ENUM_SEC_GSTAT_NO_ADRERR             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ADRERR: No Error */
#define ENUM_SEC_GSTAT_ADRERR                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  ADRERR: Error Occurred */
#define ENUM_SEC_GSTAT_SFIERR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERRC: SFI Error */
#define ENUM_SEC_GSTAT_SCIERR                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ERRC: SCI Error */
#define ENUM_SEC_GSTAT_SSIERR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  ERRC: SSI Error */
#define ENUM_SEC_GSTAT_NO_ERR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ERR: No Error */
#define ENUM_SEC_GSTAT_ERR                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  ERR: Error Occurred */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_RAISE                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_RAISE_SID                    0            /*  Source ID */
#define BITM_SEC_RAISE_SID                   (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Source ID */

/* -------------------------------------------------------------------------------------------------------------------------
          SEC_END                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SEC_END_SID                      0            /*  Source ID IRQ to End */
#define BITM_SEC_END_SID                     (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Source ID IRQ to End */


/* ============================================================================================================================
        Trigger Routing Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        TRU0
   ============================================================================================================================ */
#define REG_TRU0_MTR                         0x3108A7E0            /*  TRU0 Master Trigger Register */
#define REG_TRU0_ERRADDR                     0x3108A7E8            /*  TRU0 Error Address Register */
#define REG_TRU0_STAT                        0x3108A7EC            /*  TRU0 Status Information Register */
#define REG_TRU0_GCTL                        0x3108A7F4            /*  TRU0 Global Control Register */
/* ============================================================================================================================
      SSRBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRU0_SSR0                        0x3108A000            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR1                        0x3108A004            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR2                        0x3108A008            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR3                        0x3108A00C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR4                        0x3108A010            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR5                        0x3108A014            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR6                        0x3108A018            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR7                        0x3108A01C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR8                        0x3108A020            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR9                        0x3108A024            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR10                       0x3108A028            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR11                       0x3108A02C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR12                       0x3108A030            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR13                       0x3108A034            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR14                       0x3108A038            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR15                       0x3108A03C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR16                       0x3108A040            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR17                       0x3108A044            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR18                       0x3108A048            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR19                       0x3108A04C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR20                       0x3108A050            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR21                       0x3108A054            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR22                       0x3108A058            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR23                       0x3108A05C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR24                       0x3108A060            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR25                       0x3108A064            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR26                       0x3108A068            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR27                       0x3108A06C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR28                       0x3108A070            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR29                       0x3108A074            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR30                       0x3108A078            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR31                       0x3108A07C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR32                       0x3108A080            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR33                       0x3108A084            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR34                       0x3108A088            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR35                       0x3108A08C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR36                       0x3108A090            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR37                       0x3108A094            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR38                       0x3108A098            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR39                       0x3108A09C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR40                       0x3108A0A0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR41                       0x3108A0A4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR42                       0x3108A0A8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR43                       0x3108A0AC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR44                       0x3108A0B0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR45                       0x3108A0B4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR46                       0x3108A0B8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR47                       0x3108A0BC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR48                       0x3108A0C0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR49                       0x3108A0C4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR50                       0x3108A0C8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR51                       0x3108A0CC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR52                       0x3108A0D0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR53                       0x3108A0D4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR54                       0x3108A0D8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR55                       0x3108A0DC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR56                       0x3108A0E0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR57                       0x3108A0E4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR58                       0x3108A0E8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR59                       0x3108A0EC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR60                       0x3108A0F0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR61                       0x3108A0F4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR62                       0x3108A0F8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR63                       0x3108A0FC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR64                       0x3108A100            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR65                       0x3108A104            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR66                       0x3108A108            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR67                       0x3108A10C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR68                       0x3108A110            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR69                       0x3108A114            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR70                       0x3108A118            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR71                       0x3108A11C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR72                       0x3108A120            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR73                       0x3108A124            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR74                       0x3108A128            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR75                       0x3108A12C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR76                       0x3108A130            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR77                       0x3108A134            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR78                       0x3108A138            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR79                       0x3108A13C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR80                       0x3108A140            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR81                       0x3108A144            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR82                       0x3108A148            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR83                       0x3108A14C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR84                       0x3108A150            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR85                       0x3108A154            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR86                       0x3108A158            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR87                       0x3108A15C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR88                       0x3108A160            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR89                       0x3108A164            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR90                       0x3108A168            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR91                       0x3108A16C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR92                       0x3108A170            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR93                       0x3108A174            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR94                       0x3108A178            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR95                       0x3108A17C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR96                       0x3108A180            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR97                       0x3108A184            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR98                       0x3108A188            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR99                       0x3108A18C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR100                      0x3108A190            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR101                      0x3108A194            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR102                      0x3108A198            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR103                      0x3108A19C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR104                      0x3108A1A0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR105                      0x3108A1A4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR106                      0x3108A1A8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR107                      0x3108A1AC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR108                      0x3108A1B0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR109                      0x3108A1B4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR110                      0x3108A1B8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR111                      0x3108A1BC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR112                      0x3108A1C0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR113                      0x3108A1C4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR114                      0x3108A1C8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR115                      0x3108A1CC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR116                      0x3108A1D0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR117                      0x3108A1D4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR118                      0x3108A1D8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR119                      0x3108A1DC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR120                      0x3108A1E0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR121                      0x3108A1E4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR122                      0x3108A1E8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR123                      0x3108A1EC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR124                      0x3108A1F0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR125                      0x3108A1F4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR126                      0x3108A1F8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR127                      0x3108A1FC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR128                      0x3108A200            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR129                      0x3108A204            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR130                      0x3108A208            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR131                      0x3108A20C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR132                      0x3108A210            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR133                      0x3108A214            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR134                      0x3108A218            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR135                      0x3108A21C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR136                      0x3108A220            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR137                      0x3108A224            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR138                      0x3108A228            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR139                      0x3108A22C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR140                      0x3108A230            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR141                      0x3108A234            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR142                      0x3108A238            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR143                      0x3108A23C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR144                      0x3108A240            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR145                      0x3108A244            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR146                      0x3108A248            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR147                      0x3108A24C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR148                      0x3108A250            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR149                      0x3108A254            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR150                      0x3108A258            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR151                      0x3108A25C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR152                      0x3108A260            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR153                      0x3108A264            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR154                      0x3108A268            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR155                      0x3108A26C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR156                      0x3108A270            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR157                      0x3108A274            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR158                      0x3108A278            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR159                      0x3108A27C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR160                      0x3108A280            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR161                      0x3108A284            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR162                      0x3108A288            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR163                      0x3108A28C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR164                      0x3108A290            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR165                      0x3108A294            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR166                      0x3108A298            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR167                      0x3108A29C            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR168                      0x3108A2A0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR169                      0x3108A2A4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR170                      0x3108A2A8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR171                      0x3108A2AC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR172                      0x3108A2B0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR173                      0x3108A2B4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR174                      0x3108A2B8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR175                      0x3108A2BC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR176                      0x3108A2C0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR177                      0x3108A2C4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR178                      0x3108A2C8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR179                      0x3108A2CC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR180                      0x3108A2D0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR181                      0x3108A2D4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR182                      0x3108A2D8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR183                      0x3108A2DC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR184                      0x3108A2E0            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR185                      0x3108A2E4            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR186                      0x3108A2E8            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSR187                      0x3108A2EC            /*  TRU0 Slave Select Register */
#define REG_TRU0_SSRn(i)                     (REG_TRU0_SSR0 + ((i) * 4))
#define REG_TRU0_SSRn_COUNT                  188

/* ============================================================================================================================
        TRU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRU_MTR                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRU_MTR_MTR3                    24            /*  Master Trigger Register 3 */
#define BITP_TRU_MTR_MTR2                    16            /*  Master Trigger Register 2 */
#define BITP_TRU_MTR_MTR1                     8            /*  Master Trigger Register 1 */
#define BITP_TRU_MTR_MTR0                     0            /*  Master Trigger Register 0 */
#define BITM_TRU_MTR_MTR3                    (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Master Trigger Register 3 */
#define BITM_TRU_MTR_MTR2                    (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Master Trigger Register 2 */
#define BITM_TRU_MTR_MTR1                    (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Master Trigger Register 1 */
#define BITM_TRU_MTR_MTR0                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Master Trigger Register 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          TRU_ERRADDR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRU_ERRADDR_ADDR                 0            /*  Error Address */
#define BITM_TRU_ERRADDR_ADDR                (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))    /*  Error Address */

/* -------------------------------------------------------------------------------------------------------------------------
          TRU_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRU_STAT_ADDRERR                 1            /*  Address Error Status */
#define BITP_TRU_STAT_LWERR                   0            /*  Lock Write Error Status */
#define BITM_TRU_STAT_ADDRERR                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Address Error Status */
#define BITM_TRU_STAT_LWERR                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Lock Write Error Status */

/* -------------------------------------------------------------------------------------------------------------------------
          TRU_GCTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRU_GCTL_LOCK                   31            /*  GCTL Lock Bit */
#define BITP_TRU_GCTL_MTRL                    2            /*  MTR Lock Bit */
#define BITP_TRU_GCTL_RESET                   1            /*  Soft Reset */
#define BITP_TRU_GCTL_EN                      0            /*  Non-MMR Enable */
#define BITM_TRU_GCTL_LOCK                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  GCTL Lock Bit */
#define BITM_TRU_GCTL_MTRL                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  MTR Lock Bit */
#define BITM_TRU_GCTL_RESET                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Soft Reset */
#define BITM_TRU_GCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Non-MMR Enable */

/* ============================================================================================================================
 *    SSRBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRU_SSR[n]                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRU_SSR_LOCK                    31            /*  SSRn Lock */
#define BITP_TRU_SSR_SSR                      0            /*  SSRn Slave Select */
#define BITM_TRU_SSR_LOCK                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  SSRn Lock */
#define BITM_TRU_SSR_SSR                     (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  SSRn Slave Select */


/* ============================================================================================================================
        System Protection Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        SPU0
   ============================================================================================================================ */
#define REG_SPU0_CTL                         0x3108B000            /*  SPU0 Control Register */
#define REG_SPU0_STAT                        0x3108B004            /*  SPU0 Status Register */
#define REG_SPU0_SECURECTL                   0x3108B840            /*  SPU0 Secure Control Register */
#define REG_SPU0_SECURECHK                   0x3108B84C            /*  SPU0 Secure Check Register */
/* ============================================================================================================================
      SECC_BLOCK Register Definitions
   ============================================================================================================================ */
#define REG_SPU0_SECUREC0                    0x3108B980            /*  SPU0 Secure Core Registers */
#define REG_SPU0_SECUREC1                    0x3108B984            /*  SPU0 Secure Core Registers */
#define REG_SPU0_SECUREC2                    0x3108B988            /*  SPU0 Secure Core Registers */
#define REG_SPU0_SECURECn(i)                 (REG_SPU0_SECUREC0 + ((i) * 4))
#define REG_SPU0_SECURECn_COUNT              3
/* ============================================================================================================================
      SECP_BLOCK Register Definitions
   ============================================================================================================================ */
#define REG_SPU0_SECUREP0                    0x3108BA00            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP1                    0x3108BA04            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP2                    0x3108BA08            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP3                    0x3108BA0C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP4                    0x3108BA10            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP5                    0x3108BA14            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP6                    0x3108BA18            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP7                    0x3108BA1C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP8                    0x3108BA20            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP9                    0x3108BA24            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP10                   0x3108BA28            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP11                   0x3108BA2C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP12                   0x3108BA30            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP13                   0x3108BA34            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP14                   0x3108BA38            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP15                   0x3108BA3C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP16                   0x3108BA40            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP17                   0x3108BA44            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP18                   0x3108BA48            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP19                   0x3108BA4C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP20                   0x3108BA50            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP21                   0x3108BA54            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP22                   0x3108BA58            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP23                   0x3108BA5C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP24                   0x3108BA60            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP25                   0x3108BA64            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP26                   0x3108BA68            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP27                   0x3108BA6C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP28                   0x3108BA70            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP29                   0x3108BA74            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP30                   0x3108BA78            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP31                   0x3108BA7C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP32                   0x3108BA80            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP33                   0x3108BA84            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP34                   0x3108BA88            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP35                   0x3108BA8C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP36                   0x3108BA90            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP37                   0x3108BA94            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP38                   0x3108BA98            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP39                   0x3108BA9C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP40                   0x3108BAA0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP41                   0x3108BAA4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP42                   0x3108BAA8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP43                   0x3108BAAC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP44                   0x3108BAB0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP45                   0x3108BAB4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP46                   0x3108BAB8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP47                   0x3108BABC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP48                   0x3108BAC0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP49                   0x3108BAC4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP50                   0x3108BAC8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP51                   0x3108BACC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP52                   0x3108BAD0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP53                   0x3108BAD4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP54                   0x3108BAD8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP55                   0x3108BADC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP56                   0x3108BAE0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP57                   0x3108BAE4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP58                   0x3108BAE8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP59                   0x3108BAEC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP60                   0x3108BAF0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP61                   0x3108BAF4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP62                   0x3108BAF8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP63                   0x3108BAFC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP64                   0x3108BB00            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP65                   0x3108BB04            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP66                   0x3108BB08            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP67                   0x3108BB0C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP68                   0x3108BB10            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP69                   0x3108BB14            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP70                   0x3108BB18            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP71                   0x3108BB1C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP72                   0x3108BB20            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP73                   0x3108BB24            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP74                   0x3108BB28            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP75                   0x3108BB2C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP76                   0x3108BB30            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP77                   0x3108BB34            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP78                   0x3108BB38            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP79                   0x3108BB3C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP80                   0x3108BB40            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP81                   0x3108BB44            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP82                   0x3108BB48            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP83                   0x3108BB4C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP84                   0x3108BB50            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP85                   0x3108BB54            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP86                   0x3108BB58            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP87                   0x3108BB5C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP88                   0x3108BB60            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP89                   0x3108BB64            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP90                   0x3108BB68            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP91                   0x3108BB6C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP92                   0x3108BB70            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP93                   0x3108BB74            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP94                   0x3108BB78            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP95                   0x3108BB7C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP96                   0x3108BB80            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP97                   0x3108BB84            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP98                   0x3108BB88            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP99                   0x3108BB8C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP100                  0x3108BB90            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP101                  0x3108BB94            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP102                  0x3108BB98            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP103                  0x3108BB9C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP104                  0x3108BBA0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP105                  0x3108BBA4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP106                  0x3108BBA8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP107                  0x3108BBAC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP108                  0x3108BBB0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP109                  0x3108BBB4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP110                  0x3108BBB8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP111                  0x3108BBBC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP112                  0x3108BBC0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP113                  0x3108BBC4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP114                  0x3108BBC8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP115                  0x3108BBCC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP116                  0x3108BBD0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP117                  0x3108BBD4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP118                  0x3108BBD8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP119                  0x3108BBDC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP120                  0x3108BBE0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP121                  0x3108BBE4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP122                  0x3108BBE8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP123                  0x3108BBEC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP124                  0x3108BBF0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP125                  0x3108BBF4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP126                  0x3108BBF8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP127                  0x3108BBFC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP128                  0x3108BC00            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP129                  0x3108BC04            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP130                  0x3108BC08            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP131                  0x3108BC0C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP132                  0x3108BC10            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP133                  0x3108BC14            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP134                  0x3108BC18            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP135                  0x3108BC1C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP136                  0x3108BC20            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP137                  0x3108BC24            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP138                  0x3108BC28            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP139                  0x3108BC2C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP140                  0x3108BC30            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP141                  0x3108BC34            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP142                  0x3108BC38            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP143                  0x3108BC3C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP144                  0x3108BC40            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP145                  0x3108BC44            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP146                  0x3108BC48            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP147                  0x3108BC4C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP148                  0x3108BC50            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP149                  0x3108BC54            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP150                  0x3108BC58            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP151                  0x3108BC5C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP152                  0x3108BC60            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP153                  0x3108BC64            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP154                  0x3108BC68            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP155                  0x3108BC6C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP156                  0x3108BC70            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP157                  0x3108BC74            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP158                  0x3108BC78            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP159                  0x3108BC7C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP160                  0x3108BC80            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP161                  0x3108BC84            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP162                  0x3108BC88            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP163                  0x3108BC8C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP164                  0x3108BC90            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP165                  0x3108BC94            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP166                  0x3108BC98            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP167                  0x3108BC9C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP168                  0x3108BCA0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP169                  0x3108BCA4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP170                  0x3108BCA8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP171                  0x3108BCAC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP172                  0x3108BCB0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP173                  0x3108BCB4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP174                  0x3108BCB8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP175                  0x3108BCBC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP176                  0x3108BCC0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP177                  0x3108BCC4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP178                  0x3108BCC8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP179                  0x3108BCCC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP180                  0x3108BCD0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP181                  0x3108BCD4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP182                  0x3108BCD8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP183                  0x3108BCDC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP184                  0x3108BCE0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP185                  0x3108BCE4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP186                  0x3108BCE8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP187                  0x3108BCEC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP188                  0x3108BCF0            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP189                  0x3108BCF4            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP190                  0x3108BCF8            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP191                  0x3108BCFC            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP192                  0x3108BD00            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP193                  0x3108BD04            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP194                  0x3108BD08            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP195                  0x3108BD0C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP196                  0x3108BD10            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP197                  0x3108BD14            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP198                  0x3108BD18            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP199                  0x3108BD1C            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP200                  0x3108BD20            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREP201                  0x3108BD24            /*  SPU0 Secure Peripheral Register */
#define REG_SPU0_SECUREPn(i)                 (REG_SPU0_SECUREP0 + ((i) * 4))
#define REG_SPU0_SECUREPn_COUNT              202
/* ============================================================================================================================
      WR_PROT_BLOCK Register Definitions
   ============================================================================================================================ */
#define REG_SPU0_WP0                         0x3108B400            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP1                         0x3108B404            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP2                         0x3108B408            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP3                         0x3108B40C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP4                         0x3108B410            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP5                         0x3108B414            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP6                         0x3108B418            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP7                         0x3108B41C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP8                         0x3108B420            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP9                         0x3108B424            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP10                        0x3108B428            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP11                        0x3108B42C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP12                        0x3108B430            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP13                        0x3108B434            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP14                        0x3108B438            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP15                        0x3108B43C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP16                        0x3108B440            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP17                        0x3108B444            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP18                        0x3108B448            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP19                        0x3108B44C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP20                        0x3108B450            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP21                        0x3108B454            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP22                        0x3108B458            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP23                        0x3108B45C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP24                        0x3108B460            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP25                        0x3108B464            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP26                        0x3108B468            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP27                        0x3108B46C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP28                        0x3108B470            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP29                        0x3108B474            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP30                        0x3108B478            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP31                        0x3108B47C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP32                        0x3108B480            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP33                        0x3108B484            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP34                        0x3108B488            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP35                        0x3108B48C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP36                        0x3108B490            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP37                        0x3108B494            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP38                        0x3108B498            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP39                        0x3108B49C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP40                        0x3108B4A0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP41                        0x3108B4A4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP42                        0x3108B4A8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP43                        0x3108B4AC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP44                        0x3108B4B0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP45                        0x3108B4B4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP46                        0x3108B4B8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP47                        0x3108B4BC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP48                        0x3108B4C0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP49                        0x3108B4C4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP50                        0x3108B4C8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP51                        0x3108B4CC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP52                        0x3108B4D0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP53                        0x3108B4D4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP54                        0x3108B4D8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP55                        0x3108B4DC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP56                        0x3108B4E0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP57                        0x3108B4E4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP58                        0x3108B4E8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP59                        0x3108B4EC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP60                        0x3108B4F0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP61                        0x3108B4F4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP62                        0x3108B4F8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP63                        0x3108B4FC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP64                        0x3108B500            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP65                        0x3108B504            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP66                        0x3108B508            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP67                        0x3108B50C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP68                        0x3108B510            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP69                        0x3108B514            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP70                        0x3108B518            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP71                        0x3108B51C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP72                        0x3108B520            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP73                        0x3108B524            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP74                        0x3108B528            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP75                        0x3108B52C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP76                        0x3108B530            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP77                        0x3108B534            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP78                        0x3108B538            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP79                        0x3108B53C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP80                        0x3108B540            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP81                        0x3108B544            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP82                        0x3108B548            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP83                        0x3108B54C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP84                        0x3108B550            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP85                        0x3108B554            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP86                        0x3108B558            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP87                        0x3108B55C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP88                        0x3108B560            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP89                        0x3108B564            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP90                        0x3108B568            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP91                        0x3108B56C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP92                        0x3108B570            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP93                        0x3108B574            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP94                        0x3108B578            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP95                        0x3108B57C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP96                        0x3108B580            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP97                        0x3108B584            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP98                        0x3108B588            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP99                        0x3108B58C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP100                       0x3108B590            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP101                       0x3108B594            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP102                       0x3108B598            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP103                       0x3108B59C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP104                       0x3108B5A0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP105                       0x3108B5A4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP106                       0x3108B5A8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP107                       0x3108B5AC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP108                       0x3108B5B0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP109                       0x3108B5B4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP110                       0x3108B5B8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP111                       0x3108B5BC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP112                       0x3108B5C0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP113                       0x3108B5C4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP114                       0x3108B5C8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP115                       0x3108B5CC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP116                       0x3108B5D0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP117                       0x3108B5D4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP118                       0x3108B5D8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP119                       0x3108B5DC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP120                       0x3108B5E0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP121                       0x3108B5E4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP122                       0x3108B5E8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP123                       0x3108B5EC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP124                       0x3108B5F0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP125                       0x3108B5F4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP126                       0x3108B5F8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP127                       0x3108B5FC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP128                       0x3108B600            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP129                       0x3108B604            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP130                       0x3108B608            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP131                       0x3108B60C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP132                       0x3108B610            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP133                       0x3108B614            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP134                       0x3108B618            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP135                       0x3108B61C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP136                       0x3108B620            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP137                       0x3108B624            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP138                       0x3108B628            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP139                       0x3108B62C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP140                       0x3108B630            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP141                       0x3108B634            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP142                       0x3108B638            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP143                       0x3108B63C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP144                       0x3108B640            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP145                       0x3108B644            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP146                       0x3108B648            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP147                       0x3108B64C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP148                       0x3108B650            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP149                       0x3108B654            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP150                       0x3108B658            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP151                       0x3108B65C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP152                       0x3108B660            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP153                       0x3108B664            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP154                       0x3108B668            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP155                       0x3108B66C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP156                       0x3108B670            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP157                       0x3108B674            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP158                       0x3108B678            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP159                       0x3108B67C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP160                       0x3108B680            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP161                       0x3108B684            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP162                       0x3108B688            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP163                       0x3108B68C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP164                       0x3108B690            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP165                       0x3108B694            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP166                       0x3108B698            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP167                       0x3108B69C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP168                       0x3108B6A0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP169                       0x3108B6A4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP170                       0x3108B6A8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP171                       0x3108B6AC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP172                       0x3108B6B0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP173                       0x3108B6B4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP174                       0x3108B6B8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP175                       0x3108B6BC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP176                       0x3108B6C0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP177                       0x3108B6C4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP178                       0x3108B6C8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP179                       0x3108B6CC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP180                       0x3108B6D0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP181                       0x3108B6D4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP182                       0x3108B6D8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP183                       0x3108B6DC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP184                       0x3108B6E0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP185                       0x3108B6E4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP186                       0x3108B6E8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP187                       0x3108B6EC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP188                       0x3108B6F0            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP189                       0x3108B6F4            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP190                       0x3108B6F8            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP191                       0x3108B6FC            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP192                       0x3108B700            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP193                       0x3108B704            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP194                       0x3108B708            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP195                       0x3108B70C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP196                       0x3108B710            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP197                       0x3108B714            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP198                       0x3108B718            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP199                       0x3108B71C            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP200                       0x3108B720            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WP201                       0x3108B724            /*  SPU0 Write Protect Register n */
#define REG_SPU0_WPn(i)                      (REG_SPU0_WP0 + ((i) * 4))
#define REG_SPU0_WPn_COUNT                   202

/* ============================================================================================================================
        SPU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPU_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_CTL_WPLCK                   16            /*  Write Protect Register Lock */
#define BITP_SPU_CTL_PINTEN                  14            /*  Protection Violation Interrupt Enable */
#define BITP_SPU_CTL_GLCK                     0            /*  Global Lock */
#define BITM_SPU_CTL_WPLCK                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Write Protect Register Lock */
#define BITM_SPU_CTL_PINTEN                  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Protection Violation Interrupt Enable */
#define BITM_SPU_CTL_GLCK                    (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Global Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          SPU_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_STAT_LWERR                  31            /*  Lock Write Error */
#define BITP_SPU_STAT_ADDRERR                30            /*  Address Error */
#define BITP_SPU_STAT_VIRQ                   12            /*  Violation Interrupt Request */
#define BITP_SPU_STAT_GLCK                    0            /*  Global Lock Status */
#define BITM_SPU_STAT_LWERR                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_SPU_STAT_ADDRERR                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Address Error */
#define BITM_SPU_STAT_VIRQ                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Violation Interrupt Request */
#define BITM_SPU_STAT_GLCK                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Global Lock Status */

/* -------------------------------------------------------------------------------------------------------------------------
          SPU_SECURECTL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_SECURECTL_SCRLCK            16            /*  Secure Register Lock */
#define BITP_SPU_SECURECTL_SINTEN            14            /*  Secure Violation Interrupt Enable */
#define BITP_SPU_SECURECTL_MSECCLR            5            /*  Master Secure Clear */
#define BITP_SPU_SECURECTL_SSECCLR            4            /*  Slave Secure Clear */
#define BITM_SPU_SECURECTL_SCRLCK            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Secure Register Lock */
#define BITM_SPU_SECURECTL_SINTEN            (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Secure Violation Interrupt Enable */
#define BITM_SPU_SECURECTL_MSECCLR           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Master Secure Clear */
#define BITM_SPU_SECURECTL_SSECCLR           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Slave Secure Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          SPU_SECURECHK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_SECURECHK_DATA               0            /*  Read Data */
#define BITM_SPU_SECURECHK_DATA              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Read Data */

/* ============================================================================================================================
 *    SECC_BLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPU_SECUREC[n]                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_SECUREC_CSEC0                0            /*  Core Secure */
#define BITM_SPU_SECUREC_CSEC0               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Core Secure */

/* ============================================================================================================================
 *    SECP_BLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPU_SECUREP[n]                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_SECUREP_MSEC                 1            /*  Master Secure Enable */
#define BITP_SPU_SECUREP_SSEC                 0            /*  Slave Secure Enable */
#define BITM_SPU_SECUREP_MSEC                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Master Secure Enable */
#define BITM_SPU_SECUREP_SSEC                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Slave Secure Enable */

/* ============================================================================================================================
 *    WR_PROT_BLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPU_WP[n]                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPU_WP_SM0                      16            /*  System Master x Write Protect Enable */
#define BITP_SPU_WP_SM1                      17            /*  System Master x Write Protect Enable */
#define BITP_SPU_WP_SM2                      18            /*  System Master x Write Protect Enable */
#define BITP_SPU_WP_CM0                       0            /*  Core Master x Write Protect Enable */
#define BITP_SPU_WP_CM1                       1            /*  Core Master x Write Protect Enable */
#define BITP_SPU_WP_CM2                       2            /*  Core Master x Write Protect Enable */
#define BITM_SPU_WP_SM0                      (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  System Master x Write Protect Enable */
#define BITM_SPU_WP_SM1                      (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  System Master x Write Protect Enable */
#define BITM_SPU_WP_SM2                      (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  System Master x Write Protect Enable */
#define BITM_SPU_WP_CM0                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Core Master x Write Protect Enable */
#define BITM_SPU_WP_CM1                      (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Core Master x Write Protect Enable */
#define BITM_SPU_WP_CM2                      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Core Master x Write Protect Enable */


/* ============================================================================================================================
        Reset Control Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        RCU0
   ============================================================================================================================ */
#define REG_RCU0_CTL                         0x3108C000            /*  RCU0 Control Register */
#define REG_RCU0_STAT                        0x3108C004            /*  RCU0 Status Register */
#define REG_RCU0_CRCTL                       0x3108C008            /*  RCU0 Core Reset Outputs Control Register */
#define REG_RCU0_CRSTAT                      0x3108C00C            /*  RCU0 Core Reset Outputs Status Register */
#define REG_RCU0_SRRQSTAT                    0x3108C018            /*  RCU0 System Reset Request Status Register */
#define REG_RCU0_SIDIS                       0x3108C01C            /*  RCU0 System Interface Disable Register */
#define REG_RCU0_SISTAT                      0x3108C020            /*  RCU0 System Interface Status Register */
#define REG_RCU0_SVECT_LCK                   0x3108C024            /*  RCU0 SVECT Lock Register */
#define REG_RCU0_BCODE                       0x3108C028            /*  RCU0 Boot Code Register */
#define REG_RCU0_SVECT0                      0x3108C02C            /*  RCU0 Software Vector Register 0 */
#define REG_RCU0_SVECT1                      0x3108C030            /*  RCU0 Software Vector Register 1 */
#define REG_RCU0_SVECT2                      0x3108C034            /*  RCU0 Software Vector Register 2 */
#define REG_RCU0_MSG                         0x3108C06C            /*  RCU0 Message Register */
#define REG_RCU0_MSG_SET                     0x3108C070            /*  RCU0 Message Set Bits Register */
#define REG_RCU0_MSG_CLR                     0x3108C074            /*  RCU0 Message Clear Bits Register */

/* ============================================================================================================================
        RCU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          RCU_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_CTL_LOCK                    31            /*  Lock */
#define BITP_RCU_CTL_CRSTMSKSEL              10            /*  Core Reset System Reset Mask Select */
#define BITP_RCU_CTL_CRSTREQEN                9            /*  Core Reset Request Enabled */
#define BITP_RCU_CTL_SRSTREQEN                8            /*  System Reset Request Enabled */
#define BITP_RCU_CTL_RSTOUTDSRT               2            /*  Reset Out Deassert */
#define BITP_RCU_CTL_RSTOUTASRT               1            /*  Reset Out Assert */
#define BITP_RCU_CTL_SYSRST                   0            /*  System Reset */
#define BITM_RCU_CTL_LOCK                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_RCU_CTL_CRSTMSKSEL              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Core Reset System Reset Mask Select */
#define BITM_RCU_CTL_CRSTREQEN               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Core Reset Request Enabled */
#define BITM_RCU_CTL_SRSTREQEN               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  System Reset Request Enabled */
#define BITM_RCU_CTL_RSTOUTDSRT              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Reset Out Deassert */
#define BITM_RCU_CTL_RSTOUTASRT              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Reset Out Assert */
#define BITM_RCU_CTL_SYSRST                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  System Reset */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_STAT_RSTOUTERR              18            /*  Reset Out Error */
#define BITP_RCU_STAT_LWERR                  17            /*  Lock Write Error */
#define BITP_RCU_STAT_ADDRERR                16            /*  Address Error */
#define BITP_RCU_STAT_BMODE                   8            /*  Boot Mode */
#define BITP_RCU_STAT_RSTOUT                  5            /*  Reset Out Status */
#define BITP_RCU_STAT_SWRST                   3            /*  Software Reset */
#define BITP_RCU_STAT_SSRST                   2            /*  System Source Reset */
#define BITP_RCU_STAT_HWRST                   0            /*  Hardware Reset */
#define BITM_RCU_STAT_RSTOUTERR              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Reset Out Error */
#define BITM_RCU_STAT_LWERR                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_RCU_STAT_ADDRERR                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Address Error */
#define BITM_RCU_STAT_BMODE                  (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Boot Mode */
#define BITM_RCU_STAT_RSTOUT                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Reset Out Status */
#define BITM_RCU_STAT_SWRST                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Software Reset */
#define BITM_RCU_STAT_SSRST                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  System Source Reset */
#define BITM_RCU_STAT_HWRST                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Hardware Reset */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_CRCTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_CRCTL_LOCK                  31            /*  Lock */
#define BITP_RCU_CRCTL_CR0                    0            /*  Core Reset Outputs */
#define BITP_RCU_CRCTL_CR1                    1            /*  Core Reset Outputs */
#define BITP_RCU_CRCTL_CR2                    2            /*  Core Reset Outputs */
#define BITP_RCU_CRCTL_CR3                    3            /*  Core Reset Outputs */
#define BITM_RCU_CRCTL_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_RCU_CRCTL_CR0                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Core Reset Outputs */
#define BITM_RCU_CRCTL_CR1                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Core Reset Outputs */
#define BITM_RCU_CRCTL_CR2                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Core Reset Outputs */
#define BITM_RCU_CRCTL_CR3                   (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Core Reset Outputs */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_CRSTAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_CRSTAT_CR0                   0            /*  Core Reset Outputs */
#define BITP_RCU_CRSTAT_CR1                   1            /*  Core Reset Outputs */
#define BITP_RCU_CRSTAT_CR2                   2            /*  Core Reset Outputs */
#define BITP_RCU_CRSTAT_CR3                   3            /*  Core Reset Outputs */
#define BITM_RCU_CRSTAT_CR0                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Core Reset Outputs */
#define BITM_RCU_CRSTAT_CR1                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Core Reset Outputs */
#define BITM_RCU_CRSTAT_CR2                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Core Reset Outputs */
#define BITM_RCU_CRSTAT_CR3                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Core Reset Outputs */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SRRQSTAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SRRQSTAT_SRRQ                0            /*  System Reset Triggered by System Reset Request [n] */
#define BITM_RCU_SRRQSTAT_SRRQ               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  System Reset Triggered by System Reset Request [n] */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SIDIS                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SIDIS_LOCK                  31            /*  Lock */
#define BITP_RCU_SIDIS_SI0                    0            /*  System Interface Disable Request [2:0] */
#define BITP_RCU_SIDIS_SI1                    1            /*  System Interface Disable Request [2:0] */
#define BITP_RCU_SIDIS_SI2                    2            /*  System Interface Disable Request [2:0] */
#define BITM_RCU_SIDIS_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_RCU_SIDIS_SI0                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  System Interface Disable Request [2:0] */
#define BITM_RCU_SIDIS_SI1                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  System Interface Disable Request [2:0] */
#define BITM_RCU_SIDIS_SI2                   (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  System Interface Disable Request [2:0] */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SISTAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SISTAT_SI0                   0            /*  System Interface Disable Acknowledge [2:0] */
#define BITP_RCU_SISTAT_SI1                   1            /*  System Interface Disable Acknowledge [2:0] */
#define BITP_RCU_SISTAT_SI2                   2            /*  System Interface Disable Acknowledge [2:0] */
#define BITM_RCU_SISTAT_SI0                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  System Interface Disable Acknowledge [2:0] */
#define BITM_RCU_SISTAT_SI1                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  System Interface Disable Acknowledge [2:0] */
#define BITM_RCU_SISTAT_SI2                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  System Interface Disable Acknowledge [2:0] */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SVECT_LCK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SVECT_LCK_LOCK              31            /*  Lock */
#define BITP_RCU_SVECT_LCK_SVECT0             0            /*  Lock SVECTn Registers */
#define BITP_RCU_SVECT_LCK_SVECT1             1            /*  Lock SVECTn Registers */
#define BITP_RCU_SVECT_LCK_SVECT2             2            /*  Lock SVECTn Registers */
#define BITM_RCU_SVECT_LCK_LOCK              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_RCU_SVECT_LCK_SVECT0            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Lock SVECTn Registers */
#define BITM_RCU_SVECT_LCK_SVECT1            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Lock SVECTn Registers */
#define BITM_RCU_SVECT_LCK_SVECT2            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Lock SVECTn Registers */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_BCODE                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_BCODE_LOCK                  31            /*  Lock */
#define BITP_RCU_BCODE_IDLEONENTRY           13            /*  Idle On Entry */
#define BITP_RCU_BCODE_NOL2CONFIG            12            /*  No L2 Configuration */
#define BITP_RCU_BCODE_NOHOOK                10            /*  No Hook */
#define BITP_RCU_BCODE_NOPREBOOT              9            /*  No Preboot */
#define BITP_RCU_BCODE_NOFAULTS               6            /*  No Faults */
#define BITP_RCU_BCODE_NOCACHE                5            /*  No Cache */
#define BITP_RCU_BCODE_NOMEMINIT              4            /*  No Memory Initialization */
#define BITP_RCU_BCODE_HBTOVW                 3            /*  Execute Wakeup */
#define BITP_RCU_BCODE_HALT                   2            /*  Halt */
#define BITP_RCU_BCODE_NOVECTINIT             1            /*  No Vector Initialize */
#define BITP_RCU_BCODE_NOKERNEL               0            /*  No Boot Kernel */
#define BITM_RCU_BCODE_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_RCU_BCODE_IDLEONENTRY           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Idle On Entry */
#define BITM_RCU_BCODE_NOL2CONFIG            (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  No L2 Configuration */
#define BITM_RCU_BCODE_NOHOOK                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  No Hook */
#define BITM_RCU_BCODE_NOPREBOOT             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  No Preboot */
#define BITM_RCU_BCODE_NOFAULTS              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  No Faults */
#define BITM_RCU_BCODE_NOCACHE               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  No Cache */
#define BITM_RCU_BCODE_NOMEMINIT             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  No Memory Initialization */
#define BITM_RCU_BCODE_HBTOVW                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Execute Wakeup */
#define BITM_RCU_BCODE_HALT                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Halt */
#define BITM_RCU_BCODE_NOVECTINIT            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  No Vector Initialize */
#define BITM_RCU_BCODE_NOKERNEL              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  No Boot Kernel */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SVECT0                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SVECT0_VALUE                 0            /*  Core 0 Reset Vector */
#define BITM_RCU_SVECT0_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Core 0 Reset Vector */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SVECT1                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SVECT1_VALUE                 0            /*  Reset Vector */
#define BITM_RCU_SVECT1_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Reset Vector */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_SVECT2                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_SVECT2_VALUE                 0            /*  Reset Vector */
#define BITM_RCU_SVECT2_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Reset Vector */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_MSG                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_MSG_CALLERR                 31            /*  Call Error Flag */
#define BITP_RCU_MSG_CALLBACK                30            /*  Callback Call Flag */
#define BITP_RCU_MSG_CALLINIT                29            /*  Call Initcode Flag */
#define BITP_RCU_MSG_CALLAPP                 28            /*  Call Application Flag */
#define BITP_RCU_MSG_HALTONERR               27            /*  Halt on Error Call */
#define BITP_RCU_MSG_HALTONCALL              26            /*  Halt on Callback Call */
#define BITP_RCU_MSG_HALTONINIT              25            /*  Halt on Initcode Call */
#define BITP_RCU_MSG_HALTONAPP               24            /*  Halt on Application Call */
#define BITP_RCU_MSG_L3INIT                  23            /*  L3 Initialized */
#define BITP_RCU_MSG_L2INIT                  22            /*  L2 Initialized */
#define BITP_RCU_MSG_SECINIT                 21            /*  SEC Initialized */
#define BITP_RCU_MSG_C2ACTIVATE              20            /*  Core 2 Activated */
#define BITP_RCU_MSG_C1ACTIVATE              19            /*  Core 1 Activated */
#define BITP_RCU_MSG_C2L1INIT                18            /*  Core 2 L1 Initialized */
#define BITP_RCU_MSG_C1L1INIT                17            /*  Core 1 L1 Initialized */
#define BITP_RCU_MSG_C0L1INIT                16            /*  Core 0 L1 Initialized */
#define BITP_RCU_MSG_C2IDLE                  10            /*  Core 2 Idle */
#define BITP_RCU_MSG_C1IDLE                   9            /*  Core 1 Idle */
#define BITP_RCU_MSG_C0IDLE                   8            /*  Core 0 Idle */
#define BITP_RCU_MSG_ERRCODE                  0            /*  ROM Error Code */
#define BITM_RCU_MSG_CALLERR                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Call Error Flag */
#define BITM_RCU_MSG_CALLBACK                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Callback Call Flag */
#define BITM_RCU_MSG_CALLINIT                (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Call Initcode Flag */
#define BITM_RCU_MSG_CALLAPP                 (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Call Application Flag */
#define BITM_RCU_MSG_HALTONERR               (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Halt on Error Call */
#define BITM_RCU_MSG_HALTONCALL              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Halt on Callback Call */
#define BITM_RCU_MSG_HALTONINIT              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Halt on Initcode Call */
#define BITM_RCU_MSG_HALTONAPP               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Halt on Application Call */
#define BITM_RCU_MSG_L3INIT                  (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  L3 Initialized */
#define BITM_RCU_MSG_L2INIT                  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  L2 Initialized */
#define BITM_RCU_MSG_SECINIT                 (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SEC Initialized */
#define BITM_RCU_MSG_C2ACTIVATE              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Core 2 Activated */
#define BITM_RCU_MSG_C1ACTIVATE              (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Core 1 Activated */
#define BITM_RCU_MSG_C2L1INIT                (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Core 2 L1 Initialized */
#define BITM_RCU_MSG_C1L1INIT                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Core 1 L1 Initialized */
#define BITM_RCU_MSG_C0L1INIT                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Core 0 L1 Initialized */
#define BITM_RCU_MSG_C2IDLE                  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Core 2 Idle */
#define BITM_RCU_MSG_C1IDLE                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Core 1 Idle */
#define BITM_RCU_MSG_C0IDLE                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Core 0 Idle */
#define BITM_RCU_MSG_ERRCODE                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  ROM Error Code */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_MSG_SET                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_MSG_SET_SET0                 0            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET1                 1            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET2                 2            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET3                 3            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET4                 4            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET5                 5            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET6                 6            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET7                 7            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET8                 8            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET9                 9            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET10               10            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET11               11            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET12               12            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET13               13            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET14               14            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET15               15            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET16               16            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET17               17            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET18               18            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET19               19            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET20               20            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET21               21            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET22               22            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET23               23            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET24               24            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET25               25            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET26               26            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET27               27            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET28               28            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET29               29            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET30               30            /*  Set Message Bits */
#define BITP_RCU_MSG_SET_SET31               31            /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET16               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET17               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET18               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET19               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET20               (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET21               (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET22               (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET23               (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET24               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET25               (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET26               (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET27               (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET28               (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET29               (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET30               (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Set Message Bits */
#define BITM_RCU_MSG_SET_SET31               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Set Message Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          RCU_MSG_CLR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_RCU_MSG_CLR_CLR0                 0            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR1                 1            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR2                 2            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR3                 3            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR4                 4            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR5                 5            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR6                 6            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR7                 7            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR8                 8            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR9                 9            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR10               10            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR11               11            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR12               12            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR13               13            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR14               14            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR15               15            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR16               16            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR17               17            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR18               18            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR19               19            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR20               20            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR21               21            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR22               22            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR23               23            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR24               24            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR25               25            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR26               26            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR27               27            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR28               28            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR29               29            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR30               30            /*  Clear MSG Register Bits */
#define BITP_RCU_MSG_CLR_CLR31               31            /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR2                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR3                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR4                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR5                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR6                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR7                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR8                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR9                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR10               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR11               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR12               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR13               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR14               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR15               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR16               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR17               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR18               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR19               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR20               (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR21               (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR22               (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR23               (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR24               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR25               (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR26               (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR27               (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR28               (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR29               (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR30               (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Clear MSG Register Bits */
#define BITM_RCU_MSG_CLR_CLR31               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clear MSG Register Bits */


/* ============================================================================================================================
        Clock Generation Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        CGU0
   ============================================================================================================================ */
#define REG_CGU0_CTL                         0x3108D000            /*  CGU0 Control Register */
#define REG_CGU0_PLLCTL                      0x3108D004            /*  CGU0 PLL Control Register */
#define REG_CGU0_STAT                        0x3108D008            /*  CGU0 Status Register */
#define REG_CGU0_DIV                         0x3108D00C            /*  CGU0 Clocks Divisor Register */
#define REG_CGU0_CLKOUTSEL                   0x3108D010            /*  CGU0 CLKOUT Select Register */
#define REG_CGU0_OSCWDCTL                    0x3108D014            /*  CGU0 Oscillator Watchdog Register */
#define REG_CGU0_TSCTL                       0x3108D018            /*  CGU0 Time Stamp Control Register */
#define REG_CGU0_TSVALUE0                    0x3108D01C            /*  CGU0 Time Stamp Counter Initial 32 LSB Value Register */
#define REG_CGU0_TSVALUE1                    0x3108D020            /*  CGU0 Time Stamp Counter Initial MSB Value Register */
#define REG_CGU0_TSCOUNT0                    0x3108D024            /*  CGU0 Time Stamp Counter 32 LSB Register */
#define REG_CGU0_TSCOUNT1                    0x3108D028            /*  CGU0 Time Stamp Counter 32 MSB Register */
#define REG_CGU0_CCBF_DIS                    0x3108D02C            /*  CGU0 Core Clock Buffer Disable Register */
#define REG_CGU0_CCBF_STAT                   0x3108D030            /*  CGU0 Core Clock Buffer Status Register */
#define REG_CGU0_SCBF_DIS                    0x3108D038            /*  CGU0 System Clock Buffer Disable Register */
#define REG_CGU0_SCBF_STAT                   0x3108D03C            /*  CGU0 System Clock Buffer Status Register */
#define REG_CGU0_DIVEX                       0x3108D040            /*  CGU0 DIV Register Extension */
#define REG_CGU0_REVID                       0x3108D048            /*  CGU0 Revision ID Register */

/* ============================================================================================================================
        CGU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CGU_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_CTL_LOCK                    31            /*  Lock */
#define BITP_CGU_CTL_WFI                     30            /*  Wait For Idle */
#define BITP_CGU_CTL_S1SELEXEN               17            /*  SCLK1 Extension Divider Enable */
#define BITP_CGU_CTL_MSEL                     8            /*  Multiplier Select */
#define BITP_CGU_CTL_DF                       0            /*  Divide Frequency */
#define BITM_CGU_CTL_LOCK                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_CTL_WFI                     (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Wait For Idle */
#define BITM_CGU_CTL_S1SELEXEN               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  SCLK1 Extension Divider Enable */
#define BITM_CGU_CTL_MSEL                    (_ADI_MSK_3(0x00007F00,0x00007F00UL, uint32_t  ))    /*  Multiplier Select */
#define BITM_CGU_CTL_DF                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Divide Frequency */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_PLLCTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_PLLCTL_LOCK                 31            /*  Lock */
#define BITP_CGU_PLLCTL_PLLEN                 3            /*  PLL Enable */
#define BITP_CGU_PLLCTL_PLLDIS                2            /*  PLL Disable */
#define BITP_CGU_PLLCTL_PLLBPCL               1            /*  PLL Bypass Clear */
#define BITP_CGU_PLLCTL_PLLBPST               0            /*  PLL Bypass Set */
#define BITM_CGU_PLLCTL_LOCK                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_PLLCTL_PLLEN                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  PLL Enable */
#define BITM_CGU_PLLCTL_PLLDIS               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PLL Disable */
#define BITM_CGU_PLLCTL_PLLBPCL              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PLL Bypass Clear */
#define BITM_CGU_PLLCTL_PLLBPST              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  PLL Bypass Set */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_STAT_PCFGERR                21            /*  PLL Configuration Error */
#define BITP_CGU_STAT_WDIVERR                20            /*  Write to DIV Error */
#define BITP_CGU_STAT_WDFMSERR               19            /*  Write to DF or MSEL Error */
#define BITP_CGU_STAT_LWERR                  17            /*  Lock Write Error */
#define BITP_CGU_STAT_ADDRERR                16            /*  Address Error */
#define BITP_CGU_STAT_OSCWDSTATF             15            /*  Oscillator Watchdog Status Fault */
#define BITP_CGU_STAT_OSCWDSTATFC            12            /*  Oscillator Watchdog Status Fault Code */
#define BITP_CGU_STAT_CLKSALGN                3            /*  Clock Alignment */
#define BITP_CGU_STAT_PLOCK                   2            /*  PLL Lock */
#define BITP_CGU_STAT_PLLBP                   1            /*  PLL Bypass */
#define BITP_CGU_STAT_PLLEN                   0            /*  PLL Enable */
#define BITM_CGU_STAT_PCFGERR                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  PLL Configuration Error */
#define BITM_CGU_STAT_WDIVERR                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Write to DIV Error */
#define BITM_CGU_STAT_WDFMSERR               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Write to DF or MSEL Error */
#define BITM_CGU_STAT_LWERR                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_CGU_STAT_ADDRERR                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Address Error */
#define BITM_CGU_STAT_OSCWDSTATF             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Oscillator Watchdog Status Fault */
#define BITM_CGU_STAT_OSCWDSTATFC            (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  Oscillator Watchdog Status Fault Code */
#define BITM_CGU_STAT_CLKSALGN               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Clock Alignment */
#define BITM_CGU_STAT_PLOCK                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PLL Lock */
#define BITM_CGU_STAT_PLLBP                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PLL Bypass */
#define BITM_CGU_STAT_PLLEN                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  PLL Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_DIV                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_DIV_LOCK                    31            /*  Lock */
#define BITP_CGU_DIV_UPDT                    30            /*  Update Clock Divisors */
#define BITP_CGU_DIV_ALGN                    29            /*  Align */
#define BITP_CGU_DIV_OSEL                    22            /*  OCLK Divisor */
#define BITP_CGU_DIV_DSEL                    16            /*  DCLK Divisor */
#define BITP_CGU_DIV_S1SEL                   13            /*  SCLK 1 Divisor */
#define BITP_CGU_DIV_SYSSEL                   8            /*  SYSCLK Divisor */
#define BITP_CGU_DIV_S0SEL                    5            /*  SCLK 0 Divisor */
#define BITP_CGU_DIV_CSEL                     0            /*  CCLK Divisor */
#define BITM_CGU_DIV_LOCK                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_DIV_UPDT                    (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Update Clock Divisors */
#define BITM_CGU_DIV_ALGN                    (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Align */
#define BITM_CGU_DIV_OSEL                    (_ADI_MSK_3(0x1FC00000,0x1FC00000UL, uint32_t  ))    /*  OCLK Divisor */
#define BITM_CGU_DIV_DSEL                    (_ADI_MSK_3(0x001F0000,0x001F0000UL, uint32_t  ))    /*  DCLK Divisor */
#define BITM_CGU_DIV_S1SEL                   (_ADI_MSK_3(0x0000E000,0x0000E000UL, uint32_t  ))    /*  SCLK 1 Divisor */
#define BITM_CGU_DIV_SYSSEL                  (_ADI_MSK_3(0x00001F00,0x00001F00UL, uint32_t  ))    /*  SYSCLK Divisor */
#define BITM_CGU_DIV_S0SEL                   (_ADI_MSK_3(0x000000E0,0x000000E0UL, uint32_t  ))    /*  SCLK 0 Divisor */
#define BITM_CGU_DIV_CSEL                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  CCLK Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_CLKOUTSEL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_CLKOUTSEL_LOCK              31            /*  Lock */
#define BITP_CGU_CLKOUTSEL_CLKOUTSEL          0            /*  CLKOUT Select */
#define BITM_CGU_CLKOUTSEL_LOCK              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_CLKOUTSEL_CLKOUTSEL         (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  CLKOUT Select */
#define ENUM_CGU_CLKOUTSEL_CLKIN0            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CLKOUTSEL: CLKIN0 */
#define ENUM_CGU_CLKOUTSEL_CLKIN1            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CLKOUTSEL: CLKIN1 */
#define ENUM_CGU_CLKOUTSEL_SYSCLK0_0         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP0.SYSCLKO */
#define ENUM_CGU_CLKOUTSEL_CCLK0_0           (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP0.CCLK0 */
#define ENUM_CGU_CLKOUTSEL_CLKO3             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  CLKOUTSEL: CDU.CLKO3 for DDR */
#define ENUM_CGU_CLKOUTSEL_CLKO4             (_ADI_MSK_3(0x00000005,0x00000005UL, uint32_t  ))    /*  CLKOUTSEL: CDU.CLKO4 for CAN */
#define ENUM_CGU_CLKOUTSEL_CLKO7             (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  CLKOUTSEL: CDU.CLKO7 for EMAC */
#define ENUM_CGU_CLKOUTSEL_CLKO8             (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  CLKOUTSEL: CDU.CLKO8 for LP */
#define ENUM_CGU_CLKOUTSEL_SYSCLK0_1         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP1.SYSCLKO */
#define ENUM_CGU_CLKOUTSEL_OCLK0_1           (_ADI_MSK_3(0x00000009,0x00000009UL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP1.OCLK */
#define ENUM_CGU_CLKOUTSEL_OCLK0_0           (_ADI_MSK_3(0x0000000A,0x0000000AUL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP0.OCLK */
#define ENUM_CGU_CLKOUTSEL_SCLK1_0           (_ADI_MSK_3(0x0000000E,0x0000000EUL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP0.SCLK1 */
#define ENUM_CGU_CLKOUTSEL_SCLK0_0           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CLKOUTSEL: PLLTOP0.SCLK0 */
#define ENUM_CGU_CLKOUTSEL_GND               (_ADI_MSK_3(0x00000013,0x00000013UL, uint32_t  ))    /*  CLKOUTSEL: GND */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_OSCWDCTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_OSCWDCTL_LOCK               31            /*  Lock */
#define BITP_CGU_OSCWDCTL_FAULTPINDIS        23            /*  Fault Pin disabled */
#define BITP_CGU_OSCWDCTL_MONDIS             15            /*  Oscillator Watchdog Monitor functions disabled */
#define BITP_CGU_OSCWDCTL_FAULTEN            14            /*  Fault enabled */
#define BITP_CGU_OSCWDCTL_BOUEN              13            /*  Bad Oscillator Upper Frequency limit detection enabled */
#define BITP_CGU_OSCWDCTL_BOUF                8            /*  Bad Oscillator Upper Frequency limit */
#define BITP_CGU_OSCWDCTL_CNGEN               7            /*  Clock not Good enabled */
#define BITP_CGU_OSCWDCTL_HODEN               6            /*  Harmonic Oscillation Detection enabled */
#define BITP_CGU_OSCWDCTL_HODF                0            /*  Watchdog lower frequency limit */
#define BITM_CGU_OSCWDCTL_LOCK               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_OSCWDCTL_FAULTPINDIS        (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Fault Pin disabled */
#define BITM_CGU_OSCWDCTL_MONDIS             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Oscillator Watchdog Monitor functions disabled */
#define BITM_CGU_OSCWDCTL_FAULTEN            (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Fault enabled */
#define BITM_CGU_OSCWDCTL_BOUEN              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Bad Oscillator Upper Frequency limit detection enabled */
#define BITM_CGU_OSCWDCTL_BOUF               (_ADI_MSK_3(0x00001F00,0x00001F00UL, uint32_t  ))    /*  Bad Oscillator Upper Frequency limit */
#define BITM_CGU_OSCWDCTL_CNGEN              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Clock not Good enabled */
#define BITM_CGU_OSCWDCTL_HODEN              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Harmonic Oscillation Detection enabled */
#define BITM_CGU_OSCWDCTL_HODF               (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Watchdog lower frequency limit */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_TSCTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_TSCTL_LOCK                  31            /*  Lock */
#define BITP_CGU_TSCTL_TSDIV                  4            /*  Counter's Clock Divider */
#define BITP_CGU_TSCTL_LOAD                   1            /*  Load Counter */
#define BITP_CGU_TSCTL_EN                     0            /*  Counter Enable */
#define BITM_CGU_TSCTL_LOCK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_TSCTL_TSDIV                 (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Counter's Clock Divider */
#define BITM_CGU_TSCTL_LOAD                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Load Counter */
#define BITM_CGU_TSCTL_EN                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Counter Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_TSVALUE0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_TSVALUE0_VALUE               0            /*  Counter's 32 LSB Initial Value */
#define BITM_CGU_TSVALUE0_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter's 32 LSB Initial Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_TSVALUE1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_TSVALUE1_VALUE               0            /*  Counter's Initial 32 MSB Value */
#define BITM_CGU_TSVALUE1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter's Initial 32 MSB Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_TSCOUNT0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_TSCOUNT0_VALUE               0            /*  TSCOUNT0 Value */
#define BITM_CGU_TSCOUNT0_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  TSCOUNT0 Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_TSCOUNT1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_TSCOUNT1_VALUE               0            /*  Timestamp Counter 32 MSB */
#define BITM_CGU_TSCOUNT1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Timestamp Counter 32 MSB */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_CCBF_DIS                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_CCBF_DIS_LOCK               31            /*  Lock */
#define BITP_CGU_CCBF_DIS_CCBF0               0            /*  Core Clock Buffer 0 */
#define BITM_CGU_CCBF_DIS_LOCK               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_CCBF_DIS_CCBF0              (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Core Clock Buffer 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_CCBF_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_CCBF_STAT_CCBF0              0            /*  Core Clock Buffer 0 */
#define BITM_CGU_CCBF_STAT_CCBF0             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Core Clock Buffer 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_SCBF_DIS                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_SCBF_DIS_LOCK               31            /*  Lock */
#define BITP_CGU_SCBF_DIS_OUTCLKBF            3            /*  OCLK Buffer */
#define BITP_CGU_SCBF_DIS_DCLKBF              2            /*  DCLK Buffer */
#define BITP_CGU_SCBF_DIS_SCLK1BF             1            /*  SCLK1 Buffer */
#define BITP_CGU_SCBF_DIS_SCLK0BF             0            /*  SCLK0 Buffer */
#define BITM_CGU_SCBF_DIS_LOCK               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */
#define BITM_CGU_SCBF_DIS_OUTCLKBF           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  OCLK Buffer */
#define BITM_CGU_SCBF_DIS_DCLKBF             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  DCLK Buffer */
#define BITM_CGU_SCBF_DIS_SCLK1BF            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SCLK1 Buffer */
#define BITM_CGU_SCBF_DIS_SCLK0BF            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SCLK0 Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_SCBF_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_SCBF_STAT_OCLKBF             3            /*  OCLK Buffer */
#define BITP_CGU_SCBF_STAT_DCLKBF             2            /*  DCLK1 Buffer */
#define BITP_CGU_SCBF_STAT_SCLK1BF            1            /*  SCLK1 Buffer */
#define BITP_CGU_SCBF_STAT_SCLK0BF            0            /*  SCLK0 Buffer */
#define BITM_CGU_SCBF_STAT_OCLKBF            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  OCLK Buffer */
#define BITM_CGU_SCBF_STAT_DCLKBF            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  DCLK1 Buffer */
#define BITM_CGU_SCBF_STAT_SCLK1BF           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SCLK1 Buffer */
#define BITM_CGU_SCBF_STAT_SCLK0BF           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SCLK0 Buffer */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_DIVEX                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_DIVEX_S1SELEX               16            /*  SCLK 1 Extension Divisor */
#define BITM_CGU_DIVEX_S1SELEX               (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  SCLK 1 Extension Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          CGU_REVID                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CGU_REVID_MAJOR                  4            /*  Major Version */
#define BITP_CGU_REVID_REV                    0            /*  Incremental Version ID */
#define BITM_CGU_REVID_MAJOR                 (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Major Version */
#define BITM_CGU_REVID_REV                   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Incremental Version ID */


/* ============================================================================================================================
        Clock Generation Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        CGU1
   ============================================================================================================================ */
#define REG_CGU1_CTL                         0x3108E000            /*  CGU1 Control Register */
#define REG_CGU1_PLLCTL                      0x3108E004            /*  CGU1 PLL Control Register */
#define REG_CGU1_STAT                        0x3108E008            /*  CGU1 Status Register */
#define REG_CGU1_DIV                         0x3108E00C            /*  CGU1 Clocks Divisor Register */
#define REG_CGU1_OSCWDCTL                    0x3108E014            /*  CGU1 Oscillator Watchdog Register */
#define REG_CGU1_CCBF_DIS                    0x3108E02C            /*  CGU1 Core Clock Buffer Disable Register */
#define REG_CGU1_CCBF_STAT                   0x3108E030            /*  CGU1 Core Clock Buffer Status Register */
#define REG_CGU1_SCBF_DIS                    0x3108E038            /*  CGU1 System Clock Buffer Disable Register */
#define REG_CGU1_SCBF_STAT                   0x3108E03C            /*  CGU1 System Clock Buffer Status Register */
#define REG_CGU1_DIVEX                       0x3108E040            /*  CGU1 DIV Register Extension */
#define REG_CGU1_REVID                       0x3108E048            /*  CGU1 Revision ID Register */

/* ============================================================================================================================
        CGU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Clock Distribution Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        CDU0
   ============================================================================================================================ */
#define REG_CDU0_STAT                        0x3108F040            /*  CDU0 CDU Status */
#define REG_CDU0_CLKINSEL                    0x3108F044            /*  CDU0 CLKIN Select */
#define REG_CDU0_REVID                       0x3108F048            /*  CDU0 CDU Revision ID */
/* ============================================================================================================================
      CFGn Register Definitions
   ============================================================================================================================ */
#define REG_CDU0_CFG0                        0x3108F000            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG1                        0x3108F004            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG2                        0x3108F008            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG3                        0x3108F00C            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG4                        0x3108F010            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG5                        0x3108F014            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG6                        0x3108F018            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG7                        0x3108F01C            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG8                        0x3108F020            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG9                        0x3108F024            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG10                       0x3108F028            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG11                       0x3108F02C            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFG12                       0x3108F030            /*  CDU0 CDU Configuration */
#define REG_CDU0_CFGn(i)                     (REG_CDU0_CFG0 + ((i) * 4))
#define REG_CDU0_CFGn_COUNT                  13

/* ============================================================================================================================
        CDU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CDU_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CDU_STAT_LWERR                  17            /*  Lock Write Error */
#define BITP_CDU_STAT_ADRERR                 16            /*  Address Error */
#define BITP_CDU_STAT_CLKO12                 12            /*  CDU_CLKO12 Status */
#define BITP_CDU_STAT_CLKO11                 11            /*  CDU_CLKO11 Status */
#define BITP_CDU_STAT_CLKO10                 10            /*  CDU_CLKO10 Status */
#define BITP_CDU_STAT_CLKO9                   9            /*  CDU_CLKO9 Status */
#define BITP_CDU_STAT_CLKO8                   8            /*  CDU_CLKO8 Status */
#define BITP_CDU_STAT_CLKO7                   7            /*  CDU_CLKO7 Status */
#define BITP_CDU_STAT_CLKO6                   6            /*  CDU_CLKO6 Status */
#define BITP_CDU_STAT_CLKO5                   5            /*  CDU_CLKO5 Status */
#define BITP_CDU_STAT_CLKO4                   4            /*  CDU_CLKO4 Status */
#define BITP_CDU_STAT_CLKO3                   3            /*  CDU_CLKO3 Status */
#define BITP_CDU_STAT_CLKO2                   2            /*  CDU_CLKO2 Status */
#define BITP_CDU_STAT_CLKO1                   1            /*  CDU_CLKO1 Status */
#define BITP_CDU_STAT_CLKO0                   0            /*  CDU_CLKO0 Status */
#define BITM_CDU_STAT_LWERR                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_CDU_STAT_ADRERR                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Address Error */
#define BITM_CDU_STAT_CLKO12                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  CDU_CLKO12 Status */
#define BITM_CDU_STAT_CLKO11                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  CDU_CLKO11 Status */
#define BITM_CDU_STAT_CLKO10                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  CDU_CLKO10 Status */
#define BITM_CDU_STAT_CLKO9                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  CDU_CLKO9 Status */
#define BITM_CDU_STAT_CLKO8                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CDU_CLKO8 Status */
#define BITM_CDU_STAT_CLKO7                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CDU_CLKO7 Status */
#define BITM_CDU_STAT_CLKO6                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  CDU_CLKO6 Status */
#define BITM_CDU_STAT_CLKO5                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CDU_CLKO5 Status */
#define BITM_CDU_STAT_CLKO4                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CDU_CLKO4 Status */
#define BITM_CDU_STAT_CLKO3                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  CDU_CLKO3 Status */
#define BITM_CDU_STAT_CLKO2                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  CDU_CLKO2 Status */
#define BITM_CDU_STAT_CLKO1                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CDU_CLKO1 Status */
#define BITM_CDU_STAT_CLKO0                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDU_CLKO0 Status */

/* -------------------------------------------------------------------------------------------------------------------------
          CDU_CLKINSEL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CDU_CLKINSEL_LOCK               31            /*  Lock Bit */
#define BITP_CDU_CLKINSEL_CGU1                0            /*  CGU1 CLKINn Select */
#define BITM_CDU_CLKINSEL_LOCK               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Bit */
#define BITM_CDU_CLKINSEL_CGU1               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CGU1 CLKINn Select */

/* -------------------------------------------------------------------------------------------------------------------------
          CDU_REVID                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CDU_REVID_MAJOR                  4            /*  Major Version ID */
#define BITP_CDU_REVID_REV                    0            /*  Incremental Version ID */
#define BITM_CDU_REVID_MAJOR                 (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Major Version ID */
#define BITM_CDU_REVID_REV                   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Incremental Version ID */

/* ============================================================================================================================
 *    CFGn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CDU_CFG[n]                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CDU_CFG_LOCK                    31            /*  Lock Bit */
#define BITP_CDU_CFG_SEL                      1            /*  Select Clock Input */
#define BITP_CDU_CFG_EN                       0            /*  Clock Output Enabled */
#define BITM_CDU_CFG_LOCK                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Bit */
#define BITM_CDU_CFG_SEL                     (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  Select Clock Input */
#define BITM_CDU_CFG_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Clock Output Enabled */
#define ENUM_CDU_CFG_IN0                     (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SEL: IN0_CLKOn Selected */
#define ENUM_CDU_CFG_IN1                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SEL: IN1_CLKOn Selected */
#define ENUM_CDU_CFG_IN2                     (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SEL: IN2_CLKOn Selected */
#define ENUM_CDU_CFG_IN3                     (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  SEL: IN3_CLKOn Selected */


/* ============================================================================================================================
        Dynamic Power Management
   ============================================================================================================================ */

/* ============================================================================================================================
        DPM0
   ============================================================================================================================ */
#define REG_DPM0_CTL                         0x31090000            /*  DPM0 Control Register */
#define REG_DPM0_STAT                        0x31090004            /*  DPM0 Status Register */
#define REG_DPM0_PER_DIS0                    0x31090070            /*  DPM0 Peripherals Disable Register 0 */
#define REG_DPM0_PER_DIS1                    0x31090074            /*  DPM0 Peripherals Disable Register 1 */
#define REG_DPM0_REVID                       0x31090084            /*  DPM0 Revision ID */

/* ============================================================================================================================
        DPM Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          DPM_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DPM_CTL_LOCK                    31            /*  Lock */
#define BITM_DPM_CTL_LOCK                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          DPM_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DPM_STAT_LWERR                  17            /*  Lock Write Error */
#define BITP_DPM_STAT_ADDRERR                16            /*  Address Error */
#define BITP_DPM_STAT_PRVMODE                 4            /*  Previous Mode */
#define BITP_DPM_STAT_CURMODE                 0            /*  Current Mode */
#define BITM_DPM_STAT_LWERR                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Lock Write Error */
#define BITM_DPM_STAT_ADDRERR                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Address Error */
#define BITM_DPM_STAT_PRVMODE                (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Previous Mode */
#define BITM_DPM_STAT_CURMODE                (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Current Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          DPM_PER_DIS0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DPM_PER_DIS0_LOCK               31            /*  Lock Bit */
#define BITP_DPM_PER_DIS0_VALUE               0            /*  Peripheral Disable */
#define BITM_DPM_PER_DIS0_LOCK               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Bit */
#define BITM_DPM_PER_DIS0_VALUE              (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Peripheral Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          DPM_PER_DIS1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DPM_PER_DIS1_LOCK               31            /*  Lock Bit */
#define BITP_DPM_PER_DIS1_VALUE               0            /*  Peripheral Disable */
#define BITM_DPM_PER_DIS1_LOCK               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Lock Bit */
#define BITM_DPM_PER_DIS1_VALUE              (_ADI_MSK_3(0x0007FFFF,0x0007FFFFUL, uint32_t  ))    /*  Peripheral Disable */

/* -------------------------------------------------------------------------------------------------------------------------
          DPM_REVID                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DPM_REVID_MAJOR                  4            /*  Major Version ID */
#define BITP_DPM_REVID_REV                    0            /*  Incremental Version ID */
#define BITM_DPM_REVID_MAJOR                 (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Major Version ID */
#define BITM_DPM_REVID_REV                   (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Incremental Version ID */


/* ============================================================================================================================
        System Watchpoint Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        SWU1
   ============================================================================================================================ */
#define REG_SWU1_GCTL                        0x31093000            /*  SWU1 Global Control Register */
#define REG_SWU1_GSTAT                       0x31093004            /*  SWU1 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU1_CTL0                        0x31093010            /*  SWU1 Control Register n */
#define REG_SWU1_CTL1                        0x31093030            /*  SWU1 Control Register n */
#define REG_SWU1_CTL2                        0x31093050            /*  SWU1 Control Register n */
#define REG_SWU1_CTL3                        0x31093070            /*  SWU1 Control Register n */
#define REG_SWU1_CTLn(i)                     (REG_SWU1_CTL0 + ((i) * 32))
#define REG_SWU1_CTLn_COUNT                  4
#define REG_SWU1_LA0                         0x31093014            /*  SWU1 Lower Address Register n */
#define REG_SWU1_LA1                         0x31093034            /*  SWU1 Lower Address Register n */
#define REG_SWU1_LA2                         0x31093054            /*  SWU1 Lower Address Register n */
#define REG_SWU1_LA3                         0x31093074            /*  SWU1 Lower Address Register n */
#define REG_SWU1_LAn(i)                      (REG_SWU1_LA0 + ((i) * 32))
#define REG_SWU1_LAn_COUNT                   4
#define REG_SWU1_UA0                         0x31093018            /*  SWU1 Upper Address Register n */
#define REG_SWU1_UA1                         0x31093038            /*  SWU1 Upper Address Register n */
#define REG_SWU1_UA2                         0x31093058            /*  SWU1 Upper Address Register n */
#define REG_SWU1_UA3                         0x31093078            /*  SWU1 Upper Address Register n */
#define REG_SWU1_UAn(i)                      (REG_SWU1_UA0 + ((i) * 32))
#define REG_SWU1_UAn_COUNT                   4
#define REG_SWU1_ID0                         0x3109301C            /*  SWU1 ID Register n */
#define REG_SWU1_ID1                         0x3109303C            /*  SWU1 ID Register n */
#define REG_SWU1_ID2                         0x3109305C            /*  SWU1 ID Register n */
#define REG_SWU1_ID3                         0x3109307C            /*  SWU1 ID Register n */
#define REG_SWU1_IDn(i)                      (REG_SWU1_ID0 + ((i) * 32))
#define REG_SWU1_IDn_COUNT                   4
#define REG_SWU1_CNT0                        0x31093020            /*  SWU1 Count Register n */
#define REG_SWU1_CNT1                        0x31093040            /*  SWU1 Count Register n */
#define REG_SWU1_CNT2                        0x31093060            /*  SWU1 Count Register n */
#define REG_SWU1_CNT3                        0x31093080            /*  SWU1 Count Register n */
#define REG_SWU1_CNTn(i)                     (REG_SWU1_CNT0 + ((i) * 32))
#define REG_SWU1_CNTn_COUNT                  4
#define REG_SWU1_TARG0                       0x31093024            /*  SWU1 Target Register n */
#define REG_SWU1_TARG1                       0x31093044            /*  SWU1 Target Register n */
#define REG_SWU1_TARG2                       0x31093064            /*  SWU1 Target Register n */
#define REG_SWU1_TARG3                       0x31093084            /*  SWU1 Target Register n */
#define REG_SWU1_TARGn(i)                    (REG_SWU1_TARG0 + ((i) * 32))
#define REG_SWU1_TARGn_COUNT                 4
#define REG_SWU1_HIST0                       0x31093028            /*  SWU1 Bandwidth History Register n */
#define REG_SWU1_HIST1                       0x31093048            /*  SWU1 Bandwidth History Register n */
#define REG_SWU1_HIST2                       0x31093068            /*  SWU1 Bandwidth History Register n */
#define REG_SWU1_HIST3                       0x31093088            /*  SWU1 Bandwidth History Register n */
#define REG_SWU1_HISTn(i)                    (REG_SWU1_HIST0 + ((i) * 32))
#define REG_SWU1_HISTn_COUNT                 4
#define REG_SWU1_CUR0                        0x3109302C            /*  SWU1 Current Register n */
#define REG_SWU1_CUR1                        0x3109304C            /*  SWU1 Current Register n */
#define REG_SWU1_CUR2                        0x3109306C            /*  SWU1 Current Register n */
#define REG_SWU1_CUR3                        0x3109308C            /*  SWU1 Current Register n */
#define REG_SWU1_CURn(i)                     (REG_SWU1_CUR0 + ((i) * 32))
#define REG_SWU1_CURn_COUNT                  4

/* ============================================================================================================================
        SWU2
   ============================================================================================================================ */
#define REG_SWU2_GCTL                        0x31094000            /*  SWU2 Global Control Register */
#define REG_SWU2_GSTAT                       0x31094004            /*  SWU2 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU2_CTL0                        0x31094010            /*  SWU2 Control Register n */
#define REG_SWU2_CTL1                        0x31094030            /*  SWU2 Control Register n */
#define REG_SWU2_CTL2                        0x31094050            /*  SWU2 Control Register n */
#define REG_SWU2_CTL3                        0x31094070            /*  SWU2 Control Register n */
#define REG_SWU2_CTLn(i)                     (REG_SWU2_CTL0 + ((i) * 32))
#define REG_SWU2_CTLn_COUNT                  4
#define REG_SWU2_LA0                         0x31094014            /*  SWU2 Lower Address Register n */
#define REG_SWU2_LA1                         0x31094034            /*  SWU2 Lower Address Register n */
#define REG_SWU2_LA2                         0x31094054            /*  SWU2 Lower Address Register n */
#define REG_SWU2_LA3                         0x31094074            /*  SWU2 Lower Address Register n */
#define REG_SWU2_LAn(i)                      (REG_SWU2_LA0 + ((i) * 32))
#define REG_SWU2_LAn_COUNT                   4
#define REG_SWU2_UA0                         0x31094018            /*  SWU2 Upper Address Register n */
#define REG_SWU2_UA1                         0x31094038            /*  SWU2 Upper Address Register n */
#define REG_SWU2_UA2                         0x31094058            /*  SWU2 Upper Address Register n */
#define REG_SWU2_UA3                         0x31094078            /*  SWU2 Upper Address Register n */
#define REG_SWU2_UAn(i)                      (REG_SWU2_UA0 + ((i) * 32))
#define REG_SWU2_UAn_COUNT                   4
#define REG_SWU2_ID0                         0x3109401C            /*  SWU2 ID Register n */
#define REG_SWU2_ID1                         0x3109403C            /*  SWU2 ID Register n */
#define REG_SWU2_ID2                         0x3109405C            /*  SWU2 ID Register n */
#define REG_SWU2_ID3                         0x3109407C            /*  SWU2 ID Register n */
#define REG_SWU2_IDn(i)                      (REG_SWU2_ID0 + ((i) * 32))
#define REG_SWU2_IDn_COUNT                   4
#define REG_SWU2_CNT0                        0x31094020            /*  SWU2 Count Register n */
#define REG_SWU2_CNT1                        0x31094040            /*  SWU2 Count Register n */
#define REG_SWU2_CNT2                        0x31094060            /*  SWU2 Count Register n */
#define REG_SWU2_CNT3                        0x31094080            /*  SWU2 Count Register n */
#define REG_SWU2_CNTn(i)                     (REG_SWU2_CNT0 + ((i) * 32))
#define REG_SWU2_CNTn_COUNT                  4
#define REG_SWU2_TARG0                       0x31094024            /*  SWU2 Target Register n */
#define REG_SWU2_TARG1                       0x31094044            /*  SWU2 Target Register n */
#define REG_SWU2_TARG2                       0x31094064            /*  SWU2 Target Register n */
#define REG_SWU2_TARG3                       0x31094084            /*  SWU2 Target Register n */
#define REG_SWU2_TARGn(i)                    (REG_SWU2_TARG0 + ((i) * 32))
#define REG_SWU2_TARGn_COUNT                 4
#define REG_SWU2_HIST0                       0x31094028            /*  SWU2 Bandwidth History Register n */
#define REG_SWU2_HIST1                       0x31094048            /*  SWU2 Bandwidth History Register n */
#define REG_SWU2_HIST2                       0x31094068            /*  SWU2 Bandwidth History Register n */
#define REG_SWU2_HIST3                       0x31094088            /*  SWU2 Bandwidth History Register n */
#define REG_SWU2_HISTn(i)                    (REG_SWU2_HIST0 + ((i) * 32))
#define REG_SWU2_HISTn_COUNT                 4
#define REG_SWU2_CUR0                        0x3109402C            /*  SWU2 Current Register n */
#define REG_SWU2_CUR1                        0x3109404C            /*  SWU2 Current Register n */
#define REG_SWU2_CUR2                        0x3109406C            /*  SWU2 Current Register n */
#define REG_SWU2_CUR3                        0x3109408C            /*  SWU2 Current Register n */
#define REG_SWU2_CURn(i)                     (REG_SWU2_CUR0 + ((i) * 32))
#define REG_SWU2_CURn_COUNT                  4

/* ============================================================================================================================
        SWU3
   ============================================================================================================================ */
#define REG_SWU3_GCTL                        0x31095000            /*  SWU3 Global Control Register */
#define REG_SWU3_GSTAT                       0x31095004            /*  SWU3 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU3_CTL0                        0x31095010            /*  SWU3 Control Register n */
#define REG_SWU3_CTL1                        0x31095030            /*  SWU3 Control Register n */
#define REG_SWU3_CTL2                        0x31095050            /*  SWU3 Control Register n */
#define REG_SWU3_CTL3                        0x31095070            /*  SWU3 Control Register n */
#define REG_SWU3_CTLn(i)                     (REG_SWU3_CTL0 + ((i) * 32))
#define REG_SWU3_CTLn_COUNT                  4
#define REG_SWU3_LA0                         0x31095014            /*  SWU3 Lower Address Register n */
#define REG_SWU3_LA1                         0x31095034            /*  SWU3 Lower Address Register n */
#define REG_SWU3_LA2                         0x31095054            /*  SWU3 Lower Address Register n */
#define REG_SWU3_LA3                         0x31095074            /*  SWU3 Lower Address Register n */
#define REG_SWU3_LAn(i)                      (REG_SWU3_LA0 + ((i) * 32))
#define REG_SWU3_LAn_COUNT                   4
#define REG_SWU3_UA0                         0x31095018            /*  SWU3 Upper Address Register n */
#define REG_SWU3_UA1                         0x31095038            /*  SWU3 Upper Address Register n */
#define REG_SWU3_UA2                         0x31095058            /*  SWU3 Upper Address Register n */
#define REG_SWU3_UA3                         0x31095078            /*  SWU3 Upper Address Register n */
#define REG_SWU3_UAn(i)                      (REG_SWU3_UA0 + ((i) * 32))
#define REG_SWU3_UAn_COUNT                   4
#define REG_SWU3_ID0                         0x3109501C            /*  SWU3 ID Register n */
#define REG_SWU3_ID1                         0x3109503C            /*  SWU3 ID Register n */
#define REG_SWU3_ID2                         0x3109505C            /*  SWU3 ID Register n */
#define REG_SWU3_ID3                         0x3109507C            /*  SWU3 ID Register n */
#define REG_SWU3_IDn(i)                      (REG_SWU3_ID0 + ((i) * 32))
#define REG_SWU3_IDn_COUNT                   4
#define REG_SWU3_CNT0                        0x31095020            /*  SWU3 Count Register n */
#define REG_SWU3_CNT1                        0x31095040            /*  SWU3 Count Register n */
#define REG_SWU3_CNT2                        0x31095060            /*  SWU3 Count Register n */
#define REG_SWU3_CNT3                        0x31095080            /*  SWU3 Count Register n */
#define REG_SWU3_CNTn(i)                     (REG_SWU3_CNT0 + ((i) * 32))
#define REG_SWU3_CNTn_COUNT                  4
#define REG_SWU3_TARG0                       0x31095024            /*  SWU3 Target Register n */
#define REG_SWU3_TARG1                       0x31095044            /*  SWU3 Target Register n */
#define REG_SWU3_TARG2                       0x31095064            /*  SWU3 Target Register n */
#define REG_SWU3_TARG3                       0x31095084            /*  SWU3 Target Register n */
#define REG_SWU3_TARGn(i)                    (REG_SWU3_TARG0 + ((i) * 32))
#define REG_SWU3_TARGn_COUNT                 4
#define REG_SWU3_HIST0                       0x31095028            /*  SWU3 Bandwidth History Register n */
#define REG_SWU3_HIST1                       0x31095048            /*  SWU3 Bandwidth History Register n */
#define REG_SWU3_HIST2                       0x31095068            /*  SWU3 Bandwidth History Register n */
#define REG_SWU3_HIST3                       0x31095088            /*  SWU3 Bandwidth History Register n */
#define REG_SWU3_HISTn(i)                    (REG_SWU3_HIST0 + ((i) * 32))
#define REG_SWU3_HISTn_COUNT                 4
#define REG_SWU3_CUR0                        0x3109502C            /*  SWU3 Current Register n */
#define REG_SWU3_CUR1                        0x3109504C            /*  SWU3 Current Register n */
#define REG_SWU3_CUR2                        0x3109506C            /*  SWU3 Current Register n */
#define REG_SWU3_CUR3                        0x3109508C            /*  SWU3 Current Register n */
#define REG_SWU3_CURn(i)                     (REG_SWU3_CUR0 + ((i) * 32))
#define REG_SWU3_CURn_COUNT                  4

/* ============================================================================================================================
        SWU4
   ============================================================================================================================ */
#define REG_SWU4_GCTL                        0x31096000            /*  SWU4 Global Control Register */
#define REG_SWU4_GSTAT                       0x31096004            /*  SWU4 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU4_CTL0                        0x31096010            /*  SWU4 Control Register n */
#define REG_SWU4_CTL1                        0x31096030            /*  SWU4 Control Register n */
#define REG_SWU4_CTL2                        0x31096050            /*  SWU4 Control Register n */
#define REG_SWU4_CTL3                        0x31096070            /*  SWU4 Control Register n */
#define REG_SWU4_CTLn(i)                     (REG_SWU4_CTL0 + ((i) * 32))
#define REG_SWU4_CTLn_COUNT                  4
#define REG_SWU4_LA0                         0x31096014            /*  SWU4 Lower Address Register n */
#define REG_SWU4_LA1                         0x31096034            /*  SWU4 Lower Address Register n */
#define REG_SWU4_LA2                         0x31096054            /*  SWU4 Lower Address Register n */
#define REG_SWU4_LA3                         0x31096074            /*  SWU4 Lower Address Register n */
#define REG_SWU4_LAn(i)                      (REG_SWU4_LA0 + ((i) * 32))
#define REG_SWU4_LAn_COUNT                   4
#define REG_SWU4_UA0                         0x31096018            /*  SWU4 Upper Address Register n */
#define REG_SWU4_UA1                         0x31096038            /*  SWU4 Upper Address Register n */
#define REG_SWU4_UA2                         0x31096058            /*  SWU4 Upper Address Register n */
#define REG_SWU4_UA3                         0x31096078            /*  SWU4 Upper Address Register n */
#define REG_SWU4_UAn(i)                      (REG_SWU4_UA0 + ((i) * 32))
#define REG_SWU4_UAn_COUNT                   4
#define REG_SWU4_ID0                         0x3109601C            /*  SWU4 ID Register n */
#define REG_SWU4_ID1                         0x3109603C            /*  SWU4 ID Register n */
#define REG_SWU4_ID2                         0x3109605C            /*  SWU4 ID Register n */
#define REG_SWU4_ID3                         0x3109607C            /*  SWU4 ID Register n */
#define REG_SWU4_IDn(i)                      (REG_SWU4_ID0 + ((i) * 32))
#define REG_SWU4_IDn_COUNT                   4
#define REG_SWU4_CNT0                        0x31096020            /*  SWU4 Count Register n */
#define REG_SWU4_CNT1                        0x31096040            /*  SWU4 Count Register n */
#define REG_SWU4_CNT2                        0x31096060            /*  SWU4 Count Register n */
#define REG_SWU4_CNT3                        0x31096080            /*  SWU4 Count Register n */
#define REG_SWU4_CNTn(i)                     (REG_SWU4_CNT0 + ((i) * 32))
#define REG_SWU4_CNTn_COUNT                  4
#define REG_SWU4_TARG0                       0x31096024            /*  SWU4 Target Register n */
#define REG_SWU4_TARG1                       0x31096044            /*  SWU4 Target Register n */
#define REG_SWU4_TARG2                       0x31096064            /*  SWU4 Target Register n */
#define REG_SWU4_TARG3                       0x31096084            /*  SWU4 Target Register n */
#define REG_SWU4_TARGn(i)                    (REG_SWU4_TARG0 + ((i) * 32))
#define REG_SWU4_TARGn_COUNT                 4
#define REG_SWU4_HIST0                       0x31096028            /*  SWU4 Bandwidth History Register n */
#define REG_SWU4_HIST1                       0x31096048            /*  SWU4 Bandwidth History Register n */
#define REG_SWU4_HIST2                       0x31096068            /*  SWU4 Bandwidth History Register n */
#define REG_SWU4_HIST3                       0x31096088            /*  SWU4 Bandwidth History Register n */
#define REG_SWU4_HISTn(i)                    (REG_SWU4_HIST0 + ((i) * 32))
#define REG_SWU4_HISTn_COUNT                 4
#define REG_SWU4_CUR0                        0x3109602C            /*  SWU4 Current Register n */
#define REG_SWU4_CUR1                        0x3109604C            /*  SWU4 Current Register n */
#define REG_SWU4_CUR2                        0x3109606C            /*  SWU4 Current Register n */
#define REG_SWU4_CUR3                        0x3109608C            /*  SWU4 Current Register n */
#define REG_SWU4_CURn(i)                     (REG_SWU4_CUR0 + ((i) * 32))
#define REG_SWU4_CURn_COUNT                  4

/* ============================================================================================================================
        SWU5
   ============================================================================================================================ */
#define REG_SWU5_GCTL                        0x31098000            /*  SWU5 Global Control Register */
#define REG_SWU5_GSTAT                       0x31098004            /*  SWU5 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU5_CTL0                        0x31098010            /*  SWU5 Control Register n */
#define REG_SWU5_CTL1                        0x31098030            /*  SWU5 Control Register n */
#define REG_SWU5_CTL2                        0x31098050            /*  SWU5 Control Register n */
#define REG_SWU5_CTL3                        0x31098070            /*  SWU5 Control Register n */
#define REG_SWU5_CTLn(i)                     (REG_SWU5_CTL0 + ((i) * 32))
#define REG_SWU5_CTLn_COUNT                  4
#define REG_SWU5_LA0                         0x31098014            /*  SWU5 Lower Address Register n */
#define REG_SWU5_LA1                         0x31098034            /*  SWU5 Lower Address Register n */
#define REG_SWU5_LA2                         0x31098054            /*  SWU5 Lower Address Register n */
#define REG_SWU5_LA3                         0x31098074            /*  SWU5 Lower Address Register n */
#define REG_SWU5_LAn(i)                      (REG_SWU5_LA0 + ((i) * 32))
#define REG_SWU5_LAn_COUNT                   4
#define REG_SWU5_UA0                         0x31098018            /*  SWU5 Upper Address Register n */
#define REG_SWU5_UA1                         0x31098038            /*  SWU5 Upper Address Register n */
#define REG_SWU5_UA2                         0x31098058            /*  SWU5 Upper Address Register n */
#define REG_SWU5_UA3                         0x31098078            /*  SWU5 Upper Address Register n */
#define REG_SWU5_UAn(i)                      (REG_SWU5_UA0 + ((i) * 32))
#define REG_SWU5_UAn_COUNT                   4
#define REG_SWU5_ID0                         0x3109801C            /*  SWU5 ID Register n */
#define REG_SWU5_ID1                         0x3109803C            /*  SWU5 ID Register n */
#define REG_SWU5_ID2                         0x3109805C            /*  SWU5 ID Register n */
#define REG_SWU5_ID3                         0x3109807C            /*  SWU5 ID Register n */
#define REG_SWU5_IDn(i)                      (REG_SWU5_ID0 + ((i) * 32))
#define REG_SWU5_IDn_COUNT                   4
#define REG_SWU5_CNT0                        0x31098020            /*  SWU5 Count Register n */
#define REG_SWU5_CNT1                        0x31098040            /*  SWU5 Count Register n */
#define REG_SWU5_CNT2                        0x31098060            /*  SWU5 Count Register n */
#define REG_SWU5_CNT3                        0x31098080            /*  SWU5 Count Register n */
#define REG_SWU5_CNTn(i)                     (REG_SWU5_CNT0 + ((i) * 32))
#define REG_SWU5_CNTn_COUNT                  4
#define REG_SWU5_TARG0                       0x31098024            /*  SWU5 Target Register n */
#define REG_SWU5_TARG1                       0x31098044            /*  SWU5 Target Register n */
#define REG_SWU5_TARG2                       0x31098064            /*  SWU5 Target Register n */
#define REG_SWU5_TARG3                       0x31098084            /*  SWU5 Target Register n */
#define REG_SWU5_TARGn(i)                    (REG_SWU5_TARG0 + ((i) * 32))
#define REG_SWU5_TARGn_COUNT                 4
#define REG_SWU5_HIST0                       0x31098028            /*  SWU5 Bandwidth History Register n */
#define REG_SWU5_HIST1                       0x31098048            /*  SWU5 Bandwidth History Register n */
#define REG_SWU5_HIST2                       0x31098068            /*  SWU5 Bandwidth History Register n */
#define REG_SWU5_HIST3                       0x31098088            /*  SWU5 Bandwidth History Register n */
#define REG_SWU5_HISTn(i)                    (REG_SWU5_HIST0 + ((i) * 32))
#define REG_SWU5_HISTn_COUNT                 4
#define REG_SWU5_CUR0                        0x3109802C            /*  SWU5 Current Register n */
#define REG_SWU5_CUR1                        0x3109804C            /*  SWU5 Current Register n */
#define REG_SWU5_CUR2                        0x3109806C            /*  SWU5 Current Register n */
#define REG_SWU5_CUR3                        0x3109808C            /*  SWU5 Current Register n */
#define REG_SWU5_CURn(i)                     (REG_SWU5_CUR0 + ((i) * 32))
#define REG_SWU5_CURn_COUNT                  4

/* ============================================================================================================================
        SWU7
   ============================================================================================================================ */
#define REG_SWU7_GCTL                        0x31140000            /*  SWU7 Global Control Register */
#define REG_SWU7_GSTAT                       0x31140004            /*  SWU7 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU7_CTL0                        0x31140010            /*  SWU7 Control Register n */
#define REG_SWU7_CTL1                        0x31140030            /*  SWU7 Control Register n */
#define REG_SWU7_CTL2                        0x31140050            /*  SWU7 Control Register n */
#define REG_SWU7_CTL3                        0x31140070            /*  SWU7 Control Register n */
#define REG_SWU7_CTLn(i)                     (REG_SWU7_CTL0 + ((i) * 32))
#define REG_SWU7_CTLn_COUNT                  4
#define REG_SWU7_LA0                         0x31140014            /*  SWU7 Lower Address Register n */
#define REG_SWU7_LA1                         0x31140034            /*  SWU7 Lower Address Register n */
#define REG_SWU7_LA2                         0x31140054            /*  SWU7 Lower Address Register n */
#define REG_SWU7_LA3                         0x31140074            /*  SWU7 Lower Address Register n */
#define REG_SWU7_LAn(i)                      (REG_SWU7_LA0 + ((i) * 32))
#define REG_SWU7_LAn_COUNT                   4
#define REG_SWU7_UA0                         0x31140018            /*  SWU7 Upper Address Register n */
#define REG_SWU7_UA1                         0x31140038            /*  SWU7 Upper Address Register n */
#define REG_SWU7_UA2                         0x31140058            /*  SWU7 Upper Address Register n */
#define REG_SWU7_UA3                         0x31140078            /*  SWU7 Upper Address Register n */
#define REG_SWU7_UAn(i)                      (REG_SWU7_UA0 + ((i) * 32))
#define REG_SWU7_UAn_COUNT                   4
#define REG_SWU7_ID0                         0x3114001C            /*  SWU7 ID Register n */
#define REG_SWU7_ID1                         0x3114003C            /*  SWU7 ID Register n */
#define REG_SWU7_ID2                         0x3114005C            /*  SWU7 ID Register n */
#define REG_SWU7_ID3                         0x3114007C            /*  SWU7 ID Register n */
#define REG_SWU7_IDn(i)                      (REG_SWU7_ID0 + ((i) * 32))
#define REG_SWU7_IDn_COUNT                   4
#define REG_SWU7_CNT0                        0x31140020            /*  SWU7 Count Register n */
#define REG_SWU7_CNT1                        0x31140040            /*  SWU7 Count Register n */
#define REG_SWU7_CNT2                        0x31140060            /*  SWU7 Count Register n */
#define REG_SWU7_CNT3                        0x31140080            /*  SWU7 Count Register n */
#define REG_SWU7_CNTn(i)                     (REG_SWU7_CNT0 + ((i) * 32))
#define REG_SWU7_CNTn_COUNT                  4
#define REG_SWU7_TARG0                       0x31140024            /*  SWU7 Target Register n */
#define REG_SWU7_TARG1                       0x31140044            /*  SWU7 Target Register n */
#define REG_SWU7_TARG2                       0x31140064            /*  SWU7 Target Register n */
#define REG_SWU7_TARG3                       0x31140084            /*  SWU7 Target Register n */
#define REG_SWU7_TARGn(i)                    (REG_SWU7_TARG0 + ((i) * 32))
#define REG_SWU7_TARGn_COUNT                 4
#define REG_SWU7_HIST0                       0x31140028            /*  SWU7 Bandwidth History Register n */
#define REG_SWU7_HIST1                       0x31140048            /*  SWU7 Bandwidth History Register n */
#define REG_SWU7_HIST2                       0x31140068            /*  SWU7 Bandwidth History Register n */
#define REG_SWU7_HIST3                       0x31140088            /*  SWU7 Bandwidth History Register n */
#define REG_SWU7_HISTn(i)                    (REG_SWU7_HIST0 + ((i) * 32))
#define REG_SWU7_HISTn_COUNT                 4
#define REG_SWU7_CUR0                        0x3114002C            /*  SWU7 Current Register n */
#define REG_SWU7_CUR1                        0x3114004C            /*  SWU7 Current Register n */
#define REG_SWU7_CUR2                        0x3114006C            /*  SWU7 Current Register n */
#define REG_SWU7_CUR3                        0x3114008C            /*  SWU7 Current Register n */
#define REG_SWU7_CURn(i)                     (REG_SWU7_CUR0 + ((i) * 32))
#define REG_SWU7_CURn_COUNT                  4

/* ============================================================================================================================
        SWU8
   ============================================================================================================================ */
#define REG_SWU8_GCTL                        0x31141000            /*  SWU8 Global Control Register */
#define REG_SWU8_GSTAT                       0x31141004            /*  SWU8 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU8_CTL0                        0x31141010            /*  SWU8 Control Register n */
#define REG_SWU8_CTL1                        0x31141030            /*  SWU8 Control Register n */
#define REG_SWU8_CTL2                        0x31141050            /*  SWU8 Control Register n */
#define REG_SWU8_CTL3                        0x31141070            /*  SWU8 Control Register n */
#define REG_SWU8_CTLn(i)                     (REG_SWU8_CTL0 + ((i) * 32))
#define REG_SWU8_CTLn_COUNT                  4
#define REG_SWU8_LA0                         0x31141014            /*  SWU8 Lower Address Register n */
#define REG_SWU8_LA1                         0x31141034            /*  SWU8 Lower Address Register n */
#define REG_SWU8_LA2                         0x31141054            /*  SWU8 Lower Address Register n */
#define REG_SWU8_LA3                         0x31141074            /*  SWU8 Lower Address Register n */
#define REG_SWU8_LAn(i)                      (REG_SWU8_LA0 + ((i) * 32))
#define REG_SWU8_LAn_COUNT                   4
#define REG_SWU8_UA0                         0x31141018            /*  SWU8 Upper Address Register n */
#define REG_SWU8_UA1                         0x31141038            /*  SWU8 Upper Address Register n */
#define REG_SWU8_UA2                         0x31141058            /*  SWU8 Upper Address Register n */
#define REG_SWU8_UA3                         0x31141078            /*  SWU8 Upper Address Register n */
#define REG_SWU8_UAn(i)                      (REG_SWU8_UA0 + ((i) * 32))
#define REG_SWU8_UAn_COUNT                   4
#define REG_SWU8_ID0                         0x3114101C            /*  SWU8 ID Register n */
#define REG_SWU8_ID1                         0x3114103C            /*  SWU8 ID Register n */
#define REG_SWU8_ID2                         0x3114105C            /*  SWU8 ID Register n */
#define REG_SWU8_ID3                         0x3114107C            /*  SWU8 ID Register n */
#define REG_SWU8_IDn(i)                      (REG_SWU8_ID0 + ((i) * 32))
#define REG_SWU8_IDn_COUNT                   4
#define REG_SWU8_CNT0                        0x31141020            /*  SWU8 Count Register n */
#define REG_SWU8_CNT1                        0x31141040            /*  SWU8 Count Register n */
#define REG_SWU8_CNT2                        0x31141060            /*  SWU8 Count Register n */
#define REG_SWU8_CNT3                        0x31141080            /*  SWU8 Count Register n */
#define REG_SWU8_CNTn(i)                     (REG_SWU8_CNT0 + ((i) * 32))
#define REG_SWU8_CNTn_COUNT                  4
#define REG_SWU8_TARG0                       0x31141024            /*  SWU8 Target Register n */
#define REG_SWU8_TARG1                       0x31141044            /*  SWU8 Target Register n */
#define REG_SWU8_TARG2                       0x31141064            /*  SWU8 Target Register n */
#define REG_SWU8_TARG3                       0x31141084            /*  SWU8 Target Register n */
#define REG_SWU8_TARGn(i)                    (REG_SWU8_TARG0 + ((i) * 32))
#define REG_SWU8_TARGn_COUNT                 4
#define REG_SWU8_HIST0                       0x31141028            /*  SWU8 Bandwidth History Register n */
#define REG_SWU8_HIST1                       0x31141048            /*  SWU8 Bandwidth History Register n */
#define REG_SWU8_HIST2                       0x31141068            /*  SWU8 Bandwidth History Register n */
#define REG_SWU8_HIST3                       0x31141088            /*  SWU8 Bandwidth History Register n */
#define REG_SWU8_HISTn(i)                    (REG_SWU8_HIST0 + ((i) * 32))
#define REG_SWU8_HISTn_COUNT                 4
#define REG_SWU8_CUR0                        0x3114102C            /*  SWU8 Current Register n */
#define REG_SWU8_CUR1                        0x3114104C            /*  SWU8 Current Register n */
#define REG_SWU8_CUR2                        0x3114106C            /*  SWU8 Current Register n */
#define REG_SWU8_CUR3                        0x3114108C            /*  SWU8 Current Register n */
#define REG_SWU8_CURn(i)                     (REG_SWU8_CUR0 + ((i) * 32))
#define REG_SWU8_CURn_COUNT                  4

/* ============================================================================================================================
        SWU9
   ============================================================================================================================ */
#define REG_SWU9_GCTL                        0x31142000            /*  SWU9 Global Control Register */
#define REG_SWU9_GSTAT                       0x31142004            /*  SWU9 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU9_CTL0                        0x31142010            /*  SWU9 Control Register n */
#define REG_SWU9_CTL1                        0x31142030            /*  SWU9 Control Register n */
#define REG_SWU9_CTL2                        0x31142050            /*  SWU9 Control Register n */
#define REG_SWU9_CTL3                        0x31142070            /*  SWU9 Control Register n */
#define REG_SWU9_CTLn(i)                     (REG_SWU9_CTL0 + ((i) * 32))
#define REG_SWU9_CTLn_COUNT                  4
#define REG_SWU9_LA0                         0x31142014            /*  SWU9 Lower Address Register n */
#define REG_SWU9_LA1                         0x31142034            /*  SWU9 Lower Address Register n */
#define REG_SWU9_LA2                         0x31142054            /*  SWU9 Lower Address Register n */
#define REG_SWU9_LA3                         0x31142074            /*  SWU9 Lower Address Register n */
#define REG_SWU9_LAn(i)                      (REG_SWU9_LA0 + ((i) * 32))
#define REG_SWU9_LAn_COUNT                   4
#define REG_SWU9_UA0                         0x31142018            /*  SWU9 Upper Address Register n */
#define REG_SWU9_UA1                         0x31142038            /*  SWU9 Upper Address Register n */
#define REG_SWU9_UA2                         0x31142058            /*  SWU9 Upper Address Register n */
#define REG_SWU9_UA3                         0x31142078            /*  SWU9 Upper Address Register n */
#define REG_SWU9_UAn(i)                      (REG_SWU9_UA0 + ((i) * 32))
#define REG_SWU9_UAn_COUNT                   4
#define REG_SWU9_ID0                         0x3114201C            /*  SWU9 ID Register n */
#define REG_SWU9_ID1                         0x3114203C            /*  SWU9 ID Register n */
#define REG_SWU9_ID2                         0x3114205C            /*  SWU9 ID Register n */
#define REG_SWU9_ID3                         0x3114207C            /*  SWU9 ID Register n */
#define REG_SWU9_IDn(i)                      (REG_SWU9_ID0 + ((i) * 32))
#define REG_SWU9_IDn_COUNT                   4
#define REG_SWU9_CNT0                        0x31142020            /*  SWU9 Count Register n */
#define REG_SWU9_CNT1                        0x31142040            /*  SWU9 Count Register n */
#define REG_SWU9_CNT2                        0x31142060            /*  SWU9 Count Register n */
#define REG_SWU9_CNT3                        0x31142080            /*  SWU9 Count Register n */
#define REG_SWU9_CNTn(i)                     (REG_SWU9_CNT0 + ((i) * 32))
#define REG_SWU9_CNTn_COUNT                  4
#define REG_SWU9_TARG0                       0x31142024            /*  SWU9 Target Register n */
#define REG_SWU9_TARG1                       0x31142044            /*  SWU9 Target Register n */
#define REG_SWU9_TARG2                       0x31142064            /*  SWU9 Target Register n */
#define REG_SWU9_TARG3                       0x31142084            /*  SWU9 Target Register n */
#define REG_SWU9_TARGn(i)                    (REG_SWU9_TARG0 + ((i) * 32))
#define REG_SWU9_TARGn_COUNT                 4
#define REG_SWU9_HIST0                       0x31142028            /*  SWU9 Bandwidth History Register n */
#define REG_SWU9_HIST1                       0x31142048            /*  SWU9 Bandwidth History Register n */
#define REG_SWU9_HIST2                       0x31142068            /*  SWU9 Bandwidth History Register n */
#define REG_SWU9_HIST3                       0x31142088            /*  SWU9 Bandwidth History Register n */
#define REG_SWU9_HISTn(i)                    (REG_SWU9_HIST0 + ((i) * 32))
#define REG_SWU9_HISTn_COUNT                 4
#define REG_SWU9_CUR0                        0x3114202C            /*  SWU9 Current Register n */
#define REG_SWU9_CUR1                        0x3114204C            /*  SWU9 Current Register n */
#define REG_SWU9_CUR2                        0x3114206C            /*  SWU9 Current Register n */
#define REG_SWU9_CUR3                        0x3114208C            /*  SWU9 Current Register n */
#define REG_SWU9_CURn(i)                     (REG_SWU9_CUR0 + ((i) * 32))
#define REG_SWU9_CURn_COUNT                  4

/* ============================================================================================================================
        SWU10
   ============================================================================================================================ */
#define REG_SWU10_GCTL                       0x31143000            /*  SWU10 Global Control Register */
#define REG_SWU10_GSTAT                      0x31143004            /*  SWU10 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU10_CTL0                       0x31143010            /*  SWU10 Control Register n */
#define REG_SWU10_CTL1                       0x31143030            /*  SWU10 Control Register n */
#define REG_SWU10_CTL2                       0x31143050            /*  SWU10 Control Register n */
#define REG_SWU10_CTL3                       0x31143070            /*  SWU10 Control Register n */
#define REG_SWU10_CTLn(i)                    (REG_SWU10_CTL0 + ((i) * 32))
#define REG_SWU10_CTLn_COUNT                 4
#define REG_SWU10_LA0                        0x31143014            /*  SWU10 Lower Address Register n */
#define REG_SWU10_LA1                        0x31143034            /*  SWU10 Lower Address Register n */
#define REG_SWU10_LA2                        0x31143054            /*  SWU10 Lower Address Register n */
#define REG_SWU10_LA3                        0x31143074            /*  SWU10 Lower Address Register n */
#define REG_SWU10_LAn(i)                     (REG_SWU10_LA0 + ((i) * 32))
#define REG_SWU10_LAn_COUNT                  4
#define REG_SWU10_UA0                        0x31143018            /*  SWU10 Upper Address Register n */
#define REG_SWU10_UA1                        0x31143038            /*  SWU10 Upper Address Register n */
#define REG_SWU10_UA2                        0x31143058            /*  SWU10 Upper Address Register n */
#define REG_SWU10_UA3                        0x31143078            /*  SWU10 Upper Address Register n */
#define REG_SWU10_UAn(i)                     (REG_SWU10_UA0 + ((i) * 32))
#define REG_SWU10_UAn_COUNT                  4
#define REG_SWU10_ID0                        0x3114301C            /*  SWU10 ID Register n */
#define REG_SWU10_ID1                        0x3114303C            /*  SWU10 ID Register n */
#define REG_SWU10_ID2                        0x3114305C            /*  SWU10 ID Register n */
#define REG_SWU10_ID3                        0x3114307C            /*  SWU10 ID Register n */
#define REG_SWU10_IDn(i)                     (REG_SWU10_ID0 + ((i) * 32))
#define REG_SWU10_IDn_COUNT                  4
#define REG_SWU10_CNT0                       0x31143020            /*  SWU10 Count Register n */
#define REG_SWU10_CNT1                       0x31143040            /*  SWU10 Count Register n */
#define REG_SWU10_CNT2                       0x31143060            /*  SWU10 Count Register n */
#define REG_SWU10_CNT3                       0x31143080            /*  SWU10 Count Register n */
#define REG_SWU10_CNTn(i)                    (REG_SWU10_CNT0 + ((i) * 32))
#define REG_SWU10_CNTn_COUNT                 4
#define REG_SWU10_TARG0                      0x31143024            /*  SWU10 Target Register n */
#define REG_SWU10_TARG1                      0x31143044            /*  SWU10 Target Register n */
#define REG_SWU10_TARG2                      0x31143064            /*  SWU10 Target Register n */
#define REG_SWU10_TARG3                      0x31143084            /*  SWU10 Target Register n */
#define REG_SWU10_TARGn(i)                   (REG_SWU10_TARG0 + ((i) * 32))
#define REG_SWU10_TARGn_COUNT                4
#define REG_SWU10_HIST0                      0x31143028            /*  SWU10 Bandwidth History Register n */
#define REG_SWU10_HIST1                      0x31143048            /*  SWU10 Bandwidth History Register n */
#define REG_SWU10_HIST2                      0x31143068            /*  SWU10 Bandwidth History Register n */
#define REG_SWU10_HIST3                      0x31143088            /*  SWU10 Bandwidth History Register n */
#define REG_SWU10_HISTn(i)                   (REG_SWU10_HIST0 + ((i) * 32))
#define REG_SWU10_HISTn_COUNT                4
#define REG_SWU10_CUR0                       0x3114302C            /*  SWU10 Current Register n */
#define REG_SWU10_CUR1                       0x3114304C            /*  SWU10 Current Register n */
#define REG_SWU10_CUR2                       0x3114306C            /*  SWU10 Current Register n */
#define REG_SWU10_CUR3                       0x3114308C            /*  SWU10 Current Register n */
#define REG_SWU10_CURn(i)                    (REG_SWU10_CUR0 + ((i) * 32))
#define REG_SWU10_CURn_COUNT                 4

/* ============================================================================================================================
        SWU11
   ============================================================================================================================ */
#define REG_SWU11_GCTL                       0x31097000            /*  SWU11 Global Control Register */
#define REG_SWU11_GSTAT                      0x31097004            /*  SWU11 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU11_CTL0                       0x31097010            /*  SWU11 Control Register n */
#define REG_SWU11_CTL1                       0x31097030            /*  SWU11 Control Register n */
#define REG_SWU11_CTL2                       0x31097050            /*  SWU11 Control Register n */
#define REG_SWU11_CTL3                       0x31097070            /*  SWU11 Control Register n */
#define REG_SWU11_CTLn(i)                    (REG_SWU11_CTL0 + ((i) * 32))
#define REG_SWU11_CTLn_COUNT                 4
#define REG_SWU11_LA0                        0x31097014            /*  SWU11 Lower Address Register n */
#define REG_SWU11_LA1                        0x31097034            /*  SWU11 Lower Address Register n */
#define REG_SWU11_LA2                        0x31097054            /*  SWU11 Lower Address Register n */
#define REG_SWU11_LA3                        0x31097074            /*  SWU11 Lower Address Register n */
#define REG_SWU11_LAn(i)                     (REG_SWU11_LA0 + ((i) * 32))
#define REG_SWU11_LAn_COUNT                  4
#define REG_SWU11_UA0                        0x31097018            /*  SWU11 Upper Address Register n */
#define REG_SWU11_UA1                        0x31097038            /*  SWU11 Upper Address Register n */
#define REG_SWU11_UA2                        0x31097058            /*  SWU11 Upper Address Register n */
#define REG_SWU11_UA3                        0x31097078            /*  SWU11 Upper Address Register n */
#define REG_SWU11_UAn(i)                     (REG_SWU11_UA0 + ((i) * 32))
#define REG_SWU11_UAn_COUNT                  4
#define REG_SWU11_ID0                        0x3109701C            /*  SWU11 ID Register n */
#define REG_SWU11_ID1                        0x3109703C            /*  SWU11 ID Register n */
#define REG_SWU11_ID2                        0x3109705C            /*  SWU11 ID Register n */
#define REG_SWU11_ID3                        0x3109707C            /*  SWU11 ID Register n */
#define REG_SWU11_IDn(i)                     (REG_SWU11_ID0 + ((i) * 32))
#define REG_SWU11_IDn_COUNT                  4
#define REG_SWU11_CNT0                       0x31097020            /*  SWU11 Count Register n */
#define REG_SWU11_CNT1                       0x31097040            /*  SWU11 Count Register n */
#define REG_SWU11_CNT2                       0x31097060            /*  SWU11 Count Register n */
#define REG_SWU11_CNT3                       0x31097080            /*  SWU11 Count Register n */
#define REG_SWU11_CNTn(i)                    (REG_SWU11_CNT0 + ((i) * 32))
#define REG_SWU11_CNTn_COUNT                 4
#define REG_SWU11_TARG0                      0x31097024            /*  SWU11 Target Register n */
#define REG_SWU11_TARG1                      0x31097044            /*  SWU11 Target Register n */
#define REG_SWU11_TARG2                      0x31097064            /*  SWU11 Target Register n */
#define REG_SWU11_TARG3                      0x31097084            /*  SWU11 Target Register n */
#define REG_SWU11_TARGn(i)                   (REG_SWU11_TARG0 + ((i) * 32))
#define REG_SWU11_TARGn_COUNT                4
#define REG_SWU11_HIST0                      0x31097028            /*  SWU11 Bandwidth History Register n */
#define REG_SWU11_HIST1                      0x31097048            /*  SWU11 Bandwidth History Register n */
#define REG_SWU11_HIST2                      0x31097068            /*  SWU11 Bandwidth History Register n */
#define REG_SWU11_HIST3                      0x31097088            /*  SWU11 Bandwidth History Register n */
#define REG_SWU11_HISTn(i)                   (REG_SWU11_HIST0 + ((i) * 32))
#define REG_SWU11_HISTn_COUNT                4
#define REG_SWU11_CUR0                       0x3109702C            /*  SWU11 Current Register n */
#define REG_SWU11_CUR1                       0x3109704C            /*  SWU11 Current Register n */
#define REG_SWU11_CUR2                       0x3109706C            /*  SWU11 Current Register n */
#define REG_SWU11_CUR3                       0x3109708C            /*  SWU11 Current Register n */
#define REG_SWU11_CURn(i)                    (REG_SWU11_CUR0 + ((i) * 32))
#define REG_SWU11_CURn_COUNT                 4

/* ============================================================================================================================
        SWU12
   ============================================================================================================================ */
#define REG_SWU12_GCTL                       0x310A8000            /*  SWU12 Global Control Register */
#define REG_SWU12_GSTAT                      0x310A8004            /*  SWU12 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU12_CTL0                       0x310A8010            /*  SWU12 Control Register n */
#define REG_SWU12_CTL1                       0x310A8030            /*  SWU12 Control Register n */
#define REG_SWU12_CTL2                       0x310A8050            /*  SWU12 Control Register n */
#define REG_SWU12_CTL3                       0x310A8070            /*  SWU12 Control Register n */
#define REG_SWU12_CTLn(i)                    (REG_SWU12_CTL0 + ((i) * 32))
#define REG_SWU12_CTLn_COUNT                 4
#define REG_SWU12_LA0                        0x310A8014            /*  SWU12 Lower Address Register n */
#define REG_SWU12_LA1                        0x310A8034            /*  SWU12 Lower Address Register n */
#define REG_SWU12_LA2                        0x310A8054            /*  SWU12 Lower Address Register n */
#define REG_SWU12_LA3                        0x310A8074            /*  SWU12 Lower Address Register n */
#define REG_SWU12_LAn(i)                     (REG_SWU12_LA0 + ((i) * 32))
#define REG_SWU12_LAn_COUNT                  4
#define REG_SWU12_UA0                        0x310A8018            /*  SWU12 Upper Address Register n */
#define REG_SWU12_UA1                        0x310A8038            /*  SWU12 Upper Address Register n */
#define REG_SWU12_UA2                        0x310A8058            /*  SWU12 Upper Address Register n */
#define REG_SWU12_UA3                        0x310A8078            /*  SWU12 Upper Address Register n */
#define REG_SWU12_UAn(i)                     (REG_SWU12_UA0 + ((i) * 32))
#define REG_SWU12_UAn_COUNT                  4
#define REG_SWU12_ID0                        0x310A801C            /*  SWU12 ID Register n */
#define REG_SWU12_ID1                        0x310A803C            /*  SWU12 ID Register n */
#define REG_SWU12_ID2                        0x310A805C            /*  SWU12 ID Register n */
#define REG_SWU12_ID3                        0x310A807C            /*  SWU12 ID Register n */
#define REG_SWU12_IDn(i)                     (REG_SWU12_ID0 + ((i) * 32))
#define REG_SWU12_IDn_COUNT                  4
#define REG_SWU12_CNT0                       0x310A8020            /*  SWU12 Count Register n */
#define REG_SWU12_CNT1                       0x310A8040            /*  SWU12 Count Register n */
#define REG_SWU12_CNT2                       0x310A8060            /*  SWU12 Count Register n */
#define REG_SWU12_CNT3                       0x310A8080            /*  SWU12 Count Register n */
#define REG_SWU12_CNTn(i)                    (REG_SWU12_CNT0 + ((i) * 32))
#define REG_SWU12_CNTn_COUNT                 4
#define REG_SWU12_TARG0                      0x310A8024            /*  SWU12 Target Register n */
#define REG_SWU12_TARG1                      0x310A8044            /*  SWU12 Target Register n */
#define REG_SWU12_TARG2                      0x310A8064            /*  SWU12 Target Register n */
#define REG_SWU12_TARG3                      0x310A8084            /*  SWU12 Target Register n */
#define REG_SWU12_TARGn(i)                   (REG_SWU12_TARG0 + ((i) * 32))
#define REG_SWU12_TARGn_COUNT                4
#define REG_SWU12_HIST0                      0x310A8028            /*  SWU12 Bandwidth History Register n */
#define REG_SWU12_HIST1                      0x310A8048            /*  SWU12 Bandwidth History Register n */
#define REG_SWU12_HIST2                      0x310A8068            /*  SWU12 Bandwidth History Register n */
#define REG_SWU12_HIST3                      0x310A8088            /*  SWU12 Bandwidth History Register n */
#define REG_SWU12_HISTn(i)                   (REG_SWU12_HIST0 + ((i) * 32))
#define REG_SWU12_HISTn_COUNT                4
#define REG_SWU12_CUR0                       0x310A802C            /*  SWU12 Current Register n */
#define REG_SWU12_CUR1                       0x310A804C            /*  SWU12 Current Register n */
#define REG_SWU12_CUR2                       0x310A806C            /*  SWU12 Current Register n */
#define REG_SWU12_CUR3                       0x310A808C            /*  SWU12 Current Register n */
#define REG_SWU12_CURn(i)                    (REG_SWU12_CUR0 + ((i) * 32))
#define REG_SWU12_CURn_COUNT                 4

/* ============================================================================================================================
        SWU13
   ============================================================================================================================ */
#define REG_SWU13_GCTL                       0x3109E000            /*  SWU13 Global Control Register */
#define REG_SWU13_GSTAT                      0x3109E004            /*  SWU13 Global Status Register */
/* ============================================================================================================================
      WB Register Definitions
   ============================================================================================================================ */
#define REG_SWU13_CTL0                       0x3109E010            /*  SWU13 Control Register n */
#define REG_SWU13_CTL1                       0x3109E030            /*  SWU13 Control Register n */
#define REG_SWU13_CTL2                       0x3109E050            /*  SWU13 Control Register n */
#define REG_SWU13_CTL3                       0x3109E070            /*  SWU13 Control Register n */
#define REG_SWU13_CTLn(i)                    (REG_SWU13_CTL0 + ((i) * 32))
#define REG_SWU13_CTLn_COUNT                 4
#define REG_SWU13_LA0                        0x3109E014            /*  SWU13 Lower Address Register n */
#define REG_SWU13_LA1                        0x3109E034            /*  SWU13 Lower Address Register n */
#define REG_SWU13_LA2                        0x3109E054            /*  SWU13 Lower Address Register n */
#define REG_SWU13_LA3                        0x3109E074            /*  SWU13 Lower Address Register n */
#define REG_SWU13_LAn(i)                     (REG_SWU13_LA0 + ((i) * 32))
#define REG_SWU13_LAn_COUNT                  4
#define REG_SWU13_UA0                        0x3109E018            /*  SWU13 Upper Address Register n */
#define REG_SWU13_UA1                        0x3109E038            /*  SWU13 Upper Address Register n */
#define REG_SWU13_UA2                        0x3109E058            /*  SWU13 Upper Address Register n */
#define REG_SWU13_UA3                        0x3109E078            /*  SWU13 Upper Address Register n */
#define REG_SWU13_UAn(i)                     (REG_SWU13_UA0 + ((i) * 32))
#define REG_SWU13_UAn_COUNT                  4
#define REG_SWU13_ID0                        0x3109E01C            /*  SWU13 ID Register n */
#define REG_SWU13_ID1                        0x3109E03C            /*  SWU13 ID Register n */
#define REG_SWU13_ID2                        0x3109E05C            /*  SWU13 ID Register n */
#define REG_SWU13_ID3                        0x3109E07C            /*  SWU13 ID Register n */
#define REG_SWU13_IDn(i)                     (REG_SWU13_ID0 + ((i) * 32))
#define REG_SWU13_IDn_COUNT                  4
#define REG_SWU13_CNT0                       0x3109E020            /*  SWU13 Count Register n */
#define REG_SWU13_CNT1                       0x3109E040            /*  SWU13 Count Register n */
#define REG_SWU13_CNT2                       0x3109E060            /*  SWU13 Count Register n */
#define REG_SWU13_CNT3                       0x3109E080            /*  SWU13 Count Register n */
#define REG_SWU13_CNTn(i)                    (REG_SWU13_CNT0 + ((i) * 32))
#define REG_SWU13_CNTn_COUNT                 4
#define REG_SWU13_TARG0                      0x3109E024            /*  SWU13 Target Register n */
#define REG_SWU13_TARG1                      0x3109E044            /*  SWU13 Target Register n */
#define REG_SWU13_TARG2                      0x3109E064            /*  SWU13 Target Register n */
#define REG_SWU13_TARG3                      0x3109E084            /*  SWU13 Target Register n */
#define REG_SWU13_TARGn(i)                   (REG_SWU13_TARG0 + ((i) * 32))
#define REG_SWU13_TARGn_COUNT                4
#define REG_SWU13_HIST0                      0x3109E028            /*  SWU13 Bandwidth History Register n */
#define REG_SWU13_HIST1                      0x3109E048            /*  SWU13 Bandwidth History Register n */
#define REG_SWU13_HIST2                      0x3109E068            /*  SWU13 Bandwidth History Register n */
#define REG_SWU13_HIST3                      0x3109E088            /*  SWU13 Bandwidth History Register n */
#define REG_SWU13_HISTn(i)                   (REG_SWU13_HIST0 + ((i) * 32))
#define REG_SWU13_HISTn_COUNT                4
#define REG_SWU13_CUR0                       0x3109E02C            /*  SWU13 Current Register n */
#define REG_SWU13_CUR1                       0x3109E04C            /*  SWU13 Current Register n */
#define REG_SWU13_CUR2                       0x3109E06C            /*  SWU13 Current Register n */
#define REG_SWU13_CUR3                       0x3109E08C            /*  SWU13 Current Register n */
#define REG_SWU13_CURn(i)                    (REG_SWU13_CUR0 + ((i) * 32))
#define REG_SWU13_CURn_COUNT                 4

/* ============================================================================================================================
        SWU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SWU_GCTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_GCTL_RST                     1            /*  Global Reset */
#define BITP_SWU_GCTL_EN                      0            /*  Global Enable */
#define BITM_SWU_GCTL_RST                    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Global Reset */
#define BITM_SWU_GCTL_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Global Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_GSTAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_GSTAT_ADDRERR               30            /*  Address Error Status */
#define BITP_SWU_GSTAT_OVRBW3                15            /*  Group 3 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW3               14            /*  Group 3 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_OVRBW2                13            /*  Group 2 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW2               12            /*  Group 2 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_OVRBW1                11            /*  Group 1 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW1               10            /*  Group 1 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_OVRBW0                 9            /*  Group 0 Bandwidth Above Maximum Target */
#define BITP_SWU_GSTAT_UNDRBW0                8            /*  Group 0 Bandwidth Below Minimum Target */
#define BITP_SWU_GSTAT_INT3                   7            /*  Group 3 Interrupt Status */
#define BITP_SWU_GSTAT_INT2                   6            /*  Group 2 Interrupt Status */
#define BITP_SWU_GSTAT_INT1                   5            /*  Group 1 Interrupt Status */
#define BITP_SWU_GSTAT_INT0                   4            /*  Group 0 Interrupt Status */
#define BITP_SWU_GSTAT_MTCH3                  3            /*  Group 3 Match */
#define BITP_SWU_GSTAT_MTCH2                  2            /*  Group 2 Match */
#define BITP_SWU_GSTAT_MTCH1                  1            /*  Group 1 Match */
#define BITP_SWU_GSTAT_MTCH0                  0            /*  Group 0 Match */
#define BITM_SWU_GSTAT_ADDRERR               (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Address Error Status */
#define BITM_SWU_GSTAT_OVRBW3                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Group 3 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW3               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Group 3 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_OVRBW2                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Group 2 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW2               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Group 2 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_OVRBW1                (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Group 1 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW1               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Group 1 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_OVRBW0                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Group 0 Bandwidth Above Maximum Target */
#define BITM_SWU_GSTAT_UNDRBW0               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Group 0 Bandwidth Below Minimum Target */
#define BITM_SWU_GSTAT_INT3                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Group 3 Interrupt Status */
#define BITM_SWU_GSTAT_INT2                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Group 2 Interrupt Status */
#define BITM_SWU_GSTAT_INT1                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Group 1 Interrupt Status */
#define BITM_SWU_GSTAT_INT0                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Group 0 Interrupt Status */
#define BITM_SWU_GSTAT_MTCH3                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Group 3 Match */
#define BITM_SWU_GSTAT_MTCH2                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Group 2 Match */
#define BITM_SWU_GSTAT_MTCH1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Group 1 Match */
#define BITM_SWU_GSTAT_MTCH0                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Group 0 Match */

/* ============================================================================================================================
 *    WB Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SWU_CTL[n]                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_CTL_DATACNTMODE             24            /*  Data Channel Monitor */
#define BITP_SWU_CTL_SCALE                   21            /*  Scale the number of transactions */
#define BITP_SWU_CTL_STALLCNTMODE            20            /*  Stall Count Mode */
#define BITP_SWU_CTL_MAXACT                  19            /*  Action for Bandwidth Above Maximum */
#define BITP_SWU_CTL_MINACT                  18            /*  Action for Bandwidth Below Minimum */
#define BITP_SWU_CTL_BLENINC                 17            /*  Increment Bandwidth Count by Burst Length */
#define BITP_SWU_CTL_BWEN                    16            /*  Bandwidth Mode Enable */
#define BITP_SWU_CTL_TRGEN                   14            /*  Trigger Enable */
#define BITP_SWU_CTL_INTEN                   13            /*  Interrupt Enable */
#define BITP_SWU_CTL_DBGEN                   12            /*  Debug Event Enable */
#define BITP_SWU_CTL_CNTRPTEN                 9            /*  Count Repeat Enable */
#define BITP_SWU_CTL_CNTEN                    8            /*  Count Enable */
#define BITP_SWU_CTL_SCMPEN                   5            /*  Secure Comparison Enable */
#define BITP_SWU_CTL_IDCMPEN                  4            /*  ID Comparison Enable */
#define BITP_SWU_CTL_ACMPM                    2            /*  Address Comparison Mode */
#define BITP_SWU_CTL_DIR                      1            /*  Transaction Direction for Match */
#define BITP_SWU_CTL_EN                       0            /*  Enable Watchpoint */
#define BITM_SWU_CTL_DATACNTMODE             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Data Channel Monitor */
#define BITM_SWU_CTL_SCALE                   (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  Scale the number of transactions */
#define BITM_SWU_CTL_STALLCNTMODE            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Stall Count Mode */
#define BITM_SWU_CTL_MAXACT                  (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Action for Bandwidth Above Maximum */
#define BITM_SWU_CTL_MINACT                  (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Action for Bandwidth Below Minimum */
#define BITM_SWU_CTL_BLENINC                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Increment Bandwidth Count by Burst Length */
#define BITM_SWU_CTL_BWEN                    (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Bandwidth Mode Enable */
#define BITM_SWU_CTL_TRGEN                   (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Trigger Enable */
#define BITM_SWU_CTL_INTEN                   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Interrupt Enable */
#define BITM_SWU_CTL_DBGEN                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Debug Event Enable */
#define BITM_SWU_CTL_CNTRPTEN                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Count Repeat Enable */
#define BITM_SWU_CTL_CNTEN                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Count Enable */
#define BITM_SWU_CTL_SCMPEN                  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Secure Comparison Enable */
#define BITM_SWU_CTL_IDCMPEN                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  ID Comparison Enable */
#define BITM_SWU_CTL_ACMPM                   (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  Address Comparison Mode */
#define BITM_SWU_CTL_DIR                     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Transaction Direction for Match */
#define BITM_SWU_CTL_EN                      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Watchpoint */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_LA[n]                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_LA_ADDR                      0            /*  Lower Address */
#define BITM_SWU_LA_ADDR                     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Lower Address */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_UA[n]                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_UA_ADDR                      0            /*  Upper Address */
#define BITM_SWU_UA_ADDR                     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFF,void *     ))    /*  Upper Address */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_ID[n]                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_ID_IDMASK                   16            /*  Identity Mask (for Or with ID) */
#define BITP_SWU_ID_ID                        0            /*  Identity */
#define BITM_SWU_ID_IDMASK                   (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Identity Mask (for Or with ID) */
#define BITM_SWU_ID_ID                       (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Identity */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_CNT[n]                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_CNT_COUNT                    0            /*  Count */
#define BITM_SWU_CNT_COUNT                   (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Count */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_TARG[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_TARG_BWMAX                  16            /*  Maximum Bandwidth Target */
#define BITP_SWU_TARG_BWMIN                   0            /*  Minimum Bandwidth Target */
#define BITM_SWU_TARG_BWMAX                  (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Maximum Bandwidth Target */
#define BITM_SWU_TARG_BWMIN                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Minimum Bandwidth Target */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_HIST[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_HIST_BWHIST1                16            /*  Bandwidth from Window Before Last */
#define BITP_SWU_HIST_BWHIST0                 0            /*  Bandwidth from Last Window */
#define BITM_SWU_HIST_BWHIST1                (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Bandwidth from Window Before Last */
#define BITM_SWU_HIST_BWHIST0                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Bandwidth from Last Window */

/* -------------------------------------------------------------------------------------------------------------------------
          SWU_CUR[n]                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SWU_CUR_CURBW                   16            /*  Current Bandwidth */
#define BITP_SWU_CUR_CURCNT                   0            /*  Current Count */
#define BITM_SWU_CUR_CURBW                   (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Current Bandwidth */
#define BITM_SWU_CUR_CURCNT                  (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Current Count */


/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA39
   ============================================================================================================================ */
#define REG_DMA39_DSCPTR_NXT                 0x3109A000            /*  DMA39 Pointer to Next Initial Descriptor Register */
#define REG_DMA39_ADDRSTART                  0x3109A004            /*  DMA39 Start Address of Current Buffer Register */
#define REG_DMA39_CFG                        0x3109A008            /*  DMA39 Configuration Register */
#define REG_DMA39_XCNT                       0x3109A00C            /*  DMA39 Inner Loop Count Start Value Register */
#define REG_DMA39_XMOD                       0x3109A010            /*  DMA39 Inner Loop Address Increment Register */
#define REG_DMA39_YCNT                       0x3109A014            /*  DMA39 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA39_YMOD                       0x3109A018            /*  DMA39 Outer Loop Address Increment (2D only) Register */
#define REG_DMA39_DSCPTR_CUR                 0x3109A024            /*  DMA39 Current Descriptor Pointer Register */
#define REG_DMA39_DSCPTR_PRV                 0x3109A028            /*  DMA39 Previous Initial Descriptor Pointer Register */
#define REG_DMA39_ADDR_CUR                   0x3109A02C            /*  DMA39 Current Address Register */
#define REG_DMA39_STAT                       0x3109A030            /*  DMA39 Status Register */
#define REG_DMA39_XCNT_CUR                   0x3109A034            /*  DMA39 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA39_YCNT_CUR                   0x3109A038            /*  DMA39 Current Row Count (2D only) Register */
#define REG_DMA39_BWLCNT                     0x3109A040            /*  DMA39 Bandwidth Limit Count Register */
#define REG_DMA39_BWLCNT_CUR                 0x3109A044            /*  DMA39 Bandwidth Limit Count Current Register */
#define REG_DMA39_BWMCNT                     0x3109A048            /*  DMA39 Bandwidth Monitor Count Register */
#define REG_DMA39_BWMCNT_CUR                 0x3109A04C            /*  DMA39 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA49
   ============================================================================================================================ */
#define REG_DMA49_DSCPTR_NXT                 0x310AC000            /*  DMA49 Pointer to Next Initial Descriptor Register */
#define REG_DMA49_ADDRSTART                  0x310AC004            /*  DMA49 Start Address of Current Buffer Register */
#define REG_DMA49_CFG                        0x310AC008            /*  DMA49 Configuration Register */
#define REG_DMA49_XCNT                       0x310AC00C            /*  DMA49 Inner Loop Count Start Value Register */
#define REG_DMA49_XMOD                       0x310AC010            /*  DMA49 Inner Loop Address Increment Register */
#define REG_DMA49_YCNT                       0x310AC014            /*  DMA49 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA49_YMOD                       0x310AC018            /*  DMA49 Outer Loop Address Increment (2D only) Register */
#define REG_DMA49_DSCPTR_CUR                 0x310AC024            /*  DMA49 Current Descriptor Pointer Register */
#define REG_DMA49_DSCPTR_PRV                 0x310AC028            /*  DMA49 Previous Initial Descriptor Pointer Register */
#define REG_DMA49_ADDR_CUR                   0x310AC02C            /*  DMA49 Current Address Register */
#define REG_DMA49_STAT                       0x310AC030            /*  DMA49 Status Register */
#define REG_DMA49_XCNT_CUR                   0x310AC034            /*  DMA49 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA49_YCNT_CUR                   0x310AC038            /*  DMA49 Current Row Count (2D only) Register */
#define REG_DMA49_BWLCNT                     0x310AC040            /*  DMA49 Bandwidth Limit Count Register */
#define REG_DMA49_BWLCNT_CUR                 0x310AC044            /*  DMA49 Bandwidth Limit Count Current Register */
#define REG_DMA49_BWMCNT                     0x310AC048            /*  DMA49 Bandwidth Monitor Count Register */
#define REG_DMA49_BWMCNT_CUR                 0x310AC04C            /*  DMA49 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA40
   ============================================================================================================================ */
#define REG_DMA40_DSCPTR_NXT                 0x3109A080            /*  DMA40 Pointer to Next Initial Descriptor Register */
#define REG_DMA40_ADDRSTART                  0x3109A084            /*  DMA40 Start Address of Current Buffer Register */
#define REG_DMA40_CFG                        0x3109A088            /*  DMA40 Configuration Register */
#define REG_DMA40_XCNT                       0x3109A08C            /*  DMA40 Inner Loop Count Start Value Register */
#define REG_DMA40_XMOD                       0x3109A090            /*  DMA40 Inner Loop Address Increment Register */
#define REG_DMA40_YCNT                       0x3109A094            /*  DMA40 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA40_YMOD                       0x3109A098            /*  DMA40 Outer Loop Address Increment (2D only) Register */
#define REG_DMA40_DSCPTR_CUR                 0x3109A0A4            /*  DMA40 Current Descriptor Pointer Register */
#define REG_DMA40_DSCPTR_PRV                 0x3109A0A8            /*  DMA40 Previous Initial Descriptor Pointer Register */
#define REG_DMA40_ADDR_CUR                   0x3109A0AC            /*  DMA40 Current Address Register */
#define REG_DMA40_STAT                       0x3109A0B0            /*  DMA40 Status Register */
#define REG_DMA40_XCNT_CUR                   0x3109A0B4            /*  DMA40 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA40_YCNT_CUR                   0x3109A0B8            /*  DMA40 Current Row Count (2D only) Register */
#define REG_DMA40_BWLCNT                     0x3109A0C0            /*  DMA40 Bandwidth Limit Count Register */
#define REG_DMA40_BWLCNT_CUR                 0x3109A0C4            /*  DMA40 Bandwidth Limit Count Current Register */
#define REG_DMA40_BWMCNT                     0x3109A0C8            /*  DMA40 Bandwidth Monitor Count Register */
#define REG_DMA40_BWMCNT_CUR                 0x3109A0CC            /*  DMA40 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA50
   ============================================================================================================================ */
#define REG_DMA50_DSCPTR_NXT                 0x310AC080            /*  DMA50 Pointer to Next Initial Descriptor Register */
#define REG_DMA50_ADDRSTART                  0x310AC084            /*  DMA50 Start Address of Current Buffer Register */
#define REG_DMA50_CFG                        0x310AC088            /*  DMA50 Configuration Register */
#define REG_DMA50_XCNT                       0x310AC08C            /*  DMA50 Inner Loop Count Start Value Register */
#define REG_DMA50_XMOD                       0x310AC090            /*  DMA50 Inner Loop Address Increment Register */
#define REG_DMA50_YCNT                       0x310AC094            /*  DMA50 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA50_YMOD                       0x310AC098            /*  DMA50 Outer Loop Address Increment (2D only) Register */
#define REG_DMA50_DSCPTR_CUR                 0x310AC0A4            /*  DMA50 Current Descriptor Pointer Register */
#define REG_DMA50_DSCPTR_PRV                 0x310AC0A8            /*  DMA50 Previous Initial Descriptor Pointer Register */
#define REG_DMA50_ADDR_CUR                   0x310AC0AC            /*  DMA50 Current Address Register */
#define REG_DMA50_STAT                       0x310AC0B0            /*  DMA50 Status Register */
#define REG_DMA50_XCNT_CUR                   0x310AC0B4            /*  DMA50 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA50_YCNT_CUR                   0x310AC0B8            /*  DMA50 Current Row Count (2D only) Register */
#define REG_DMA50_BWLCNT                     0x310AC0C0            /*  DMA50 Bandwidth Limit Count Register */
#define REG_DMA50_BWLCNT_CUR                 0x310AC0C4            /*  DMA50 Bandwidth Limit Count Current Register */
#define REG_DMA50_BWMCNT                     0x310AC0C8            /*  DMA50 Bandwidth Monitor Count Register */
#define REG_DMA50_BWMCNT_CUR                 0x310AC0CC            /*  DMA50 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA43
   ============================================================================================================================ */
#define REG_DMA43_DSCPTR_NXT                 0x3109B000            /*  DMA43 Pointer to Next Initial Descriptor Register */
#define REG_DMA43_ADDRSTART                  0x3109B004            /*  DMA43 Start Address of Current Buffer Register */
#define REG_DMA43_CFG                        0x3109B008            /*  DMA43 Configuration Register */
#define REG_DMA43_XCNT                       0x3109B00C            /*  DMA43 Inner Loop Count Start Value Register */
#define REG_DMA43_XMOD                       0x3109B010            /*  DMA43 Inner Loop Address Increment Register */
#define REG_DMA43_YCNT                       0x3109B014            /*  DMA43 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA43_YMOD                       0x3109B018            /*  DMA43 Outer Loop Address Increment (2D only) Register */
#define REG_DMA43_DSCPTR_CUR                 0x3109B024            /*  DMA43 Current Descriptor Pointer Register */
#define REG_DMA43_DSCPTR_PRV                 0x3109B028            /*  DMA43 Previous Initial Descriptor Pointer Register */
#define REG_DMA43_ADDR_CUR                   0x3109B02C            /*  DMA43 Current Address Register */
#define REG_DMA43_STAT                       0x3109B030            /*  DMA43 Status Register */
#define REG_DMA43_XCNT_CUR                   0x3109B034            /*  DMA43 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA43_YCNT_CUR                   0x3109B038            /*  DMA43 Current Row Count (2D only) Register */
#define REG_DMA43_BWLCNT                     0x3109B040            /*  DMA43 Bandwidth Limit Count Register */
#define REG_DMA43_BWLCNT_CUR                 0x3109B044            /*  DMA43 Bandwidth Limit Count Current Register */
#define REG_DMA43_BWMCNT                     0x3109B048            /*  DMA43 Bandwidth Monitor Count Register */
#define REG_DMA43_BWMCNT_CUR                 0x3109B04C            /*  DMA43 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA51
   ============================================================================================================================ */
#define REG_DMA51_DSCPTR_NXT                 0x3109C000            /*  DMA51 Pointer to Next Initial Descriptor Register */
#define REG_DMA51_ADDRSTART                  0x3109C004            /*  DMA51 Start Address of Current Buffer Register */
#define REG_DMA51_CFG                        0x3109C008            /*  DMA51 Configuration Register */
#define REG_DMA51_XCNT                       0x3109C00C            /*  DMA51 Inner Loop Count Start Value Register */
#define REG_DMA51_XMOD                       0x3109C010            /*  DMA51 Inner Loop Address Increment Register */
#define REG_DMA51_YCNT                       0x3109C014            /*  DMA51 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA51_YMOD                       0x3109C018            /*  DMA51 Outer Loop Address Increment (2D only) Register */
#define REG_DMA51_DSCPTR_CUR                 0x3109C024            /*  DMA51 Current Descriptor Pointer Register */
#define REG_DMA51_DSCPTR_PRV                 0x3109C028            /*  DMA51 Previous Initial Descriptor Pointer Register */
#define REG_DMA51_ADDR_CUR                   0x3109C02C            /*  DMA51 Current Address Register */
#define REG_DMA51_STAT                       0x3109C030            /*  DMA51 Status Register */
#define REG_DMA51_XCNT_CUR                   0x3109C034            /*  DMA51 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA51_YCNT_CUR                   0x3109C038            /*  DMA51 Current Row Count (2D only) Register */
#define REG_DMA51_BWLCNT                     0x3109C040            /*  DMA51 Bandwidth Limit Count Register */
#define REG_DMA51_BWLCNT_CUR                 0x3109C044            /*  DMA51 Bandwidth Limit Count Current Register */
#define REG_DMA51_BWMCNT                     0x3109C048            /*  DMA51 Bandwidth Monitor Count Register */
#define REG_DMA51_BWMCNT_CUR                 0x3109C04C            /*  DMA51 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA44
   ============================================================================================================================ */
#define REG_DMA44_DSCPTR_NXT                 0x3109B080            /*  DMA44 Pointer to Next Initial Descriptor Register */
#define REG_DMA44_ADDRSTART                  0x3109B084            /*  DMA44 Start Address of Current Buffer Register */
#define REG_DMA44_CFG                        0x3109B088            /*  DMA44 Configuration Register */
#define REG_DMA44_XCNT                       0x3109B08C            /*  DMA44 Inner Loop Count Start Value Register */
#define REG_DMA44_XMOD                       0x3109B090            /*  DMA44 Inner Loop Address Increment Register */
#define REG_DMA44_YCNT                       0x3109B094            /*  DMA44 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA44_YMOD                       0x3109B098            /*  DMA44 Outer Loop Address Increment (2D only) Register */
#define REG_DMA44_DSCPTR_CUR                 0x3109B0A4            /*  DMA44 Current Descriptor Pointer Register */
#define REG_DMA44_DSCPTR_PRV                 0x3109B0A8            /*  DMA44 Previous Initial Descriptor Pointer Register */
#define REG_DMA44_ADDR_CUR                   0x3109B0AC            /*  DMA44 Current Address Register */
#define REG_DMA44_STAT                       0x3109B0B0            /*  DMA44 Status Register */
#define REG_DMA44_XCNT_CUR                   0x3109B0B4            /*  DMA44 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA44_YCNT_CUR                   0x3109B0B8            /*  DMA44 Current Row Count (2D only) Register */
#define REG_DMA44_BWLCNT                     0x3109B0C0            /*  DMA44 Bandwidth Limit Count Register */
#define REG_DMA44_BWLCNT_CUR                 0x3109B0C4            /*  DMA44 Bandwidth Limit Count Current Register */
#define REG_DMA44_BWMCNT                     0x3109B0C8            /*  DMA44 Bandwidth Monitor Count Register */
#define REG_DMA44_BWMCNT_CUR                 0x3109B0CC            /*  DMA44 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA52
   ============================================================================================================================ */
#define REG_DMA52_DSCPTR_NXT                 0x3109C080            /*  DMA52 Pointer to Next Initial Descriptor Register */
#define REG_DMA52_ADDRSTART                  0x3109C084            /*  DMA52 Start Address of Current Buffer Register */
#define REG_DMA52_CFG                        0x3109C088            /*  DMA52 Configuration Register */
#define REG_DMA52_XCNT                       0x3109C08C            /*  DMA52 Inner Loop Count Start Value Register */
#define REG_DMA52_XMOD                       0x3109C090            /*  DMA52 Inner Loop Address Increment Register */
#define REG_DMA52_YCNT                       0x3109C094            /*  DMA52 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA52_YMOD                       0x3109C098            /*  DMA52 Outer Loop Address Increment (2D only) Register */
#define REG_DMA52_DSCPTR_CUR                 0x3109C0A4            /*  DMA52 Current Descriptor Pointer Register */
#define REG_DMA52_DSCPTR_PRV                 0x3109C0A8            /*  DMA52 Previous Initial Descriptor Pointer Register */
#define REG_DMA52_ADDR_CUR                   0x3109C0AC            /*  DMA52 Current Address Register */
#define REG_DMA52_STAT                       0x3109C0B0            /*  DMA52 Status Register */
#define REG_DMA52_XCNT_CUR                   0x3109C0B4            /*  DMA52 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA52_YCNT_CUR                   0x3109C0B8            /*  DMA52 Current Row Count (2D only) Register */
#define REG_DMA52_BWLCNT                     0x3109C0C0            /*  DMA52 Bandwidth Limit Count Register */
#define REG_DMA52_BWLCNT_CUR                 0x3109C0C4            /*  DMA52 Bandwidth Limit Count Current Register */
#define REG_DMA52_BWMCNT                     0x3109C0C8            /*  DMA52 Bandwidth Monitor Count Register */
#define REG_DMA52_BWMCNT_CUR                 0x3109C0CC            /*  DMA52 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The System Memory Protection Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        SMPU9
   ============================================================================================================================ */
#define REG_SMPU9_CTL                        0x310A0000            /*  SMPU9 SMPU Control Register */
#define REG_SMPU9_STAT                       0x310A0004            /*  SMPU9 SMPU Status Register */
#define REG_SMPU9_IADDR                      0x310A0008            /*  SMPU9 Interrupt Address Register */
#define REG_SMPU9_IDTLS                      0x310A000C            /*  SMPU9 Interrupt Details Register */
#define REG_SMPU9_BADDR                      0x310A0010            /*  SMPU9 Bus Error Address Register */
#define REG_SMPU9_BDTLS                      0x310A0014            /*  SMPU9 Bus Error Details Register */
#define REG_SMPU9_REVID                      0x310A0220            /*  SMPU9 SMPU Revision ID Register */
#define REG_SMPU9_SECURECTL                  0x310A0800            /*  SMPU9 SMPU Control Secure Accesses Register */
/* ============================================================================================================================
      EXA[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU9_EXACADD0                   0x310A01A0            /*  SMPU9 Exclusive Access IDn Address */
#define REG_SMPU9_EXACADD1                   0x310A01A8            /*  SMPU9 Exclusive Access IDn Address */
#define REG_SMPU9_EXACADD2                   0x310A01B0            /*  SMPU9 Exclusive Access IDn Address */
#define REG_SMPU9_EXACADDn(i)                (REG_SMPU9_EXACADD0 + ((i) * 8))
#define REG_SMPU9_EXACADDn_COUNT             3
#define REG_SMPU9_EXACSTAT0                  0x310A01A4            /*  SMPU9 Exclusive Access Status */
#define REG_SMPU9_EXACSTAT1                  0x310A01AC            /*  SMPU9 Exclusive Access Status */
#define REG_SMPU9_EXACSTAT2                  0x310A01B4            /*  SMPU9 Exclusive Access Status */
#define REG_SMPU9_EXACSTATn(i)               (REG_SMPU9_EXACSTAT0 + ((i) * 8))
#define REG_SMPU9_EXACSTATn_COUNT            3
/* ============================================================================================================================
      R[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU9_RCTL0                      0x310A0020            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL1                      0x310A0038            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL2                      0x310A0050            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL3                      0x310A0068            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL4                      0x310A0080            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL5                      0x310A0098            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL6                      0x310A00B0            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTL7                      0x310A00C8            /*  SMPU9 Region n Control Register */
#define REG_SMPU9_RCTLn(i)                   (REG_SMPU9_RCTL0 + ((i) * 24))
#define REG_SMPU9_RCTLn_COUNT                8
#define REG_SMPU9_RADDR0                     0x310A0024            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR1                     0x310A003C            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR2                     0x310A0054            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR3                     0x310A006C            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR4                     0x310A0084            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR5                     0x310A009C            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR6                     0x310A00B4            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDR7                     0x310A00CC            /*  SMPU9 Region n Address Register */
#define REG_SMPU9_RADDRn(i)                  (REG_SMPU9_RADDR0 + ((i) * 24))
#define REG_SMPU9_RADDRn_COUNT               8
#define REG_SMPU9_RIDA0                      0x310A0028            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA1                      0x310A0040            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA2                      0x310A0058            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA3                      0x310A0070            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA4                      0x310A0088            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA5                      0x310A00A0            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA6                      0x310A00B8            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDA7                      0x310A00D0            /*  SMPU9 Region n ID A Register */
#define REG_SMPU9_RIDAn(i)                   (REG_SMPU9_RIDA0 + ((i) * 24))
#define REG_SMPU9_RIDAn_COUNT                8
#define REG_SMPU9_RIDMSKA0                   0x310A002C            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA1                   0x310A0044            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA2                   0x310A005C            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA3                   0x310A0074            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA4                   0x310A008C            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA5                   0x310A00A4            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA6                   0x310A00BC            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKA7                   0x310A00D4            /*  SMPU9 Region n ID Mask A Register */
#define REG_SMPU9_RIDMSKAn(i)                (REG_SMPU9_RIDMSKA0 + ((i) * 24))
#define REG_SMPU9_RIDMSKAn_COUNT             8
#define REG_SMPU9_RIDB0                      0x310A0030            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB1                      0x310A0048            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB2                      0x310A0060            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB3                      0x310A0078            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB4                      0x310A0090            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB5                      0x310A00A8            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB6                      0x310A00C0            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDB7                      0x310A00D8            /*  SMPU9 Region n ID B Register */
#define REG_SMPU9_RIDBn(i)                   (REG_SMPU9_RIDB0 + ((i) * 24))
#define REG_SMPU9_RIDBn_COUNT                8
#define REG_SMPU9_RIDMSKB0                   0x310A0034            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB1                   0x310A004C            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB2                   0x310A0064            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB3                   0x310A007C            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB4                   0x310A0094            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB5                   0x310A00AC            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB6                   0x310A00C4            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKB7                   0x310A00DC            /*  SMPU9 Region n ID Mask B Register */
#define REG_SMPU9_RIDMSKBn(i)                (REG_SMPU9_RIDMSKB0 + ((i) * 24))
#define REG_SMPU9_RIDMSKBn_COUNT             8
/* ============================================================================================================================
      SECURERCTL[n] Register Definitions
   ============================================================================================================================ */
#define REG_SMPU9_SECURERCTL0                0x310A0820            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL1                0x310A0824            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL2                0x310A0828            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL3                0x310A082C            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL4                0x310A0830            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL5                0x310A0834            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL6                0x310A0838            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTL7                0x310A083C            /*  SMPU9 Region n Control Secure Accesses Register */
#define REG_SMPU9_SECURERCTLn(i)             (REG_SMPU9_SECURERCTL0 + ((i) * 4))
#define REG_SMPU9_SECURERCTLn_COUNT          8

/* ============================================================================================================================
        SMPU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* ============================================================================================================================
 *    EXA[n] Register Field Definitions
 * ============================================================================================================================ */
/* ============================================================================================================================
 *    R[n] Register Field Definitions
 * ============================================================================================================================ */
/* ============================================================================================================================
 *    SECURERCTL[n] Register Field Definitions
 * ============================================================================================================================ */

/* ============================================================================================================================
        Memory Error Controller
   ============================================================================================================================ */

/* ============================================================================================================================
        MEC0
   ============================================================================================================================ */
/* ============================================================================================================================
      CID_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC0_CID0                        0x310A2FF0            /*  MEC0 Component ID0 Register */
#define REG_MEC0_CID1                        0x310A2FF4            /*  MEC0 Component ID1 Register */
#define REG_MEC0_CID2                        0x310A2FF8            /*  MEC0 Component ID2 Register */
#define REG_MEC0_CID3                        0x310A2FFC            /*  MEC0 Component ID3 Register */
/* ============================================================================================================================
      ECCERR_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC0_EEIRQ_GCTL0                 0x310A2100            /*  MEC0 ECC Error Interrupt Request Global Control Register */
#define REG_MEC0_EEIRQ_GCTLq(i)              (REG_MEC0_EEIRQ_GCTL0 + ((i) * 4))
#define REG_MEC0_EEIRQ_GCTLq_COUNT           1
#define REG_MEC0_EEIRQ_GSTAT0                0x310A2110            /*  MEC0 ECC Error Interrupt Request Global Status Register */
#define REG_MEC0_EEIRQ_GSTATq(i)             (REG_MEC0_EEIRQ_GSTAT0 + ((i) * 4))
#define REG_MEC0_EEIRQ_GSTATq_COUNT          1
#define REG_MEC0_ECCERR_CTL0                 0x310A2140            /*  MEC0 ECC Error Control Register */
#define REG_MEC0_ECCERR_CTLy(i)              (REG_MEC0_ECCERR_CTL0 + ((i) * 4))
#define REG_MEC0_ECCERR_CTLy_COUNT           1
#define REG_MEC0_ECCERR_STAT0                0x310A2180            /*  MEC0 ECC Error Status Register */
#define REG_MEC0_ECCERR_STATy(i)             (REG_MEC0_ECCERR_STAT0 + ((i) * 4))
#define REG_MEC0_ECCERR_STATy_COUNT          1
#define REG_MEC0_ECCERR_IMASK0               0x310A21C0            /*  MEC0 ECC Error Interrupt Mask Register */
#define REG_MEC0_ECCERR_IMASKy(i)            (REG_MEC0_ECCERR_IMASK0 + ((i) * 4))
#define REG_MEC0_ECCERR_IMASKy_COUNT         1
/* ============================================================================================================================
      MISCCTL_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC0_CLR                         0x310A2F00            /*  MEC0 Clear Register */
/* ============================================================================================================================
      PERR_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC0_PEIRQ_GCTL0                 0x310A2000            /*  MEC0 Parity Error Interrupt Request Global Control Register */
#define REG_MEC0_PEIRQ_GCTLp(i)              (REG_MEC0_PEIRQ_GCTL0 + ((i) * 4))
#define REG_MEC0_PEIRQ_GCTLp_COUNT           1
#define REG_MEC0_PEIRQ_GSTAT0                0x310A2010            /*  MEC0 Parity Error Interrupt Request Global Status Register */
#define REG_MEC0_PEIRQ_GSTATp(i)             (REG_MEC0_PEIRQ_GSTAT0 + ((i) * 4))
#define REG_MEC0_PEIRQ_GSTATp_COUNT          1
#define REG_MEC0_PERR_CTL0                   0x310A2040            /*  MEC0 Parity Error Control Register */
#define REG_MEC0_PERR_CTL1                   0x310A2044            /*  MEC0 Parity Error Control Register */
#define REG_MEC0_PERR_STAT0                  0x310A2080            /*  MEC0 Parity Error Status Register */
#define REG_MEC0_PERR_STAT1                  0x310A2084            /*  MEC0 Parity Error Status Register */
#define REG_MEC0_PERR_IMASK0                 0x310A20C0            /*  MEC0 Parity Error Interrupt Mask Register */
#define REG_MEC0_PERR_IMASK1                 0x310A20C4            /*  MEC0 Parity Error Interrupt Mask Register */
/* ============================================================================================================================
      PID_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC0_PID4                        0x310A2FD0            /*  MEC0 Peripheral ID4 Register */
#define REG_MEC0_PID5                        0x310A2FD4            /*  MEC0 Peripheral ID5 Register */
#define REG_MEC0_PID6                        0x310A2FD8            /*  MEC0 Peripheral ID6 Register */
#define REG_MEC0_PID7                        0x310A2FDC            /*  MEC0 Peripheral ID7 Register */
#define REG_MEC0_PID0                        0x310A2FE0            /*  MEC0 Peripheral ID0 Register */
#define REG_MEC0_PID1                        0x310A2FE4            /*  MEC0 Peripheral ID1 Register */
#define REG_MEC0_PID2                        0x310A2FE8            /*  MEC0 Peripheral ID2 Register */
#define REG_MEC0_PID3                        0x310A2FEC            /*  MEC0 Peripheral ID3 Register */

/* ============================================================================================================================
        MEC1
   ============================================================================================================================ */
/* ============================================================================================================================
      CID_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC1_CID0                        0x310A3FF0            /*  MEC1 Component ID0 Register */
#define REG_MEC1_CID1                        0x310A3FF4            /*  MEC1 Component ID1 Register */
#define REG_MEC1_CID2                        0x310A3FF8            /*  MEC1 Component ID2 Register */
#define REG_MEC1_CID3                        0x310A3FFC            /*  MEC1 Component ID3 Register */
/* ============================================================================================================================
      ECCERR_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC1_EEIRQ_GCTL0                 0x310A3100            /*  MEC1 ECC Error Interrupt Request Global Control Register */
#define REG_MEC1_EEIRQ_GCTLq(i)              (REG_MEC1_EEIRQ_GCTL0 + ((i) * 4))
#define REG_MEC1_EEIRQ_GCTLq_COUNT           1
#define REG_MEC1_EEIRQ_GSTAT0                0x310A3110            /*  MEC1 ECC Error Interrupt Request Global Status Register */
#define REG_MEC1_EEIRQ_GSTATq(i)             (REG_MEC1_EEIRQ_GSTAT0 + ((i) * 4))
#define REG_MEC1_EEIRQ_GSTATq_COUNT          1
#define REG_MEC1_ECCERR_CTL0                 0x310A3140            /*  MEC1 ECC Error Control Register */
#define REG_MEC1_ECCERR_CTLy(i)              (REG_MEC1_ECCERR_CTL0 + ((i) * 4))
#define REG_MEC1_ECCERR_CTLy_COUNT           1
#define REG_MEC1_ECCERR_STAT0                0x310A3180            /*  MEC1 ECC Error Status Register */
#define REG_MEC1_ECCERR_STATy(i)             (REG_MEC1_ECCERR_STAT0 + ((i) * 4))
#define REG_MEC1_ECCERR_STATy_COUNT          1
#define REG_MEC1_ECCERR_IMASK0               0x310A31C0            /*  MEC1 ECC Error Interrupt Mask Register */
#define REG_MEC1_ECCERR_IMASKy(i)            (REG_MEC1_ECCERR_IMASK0 + ((i) * 4))
#define REG_MEC1_ECCERR_IMASKy_COUNT         1
/* ============================================================================================================================
      MISCCTL_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC1_CLR                         0x310A3F00            /*  MEC1 Clear Register */
/* ============================================================================================================================
      PERR_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC1_PEIRQ_GCTL0                 0x310A3000            /*  MEC1 Parity Error Interrupt Request Global Control Register */
#define REG_MEC1_PEIRQ_GCTLp(i)              (REG_MEC1_PEIRQ_GCTL0 + ((i) * 4))
#define REG_MEC1_PEIRQ_GCTLp_COUNT           1
#define REG_MEC1_PEIRQ_GSTAT0                0x310A3010            /*  MEC1 Parity Error Interrupt Request Global Status Register */
#define REG_MEC1_PEIRQ_GSTATp(i)             (REG_MEC1_PEIRQ_GSTAT0 + ((i) * 4))
#define REG_MEC1_PEIRQ_GSTATp_COUNT          1
#define REG_MEC1_PERR_CTL0                   0x310A3040            /*  MEC1 Parity Error Control Register */
#define REG_MEC1_PERR_CTL1                   0x310A3044            /*  MEC1 Parity Error Control Register */
#define REG_MEC1_PERR_STAT0                  0x310A3080            /*  MEC1 Parity Error Status Register */
#define REG_MEC1_PERR_STAT1                  0x310A3084            /*  MEC1 Parity Error Status Register */
#define REG_MEC1_PERR_IMASK0                 0x310A30C0            /*  MEC1 Parity Error Interrupt Mask Register */
#define REG_MEC1_PERR_IMASK1                 0x310A30C4            /*  MEC1 Parity Error Interrupt Mask Register */
/* ============================================================================================================================
      PID_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC1_PID4                        0x310A3FD0            /*  MEC1 Peripheral ID4 Register */
#define REG_MEC1_PID5                        0x310A3FD4            /*  MEC1 Peripheral ID5 Register */
#define REG_MEC1_PID6                        0x310A3FD8            /*  MEC1 Peripheral ID6 Register */
#define REG_MEC1_PID7                        0x310A3FDC            /*  MEC1 Peripheral ID7 Register */
#define REG_MEC1_PID0                        0x310A3FE0            /*  MEC1 Peripheral ID0 Register */
#define REG_MEC1_PID1                        0x310A3FE4            /*  MEC1 Peripheral ID1 Register */
#define REG_MEC1_PID2                        0x310A3FE8            /*  MEC1 Peripheral ID2 Register */
#define REG_MEC1_PID3                        0x310A3FEC            /*  MEC1 Peripheral ID3 Register */

/* ============================================================================================================================
        MEC2
   ============================================================================================================================ */
/* ============================================================================================================================
      CID_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC2_CID0                        0x310A4FF0            /*  MEC2 Component ID0 Register */
#define REG_MEC2_CID1                        0x310A4FF4            /*  MEC2 Component ID1 Register */
#define REG_MEC2_CID2                        0x310A4FF8            /*  MEC2 Component ID2 Register */
#define REG_MEC2_CID3                        0x310A4FFC            /*  MEC2 Component ID3 Register */
/* ============================================================================================================================
      ECCERR_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC2_EEIRQ_GCTL0                 0x310A4100            /*  MEC2 ECC Error Interrupt Request Global Control Register */
#define REG_MEC2_EEIRQ_GCTLq(i)              (REG_MEC2_EEIRQ_GCTL0 + ((i) * 4))
#define REG_MEC2_EEIRQ_GCTLq_COUNT           1
#define REG_MEC2_EEIRQ_GSTAT0                0x310A4110            /*  MEC2 ECC Error Interrupt Request Global Status Register */
#define REG_MEC2_EEIRQ_GSTATq(i)             (REG_MEC2_EEIRQ_GSTAT0 + ((i) * 4))
#define REG_MEC2_EEIRQ_GSTATq_COUNT          1
#define REG_MEC2_ECCERR_CTL0                 0x310A4140            /*  MEC2 ECC Error Control Register */
#define REG_MEC2_ECCERR_CTLy(i)              (REG_MEC2_ECCERR_CTL0 + ((i) * 4))
#define REG_MEC2_ECCERR_CTLy_COUNT           1
#define REG_MEC2_ECCERR_STAT0                0x310A4180            /*  MEC2 ECC Error Status Register */
#define REG_MEC2_ECCERR_STATy(i)             (REG_MEC2_ECCERR_STAT0 + ((i) * 4))
#define REG_MEC2_ECCERR_STATy_COUNT          1
#define REG_MEC2_ECCERR_IMASK0               0x310A41C0            /*  MEC2 ECC Error Interrupt Mask Register */
#define REG_MEC2_ECCERR_IMASKy(i)            (REG_MEC2_ECCERR_IMASK0 + ((i) * 4))
#define REG_MEC2_ECCERR_IMASKy_COUNT         1
/* ============================================================================================================================
      MISCCTL_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC2_CLR                         0x310A4F00            /*  MEC2 Clear Register */
/* ============================================================================================================================
      PERR_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC2_PEIRQ_GCTL0                 0x310A4000            /*  MEC2 Parity Error Interrupt Request Global Control Register */
#define REG_MEC2_PEIRQ_GCTLp(i)              (REG_MEC2_PEIRQ_GCTL0 + ((i) * 4))
#define REG_MEC2_PEIRQ_GCTLp_COUNT           1
#define REG_MEC2_PEIRQ_GSTAT0                0x310A4010            /*  MEC2 Parity Error Interrupt Request Global Status Register */
#define REG_MEC2_PEIRQ_GSTATp(i)             (REG_MEC2_PEIRQ_GSTAT0 + ((i) * 4))
#define REG_MEC2_PEIRQ_GSTATp_COUNT          1
#define REG_MEC2_PERR_CTL0                   0x310A4040            /*  MEC2 Parity Error Control Register */
#define REG_MEC2_PERR_CTL1                   0x310A4044            /*  MEC2 Parity Error Control Register */
#define REG_MEC2_PERR_STAT0                  0x310A4080            /*  MEC2 Parity Error Status Register */
#define REG_MEC2_PERR_STAT1                  0x310A4084            /*  MEC2 Parity Error Status Register */
#define REG_MEC2_PERR_IMASK0                 0x310A40C0            /*  MEC2 Parity Error Interrupt Mask Register */
#define REG_MEC2_PERR_IMASK1                 0x310A40C4            /*  MEC2 Parity Error Interrupt Mask Register */
/* ============================================================================================================================
      PID_GRP Register Definitions
   ============================================================================================================================ */
#define REG_MEC2_PID4                        0x310A4FD0            /*  MEC2 Peripheral ID4 Register */
#define REG_MEC2_PID5                        0x310A4FD4            /*  MEC2 Peripheral ID5 Register */
#define REG_MEC2_PID6                        0x310A4FD8            /*  MEC2 Peripheral ID6 Register */
#define REG_MEC2_PID7                        0x310A4FDC            /*  MEC2 Peripheral ID7 Register */
#define REG_MEC2_PID0                        0x310A4FE0            /*  MEC2 Peripheral ID0 Register */
#define REG_MEC2_PID1                        0x310A4FE4            /*  MEC2 Peripheral ID1 Register */
#define REG_MEC2_PID2                        0x310A4FE8            /*  MEC2 Peripheral ID2 Register */
#define REG_MEC2_PID3                        0x310A4FEC            /*  MEC2 Peripheral ID3 Register */

/* ============================================================================================================================
        MEC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* ============================================================================================================================
 *    CID_GRP Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          MEC_CID0                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_CID0_PREAMBLE                0            /*  Component ID Preamble. Identifies this as a Component ID Register */
#define BITM_MEC_CID0_PREAMBLE               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID Preamble. Identifies this as a Component ID Register */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_CID1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_CID1_COMPCLASS               4            /*  Component Class */
#define BITP_MEC_CID1_PREAMBLE                0            /*  Component ID Preamble. Identifies this as a Component ID Register */
#define BITM_MEC_CID1_COMPCLASS              (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Component Class */
#define BITM_MEC_CID1_PREAMBLE               (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Component ID Preamble. Identifies this as a Component ID Register */
#define ENUM_MEC_CID1_CS                     (_ADI_MSK_3(0x00000090,0x00000090UL, uint32_t  ))    /*  COMPCLASS: CoreSight */
#define ENUM_MEC_CID1_SYS                    (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  COMPCLASS: System */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_CID2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_CID2_PREAMBLE                0            /*  Component ID Preamble. Identifies this as a Component ID Register */
#define BITM_MEC_CID2_PREAMBLE               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID Preamble. Identifies this as a Component ID Register */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_CID3                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_CID3_PREAMBLE                0            /*  Component ID Preamble. Identifies this as a Component ID Register */
#define BITM_MEC_CID3_PREAMBLE               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID Preamble. Identifies this as a Component ID Register */

/* ============================================================================================================================
 *    ECCERR_GRP Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          MEC_EEIRQ_GCTL[q]                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_EEIRQ_GCTL_LOCK             31            /*  ECC Error Global Control Register Lock bit */
#define BITP_MEC_EEIRQ_GCTL_VALUE             0            /*  ECC Error Global Control bit. '1' indicates enable and '0' indicates disable. */
#define BITM_MEC_EEIRQ_GCTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ECC Error Global Control Register Lock bit */
#define BITM_MEC_EEIRQ_GCTL_VALUE            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ECC Error Global Control bit. '1' indicates enable and '0' indicates disable. */
#define ENUM_MEC_EEIRQ_GCTL_UNLOCK           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_EEIRQ_GCTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_EEIRQ_GSTAT[q]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_EEIRQ_GSTAT_LWERR           31            /*  ECC Error Global Control Register Lock Write Error */
#define BITP_MEC_EEIRQ_GSTAT_VALUE            0            /*  ECC Error Global Status bit. '1' indicates assertion of interrupt/trigger and '0' indicates no interrupt/trigger. */
#define BITM_MEC_EEIRQ_GSTAT_LWERR           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ECC Error Global Control Register Lock Write Error */
#define BITM_MEC_EEIRQ_GSTAT_VALUE           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  ECC Error Global Status bit. '1' indicates assertion of interrupt/trigger and '0' indicates no interrupt/trigger. */
#define ENUM_MEC_EEIRQ_GSTAT_NO_LWERR        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Error */
#define ENUM_MEC_EEIRQ_GSTAT_LWERR           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LWERR: Error Occurred */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_ECCERR_CTL[y]                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_ECCERR_CTL_LOCK             31            /*  ECC Error Control Register Lock bit */
#define BITP_MEC_ECCERR_CTL_VALUE             0            /*  ECC Error Control bit. '1' indicates enable and '0' indicates disable. */
#define BITM_MEC_ECCERR_CTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ECC Error Control Register Lock bit */
#define BITM_MEC_ECCERR_CTL_VALUE            (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  ECC Error Control bit. '1' indicates enable and '0' indicates disable. */
#define ENUM_MEC_ECCERR_CTL_UNLOCK           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_ECCERR_CTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_MEC_ECCERR_CTL_L2CTL_ERR        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: L2CTL_ERR[2:0] L2 CTL ECC Error */
#define ENUM_MEC_ECCERR_CTL_CAN0_ERR         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: CAN0_ERR[2:0] CAN0 ECC Error */
#define ENUM_MEC_ECCERR_CTL_CAN1_ERR         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: CAN1_ERR[2:0] CAN1 ECC Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_ECCERR_STAT[y]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_ECCERR_STAT_LWERR           31            /*  ECC Error Control or Interrupt Mask Register Lock Write Error */
#define BITP_MEC_ECCERR_STAT_VALUE            0            /*  ECC Error Status bit. '1' indicates error and '0' indicates no error. Sticky bit, write '1' to clear. */
#define BITM_MEC_ECCERR_STAT_LWERR           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ECC Error Control or Interrupt Mask Register Lock Write Error */
#define BITM_MEC_ECCERR_STAT_VALUE           (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  ECC Error Status bit. '1' indicates error and '0' indicates no error. Sticky bit, write '1' to clear. */
#define ENUM_MEC_ECCERR_STAT_NO_LWERR        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Error */
#define ENUM_MEC_ECCERR_STAT_LWERR           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LWERR: Error Occurred */
#define ENUM_MEC_ECCERR_STAT_L2CTL_ERR       (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: L2CTL_ERR[2:0] L2 CTL ECC Error */
#define ENUM_MEC_ECCERR_STAT_CAN0_ERR        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: CAN0_ERR[2:0] CAN0 ECC Error */
#define ENUM_MEC_ECCERR_STAT_CAN1_ERR        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: CAN1_ERR[2:0] CAN1 ECC Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_ECCERR_IMASK[y]                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_ECCERR_IMASK_LOCK           31            /*  ECC Error Interrupt Mask Register Lock bit */
#define BITP_MEC_ECCERR_IMASK_VALUE           0            /*  ECC Error Interrupt Mask bit. '1' indicates interrupt masked and '0' indicates unmasked */
#define BITM_MEC_ECCERR_IMASK_LOCK           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ECC Error Interrupt Mask Register Lock bit */
#define BITM_MEC_ECCERR_IMASK_VALUE          (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  ECC Error Interrupt Mask bit. '1' indicates interrupt masked and '0' indicates unmasked */
#define ENUM_MEC_ECCERR_IMASK_UNLOCK         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_ECCERR_IMASK_LOCK           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_MEC_ECCERR_IMASK_L2CTL_ERR      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: L2CTL_ERR[2:0] L2 CTL ECC Error */
#define ENUM_MEC_ECCERR_IMASK_CAN0_ERR       (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: CAN0_ERR[2:0] CAN0 ECC Error */
#define ENUM_MEC_ECCERR_IMASK_CAN1_ERR       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: CAN1_ERR[2:0] CAN1 ECC Error */

/* ============================================================================================================================
 *    MISCCTL_GRP Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          MEC_CLR                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_CLR_CLRSTAT                  0            /*  Clear Status bit. Write of '1' to this bit clears all status registers of MEC0 */
#define BITM_MEC_CLR_CLRSTAT                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Clear Status bit. Write of '1' to this bit clears all status registers of MEC0 */

/* ============================================================================================================================
 *    PERR_GRP Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PEIRQ_GCTL[p]                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PEIRQ_GCTL_LOCK             31            /*  Parity Error Global Control Register Lock bit */
#define BITP_MEC_PEIRQ_GCTL_VALUE             0            /*  Parity Error Global Control bit. '1' indicates enable and '0' indicates disable */
#define BITM_MEC_PEIRQ_GCTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Global Control Register Lock bit */
#define BITM_MEC_PEIRQ_GCTL_VALUE            (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Parity Error Global Control bit. '1' indicates enable and '0' indicates disable */
#define ENUM_MEC_PEIRQ_GCTL_UNLOCK           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_PEIRQ_GCTL_LOCK             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PEIRQ_GSTAT[p]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PEIRQ_GSTAT_LWERR           31            /*  Parity Error Global Control Register Lock Write Error */
#define BITP_MEC_PEIRQ_GSTAT_VALUE            0            /*  Parity Error Global Status bit. '1' indicates assertion of interrupt/trigger and '0' indicates no interrupt/trigger. */
#define BITM_MEC_PEIRQ_GSTAT_LWERR           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Global Control Register Lock Write Error */
#define BITM_MEC_PEIRQ_GSTAT_VALUE           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Parity Error Global Status bit. '1' indicates assertion of interrupt/trigger and '0' indicates no interrupt/trigger. */
#define ENUM_MEC_PEIRQ_GSTAT_NO_LWERR        (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Error */
#define ENUM_MEC_PEIRQ_GSTAT_LWERR           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LWERR: Error Occurred */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PERR_CTL0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PERR_CTL0_LOCK              31            /*  Parity Error Control Register Lock bit */
#define BITP_MEC_PERR_CTL0_VALUE              0            /*  Parity Error Control bit. 1 indicates enable and 0 indicates disable */
#define BITM_MEC_PERR_CTL0_LOCK              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Control Register Lock bit */
#define BITM_MEC_PERR_CTL0_VALUE             (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Parity Error Control bit. 1 indicates enable and 0 indicates disable */
#define ENUM_MEC_PERR_CTL0_UNLOCK            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_PERR_CTL0_LOCK              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_MEC_PERR_CTL0_C0_L1CH_PE        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: Core 0 L1 Cache RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_C0_L2CH_PE        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: Core 0 L2 Cache RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_C1_L1_PE          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: Core 1 L1 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_C1_L1CH_PE        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VALUE: Core 1 L1 Cache Parity Error */
#define ENUM_MEC_PERR_CTL0_C1_BTB_PE         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VALUE: Core 1 Branch Predictor Parity Error */
#define ENUM_MEC_PERR_CTL0_C2_L1_PE          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VALUE: Core 2 L1 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_C2_L1CH_PE        (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VALUE: Core 2 L1 Cache Parity Error */
#define ENUM_MEC_PERR_CTL0_C2_BTB_PE         (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  VALUE: Core 2 Branch Predictor Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC0_PE           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  VALUE: ASRC0 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC1_PE           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  VALUE: ASRC1 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC2_PE           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  VALUE: ASRC2 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC3_PE           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  VALUE: ASRC3 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC4_PE           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  VALUE: ASRC4 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC5_PE           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  VALUE: ASRC5 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC6_PE           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VALUE: ASRC6 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_ARC7_PE           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  VALUE: ASRC7 FIFO Parity Error */
#define ENUM_MEC_PERR_CTL0_SH0_IIR0_PE       (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR0 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH0_IIR1_PE       (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR1 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH0_IIR2_PE       (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR2 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH0_IIR3_PE       (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR3 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH0_FIR0_PE       (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  VALUE: SHARC 0 FIR0 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH1_IIR0_PE       (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR0 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH1_IIR1_PE       (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR1 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH1_IIR2_PE       (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR2 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH1_IIR3_PE       (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR3 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SH1_FIR0_PE       (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  VALUE: SHARC 1 FIR0 RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_USB0_PE           (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  VALUE: USB0 FIFO RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_TRNG0_PE          (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  VALUE: TRNG0 Data Buffer Parity Error */
#define ENUM_MEC_PERR_CTL0_PKA0_PE           (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  VALUE: PKA0 Data RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SPE0_BUF_PE       (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  VALUE: SPE0 Buffer RAM Parity Error */
#define ENUM_MEC_PERR_CTL0_SPE0_ARC4_PE      (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  VALUE: SPE0 ARC4 RAM Parity Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PERR_CTL1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PERR_CTL1_LOCK              31            /*  Parity Error Control Register Lock bit */
#define BITP_MEC_PERR_CTL1_VALUE1             0            /*  Parity Error Control bit. 1 indicates enable and 0 indicates disable */
#define BITM_MEC_PERR_CTL1_LOCK              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Control Register Lock bit */
#define BITM_MEC_PERR_CTL1_VALUE1            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Parity Error Control bit. 1 indicates enable and 0 indicates disable */
#define ENUM_MEC_PERR_CTL1_UNLOCK            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_PERR_CTL1_LOCK              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_MEC_PERR_CTL1_EMAC0_TF_PE       (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE1: EMAC0_TF_PE[15:0] EMAC0 Transmit FIFO RAM Parity Error */
#define ENUM_MEC_PERR_CTL1_EMAC0_RF_PE       (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE1: EMAC0_RF_PE[15:0] EMAC0 Receive FIFO RAM Parity Error */
#define ENUM_MEC_PERR_CTL1_MLB0_DT_PE        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE1: MLB0_DT_PE[15:0] MLB0 Data Buffer RAM Parity Error */
#define ENUM_MEC_PERR_CTL1_MLB0_CH_PE        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VALUE1: MLB0_CH_PE[15:0] MLB0 Channel Table RAM Parity Error */
#define ENUM_MEC_PERR_CTL1_TMC0_PE           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VALUE1: TMC0_PE[15:0] TMC0 Trace Data RAM Parity Error */
#define ENUM_MEC_PERR_CTL1_EMAC1_TF_PE       (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VALUE1: EMAC1_TF_PE[15:0] EMAC1 Transmit FIFO RAM Parity Error */
#define ENUM_MEC_PERR_CTL1_EMAC1_RF_PE       (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VALUE1: EMAC1_RF_PE[15:0] EMAC1 Receive FIFO RAM Parity Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PERR_STAT0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PERR_STAT0_LWERR            31            /*  Parity Error Control or Interrupt Mask Register Lock Write Error */
#define BITP_MEC_PERR_STAT0_VALUE             0            /*  Parity Error Status bit. '1' indicates error and '0' indicates no error. Sticky bit, write '1' to clear. */
#define BITM_MEC_PERR_STAT0_LWERR            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Control or Interrupt Mask Register Lock Write Error */
#define BITM_MEC_PERR_STAT0_VALUE            (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Parity Error Status bit. '1' indicates error and '0' indicates no error. Sticky bit, write '1' to clear. */
#define ENUM_MEC_PERR_STAT0_NO_LWERR         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Error */
#define ENUM_MEC_PERR_STAT0_LWERR            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LWERR: Error Occurred */
#define ENUM_MEC_PERR_STAT0_C0_L1CH_PE_ST    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: Core 0 L1 Cache RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_C0_L2CH_PE_ST    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: Core 0 L2 Cache RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_C1_L1_PE_ST      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: Core 1 L1 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_C1_L1CH_PE_ST    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VALUE: Core 1 L1 Cache Parity Error */
#define ENUM_MEC_PERR_STAT0_C1_BTB_PE_ST     (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VALUE: Core 1 Branch Predictor Parity Error */
#define ENUM_MEC_PERR_STAT0_C2_L1_PE_ST      (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VALUE: Core 2 L1 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_C2_L1CH_PE_ST    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VALUE: Core 2 L1 Cache Parity Error */
#define ENUM_MEC_PERR_STAT0_C2_BTB_PE_ST     (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  VALUE: Core 2 Branch Predictor Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC0_PE_ST       (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  VALUE: ASRC0 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC1_PE_ST       (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  VALUE: ASRC1 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC2_PE_ST       (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  VALUE: ASRC2 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC3_PE_ST       (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  VALUE: ASRC3 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC4_PE_ST       (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  VALUE: ASRC4 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC5_PE_ST       (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  VALUE: ASRC5 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC6_PE_ST       (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VALUE: ASRC6 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_ARC7_PE_ST       (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  VALUE: ASRC7 FIFO Parity Error */
#define ENUM_MEC_PERR_STAT0_SH0_IIR0_PE_ST   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR0 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH0_IIR1_PE_ST   (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR1 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH0_IIR2_PE_ST   (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR2 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH0_IIR3_PE_ST   (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR3 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH0_FIR0_PE_ST   (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  VALUE: SHARC 0 FIR0 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH1_IIR0_PE_ST   (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR0 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH1_IIR1_PE_ST   (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR1 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH1_IIR2_PE_ST   (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR2 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH1_IIR3_PE_ST   (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR3 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SH1_FIR0_PE_ST   (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  VALUE: SHARC 1 FIR0 RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_USB0_PE_ST       (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  VALUE: USB0 FIFO RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_TRNG0_PE_ST      (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  VALUE: TRNG0 Data Buffer Parity Error */
#define ENUM_MEC_PERR_STAT0_PKA0_PE_ST       (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  VALUE: PKA0 Data RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SPE0_BUF_PE_ST   (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  VALUE: SPE0 Buffer RAM Parity Error */
#define ENUM_MEC_PERR_STAT0_SPE0_ARC4_PE_ST  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  VALUE: SPE0 ARC4 RAM Parity Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PERR_STAT1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PERR_STAT1_LWERR            31            /*  Parity Error Control or Interrupt Mask Register Lock Write Error */
#define BITP_MEC_PERR_STAT1_VALUE             0            /*  Parity Error Status bit. '1' indicates error and '0' indicates no error. Sticky bit, write '1' to clear. */
#define BITM_MEC_PERR_STAT1_LWERR            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Control or Interrupt Mask Register Lock Write Error */
#define BITM_MEC_PERR_STAT1_VALUE            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Parity Error Status bit. '1' indicates error and '0' indicates no error. Sticky bit, write '1' to clear. */
#define ENUM_MEC_PERR_STAT1_NO_LWERR         (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LWERR: No Error */
#define ENUM_MEC_PERR_STAT1_LWERR            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LWERR: Error Occurred */
#define ENUM_MEC_PERR_STAT1_EMAC0_TF_PE_ST   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: EMAC0_TF_PE_ST[15:0] EMAC0 Transmit FIFO RAM Parity Error */
#define ENUM_MEC_PERR_STAT1_EMAC0_RF_PE_ST   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: EMAC0_RF_PE_ST[15:0] EMAC0 Receive FIFO RAM Parity Error */
#define ENUM_MEC_PERR_STAT1_MLB0_DT_PE_ST    (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: MLB0_DT_PE_ST[15:0] MLB0 Data Buffer RAM Parity Error */
#define ENUM_MEC_PERR_STAT1_MLB0_CH_PE_ST    (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VALUE: MLB0_CH_PE_ST[15:0] MLB0 Channel Table RAM Parity Error */
#define ENUM_MEC_PERR_STAT1_TMC0_PE_ST       (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VALUE: TMC0_PE_ST[15:0] TMC0 Trace Data RAM Parity Error */
#define ENUM_MEC_PERR_STAT1_EMAC1_TF_PE_ST   (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VALUE: EMAC1_TF_PE_ST[15:0] EMAC1 Transmit FIFO RAM Parity Error */
#define ENUM_MEC_PERR_STAT1_EMAC1_RF_PE_ST   (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VALUE: EMAC1_RF_PE_ST[15:0] EMAC1 Receive FIFO RAM Parity Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PERR_IMASK0                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PERR_IMASK0_LOCK            31            /*  Core Memory Error Interrupt Mask Register Lock bit */
#define BITP_MEC_PERR_IMASK0_VALUE            0            /*  Parity Error Interrupt Mask bit. '1' indicates interrupt masked and '0' indicates interrupt unmasked. */
#define BITM_MEC_PERR_IMASK0_LOCK            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Core Memory Error Interrupt Mask Register Lock bit */
#define BITM_MEC_PERR_IMASK0_VALUE           (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Parity Error Interrupt Mask bit. '1' indicates interrupt masked and '0' indicates interrupt unmasked. */
#define ENUM_MEC_PERR_IMASK0_UNLOCK          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_PERR_IMASK0_LOCK            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_MEC_PERR_IMASK0_C0_L1CH_PE      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: Core 0 L1 Cache RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_C0_L2CH_PE      (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: Core 0 L2 Cache RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_C1_L1_PE        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: Core 1 L1 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_C1_L1CH_PE      (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VALUE: Core 1 L1 Cache Parity Error */
#define ENUM_MEC_PERR_IMASK0_C1_BTB_PE       (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VALUE: Core 1 Branch Predictor Parity Error */
#define ENUM_MEC_PERR_IMASK0_C2_L1_PE        (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VALUE: Core 2 L1 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_C2_L1CH_PE      (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VALUE: Core 2 L1 Cache Parity Error */
#define ENUM_MEC_PERR_IMASK0_C2_BTB_PE       (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  VALUE: Core 2 Branch Predictor Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC0_PE         (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  VALUE: ASRC0 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC1_PE         (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  VALUE: ASRC1 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC2_PE         (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  VALUE: ASRC2 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC3_PE         (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  VALUE: ASRC3 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC4_PE         (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  VALUE: ASRC4 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC5_PE         (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  VALUE: ASRC5 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC6_PE         (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  VALUE: ASRC6 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_ARC7_PE         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  VALUE: ASRC7 FIFO Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH0_IIR0_PE     (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR0 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH0_IIR1_PE     (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR1 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH0_IIR2_PE     (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR2 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH0_IIR3_PE     (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  VALUE: SHARC 0 IIR3 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH0_FIR0_PE     (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  VALUE: SHARC 0 FIR0 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH1_IIR0_PE     (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR0 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH1_IIR1_PE     (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR1 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH1_IIR2_PE     (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR2 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH1_IIR3_PE     (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  VALUE: SHARC 1 IIR3 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SH1_FIR0_PE     (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  VALUE: SHARC 1 FIR0 RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_USB0_PE         (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  VALUE: USB0 FIFO RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_TRNG0_PE        (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  VALUE: TRNG0 Data Buffer Parity Error */
#define ENUM_MEC_PERR_IMASK0_PKA0_PE         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  VALUE: PKA0 Data RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SPE0_BUF_PE     (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  VALUE: SPE0 Buffer RAM Parity Error */
#define ENUM_MEC_PERR_IMASK0_SPE0_ARC4_PE    (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  VALUE: SPE0 ARC4 RAM Parity Error */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PERR_IMASK1                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PERR_IMASK1_LOCK            31            /*  Parity Error Interrupt Mask Register Lock bit */
#define BITP_MEC_PERR_IMASK1_VALUE            0            /*  Parity Error Interrupt Mask bit. '1' indicates interrupt masked and '0' indicates interrupt unmasked. */
#define BITM_MEC_PERR_IMASK1_LOCK            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Parity Error Interrupt Mask Register Lock bit */
#define BITM_MEC_PERR_IMASK1_VALUE           (_ADI_MSK_3(0x7FFFFFFF,0x7FFFFFFFUL, uint32_t  ))    /*  Parity Error Interrupt Mask bit. '1' indicates interrupt masked and '0' indicates interrupt unmasked. */
#define ENUM_MEC_PERR_IMASK1_UNLOCK          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCK: Unlock */
#define ENUM_MEC_PERR_IMASK1_LOCK            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  LOCK: Lock */
#define ENUM_MEC_PERR_IMASK1_EMAC0_TF_PE     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  VALUE: EMAC0 Transmit FIFO RAM Parity Error */
#define ENUM_MEC_PERR_IMASK1_EMAC0_RF_PE     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  VALUE: EMAC0 Receive FIFO RAM Parity Error */
#define ENUM_MEC_PERR_IMASK1_MLB0_DT_PE      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  VALUE: MLB0 Data Buffer RAM Parity Error */
#define ENUM_MEC_PERR_IMASK1_MLB0_CH_PE      (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  VALUE: MLB0 Channel Table RAM Parity Error */
#define ENUM_MEC_PERR_IMASK1_TMC0_PE         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  VALUE: TMC0 Trace Data RAM Parity Error */
#define ENUM_MEC_PERR_IMASK1_EMAC1_TF_PE     (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  VALUE: EMAC1 Transmit FIFO RAM Parity Error */
#define ENUM_MEC_PERR_IMASK1_EMAC1_RF_PE     (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  VALUE: EMAC1 Receive FIFO RAM Parity Error */

/* ============================================================================================================================
 *    PID_GRP Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID4                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID4_SIZE                    4            /*  Number of 4k blocks. Size of component 4k chunks minus 1 (i.e. 0=4k) */
#define BITP_MEC_PID4_JEP106CC                0            /*  JEDEC JEP106 continuation code (number of leading 0x7Fs) */
#define BITM_MEC_PID4_SIZE                   (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Number of 4k blocks. Size of component 4k chunks minus 1 (i.e. 0=4k) */
#define BITM_MEC_PID4_JEP106CC               (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  JEDEC JEP106 continuation code (number of leading 0x7Fs) */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID5                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID5_FUTUREUSE               0            /*  For future use */
#define BITM_MEC_PID5_FUTUREUSE              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  For future use */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID6                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID6_FUTUREUSE               0            /*  For future use */
#define BITM_MEC_PID6_FUTUREUSE              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  For future use */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID7                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID7_FUTUREUSE               0            /*  For future use */
#define BITM_MEC_PID7_FUTUREUSE              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  For future use */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID0                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID0_PARTNUM                 0            /*  Part Number for component identification */
#define BITM_MEC_PID0_PARTNUM                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Part Number for component identification */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID1_JEP106IC                4            /*  JEDEC JEP106 identity (Manufacturer ID) code */
#define BITP_MEC_PID1_PARTNUM                 0            /*  Part Number for component identification */
#define BITM_MEC_PID1_JEP106IC               (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  JEDEC JEP106 identity (Manufacturer ID) code */
#define BITM_MEC_PID1_PARTNUM                (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Part Number for component identification */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID2_REV                     4            /*  Peripheral Revision */
#define BITP_MEC_PID2_JEDECASGN               3            /*  A JEDEC Assigned Value is Used. Indicates that a JEDEC assigned value is used. */
#define BITP_MEC_PID2_JEP106IC                0            /*  JEDEC JEP106 identity (Manufacturer ID) code */
#define BITM_MEC_PID2_REV                    (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Peripheral Revision */
#define BITM_MEC_PID2_JEDECASGN              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  A JEDEC Assigned Value is Used. Indicates that a JEDEC assigned value is used. */
#define BITM_MEC_PID2_JEP106IC               (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  JEDEC JEP106 identity (Manufacturer ID) code */

/* -------------------------------------------------------------------------------------------------------------------------
          MEC_PID3                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MEC_PID3_REVAND                  4            /*  Metal fix revision */
#define BITP_MEC_PID3_CUSTMOD                 0            /*  Customer Modified */
#define BITM_MEC_PID3_REVAND                 (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Metal fix revision */
#define BITM_MEC_PID3_CUSTMOD                (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Customer Modified */


/* ============================================================================================================================
        Cyclic Redundancy Check Unit
   ============================================================================================================================ */

/* ============================================================================================================================
        CRC0
   ============================================================================================================================ */
#define REG_CRC0_CTL                         0x310A5000            /*  CRC0 Control Register */
#define REG_CRC0_DCNT                        0x310A5004            /*  CRC0 Data Word Count Register */
#define REG_CRC0_DCNTRLD                     0x310A5008            /*  CRC0 Data Word Count Reload Register */
#define REG_CRC0_COMP                        0x310A5014            /*  CRC0 Data Compare Register */
#define REG_CRC0_FILLVAL                     0x310A5018            /*  CRC0 Fill Value Register */
#define REG_CRC0_DFIFO                       0x310A501C            /*  CRC0 Data FIFO Register */
#define REG_CRC0_INEN                        0x310A5020            /*  CRC0 Interrupt Enable Register */
#define REG_CRC0_INEN_SET                    0x310A5024            /*  CRC0 Interrupt Enable Set Register */
#define REG_CRC0_INEN_CLR                    0x310A5028            /*  CRC0 Interrupt Enable Clear Register */
#define REG_CRC0_POLY                        0x310A502C            /*  CRC0 Polynomial Register */
#define REG_CRC0_STAT                        0x310A5040            /*  CRC0 Status Register */
#define REG_CRC0_DCNTCAP                     0x310A5044            /*  CRC0 Data Count Capture Register */
#define REG_CRC0_RESULT_FIN                  0x310A504C            /*  CRC0 CRC Final Result Register */
#define REG_CRC0_RESULT_CUR                  0x310A5050            /*  CRC0 CRC Current Result Register */

/* ============================================================================================================================
        CRC1
   ============================================================================================================================ */
#define REG_CRC1_CTL                         0x310A6000            /*  CRC1 Control Register */
#define REG_CRC1_DCNT                        0x310A6004            /*  CRC1 Data Word Count Register */
#define REG_CRC1_DCNTRLD                     0x310A6008            /*  CRC1 Data Word Count Reload Register */
#define REG_CRC1_COMP                        0x310A6014            /*  CRC1 Data Compare Register */
#define REG_CRC1_FILLVAL                     0x310A6018            /*  CRC1 Fill Value Register */
#define REG_CRC1_DFIFO                       0x310A601C            /*  CRC1 Data FIFO Register */
#define REG_CRC1_INEN                        0x310A6020            /*  CRC1 Interrupt Enable Register */
#define REG_CRC1_INEN_SET                    0x310A6024            /*  CRC1 Interrupt Enable Set Register */
#define REG_CRC1_INEN_CLR                    0x310A6028            /*  CRC1 Interrupt Enable Clear Register */
#define REG_CRC1_POLY                        0x310A602C            /*  CRC1 Polynomial Register */
#define REG_CRC1_STAT                        0x310A6040            /*  CRC1 Status Register */
#define REG_CRC1_DCNTCAP                     0x310A6044            /*  CRC1 Data Count Capture Register */
#define REG_CRC1_RESULT_FIN                  0x310A604C            /*  CRC1 CRC Final Result Register */
#define REG_CRC1_RESULT_CUR                  0x310A6050            /*  CRC1 CRC Current Result Register */

/* ============================================================================================================================
        CRC2
   ============================================================================================================================ */
#define REG_CRC2_CTL                         0x310AA000            /*  CRC2 Control Register */
#define REG_CRC2_DCNT                        0x310AA004            /*  CRC2 Data Word Count Register */
#define REG_CRC2_DCNTRLD                     0x310AA008            /*  CRC2 Data Word Count Reload Register */
#define REG_CRC2_COMP                        0x310AA014            /*  CRC2 Data Compare Register */
#define REG_CRC2_FILLVAL                     0x310AA018            /*  CRC2 Fill Value Register */
#define REG_CRC2_DFIFO                       0x310AA01C            /*  CRC2 Data FIFO Register */
#define REG_CRC2_INEN                        0x310AA020            /*  CRC2 Interrupt Enable Register */
#define REG_CRC2_INEN_SET                    0x310AA024            /*  CRC2 Interrupt Enable Set Register */
#define REG_CRC2_INEN_CLR                    0x310AA028            /*  CRC2 Interrupt Enable Clear Register */
#define REG_CRC2_POLY                        0x310AA02C            /*  CRC2 Polynomial Register */
#define REG_CRC2_STAT                        0x310AA040            /*  CRC2 Status Register */
#define REG_CRC2_DCNTCAP                     0x310AA044            /*  CRC2 Data Count Capture Register */
#define REG_CRC2_RESULT_FIN                  0x310AA04C            /*  CRC2 CRC Final Result Register */
#define REG_CRC2_RESULT_CUR                  0x310AA050            /*  CRC2 CRC Current Result Register */

/* ============================================================================================================================
        CRC3
   ============================================================================================================================ */
#define REG_CRC3_CTL                         0x310AB000            /*  CRC3 Control Register */
#define REG_CRC3_DCNT                        0x310AB004            /*  CRC3 Data Word Count Register */
#define REG_CRC3_DCNTRLD                     0x310AB008            /*  CRC3 Data Word Count Reload Register */
#define REG_CRC3_COMP                        0x310AB014            /*  CRC3 Data Compare Register */
#define REG_CRC3_FILLVAL                     0x310AB018            /*  CRC3 Fill Value Register */
#define REG_CRC3_DFIFO                       0x310AB01C            /*  CRC3 Data FIFO Register */
#define REG_CRC3_INEN                        0x310AB020            /*  CRC3 Interrupt Enable Register */
#define REG_CRC3_INEN_SET                    0x310AB024            /*  CRC3 Interrupt Enable Set Register */
#define REG_CRC3_INEN_CLR                    0x310AB028            /*  CRC3 Interrupt Enable Clear Register */
#define REG_CRC3_POLY                        0x310AB02C            /*  CRC3 Polynomial Register */
#define REG_CRC3_STAT                        0x310AB040            /*  CRC3 Status Register */
#define REG_CRC3_DCNTCAP                     0x310AB044            /*  CRC3 Data Count Capture Register */
#define REG_CRC3_RESULT_FIN                  0x310AB04C            /*  CRC3 CRC Final Result Register */
#define REG_CRC3_RESULT_CUR                  0x310AB050            /*  CRC3 CRC Current Result Register */

/* ============================================================================================================================
        CRC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CRC_CTL                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_CTL_CMPMIRR                 22            /*  COMPARE Register Mirroring */
#define BITP_CRC_CTL_POLYMIRR                21            /*  Polynomial Register Mirroring */
#define BITP_CRC_CTL_RSLTMIRR                20            /*  Result Register Mirroring */
#define BITP_CRC_CTL_FDSEL                   19            /*  FIFO Data Select */
#define BITP_CRC_CTL_W16SWP                  18            /*  Word16 Swapping */
#define BITP_CRC_CTL_BYTMIRR                 17            /*  Byte Mirroring */
#define BITP_CRC_CTL_BITMIRR                 16            /*  Bit Mirroring */
#define BITP_CRC_CTL_IRRSTALL                13            /*  Intermediate Result Ready Stall */
#define BITP_CRC_CTL_OBRSTALL                12            /*  Output Buffer Ready Stall */
#define BITP_CRC_CTL_AUTOCLRF                 9            /*  Auto Clear to One */
#define BITP_CRC_CTL_AUTOCLRZ                 8            /*  Auto Clear to Zero */
#define BITP_CRC_CTL_OPMODE                   4            /*  Operation Mode */
#define BITP_CRC_CTL_BLKEN                    0            /*  Block Enable */
#define BITM_CRC_CTL_CMPMIRR                 (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  COMPARE Register Mirroring */
#define BITM_CRC_CTL_POLYMIRR                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Polynomial Register Mirroring */
#define BITM_CRC_CTL_RSLTMIRR                (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Result Register Mirroring */
#define BITM_CRC_CTL_FDSEL                   (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  FIFO Data Select */
#define BITM_CRC_CTL_W16SWP                  (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Word16 Swapping */
#define BITM_CRC_CTL_BYTMIRR                 (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Byte Mirroring */
#define BITM_CRC_CTL_BITMIRR                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Bit Mirroring */
#define BITM_CRC_CTL_IRRSTALL                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Intermediate Result Ready Stall */
#define BITM_CRC_CTL_OBRSTALL                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Output Buffer Ready Stall */
#define BITM_CRC_CTL_AUTOCLRF                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Auto Clear to One */
#define BITM_CRC_CTL_AUTOCLRZ                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Auto Clear to Zero */
#define BITM_CRC_CTL_OPMODE                  (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Operation Mode */
#define BITM_CRC_CTL_BLKEN                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Block Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_DCNT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_DCNT_VALUE                   0            /*  Data Word Count */
#define BITM_CRC_DCNT_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Word Count */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_DCNTRLD                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_DCNTRLD_VALUE                0            /*  Reload Value */
#define BITM_CRC_DCNTRLD_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Reload Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_COMP                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_COMP_VALUE                   0            /*  Expected CRC Result Value */
#define BITM_CRC_COMP_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Expected CRC Result Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_FILLVAL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_FILLVAL_VALUE                0            /*  Memory Fill Value */
#define BITM_CRC_FILLVAL_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Memory Fill Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_DFIFO                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_DFIFO_VALUE                  0            /*  Data FIFO Value */
#define BITM_CRC_DFIFO_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data FIFO Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_INEN                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_INEN_DCNTEXP                 4            /*  Data Count Expired (Status) Interrupt Enable */
#define BITP_CRC_INEN_CMPERR                  1            /*  Compare Error Interrupt Enable */
#define BITM_CRC_INEN_DCNTEXP                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Count Expired (Status) Interrupt Enable */
#define BITM_CRC_INEN_CMPERR                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compare Error Interrupt Enable */
#define ENUM_CRC_INEN_DCNTEXP_MSK            (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DCNTEXP: Disable (mask) interrupt */
#define ENUM_CRC_INEN_DCNTEXP_UMSK           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  DCNTEXP: Enable (unmask) interrupt */
#define ENUM_CRC_INEN_CMPERR_MSK             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CMPERR: Disable (mask) interrupt */
#define ENUM_CRC_INEN_CMPERR_UMSK            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CMPERR: Enable (unmask) interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_INEN_SET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_INEN_SET_DCNTEXP             4            /*  Data Count Expired (Status) Interrupt Enable Set */
#define BITP_CRC_INEN_SET_CMPERR              1            /*  Compare Error Interrupt */
#define BITM_CRC_INEN_SET_DCNTEXP            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Count Expired (Status) Interrupt Enable Set */
#define BITM_CRC_INEN_SET_CMPERR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compare Error Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_INEN_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_INEN_CLR_DCNTEXP             4            /*  Data Count Expired */
#define BITP_CRC_INEN_CLR_CMPERR              1            /*  Compare Error Clear */
#define BITM_CRC_INEN_CLR_DCNTEXP            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Count Expired */
#define BITM_CRC_INEN_CLR_CMPERR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compare Error Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_POLY                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_POLY_VALUE                   0            /*  CRC Polynomial Value */
#define BITM_CRC_POLY_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  CRC Polynomial Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_STAT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_STAT_FSTAT                  20            /*  FIFO Status */
#define BITP_CRC_STAT_LUTDONE                19            /*  Look-Up Table Done */
#define BITP_CRC_STAT_IRR                    18            /*  Intermediate Result Ready */
#define BITP_CRC_STAT_OBR                    17            /*  Output Buffer Ready */
#define BITP_CRC_STAT_IBR                    16            /*  Input Buffer Ready */
#define BITP_CRC_STAT_DCNTEXP                 4            /*  Data Count Expired */
#define BITP_CRC_STAT_CMPERR                  1            /*  Compare Error */
#define BITM_CRC_STAT_FSTAT                  (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  FIFO Status */
#define BITM_CRC_STAT_LUTDONE                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Look-Up Table Done */
#define BITM_CRC_STAT_IRR                    (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Intermediate Result Ready */
#define BITM_CRC_STAT_OBR                    (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Output Buffer Ready */
#define BITM_CRC_STAT_IBR                    (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Input Buffer Ready */
#define BITM_CRC_STAT_DCNTEXP                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Data Count Expired */
#define BITM_CRC_STAT_CMPERR                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compare Error */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_DCNTCAP                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_DCNTCAP_VALUE                0            /*  Data Count Capture Value */
#define BITM_CRC_DCNTCAP_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Count Capture Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_RESULT_FIN                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_RESULT_FIN_VALUE             0            /*  Computed CRC */
#define BITM_CRC_RESULT_FIN_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Computed CRC */

/* -------------------------------------------------------------------------------------------------------------------------
          CRC_RESULT_CUR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CRC_RESULT_CUR_VALUE             0            /*  Intermediate CRC Result */
#define BITM_CRC_RESULT_CUR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Intermediate CRC Result */


/* ============================================================================================================================
        The Direct Memory Access module
   ============================================================================================================================ */

/* ============================================================================================================================
        DMA8
   ============================================================================================================================ */
#define REG_DMA8_DSCPTR_NXT                  0x310A7000            /*  DMA8 Pointer to Next Initial Descriptor Register */
#define REG_DMA8_ADDRSTART                   0x310A7004            /*  DMA8 Start Address of Current Buffer Register */
#define REG_DMA8_CFG                         0x310A7008            /*  DMA8 Configuration Register */
#define REG_DMA8_XCNT                        0x310A700C            /*  DMA8 Inner Loop Count Start Value Register */
#define REG_DMA8_XMOD                        0x310A7010            /*  DMA8 Inner Loop Address Increment Register */
#define REG_DMA8_YCNT                        0x310A7014            /*  DMA8 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA8_YMOD                        0x310A7018            /*  DMA8 Outer Loop Address Increment (2D only) Register */
#define REG_DMA8_DSCPTR_CUR                  0x310A7024            /*  DMA8 Current Descriptor Pointer Register */
#define REG_DMA8_DSCPTR_PRV                  0x310A7028            /*  DMA8 Previous Initial Descriptor Pointer Register */
#define REG_DMA8_ADDR_CUR                    0x310A702C            /*  DMA8 Current Address Register */
#define REG_DMA8_STAT                        0x310A7030            /*  DMA8 Status Register */
#define REG_DMA8_XCNT_CUR                    0x310A7034            /*  DMA8 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA8_YCNT_CUR                    0x310A7038            /*  DMA8 Current Row Count (2D only) Register */
#define REG_DMA8_BWLCNT                      0x310A7040            /*  DMA8 Bandwidth Limit Count Register */
#define REG_DMA8_BWLCNT_CUR                  0x310A7044            /*  DMA8 Bandwidth Limit Count Current Register */
#define REG_DMA8_BWMCNT                      0x310A7048            /*  DMA8 Bandwidth Monitor Count Register */
#define REG_DMA8_BWMCNT_CUR                  0x310A704C            /*  DMA8 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA9
   ============================================================================================================================ */
#define REG_DMA9_DSCPTR_NXT                  0x310A7080            /*  DMA9 Pointer to Next Initial Descriptor Register */
#define REG_DMA9_ADDRSTART                   0x310A7084            /*  DMA9 Start Address of Current Buffer Register */
#define REG_DMA9_CFG                         0x310A7088            /*  DMA9 Configuration Register */
#define REG_DMA9_XCNT                        0x310A708C            /*  DMA9 Inner Loop Count Start Value Register */
#define REG_DMA9_XMOD                        0x310A7090            /*  DMA9 Inner Loop Address Increment Register */
#define REG_DMA9_YCNT                        0x310A7094            /*  DMA9 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA9_YMOD                        0x310A7098            /*  DMA9 Outer Loop Address Increment (2D only) Register */
#define REG_DMA9_DSCPTR_CUR                  0x310A70A4            /*  DMA9 Current Descriptor Pointer Register */
#define REG_DMA9_DSCPTR_PRV                  0x310A70A8            /*  DMA9 Previous Initial Descriptor Pointer Register */
#define REG_DMA9_ADDR_CUR                    0x310A70AC            /*  DMA9 Current Address Register */
#define REG_DMA9_STAT                        0x310A70B0            /*  DMA9 Status Register */
#define REG_DMA9_XCNT_CUR                    0x310A70B4            /*  DMA9 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA9_YCNT_CUR                    0x310A70B8            /*  DMA9 Current Row Count (2D only) Register */
#define REG_DMA9_BWLCNT                      0x310A70C0            /*  DMA9 Bandwidth Limit Count Register */
#define REG_DMA9_BWLCNT_CUR                  0x310A70C4            /*  DMA9 Bandwidth Limit Count Current Register */
#define REG_DMA9_BWMCNT                      0x310A70C8            /*  DMA9 Bandwidth Monitor Count Register */
#define REG_DMA9_BWMCNT_CUR                  0x310A70CC            /*  DMA9 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA18
   ============================================================================================================================ */
#define REG_DMA18_DSCPTR_NXT                 0x310A7100            /*  DMA18 Pointer to Next Initial Descriptor Register */
#define REG_DMA18_ADDRSTART                  0x310A7104            /*  DMA18 Start Address of Current Buffer Register */
#define REG_DMA18_CFG                        0x310A7108            /*  DMA18 Configuration Register */
#define REG_DMA18_XCNT                       0x310A710C            /*  DMA18 Inner Loop Count Start Value Register */
#define REG_DMA18_XMOD                       0x310A7110            /*  DMA18 Inner Loop Address Increment Register */
#define REG_DMA18_YCNT                       0x310A7114            /*  DMA18 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA18_YMOD                       0x310A7118            /*  DMA18 Outer Loop Address Increment (2D only) Register */
#define REG_DMA18_DSCPTR_CUR                 0x310A7124            /*  DMA18 Current Descriptor Pointer Register */
#define REG_DMA18_DSCPTR_PRV                 0x310A7128            /*  DMA18 Previous Initial Descriptor Pointer Register */
#define REG_DMA18_ADDR_CUR                   0x310A712C            /*  DMA18 Current Address Register */
#define REG_DMA18_STAT                       0x310A7130            /*  DMA18 Status Register */
#define REG_DMA18_XCNT_CUR                   0x310A7134            /*  DMA18 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA18_YCNT_CUR                   0x310A7138            /*  DMA18 Current Row Count (2D only) Register */
#define REG_DMA18_BWLCNT                     0x310A7140            /*  DMA18 Bandwidth Limit Count Register */
#define REG_DMA18_BWLCNT_CUR                 0x310A7144            /*  DMA18 Bandwidth Limit Count Current Register */
#define REG_DMA18_BWMCNT                     0x310A7148            /*  DMA18 Bandwidth Monitor Count Register */
#define REG_DMA18_BWMCNT_CUR                 0x310A714C            /*  DMA18 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA19
   ============================================================================================================================ */
#define REG_DMA19_DSCPTR_NXT                 0x310A7180            /*  DMA19 Pointer to Next Initial Descriptor Register */
#define REG_DMA19_ADDRSTART                  0x310A7184            /*  DMA19 Start Address of Current Buffer Register */
#define REG_DMA19_CFG                        0x310A7188            /*  DMA19 Configuration Register */
#define REG_DMA19_XCNT                       0x310A718C            /*  DMA19 Inner Loop Count Start Value Register */
#define REG_DMA19_XMOD                       0x310A7190            /*  DMA19 Inner Loop Address Increment Register */
#define REG_DMA19_YCNT                       0x310A7194            /*  DMA19 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA19_YMOD                       0x310A7198            /*  DMA19 Outer Loop Address Increment (2D only) Register */
#define REG_DMA19_DSCPTR_CUR                 0x310A71A4            /*  DMA19 Current Descriptor Pointer Register */
#define REG_DMA19_DSCPTR_PRV                 0x310A71A8            /*  DMA19 Previous Initial Descriptor Pointer Register */
#define REG_DMA19_ADDR_CUR                   0x310A71AC            /*  DMA19 Current Address Register */
#define REG_DMA19_STAT                       0x310A71B0            /*  DMA19 Status Register */
#define REG_DMA19_XCNT_CUR                   0x310A71B4            /*  DMA19 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA19_YCNT_CUR                   0x310A71B8            /*  DMA19 Current Row Count (2D only) Register */
#define REG_DMA19_BWLCNT                     0x310A71C0            /*  DMA19 Bandwidth Limit Count Register */
#define REG_DMA19_BWLCNT_CUR                 0x310A71C4            /*  DMA19 Bandwidth Limit Count Current Register */
#define REG_DMA19_BWMCNT                     0x310A71C8            /*  DMA19 Bandwidth Monitor Count Register */
#define REG_DMA19_BWMCNT_CUR                 0x310A71CC            /*  DMA19 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA45
   ============================================================================================================================ */
#define REG_DMA45_DSCPTR_NXT                 0x310A7200            /*  DMA45 Pointer to Next Initial Descriptor Register */
#define REG_DMA45_ADDRSTART                  0x310A7204            /*  DMA45 Start Address of Current Buffer Register */
#define REG_DMA45_CFG                        0x310A7208            /*  DMA45 Configuration Register */
#define REG_DMA45_XCNT                       0x310A720C            /*  DMA45 Inner Loop Count Start Value Register */
#define REG_DMA45_XMOD                       0x310A7210            /*  DMA45 Inner Loop Address Increment Register */
#define REG_DMA45_YCNT                       0x310A7214            /*  DMA45 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA45_YMOD                       0x310A7218            /*  DMA45 Outer Loop Address Increment (2D only) Register */
#define REG_DMA45_DSCPTR_CUR                 0x310A7224            /*  DMA45 Current Descriptor Pointer Register */
#define REG_DMA45_DSCPTR_PRV                 0x310A7228            /*  DMA45 Previous Initial Descriptor Pointer Register */
#define REG_DMA45_ADDR_CUR                   0x310A722C            /*  DMA45 Current Address Register */
#define REG_DMA45_STAT                       0x310A7230            /*  DMA45 Status Register */
#define REG_DMA45_XCNT_CUR                   0x310A7234            /*  DMA45 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA45_YCNT_CUR                   0x310A7238            /*  DMA45 Current Row Count (2D only) Register */
#define REG_DMA45_BWLCNT                     0x310A7240            /*  DMA45 Bandwidth Limit Count Register */
#define REG_DMA45_BWLCNT_CUR                 0x310A7244            /*  DMA45 Bandwidth Limit Count Current Register */
#define REG_DMA45_BWMCNT                     0x310A7248            /*  DMA45 Bandwidth Monitor Count Register */
#define REG_DMA45_BWMCNT_CUR                 0x310A724C            /*  DMA45 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA46
   ============================================================================================================================ */
#define REG_DMA46_DSCPTR_NXT                 0x310A7280            /*  DMA46 Pointer to Next Initial Descriptor Register */
#define REG_DMA46_ADDRSTART                  0x310A7284            /*  DMA46 Start Address of Current Buffer Register */
#define REG_DMA46_CFG                        0x310A7288            /*  DMA46 Configuration Register */
#define REG_DMA46_XCNT                       0x310A728C            /*  DMA46 Inner Loop Count Start Value Register */
#define REG_DMA46_XMOD                       0x310A7290            /*  DMA46 Inner Loop Address Increment Register */
#define REG_DMA46_YCNT                       0x310A7294            /*  DMA46 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA46_YMOD                       0x310A7298            /*  DMA46 Outer Loop Address Increment (2D only) Register */
#define REG_DMA46_DSCPTR_CUR                 0x310A72A4            /*  DMA46 Current Descriptor Pointer Register */
#define REG_DMA46_DSCPTR_PRV                 0x310A72A8            /*  DMA46 Previous Initial Descriptor Pointer Register */
#define REG_DMA46_ADDR_CUR                   0x310A72AC            /*  DMA46 Current Address Register */
#define REG_DMA46_STAT                       0x310A72B0            /*  DMA46 Status Register */
#define REG_DMA46_XCNT_CUR                   0x310A72B4            /*  DMA46 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA46_YCNT_CUR                   0x310A72B8            /*  DMA46 Current Row Count (2D only) Register */
#define REG_DMA46_BWLCNT                     0x310A72C0            /*  DMA46 Bandwidth Limit Count Register */
#define REG_DMA46_BWLCNT_CUR                 0x310A72C4            /*  DMA46 Bandwidth Limit Count Current Register */
#define REG_DMA46_BWMCNT                     0x310A72C8            /*  DMA46 Bandwidth Monitor Count Register */
#define REG_DMA46_BWMCNT_CUR                 0x310A72CC            /*  DMA46 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA47
   ============================================================================================================================ */
#define REG_DMA47_DSCPTR_NXT                 0x310A7300            /*  DMA47 Pointer to Next Initial Descriptor Register */
#define REG_DMA47_ADDRSTART                  0x310A7304            /*  DMA47 Start Address of Current Buffer Register */
#define REG_DMA47_CFG                        0x310A7308            /*  DMA47 Configuration Register */
#define REG_DMA47_XCNT                       0x310A730C            /*  DMA47 Inner Loop Count Start Value Register */
#define REG_DMA47_XMOD                       0x310A7310            /*  DMA47 Inner Loop Address Increment Register */
#define REG_DMA47_YCNT                       0x310A7314            /*  DMA47 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA47_YMOD                       0x310A7318            /*  DMA47 Outer Loop Address Increment (2D only) Register */
#define REG_DMA47_DSCPTR_CUR                 0x310A7324            /*  DMA47 Current Descriptor Pointer Register */
#define REG_DMA47_DSCPTR_PRV                 0x310A7328            /*  DMA47 Previous Initial Descriptor Pointer Register */
#define REG_DMA47_ADDR_CUR                   0x310A732C            /*  DMA47 Current Address Register */
#define REG_DMA47_STAT                       0x310A7330            /*  DMA47 Status Register */
#define REG_DMA47_XCNT_CUR                   0x310A7334            /*  DMA47 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA47_YCNT_CUR                   0x310A7338            /*  DMA47 Current Row Count (2D only) Register */
#define REG_DMA47_BWLCNT                     0x310A7340            /*  DMA47 Bandwidth Limit Count Register */
#define REG_DMA47_BWLCNT_CUR                 0x310A7344            /*  DMA47 Bandwidth Limit Count Current Register */
#define REG_DMA47_BWMCNT                     0x310A7348            /*  DMA47 Bandwidth Monitor Count Register */
#define REG_DMA47_BWMCNT_CUR                 0x310A734C            /*  DMA47 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA48
   ============================================================================================================================ */
#define REG_DMA48_DSCPTR_NXT                 0x310A7380            /*  DMA48 Pointer to Next Initial Descriptor Register */
#define REG_DMA48_ADDRSTART                  0x310A7384            /*  DMA48 Start Address of Current Buffer Register */
#define REG_DMA48_CFG                        0x310A7388            /*  DMA48 Configuration Register */
#define REG_DMA48_XCNT                       0x310A738C            /*  DMA48 Inner Loop Count Start Value Register */
#define REG_DMA48_XMOD                       0x310A7390            /*  DMA48 Inner Loop Address Increment Register */
#define REG_DMA48_YCNT                       0x310A7394            /*  DMA48 Outer Loop Count Start Value (2D only) Register */
#define REG_DMA48_YMOD                       0x310A7398            /*  DMA48 Outer Loop Address Increment (2D only) Register */
#define REG_DMA48_DSCPTR_CUR                 0x310A73A4            /*  DMA48 Current Descriptor Pointer Register */
#define REG_DMA48_DSCPTR_PRV                 0x310A73A8            /*  DMA48 Previous Initial Descriptor Pointer Register */
#define REG_DMA48_ADDR_CUR                   0x310A73AC            /*  DMA48 Current Address Register */
#define REG_DMA48_STAT                       0x310A73B0            /*  DMA48 Status Register */
#define REG_DMA48_XCNT_CUR                   0x310A73B4            /*  DMA48 Current Count (1D) or Intra-row XCNT (2D) Register */
#define REG_DMA48_YCNT_CUR                   0x310A73B8            /*  DMA48 Current Row Count (2D only) Register */
#define REG_DMA48_BWLCNT                     0x310A73C0            /*  DMA48 Bandwidth Limit Count Register */
#define REG_DMA48_BWLCNT_CUR                 0x310A73C4            /*  DMA48 Bandwidth Limit Count Current Register */
#define REG_DMA48_BWMCNT                     0x310A73C8            /*  DMA48 Bandwidth Monitor Count Register */
#define REG_DMA48_BWMCNT_CUR                 0x310A73CC            /*  DMA48 Bandwidth Monitor Count Current Register */

/* ============================================================================================================================
        DMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Misc registers for module are for integration purpose
   ============================================================================================================================ */

/* ============================================================================================================================
        MISCREG
   ============================================================================================================================ */
#define REG_MISCREG_SH0_PFB_RANGE_SELECT     0x310A9000            /*  MISCREG Prefetch Range Selection Register */
#define REG_MISCREG_CAN_SYSCTL               0x310A9010
#define REG_MISCREG_SHARC_BRIDGE_REMAP       0x310A9014
#define REG_MISCREG_PFB_L2CC_EXCL_CTL        0x310A901C
#define REG_MISCREG_SH1_PFB_RANGE_SELECT     0x310A9044            /*  MISCREG Prefetch Range Selection Register */

/* ============================================================================================================================
        MISCREG Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          MISCREG_SH0_PFB_RANGE_SELECT         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MISCREG_SH0_PFB_RANGE_SELECT_IPORT_RANGE_SELECT 16            /*  IPORT Prefetch Range Select */
#define BITP_MISCREG_SH0_PFB_RANGE_SELECT_DPORT_RANGE_SELECT  0            /*  DPORT Prefetch Range Select */
#define BITM_MISCREG_SH0_PFB_RANGE_SELECT_IPORT_RANGE_SELECT (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  IPORT Prefetch Range Select */
#define BITM_MISCREG_SH0_PFB_RANGE_SELECT_DPORT_RANGE_SELECT (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  DPORT Prefetch Range Select */

/* -------------------------------------------------------------------------------------------------------------------------
          MISCREG_CAN_SYSCTL                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MISCREG_CAN_SYSCTL_CAN1_IPG_DEBUG  6            /*  Debug mode request to can_node_1 ; 1: set can1_ipg_debug , 0: clear can1_ipg_debug */
#define BITP_MISCREG_CAN_SYSCTL_CAN1_IPG_STOP  5            /*  Stop mode request to can_node_1  ; 1: set can1_ipg_stop , 0: clear can1_ipg_stop */
#define BITP_MISCREG_CAN_SYSCTL_CAN1_IPG_DOZE  4            /*  Doze mode request to can_node_1 ; 1: set can1_ipg_doze , 0: clear can1_ipg_doze */
#define BITP_MISCREG_CAN_SYSCTL_CAN0_IPG_SRST  3            /*  Soft reset to can_node_0 ; 1: set can0_ipg_soft_reset , 0: clear can0_ipg_soft_reset */
#define BITP_MISCREG_CAN_SYSCTL_CAN0_IPG_DEBUG  2            /*  Debug mode request to can_node_0 ; 1: set can0_ipg_debug , 0: clear can0_ipg_debug */
#define BITP_MISCREG_CAN_SYSCTL_CAN0_IPG_STOP  1            /*  Stop mode request to can_node_0  ; 1: set can0_ipg_stop , 0: clear can0_ipg_stop */
#define BITP_MISCREG_CAN_SYSCTL_CAN0_IPG_DOZE  0            /*  Doze mode request to can_node_0 ; 1: set can0_ipg_doze , 0: clear can0_ipg_doze */
#define BITM_MISCREG_CAN_SYSCTL_CAN1_IPG_DEBUG (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Debug mode request to can_node_1 ; 1: set can1_ipg_debug , 0: clear can1_ipg_debug */
#define BITM_MISCREG_CAN_SYSCTL_CAN1_IPG_STOP (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Stop mode request to can_node_1  ; 1: set can1_ipg_stop , 0: clear can1_ipg_stop */
#define BITM_MISCREG_CAN_SYSCTL_CAN1_IPG_DOZE (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Doze mode request to can_node_1 ; 1: set can1_ipg_doze , 0: clear can1_ipg_doze */
#define BITM_MISCREG_CAN_SYSCTL_CAN0_IPG_SRST (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Soft reset to can_node_0 ; 1: set can0_ipg_soft_reset , 0: clear can0_ipg_soft_reset */
#define BITM_MISCREG_CAN_SYSCTL_CAN0_IPG_DEBUG (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Debug mode request to can_node_0 ; 1: set can0_ipg_debug , 0: clear can0_ipg_debug */
#define BITM_MISCREG_CAN_SYSCTL_CAN0_IPG_STOP (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Stop mode request to can_node_0  ; 1: set can0_ipg_stop , 0: clear can0_ipg_stop */
#define BITM_MISCREG_CAN_SYSCTL_CAN0_IPG_DOZE (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Doze mode request to can_node_0 ; 1: set can0_ipg_doze , 0: clear can0_ipg_doze */

/* -------------------------------------------------------------------------------------------------------------------------
          MISCREG_SHARC_BRIDGE_REMAP           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MISCREG_SHARC_BRIDGE_REMAP_SH1_DRT_INTR_EN 17            /*  SPORT Direct Interrupt Enable for SH1, Reset value 1'b0, Should not be set if IIR1 of the SH1 is in use */
#define BITP_MISCREG_SHARC_BRIDGE_REMAP_SH0_DRT_INTR_EN 16            /*  SPORT Direct Interrupt Enable for SH0, Reset value 1'b0, Should not be set if IIR1 of the SH0 is in use */
#define BITM_MISCREG_SHARC_BRIDGE_REMAP_SH1_DRT_INTR_EN (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  SPORT Direct Interrupt Enable for SH1, Reset value 1'b0, Should not be set if IIR1 of the SH1 is in use */
#define BITM_MISCREG_SHARC_BRIDGE_REMAP_SH0_DRT_INTR_EN (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  SPORT Direct Interrupt Enable for SH0, Reset value 1'b0, Should not be set if IIR1 of the SH0 is in use */

/* -------------------------------------------------------------------------------------------------------------------------
          MISCREG_PFB_L2CC_EXCL_CTL            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MISCREG_PFB_L2CC_EXCL_CTL_SH1_L2CC_EN  2            /*  1'b1 - DPORT Access within the range defined by Range Registers, reaches L2CC ; 1'b0 - All DPORT Access reaches actual destination */
#define BITP_MISCREG_PFB_L2CC_EXCL_CTL_SH0_L2CC_EN  1            /*  1'b1 - DPORT Access within the range defined by Range Registers, reaches L2CC ; 1'b0 - All DPORT Access reaches actual destination */
#define BITP_MISCREG_PFB_L2CC_EXCL_CTL_L2CC_EN_OVW  0            /*  1'b0 - exclusive control between PFB and L2CC when using sharc range registers; 1'b1 - shared control between PFB and L2CC when using sharc range registers */
#define BITM_MISCREG_PFB_L2CC_EXCL_CTL_SH1_L2CC_EN (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  1'b1 - DPORT Access within the range defined by Range Registers, reaches L2CC ; 1'b0 - All DPORT Access reaches actual destination */
#define BITM_MISCREG_PFB_L2CC_EXCL_CTL_SH0_L2CC_EN (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  1'b1 - DPORT Access within the range defined by Range Registers, reaches L2CC ; 1'b0 - All DPORT Access reaches actual destination */
#define BITM_MISCREG_PFB_L2CC_EXCL_CTL_L2CC_EN_OVW (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  1'b0 - exclusive control between PFB and L2CC when using sharc range registers; 1'b1 - shared control between PFB and L2CC when using sharc range registers */

/* -------------------------------------------------------------------------------------------------------------------------
          MISCREG_SH1_PFB_RANGE_SELECT         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_MISCREG_SH1_PFB_RANGE_SELECT_SH1_IPORT_RANGE_SELECT 16            /*  SH1 IPORT Prefetch Range Select */
#define BITP_MISCREG_SH1_PFB_RANGE_SELECT_SH1_DPORT_RANGE_SELECT  0            /*  SH1 DPORT Prefetch Range Select */
#define BITM_MISCREG_SH1_PFB_RANGE_SELECT_SH1_IPORT_RANGE_SELECT (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  SH1 IPORT Prefetch Range Select */
#define BITM_MISCREG_SH1_PFB_RANGE_SELECT_SH1_DPORT_RANGE_SELECT (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  SH1 DPORT Prefetch Range Select */


/* ============================================================================================================================
        GIC Distributor Port
   ============================================================================================================================ */

/* ============================================================================================================================
        GICDST0
   ============================================================================================================================ */
#define REG_GICDST0_EN                       0x310B2000            /*  GICDST0 GIC Port 0 Enable */
#define REG_GICDST0_SGI_SECURITY             0x310B2080            /*  GICDST0 Software Generated Interrupt Security Register */
#define REG_GICDST0_SGI_PND_SET              0x310B2200            /*  GICDST0 Software Generated Interrupt Pending Set Register */
#define REG_GICDST0_SGI_PND_CLR              0x310B2280            /*  GICDST0 Software Generated Interrupt Clear-Pending Register */
#define REG_GICDST0_SGI_ACTIVE               0x310B2300            /*  GICDST0 Software Generated Interrupt Active Register */
#define REG_GICDST0_SGI_CTL                  0x310B2F00            /*  GICDST0 Software Generated Interrupt Control Register */
/* ============================================================================================================================
      PRIORITY_SGI_INTID_IF_Nn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SGI_PRIO0                0x310B2400            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO1                0x310B2401            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO2                0x310B2402            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO3                0x310B2403            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO4                0x310B2404            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO5                0x310B2405            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO6                0x310B2406            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO7                0x310B2407            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO8                0x310B2408            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO9                0x310B2409            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO10               0x310B240A            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO11               0x310B240B            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO12               0x310B240C            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO13               0x310B240D            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO14               0x310B240E            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIO15               0x310B240F            /*  GICDST0 Software Generated Interrupt Priority Register */
#define REG_GICDST0_SGI_PRIOn(i)             (REG_GICDST0_SGI_PRIO0 + ((i) * 1))
#define REG_GICDST0_SGI_PRIOn_COUNT          16
/* ============================================================================================================================
      PRORITY_SPI_INTIDn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_PRIO0                0x310B2420            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO1                0x310B2421            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO2                0x310B2422            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO3                0x310B2423            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO4                0x310B2424            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO5                0x310B2425            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO6                0x310B2426            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO7                0x310B2427            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO8                0x310B2428            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO9                0x310B2429            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO10               0x310B242A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO11               0x310B242B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO12               0x310B242C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO13               0x310B242D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO14               0x310B242E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO15               0x310B242F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO16               0x310B2430            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO17               0x310B2431            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO18               0x310B2432            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO19               0x310B2433            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO20               0x310B2434            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO21               0x310B2435            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO22               0x310B2436            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO23               0x310B2437            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO24               0x310B2438            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO25               0x310B2439            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO26               0x310B243A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO27               0x310B243B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO28               0x310B243C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO29               0x310B243D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO30               0x310B243E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO31               0x310B243F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO32               0x310B2440            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO33               0x310B2441            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO34               0x310B2442            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO35               0x310B2443            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO36               0x310B2444            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO37               0x310B2445            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO38               0x310B2446            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO39               0x310B2447            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO40               0x310B2448            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO41               0x310B2449            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO42               0x310B244A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO43               0x310B244B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO44               0x310B244C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO45               0x310B244D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO46               0x310B244E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO47               0x310B244F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO48               0x310B2450            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO49               0x310B2451            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO50               0x310B2452            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO51               0x310B2453            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO52               0x310B2454            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO53               0x310B2455            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO54               0x310B2456            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO55               0x310B2457            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO56               0x310B2458            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO57               0x310B2459            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO58               0x310B245A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO59               0x310B245B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO60               0x310B245C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO61               0x310B245D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO62               0x310B245E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO63               0x310B245F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO64               0x310B2460            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO65               0x310B2461            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO66               0x310B2462            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO67               0x310B2463            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO68               0x310B2464            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO69               0x310B2465            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO70               0x310B2466            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO71               0x310B2467            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO72               0x310B2468            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO73               0x310B2469            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO74               0x310B246A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO75               0x310B246B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO76               0x310B246C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO77               0x310B246D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO78               0x310B246E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO79               0x310B246F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO80               0x310B2470            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO81               0x310B2471            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO82               0x310B2472            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO83               0x310B2473            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO84               0x310B2474            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO85               0x310B2475            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO86               0x310B2476            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO87               0x310B2477            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO88               0x310B2478            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO89               0x310B2479            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO90               0x310B247A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO91               0x310B247B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO92               0x310B247C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO93               0x310B247D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO94               0x310B247E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO95               0x310B247F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO96               0x310B2480            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO97               0x310B2481            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO98               0x310B2482            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO99               0x310B2483            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO100              0x310B2484            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO101              0x310B2485            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO102              0x310B2486            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO103              0x310B2487            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO104              0x310B2488            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO105              0x310B2489            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO106              0x310B248A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO107              0x310B248B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO108              0x310B248C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO109              0x310B248D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO110              0x310B248E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO111              0x310B248F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO112              0x310B2490            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO113              0x310B2491            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO114              0x310B2492            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO115              0x310B2493            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO116              0x310B2494            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO117              0x310B2495            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO118              0x310B2496            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO119              0x310B2497            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO120              0x310B2498            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO121              0x310B2499            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO122              0x310B249A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO123              0x310B249B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO124              0x310B249C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO125              0x310B249D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO126              0x310B249E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO127              0x310B249F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO128              0x310B24A0            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO129              0x310B24A1            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO130              0x310B24A2            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO131              0x310B24A3            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO132              0x310B24A4            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO133              0x310B24A5            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO134              0x310B24A6            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO135              0x310B24A7            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO136              0x310B24A8            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO137              0x310B24A9            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO138              0x310B24AA            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO139              0x310B24AB            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO140              0x310B24AC            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO141              0x310B24AD            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO142              0x310B24AE            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO143              0x310B24AF            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO144              0x310B24B0            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO145              0x310B24B1            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO146              0x310B24B2            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO147              0x310B24B3            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO148              0x310B24B4            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO149              0x310B24B5            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO150              0x310B24B6            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO151              0x310B24B7            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO152              0x310B24B8            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO153              0x310B24B9            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO154              0x310B24BA            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO155              0x310B24BB            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO156              0x310B24BC            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO157              0x310B24BD            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO158              0x310B24BE            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO159              0x310B24BF            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO160              0x310B24C0            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO161              0x310B24C1            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO162              0x310B24C2            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO163              0x310B24C3            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO164              0x310B24C4            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO165              0x310B24C5            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO166              0x310B24C6            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO167              0x310B24C7            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO168              0x310B24C8            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO169              0x310B24C9            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO170              0x310B24CA            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO171              0x310B24CB            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO172              0x310B24CC            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO173              0x310B24CD            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO174              0x310B24CE            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO175              0x310B24CF            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO176              0x310B24D0            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO177              0x310B24D1            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO178              0x310B24D2            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO179              0x310B24D3            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO180              0x310B24D4            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO181              0x310B24D5            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO182              0x310B24D6            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO183              0x310B24D7            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO184              0x310B24D8            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO185              0x310B24D9            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO186              0x310B24DA            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO187              0x310B24DB            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO188              0x310B24DC            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO189              0x310B24DD            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO190              0x310B24DE            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO191              0x310B24DF            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO192              0x310B24E0            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO193              0x310B24E1            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO194              0x310B24E2            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO195              0x310B24E3            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO196              0x310B24E4            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO197              0x310B24E5            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO198              0x310B24E6            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO199              0x310B24E7            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO200              0x310B24E8            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO201              0x310B24E9            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO202              0x310B24EA            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO203              0x310B24EB            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO204              0x310B24EC            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO205              0x310B24ED            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO206              0x310B24EE            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO207              0x310B24EF            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO208              0x310B24F0            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO209              0x310B24F1            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO210              0x310B24F2            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO211              0x310B24F3            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO212              0x310B24F4            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO213              0x310B24F5            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO214              0x310B24F6            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO215              0x310B24F7            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO216              0x310B24F8            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO217              0x310B24F9            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO218              0x310B24FA            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO219              0x310B24FB            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO220              0x310B24FC            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO221              0x310B24FD            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO222              0x310B24FE            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO223              0x310B24FF            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO224              0x310B2500            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO225              0x310B2501            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO226              0x310B2502            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO227              0x310B2503            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO228              0x310B2504            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO229              0x310B2505            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO230              0x310B2506            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO231              0x310B2507            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO232              0x310B2508            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO233              0x310B2509            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO234              0x310B250A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO235              0x310B250B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO236              0x310B250C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO237              0x310B250D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO238              0x310B250E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO239              0x310B250F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO240              0x310B2510            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO241              0x310B2511            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO242              0x310B2512            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO243              0x310B2513            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO244              0x310B2514            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO245              0x310B2515            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO246              0x310B2516            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO247              0x310B2517            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO248              0x310B2518            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO249              0x310B2519            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO250              0x310B251A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO251              0x310B251B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO252              0x310B251C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO253              0x310B251D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO254              0x310B251E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO255              0x310B251F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO256              0x310B2520            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO257              0x310B2521            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO258              0x310B2522            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO259              0x310B2523            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO260              0x310B2524            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO261              0x310B2525            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO262              0x310B2526            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO263              0x310B2527            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO264              0x310B2528            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO265              0x310B2529            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO266              0x310B252A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO267              0x310B252B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO268              0x310B252C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO269              0x310B252D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO270              0x310B252E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO271              0x310B252F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO272              0x310B2530            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO273              0x310B2531            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO274              0x310B2532            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO275              0x310B2533            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO276              0x310B2534            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO277              0x310B2535            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO278              0x310B2536            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO279              0x310B2537            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO280              0x310B2538            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO281              0x310B2539            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO282              0x310B253A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO283              0x310B253B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO284              0x310B253C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO285              0x310B253D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO286              0x310B253E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO287              0x310B253F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO288              0x310B2540            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO289              0x310B2541            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO290              0x310B2542            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO291              0x310B2543            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO292              0x310B2544            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO293              0x310B2545            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO294              0x310B2546            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO295              0x310B2547            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO296              0x310B2548            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO297              0x310B2549            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO298              0x310B254A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO299              0x310B254B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO300              0x310B254C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO301              0x310B254D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO302              0x310B254E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO303              0x310B254F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO304              0x310B2550            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO305              0x310B2551            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO306              0x310B2552            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO307              0x310B2553            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO308              0x310B2554            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO309              0x310B2555            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO310              0x310B2556            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO311              0x310B2557            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO312              0x310B2558            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO313              0x310B2559            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO314              0x310B255A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO315              0x310B255B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO316              0x310B255C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO317              0x310B255D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO318              0x310B255E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO319              0x310B255F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO320              0x310B2560            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO321              0x310B2561            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO322              0x310B2562            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO323              0x310B2563            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO324              0x310B2564            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO325              0x310B2565            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO326              0x310B2566            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO327              0x310B2567            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO328              0x310B2568            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO329              0x310B2569            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO330              0x310B256A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO331              0x310B256B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO332              0x310B256C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO333              0x310B256D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO334              0x310B256E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO335              0x310B256F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO336              0x310B2570            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO337              0x310B2571            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO338              0x310B2572            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO339              0x310B2573            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO340              0x310B2574            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO341              0x310B2575            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO342              0x310B2576            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO343              0x310B2577            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO344              0x310B2578            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO345              0x310B2579            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO346              0x310B257A            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO347              0x310B257B            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO348              0x310B257C            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO349              0x310B257D            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO350              0x310B257E            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIO351              0x310B257F            /*  GICDST0 Shared Peripheral Interrupt Priority Register */
#define REG_GICDST0_SPI_PRIOn(i)             (REG_GICDST0_SPI_PRIO0 + ((i) * 1))
#define REG_GICDST0_SPI_PRIOn_COUNT          352
/* ============================================================================================================================
      SPI_ACTIVEn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_ACTIVE0              0x310B2304            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE1              0x310B2308            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE2              0x310B230C            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE3              0x310B2310            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE4              0x310B2314            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE5              0x310B2318            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE6              0x310B231C            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE7              0x310B2320            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE8              0x310B2324            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE9              0x310B2328            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVE10             0x310B232C            /*  GICDST0 Shared Peripheral Interrupt Active Register */
#define REG_GICDST0_SPI_ACTIVEn(i)           (REG_GICDST0_SPI_ACTIVE0 + ((i) * 4))
#define REG_GICDST0_SPI_ACTIVEn_COUNT        11
/* ============================================================================================================================
      SPI_CONFIGn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_CFG0                 0x310B2C08            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG1                 0x310B2C0C            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG2                 0x310B2C10            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG3                 0x310B2C14            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG4                 0x310B2C18            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG5                 0x310B2C1C            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG6                 0x310B2C20            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG7                 0x310B2C24            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG8                 0x310B2C28            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG9                 0x310B2C2C            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG10                0x310B2C30            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG11                0x310B2C34            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG12                0x310B2C38            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG13                0x310B2C3C            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG14                0x310B2C40            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFG15                0x310B2C44            /*  GICDST0 Shared Peripheral Interrupt Configuration Register */
#define REG_GICDST0_SPI_CFGn(i)              (REG_GICDST0_SPI_CFG0 + ((i) * 4))
#define REG_GICDST0_SPI_CFGn_COUNT           16
/* ============================================================================================================================
      SPI_ENABLE_CLRn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_EN_CLR0              0x310B2184            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR1              0x310B2188            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR2              0x310B218C            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR3              0x310B2190            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR4              0x310B2194            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR5              0x310B2198            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR6              0x310B219C            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR7              0x310B21A0            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR8              0x310B21A4            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR9              0x310B21A8            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLR10             0x310B21AC            /*  GICDST0 Shared Peripheral Interrupt Enable Clear Register */
#define REG_GICDST0_SPI_EN_CLRn(i)           (REG_GICDST0_SPI_EN_CLR0 + ((i) * 4))
#define REG_GICDST0_SPI_EN_CLRn_COUNT        11
/* ============================================================================================================================
      SPI_ENABLE_SETn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_EN_SET0              0x310B2104            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET1              0x310B2108            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET2              0x310B210C            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET3              0x310B2110            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET4              0x310B2114            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET5              0x310B2118            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET6              0x310B211C            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET7              0x310B2120            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET8              0x310B2124            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET9              0x310B2128            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SET10             0x310B212C            /*  GICDST0 Shared Peripheral Interrupt Enable Set Register */
#define REG_GICDST0_SPI_EN_SETn(i)           (REG_GICDST0_SPI_EN_SET0 + ((i) * 4))
#define REG_GICDST0_SPI_EN_SETn_COUNT        11
/* ============================================================================================================================
      SPI_PENDING_CLRn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_PND_CLR0             0x310B2284            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR1             0x310B2288            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR2             0x310B228C            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR3             0x310B2290            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR4             0x310B2294            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR5             0x310B2298            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR6             0x310B229C            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR7             0x310B22A0            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR8             0x310B22A4            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR9             0x310B22A8            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLR10            0x310B22AC            /*  GICDST0 Shared Peripheral Interrupt Pending Clear Register */
#define REG_GICDST0_SPI_PND_CLRn(i)          (REG_GICDST0_SPI_PND_CLR0 + ((i) * 4))
#define REG_GICDST0_SPI_PND_CLRn_COUNT       11
/* ============================================================================================================================
      SPI_PENDING_SETn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_PND_SET0             0x310B2204            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET1             0x310B2208            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET2             0x310B220C            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET3             0x310B2210            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET4             0x310B2214            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET5             0x310B2218            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET6             0x310B221C            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET7             0x310B2220            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET8             0x310B2224            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET9             0x310B2228            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SET10            0x310B222C            /*  GICDST0 Shared Peripheral Interrupt Pending Set Register */
#define REG_GICDST0_SPI_PND_SETn(i)          (REG_GICDST0_SPI_PND_SET0 + ((i) * 4))
#define REG_GICDST0_SPI_PND_SETn_COUNT       11
/* ============================================================================================================================
      SPI_SECURITYn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_SECURITY0            0x310B2084            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY1            0x310B2088            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY2            0x310B208C            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY3            0x310B2090            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY4            0x310B2094            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY5            0x310B2098            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY6            0x310B209C            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY7            0x310B20A0            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY8            0x310B20A4            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY9            0x310B20A8            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITY10           0x310B20AC            /*  GICDST0 Shared Peripheral Interrupt Security Register */
#define REG_GICDST0_SPI_SECURITYn(i)         (REG_GICDST0_SPI_SECURITY0 + ((i) * 4))
#define REG_GICDST0_SPI_SECURITYn_COUNT      11
/* ============================================================================================================================
      SPIn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI0                     0x310B2D04            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI1                     0x310B2D08            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI2                     0x310B2D0C            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI3                     0x310B2D10            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI4                     0x310B2D14            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI5                     0x310B2D18            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI6                     0x310B2D1C            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI7                     0x310B2D20            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI8                     0x310B2D24            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI9                     0x310B2D28            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPI10                    0x310B2D2C            /*  GICDST0 Shared Peripheral Interrupt Register */
#define REG_GICDST0_SPIn(i)                  (REG_GICDST0_SPI0 + ((i) * 4))
#define REG_GICDST0_SPIn_COUNT               11
/* ============================================================================================================================
      TARGETS_SPI_INTIDn Register Definitions
   ============================================================================================================================ */
#define REG_GICDST0_SPI_TRGT0                0x310B2820            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT1                0x310B2821            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT2                0x310B2822            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT3                0x310B2823            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT4                0x310B2824            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT5                0x310B2825            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT6                0x310B2826            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT7                0x310B2827            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT8                0x310B2828            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT9                0x310B2829            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT10               0x310B282A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT11               0x310B282B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT12               0x310B282C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT13               0x310B282D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT14               0x310B282E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT15               0x310B282F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT16               0x310B2830            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT17               0x310B2831            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT18               0x310B2832            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT19               0x310B2833            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT20               0x310B2834            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT21               0x310B2835            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT22               0x310B2836            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT23               0x310B2837            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT24               0x310B2838            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT25               0x310B2839            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT26               0x310B283A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT27               0x310B283B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT28               0x310B283C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT29               0x310B283D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT30               0x310B283E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT31               0x310B283F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT32               0x310B2840            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT33               0x310B2841            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT34               0x310B2842            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT35               0x310B2843            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT36               0x310B2844            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT37               0x310B2845            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT38               0x310B2846            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT39               0x310B2847            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT40               0x310B2848            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT41               0x310B2849            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT42               0x310B284A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT43               0x310B284B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT44               0x310B284C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT45               0x310B284D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT46               0x310B284E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT47               0x310B284F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT48               0x310B2850            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT49               0x310B2851            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT50               0x310B2852            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT51               0x310B2853            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT52               0x310B2854            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT53               0x310B2855            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT54               0x310B2856            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT55               0x310B2857            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT56               0x310B2858            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT57               0x310B2859            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT58               0x310B285A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT59               0x310B285B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT60               0x310B285C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT61               0x310B285D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT62               0x310B285E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT63               0x310B285F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT64               0x310B2860            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT65               0x310B2861            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT66               0x310B2862            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT67               0x310B2863            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT68               0x310B2864            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT69               0x310B2865            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT70               0x310B2866            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT71               0x310B2867            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT72               0x310B2868            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT73               0x310B2869            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT74               0x310B286A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT75               0x310B286B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT76               0x310B286C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT77               0x310B286D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT78               0x310B286E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT79               0x310B286F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT80               0x310B2870            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT81               0x310B2871            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT82               0x310B2872            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT83               0x310B2873            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT84               0x310B2874            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT85               0x310B2875            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT86               0x310B2876            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT87               0x310B2877            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT88               0x310B2878            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT89               0x310B2879            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT90               0x310B287A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT91               0x310B287B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT92               0x310B287C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT93               0x310B287D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT94               0x310B287E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT95               0x310B287F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT96               0x310B2880            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT97               0x310B2881            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT98               0x310B2882            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT99               0x310B2883            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT100              0x310B2884            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT101              0x310B2885            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT102              0x310B2886            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT103              0x310B2887            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT104              0x310B2888            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT105              0x310B2889            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT106              0x310B288A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT107              0x310B288B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT108              0x310B288C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT109              0x310B288D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT110              0x310B288E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT111              0x310B288F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT112              0x310B2890            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT113              0x310B2891            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT114              0x310B2892            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT115              0x310B2893            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT116              0x310B2894            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT117              0x310B2895            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT118              0x310B2896            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT119              0x310B2897            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT120              0x310B2898            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT121              0x310B2899            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT122              0x310B289A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT123              0x310B289B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT124              0x310B289C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT125              0x310B289D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT126              0x310B289E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT127              0x310B289F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT128              0x310B28A0            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT129              0x310B28A1            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT130              0x310B28A2            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT131              0x310B28A3            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT132              0x310B28A4            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT133              0x310B28A5            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT134              0x310B28A6            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT135              0x310B28A7            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT136              0x310B28A8            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT137              0x310B28A9            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT138              0x310B28AA            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT139              0x310B28AB            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT140              0x310B28AC            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT141              0x310B28AD            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT142              0x310B28AE            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT143              0x310B28AF            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT144              0x310B28B0            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT145              0x310B28B1            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT146              0x310B28B2            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT147              0x310B28B3            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT148              0x310B28B4            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT149              0x310B28B5            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT150              0x310B28B6            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT151              0x310B28B7            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT152              0x310B28B8            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT153              0x310B28B9            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT154              0x310B28BA            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT155              0x310B28BB            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT156              0x310B28BC            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT157              0x310B28BD            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT158              0x310B28BE            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT159              0x310B28BF            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT160              0x310B28C0            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT161              0x310B28C1            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT162              0x310B28C2            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT163              0x310B28C3            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT164              0x310B28C4            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT165              0x310B28C5            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT166              0x310B28C6            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT167              0x310B28C7            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT168              0x310B28C8            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT169              0x310B28C9            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT170              0x310B28CA            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT171              0x310B28CB            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT172              0x310B28CC            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT173              0x310B28CD            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT174              0x310B28CE            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT175              0x310B28CF            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT176              0x310B28D0            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT177              0x310B28D1            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT178              0x310B28D2            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT179              0x310B28D3            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT180              0x310B28D4            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT181              0x310B28D5            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT182              0x310B28D6            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT183              0x310B28D7            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT184              0x310B28D8            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT185              0x310B28D9            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT186              0x310B28DA            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT187              0x310B28DB            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT188              0x310B28DC            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT189              0x310B28DD            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT190              0x310B28DE            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT191              0x310B28DF            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT192              0x310B28E0            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT193              0x310B28E1            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT194              0x310B28E2            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT195              0x310B28E3            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT196              0x310B28E4            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT197              0x310B28E5            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT198              0x310B28E6            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT199              0x310B28E7            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT200              0x310B28E8            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT201              0x310B28E9            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT202              0x310B28EA            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT203              0x310B28EB            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT204              0x310B28EC            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT205              0x310B28ED            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT206              0x310B28EE            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT207              0x310B28EF            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT208              0x310B28F0            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT209              0x310B28F1            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT210              0x310B28F2            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT211              0x310B28F3            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT212              0x310B28F4            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT213              0x310B28F5            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT214              0x310B28F6            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT215              0x310B28F7            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT216              0x310B28F8            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT217              0x310B28F9            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT218              0x310B28FA            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT219              0x310B28FB            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT220              0x310B28FC            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT221              0x310B28FD            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT222              0x310B28FE            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT223              0x310B28FF            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT224              0x310B2900            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT225              0x310B2901            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT226              0x310B2902            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT227              0x310B2903            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT228              0x310B2904            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT229              0x310B2905            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT230              0x310B2906            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT231              0x310B2907            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT232              0x310B2908            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT233              0x310B2909            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT234              0x310B290A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT235              0x310B290B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT236              0x310B290C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT237              0x310B290D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT238              0x310B290E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT239              0x310B290F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT240              0x310B2910            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT241              0x310B2911            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT242              0x310B2912            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT243              0x310B2913            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT244              0x310B2914            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT245              0x310B2915            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT246              0x310B2916            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT247              0x310B2917            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT248              0x310B2918            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT249              0x310B2919            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT250              0x310B291A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT251              0x310B291B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT252              0x310B291C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT253              0x310B291D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT254              0x310B291E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT255              0x310B291F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT256              0x310B2920            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT257              0x310B2921            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT258              0x310B2922            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT259              0x310B2923            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT260              0x310B2924            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT261              0x310B2925            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT262              0x310B2926            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT263              0x310B2927            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT264              0x310B2928            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT265              0x310B2929            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT266              0x310B292A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT267              0x310B292B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT268              0x310B292C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT269              0x310B292D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT270              0x310B292E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT271              0x310B292F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT272              0x310B2930            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT273              0x310B2931            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT274              0x310B2932            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT275              0x310B2933            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT276              0x310B2934            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT277              0x310B2935            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT278              0x310B2936            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT279              0x310B2937            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT280              0x310B2938            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT281              0x310B2939            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT282              0x310B293A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT283              0x310B293B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT284              0x310B293C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT285              0x310B293D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT286              0x310B293E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT287              0x310B293F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT288              0x310B2940            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT289              0x310B2941            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT290              0x310B2942            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT291              0x310B2943            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT292              0x310B2944            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT293              0x310B2945            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT294              0x310B2946            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT295              0x310B2947            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT296              0x310B2948            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT297              0x310B2949            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT298              0x310B294A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT299              0x310B294B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT300              0x310B294C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT301              0x310B294D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT302              0x310B294E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT303              0x310B294F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT304              0x310B2950            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT305              0x310B2951            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT306              0x310B2952            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT307              0x310B2953            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT308              0x310B2954            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT309              0x310B2955            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT310              0x310B2956            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT311              0x310B2957            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT312              0x310B2958            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT313              0x310B2959            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT314              0x310B295A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT315              0x310B295B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT316              0x310B295C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT317              0x310B295D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT318              0x310B295E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT319              0x310B295F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT320              0x310B2960            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT321              0x310B2961            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT322              0x310B2962            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT323              0x310B2963            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT324              0x310B2964            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT325              0x310B2965            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT326              0x310B2966            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT327              0x310B2967            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT328              0x310B2968            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT329              0x310B2969            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT330              0x310B296A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT331              0x310B296B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT332              0x310B296C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT333              0x310B296D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT334              0x310B296E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT335              0x310B296F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT336              0x310B2970            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT337              0x310B2971            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT338              0x310B2972            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT339              0x310B2973            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT340              0x310B2974            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT341              0x310B2975            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT342              0x310B2976            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT343              0x310B2977            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT344              0x310B2978            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT345              0x310B2979            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT346              0x310B297A            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT347              0x310B297B            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT348              0x310B297C            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT349              0x310B297D            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT350              0x310B297E            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGT351              0x310B297F            /*  GICDST0 Shared Peripheral Interrupt Processor Targets Register */
#define REG_GICDST0_SPI_TRGTn(i)             (REG_GICDST0_SPI_TRGT0 + ((i) * 1))
#define REG_GICDST0_SPI_TRGTn_COUNT          352

/* ============================================================================================================================
        GICDST Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_EN                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_EN_VALUE                  0            /*  Global Interrupt Monitor Enable */
#define BITM_GICDST_EN_VALUE                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Global Interrupt Monitor Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SGI_SECURITY                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SGI_SECURITY_VALUE        0            /*  Software Generated Interrupt Security */
#define BITM_GICDST_SGI_SECURITY_VALUE       (_ADI_MSK_3(0x0000FFFF,0x0000FFFFU, uint16_t  ))    /*  Software Generated Interrupt Security */

/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SGI_PND_SET                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SGI_PND_SET_VALUE         0            /*  Software Generated Interrupt Set-Pending */
#define BITM_GICDST_SGI_PND_SET_VALUE        (_ADI_MSK_3(0x0000FFFF,0x0000FFFFU, uint16_t  ))    /*  Software Generated Interrupt Set-Pending */

/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SGI_PND_CLR                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SGI_PND_CLR_VALUE         0            /*  Software Generated Interrupt Clear-Pending */
#define BITM_GICDST_SGI_PND_CLR_VALUE        (_ADI_MSK_3(0x0000FFFF,0x0000FFFFU, uint16_t  ))    /*  Software Generated Interrupt Clear-Pending */

/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SGI_ACTIVE                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SGI_ACTIVE_VALUE          0            /*  SGI Active If N */
#define BITM_GICDST_SGI_ACTIVE_VALUE         (_ADI_MSK_3(0x0000FFFF,0x0000FFFFU, uint16_t  ))    /*  SGI Active If N */

/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SGI_CTL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SGI_CTL_TRGLSTFILT       24            /*  Target List Filter */
#define BITP_GICDST_SGI_CTL_CPUTRGTLST       16            /*  CPU Target list */
#define BITP_GICDST_SGI_CTL_SATT             15            /*  Security Value of the SGI */
#define BITP_GICDST_SGI_CTL_SGIINTID          0            /*  The Interrupt ID of the SGI */
#define BITM_GICDST_SGI_CTL_TRGLSTFILT       (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  Target List Filter */
#define BITM_GICDST_SGI_CTL_CPUTRGTLST       (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  CPU Target list */
#define BITM_GICDST_SGI_CTL_SATT             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Security Value of the SGI */
#define BITM_GICDST_SGI_CTL_SGIINTID         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  The Interrupt ID of the SGI */

/* ============================================================================================================================
 *    PRIORITY_SGI_INTID_IF_Nn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SGI_PRIO[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SGI_PRIO_VALUE            0            /*  Software Generated Interrupt Priority */
#define BITM_GICDST_SGI_PRIO_VALUE           (_ADI_MSK_3(0x000000FF,0x000000FFU, uint8_t   ))    /*  Software Generated Interrupt Priority */

/* ============================================================================================================================
 *    PRORITY_SPI_INTIDn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_PRIO[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_PRIO_VALUE            0            /*  Priority */
#define BITM_GICDST_SPI_PRIO_VALUE           (_ADI_MSK_3(0x00000001,0x00000001U, uint8_t   ))    /*  Priority */

/* ============================================================================================================================
 *    SPI_ACTIVEn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_ACTIVE[n]                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_ACTIVE_VALUE          0            /*  Active Bits */
#define BITM_GICDST_SPI_ACTIVE_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Active Bits */

/* ============================================================================================================================
 *    SPI_CONFIGn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_CFG[n]                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_CFG_VALUE             0            /*  Shared Peripheral Interrupt Configuration */
#define BITM_GICDST_SPI_CFG_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Shared Peripheral Interrupt Configuration */

/* ============================================================================================================================
 *    SPI_ENABLE_CLRn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_EN_CLR[n]                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_EN_CLR_VALUE          0            /*  Shared Peripheral Interrupt Enable Clear Enable */
#define BITM_GICDST_SPI_EN_CLR_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Shared Peripheral Interrupt Enable Clear Enable */

/* ============================================================================================================================
 *    SPI_ENABLE_SETn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_EN_SET[n]                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_EN_SET_VALUE          0            /*  Shared Peripheral Interrupt Enable */
#define BITM_GICDST_SPI_EN_SET_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Shared Peripheral Interrupt Enable */

/* ============================================================================================================================
 *    SPI_PENDING_CLRn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_PND_CLR[n]                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_PND_CLR_VALUE         0            /*  Clear Pending Interrupt */
#define BITM_GICDST_SPI_PND_CLR_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Clear Pending Interrupt */

/* ============================================================================================================================
 *    SPI_PENDING_SETn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_PND_SET[n]                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_PND_SET_VALUE         0            /*  Set Pending Interrupt */
#define BITM_GICDST_SPI_PND_SET_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Set Pending Interrupt */

/* ============================================================================================================================
 *    SPI_SECURITYn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_SECURITY[n]               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_SECURITY_VALUE        0            /*  Shared Peripheral Interrupt Security Interrupt Security */
#define BITM_GICDST_SPI_SECURITY_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Shared Peripheral Interrupt Security Interrupt Security */

/* ============================================================================================================================
 *    SPIn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI[n]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_STAT                  0            /*  Shared Peripheral Interrupt Status */
#define BITM_GICDST_SPI_STAT                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Shared Peripheral Interrupt Status */

/* ============================================================================================================================
 *    TARGETS_SPI_INTIDn Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICDST_SPI_TRGT[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICDST_SPI_TRGT_VALUE            0            /*  Shared Peripheral Interrupt Processor Targets */
#define BITM_GICDST_SPI_TRGT_VALUE           (_ADI_MSK_3(0x000000FF,0x000000FFU, uint8_t   ))    /*  Shared Peripheral Interrupt Processor Targets */


/* ============================================================================================================================
        GIC CPU Port
   ============================================================================================================================ */

/* ============================================================================================================================
        GICCPU0
   ============================================================================================================================ */
#define REG_GICCPU0_CTL                      0x310B4000            /*  GICCPU0 CPU Interface Control Register (ICCICR) */
#define REG_GICCPU0_PRIO_MSK                 0x310B4004            /*  GICCPU0 Priority Mask Register (ICCIPMR) */
#define REG_GICCPU0_BIN_PT                   0x310B4008            /*  GICCPU0 Binary Point Register (ICCBPR) */
#define REG_GICCPU0_INT_ACK                  0x310B400C            /*  GICCPU0 Interrupt Acknowledge Register (ICCIAR) */
#define REG_GICCPU0_EOI                      0x310B4010            /*  GICCPU0 End of Interrupt Register (ICCEOIR) */
#define REG_GICCPU0_RUN_PRIO                 0x310B4014            /*  GICCPU0 Running Priority Register (ICCRPR) */
#define REG_GICCPU0_PND_HI                   0x310B4018            /*  GICCPU0 Highest Pending Interrupt Register (ICCHPIR) */
#define REG_GICCPU0_BIN_PT_ALIAS             0x310B401C            /*  GICCPU0 Aliased Binary Point Register (ICCABPR) */

/* ============================================================================================================================
        GICCPU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_CTL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_CTL_VALUE                 0            /*  Control N */
#define BITM_GICCPU_CTL_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Control N */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_PRIO_MSK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_PRIO_MSK_VALUE            0            /*  Interrupt Priority Filter Value */
#define BITM_GICCPU_PRIO_MSK_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Interrupt Priority Filter Value */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_BIN_PT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_BIN_PT_VALUE              0            /*  Binary Point Value */
#define BITM_GICCPU_BIN_PT_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Binary Point Value */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_INT_ACK                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_INT_ACK_VALUE             0            /*  Interrupt Acknowledge ID */
#define BITM_GICCPU_INT_ACK_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Interrupt Acknowledge ID */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_EOI                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_EOI_VALUE                 0            /*  End of Interrupt */
#define BITM_GICCPU_EOI_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  End of Interrupt */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_RUN_PRIO                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_RUN_PRIO_VALUE            0            /*  Run Priority N */
#define BITM_GICCPU_RUN_PRIO_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Run Priority N */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_PND_HI                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_PND_HI_VALUE              0            /*  Hi Pend N */
#define BITM_GICCPU_PND_HI_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Hi Pend N */

/* -------------------------------------------------------------------------------------------------------------------------
          GICCPU_BIN_PT_ALIAS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_GICCPU_BIN_PT_ALIAS_VALUE        0            /*  Aliased Priority Value */
#define BITM_GICCPU_BIN_PT_ALIAS_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Aliased Priority Value */


/* ============================================================================================================================
        The IIR filter accelerator
   ============================================================================================================================ */

/* ============================================================================================================================
        IIR4
   ============================================================================================================================ */
#define REG_IIR4_CTL1                        0x310BE000            /*  IIR4 Global Control Register */
#define REG_IIR4_DMASTAT                     0x310BE004            /*  IIR4 DMA Status Register */
#define REG_IIR4_MACSTAT                     0x310BE008            /*  IIR4 MAC Status Register */
#define REG_IIR4_DBG_CTL                     0x310BE00C            /*  IIR4 IIR Debug Control Register */
#define REG_IIR4_DBG_ADDR                    0x310BE010            /*  IIR4 IIR Debug Address Register */
#define REG_IIR4_DBG_WRDAT_LO                0x310BE014            /*  IIR4 IIR Debug Write Data Low Register */
#define REG_IIR4_DBG_WRDAT_HI                0x310BE018            /*  IIR4 IIR Debug Write Data High Register */
#define REG_IIR4_DBG_RDDAT_LO                0x310BE01C            /*  IIR4 IIR Debug Read Data Low Register */
#define REG_IIR4_DBG_RDDAT_HI                0x310BE020            /*  IIR4 IIR Debug Read Data High Register */
#define REG_IIR4_CTL2                        0x310BE040            /*  IIR4 Channel Control Register */
#define REG_IIR4_INIDX                       0x310BE044            /*  IIR4 Input Data Index Register */
#define REG_IIR4_INMOD                       0x310BE048            /*  IIR4 Input Data Index Modifier Register */
#define REG_IIR4_INLEN                       0x310BE04C            /*  IIR4 Input Data Buffer Length Register */
#define REG_IIR4_INBASE                      0x310BE050            /*  IIR4 Input Buffer Base Register */
#define REG_IIR4_OUTIDX                      0x310BE054            /*  IIR4 Output Data Buffer Index Register */
#define REG_IIR4_OUTMOD                      0x310BE058            /*  IIR4 IIR Output Data Index Modifier Register */
#define REG_IIR4_OUTLEN                      0x310BE05C            /*  IIR4 IIR Output Data Buffer Length Register */
#define REG_IIR4_OUTBASE                     0x310BE060            /*  IIR4 Output Buffer Base Register */
#define REG_IIR4_COEFIDX                     0x310BE064            /*  IIR4 Coefficient Buffer Index Register */
#define REG_IIR4_COEFMOD                     0x310BE068            /*  IIR4 Coefficient Index Modifier Register */
#define REG_IIR4_COEFLEN                     0x310BE06C            /*  IIR4 Coefficient Buffer Length Register */
#define REG_IIR4_CHNPTR                      0x310BE070            /*  IIR4 Chain Pointer Register */
#define REG_IIR4_SCTL1                       0x310BE074            /*  IIR4 Software Control Register1 */
#define REG_IIR4_SCTL2                       0x310BE078            /*  IIR4 Software Control Register2 */
#define REG_IIR4_SGCTL                       0x310BE07C            /*  IIR4 Secondary Global Control Register */

/* ============================================================================================================================
        IIR5
   ============================================================================================================================ */
#define REG_IIR5_CTL1                        0x310BA000            /*  IIR5 Global Control Register */
#define REG_IIR5_DMASTAT                     0x310BA004            /*  IIR5 DMA Status Register */
#define REG_IIR5_MACSTAT                     0x310BA008            /*  IIR5 MAC Status Register */
#define REG_IIR5_DBG_CTL                     0x310BA00C            /*  IIR5 IIR Debug Control Register */
#define REG_IIR5_DBG_ADDR                    0x310BA010            /*  IIR5 IIR Debug Address Register */
#define REG_IIR5_DBG_WRDAT_LO                0x310BA014            /*  IIR5 IIR Debug Write Data Low Register */
#define REG_IIR5_DBG_WRDAT_HI                0x310BA018            /*  IIR5 IIR Debug Write Data High Register */
#define REG_IIR5_DBG_RDDAT_LO                0x310BA01C            /*  IIR5 IIR Debug Read Data Low Register */
#define REG_IIR5_DBG_RDDAT_HI                0x310BA020            /*  IIR5 IIR Debug Read Data High Register */
#define REG_IIR5_CTL2                        0x310BA040            /*  IIR5 Channel Control Register */
#define REG_IIR5_INIDX                       0x310BA044            /*  IIR5 Input Data Index Register */
#define REG_IIR5_INMOD                       0x310BA048            /*  IIR5 Input Data Index Modifier Register */
#define REG_IIR5_INLEN                       0x310BA04C            /*  IIR5 Input Data Buffer Length Register */
#define REG_IIR5_INBASE                      0x310BA050            /*  IIR5 Input Buffer Base Register */
#define REG_IIR5_OUTIDX                      0x310BA054            /*  IIR5 Output Data Buffer Index Register */
#define REG_IIR5_OUTMOD                      0x310BA058            /*  IIR5 IIR Output Data Index Modifier Register */
#define REG_IIR5_OUTLEN                      0x310BA05C            /*  IIR5 IIR Output Data Buffer Length Register */
#define REG_IIR5_OUTBASE                     0x310BA060            /*  IIR5 Output Buffer Base Register */
#define REG_IIR5_COEFIDX                     0x310BA064            /*  IIR5 Coefficient Buffer Index Register */
#define REG_IIR5_COEFMOD                     0x310BA068            /*  IIR5 Coefficient Index Modifier Register */
#define REG_IIR5_COEFLEN                     0x310BA06C            /*  IIR5 Coefficient Buffer Length Register */
#define REG_IIR5_CHNPTR                      0x310BA070            /*  IIR5 Chain Pointer Register */
#define REG_IIR5_SCTL1                       0x310BA074            /*  IIR5 Software Control Register1 */
#define REG_IIR5_SCTL2                       0x310BA078            /*  IIR5 Software Control Register2 */
#define REG_IIR5_SGCTL                       0x310BA07C            /*  IIR5 Secondary Global Control Register */

/* ============================================================================================================================
        IIR6
   ============================================================================================================================ */
#define REG_IIR6_CTL1                        0x310BB000            /*  IIR6 Global Control Register */
#define REG_IIR6_DMASTAT                     0x310BB004            /*  IIR6 DMA Status Register */
#define REG_IIR6_MACSTAT                     0x310BB008            /*  IIR6 MAC Status Register */
#define REG_IIR6_DBG_CTL                     0x310BB00C            /*  IIR6 IIR Debug Control Register */
#define REG_IIR6_DBG_ADDR                    0x310BB010            /*  IIR6 IIR Debug Address Register */
#define REG_IIR6_DBG_WRDAT_LO                0x310BB014            /*  IIR6 IIR Debug Write Data Low Register */
#define REG_IIR6_DBG_WRDAT_HI                0x310BB018            /*  IIR6 IIR Debug Write Data High Register */
#define REG_IIR6_DBG_RDDAT_LO                0x310BB01C            /*  IIR6 IIR Debug Read Data Low Register */
#define REG_IIR6_DBG_RDDAT_HI                0x310BB020            /*  IIR6 IIR Debug Read Data High Register */
#define REG_IIR6_CTL2                        0x310BB040            /*  IIR6 Channel Control Register */
#define REG_IIR6_INIDX                       0x310BB044            /*  IIR6 Input Data Index Register */
#define REG_IIR6_INMOD                       0x310BB048            /*  IIR6 Input Data Index Modifier Register */
#define REG_IIR6_INLEN                       0x310BB04C            /*  IIR6 Input Data Buffer Length Register */
#define REG_IIR6_INBASE                      0x310BB050            /*  IIR6 Input Buffer Base Register */
#define REG_IIR6_OUTIDX                      0x310BB054            /*  IIR6 Output Data Buffer Index Register */
#define REG_IIR6_OUTMOD                      0x310BB058            /*  IIR6 IIR Output Data Index Modifier Register */
#define REG_IIR6_OUTLEN                      0x310BB05C            /*  IIR6 IIR Output Data Buffer Length Register */
#define REG_IIR6_OUTBASE                     0x310BB060            /*  IIR6 Output Buffer Base Register */
#define REG_IIR6_COEFIDX                     0x310BB064            /*  IIR6 Coefficient Buffer Index Register */
#define REG_IIR6_COEFMOD                     0x310BB068            /*  IIR6 Coefficient Index Modifier Register */
#define REG_IIR6_COEFLEN                     0x310BB06C            /*  IIR6 Coefficient Buffer Length Register */
#define REG_IIR6_CHNPTR                      0x310BB070            /*  IIR6 Chain Pointer Register */
#define REG_IIR6_SCTL1                       0x310BB074            /*  IIR6 Software Control Register1 */
#define REG_IIR6_SCTL2                       0x310BB078            /*  IIR6 Software Control Register2 */
#define REG_IIR6_SGCTL                       0x310BB07C            /*  IIR6 Secondary Global Control Register */

/* ============================================================================================================================
        IIR7
   ============================================================================================================================ */
#define REG_IIR7_CTL1                        0x310BC000            /*  IIR7 Global Control Register */
#define REG_IIR7_DMASTAT                     0x310BC004            /*  IIR7 DMA Status Register */
#define REG_IIR7_MACSTAT                     0x310BC008            /*  IIR7 MAC Status Register */
#define REG_IIR7_DBG_CTL                     0x310BC00C            /*  IIR7 IIR Debug Control Register */
#define REG_IIR7_DBG_ADDR                    0x310BC010            /*  IIR7 IIR Debug Address Register */
#define REG_IIR7_DBG_WRDAT_LO                0x310BC014            /*  IIR7 IIR Debug Write Data Low Register */
#define REG_IIR7_DBG_WRDAT_HI                0x310BC018            /*  IIR7 IIR Debug Write Data High Register */
#define REG_IIR7_DBG_RDDAT_LO                0x310BC01C            /*  IIR7 IIR Debug Read Data Low Register */
#define REG_IIR7_DBG_RDDAT_HI                0x310BC020            /*  IIR7 IIR Debug Read Data High Register */
#define REG_IIR7_CTL2                        0x310BC040            /*  IIR7 Channel Control Register */
#define REG_IIR7_INIDX                       0x310BC044            /*  IIR7 Input Data Index Register */
#define REG_IIR7_INMOD                       0x310BC048            /*  IIR7 Input Data Index Modifier Register */
#define REG_IIR7_INLEN                       0x310BC04C            /*  IIR7 Input Data Buffer Length Register */
#define REG_IIR7_INBASE                      0x310BC050            /*  IIR7 Input Buffer Base Register */
#define REG_IIR7_OUTIDX                      0x310BC054            /*  IIR7 Output Data Buffer Index Register */
#define REG_IIR7_OUTMOD                      0x310BC058            /*  IIR7 IIR Output Data Index Modifier Register */
#define REG_IIR7_OUTLEN                      0x310BC05C            /*  IIR7 IIR Output Data Buffer Length Register */
#define REG_IIR7_OUTBASE                     0x310BC060            /*  IIR7 Output Buffer Base Register */
#define REG_IIR7_COEFIDX                     0x310BC064            /*  IIR7 Coefficient Buffer Index Register */
#define REG_IIR7_COEFMOD                     0x310BC068            /*  IIR7 Coefficient Index Modifier Register */
#define REG_IIR7_COEFLEN                     0x310BC06C            /*  IIR7 Coefficient Buffer Length Register */
#define REG_IIR7_CHNPTR                      0x310BC070            /*  IIR7 Chain Pointer Register */
#define REG_IIR7_SCTL1                       0x310BC074            /*  IIR7 Software Control Register1 */
#define REG_IIR7_SCTL2                       0x310BC078            /*  IIR7 Software Control Register2 */
#define REG_IIR7_SGCTL                       0x310BC07C            /*  IIR7 Secondary Global Control Register */

/* ============================================================================================================================
        IIR Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          IIR_CTL1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_CTL1_ACM                    31            /*  Auto Configuration Mode */
#define BITP_IIR_CTL1_HALT                   30            /*  Pause accelerator */
#define BITP_IIR_CTL1_SSESEL                 29            /*  Write Back Interrupt Select */
#define BITP_IIR_CTL1_L_TWAIT_EN             28            /*  Enable TWAIT Feature in Legacy Mode */
#define BITP_IIR_CTL1_L_TIMASK_EN            27            /*  Enable Trigger and Interrupt Masking in Legacy Mode */
#define BITP_IIR_CTL1_SMQ_LIUPS_EN           26            /*  Legacy I/P and O/P Index Update Scheme in SMART_Q Mode */
#define BITP_IIR_CTL1_BURSTEN                17            /*  Burst Mode Enable */
#define BITP_IIR_CTL1_RND                    14            /*  Rounding Mode */
#define BITP_IIR_CTL1_FORTYBIT               12            /*  40-Bit Floating-Point Boundary Select */
#define BITP_IIR_CTL1_CCINTR                 11            /*  Channel Complete Interrupt */
#define BITP_IIR_CTL1_SS                     10            /*  Save Biquad State */
#define BITP_IIR_CTL1_CAI                     9            /*  Channel Auto Iterate */
#define BITP_IIR_CTL1_DMAEN                   8            /*  DMA Enable */
#define BITP_IIR_CTL1_CH                      1            /*  Number of Channels */
#define BITP_IIR_CTL1_EN                      0            /*  IIR Enable */
#define BITM_IIR_CTL1_ACM                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Auto Configuration Mode */
#define BITM_IIR_CTL1_HALT                   (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Pause accelerator */
#define BITM_IIR_CTL1_SSESEL                 (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Write Back Interrupt Select */
#define BITM_IIR_CTL1_L_TWAIT_EN             (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Enable TWAIT Feature in Legacy Mode */
#define BITM_IIR_CTL1_L_TIMASK_EN            (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Enable Trigger and Interrupt Masking in Legacy Mode */
#define BITM_IIR_CTL1_SMQ_LIUPS_EN           (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Legacy I/P and O/P Index Update Scheme in SMART_Q Mode */
#define BITM_IIR_CTL1_BURSTEN                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Burst Mode Enable */
#define BITM_IIR_CTL1_RND                    (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Rounding Mode */
#define BITM_IIR_CTL1_FORTYBIT               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  40-Bit Floating-Point Boundary Select */
#define BITM_IIR_CTL1_CCINTR                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Channel Complete Interrupt */
#define BITM_IIR_CTL1_SS                     (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Save Biquad State */
#define BITM_IIR_CTL1_CAI                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Channel Auto Iterate */
#define BITM_IIR_CTL1_DMAEN                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  DMA Enable */
#define BITM_IIR_CTL1_CH                     (_ADI_MSK_3(0x0000003E,0x0000003EUL, uint32_t  ))    /*  Number of Channels */
#define BITM_IIR_CTL1_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  IIR Enable */
#define ENUM_IIR_CTL1_LEGACY                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ACM: Legacy Mode */
#define ENUM_IIR_CTL1_AUTOCONFIG             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ACM: Auto Configuration Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DMASTAT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DMASTAT_HALT_STAT           12            /*  Accelerator HALT status */
#define BITP_IIR_DMASTAT_CURCHNL              7            /*  Current Channel */
#define BITP_IIR_DMASTAT_ACDONE               6            /*  All Channels Done */
#define BITP_IIR_DMASTAT_WDONE                5            /*  Current Channel Done */
#define BITP_IIR_DMASTAT_SVDK                 4            /*  Save Updated Dk State */
#define BITP_IIR_DMASTAT_WRBK                 3            /*  Write Back */
#define BITP_IIR_DMASTAT_PPGS                 2            /*  MAC Processing in Progress */
#define BITP_IIR_DMASTAT_CDKLD                1            /*  Coefficient and Dk Loading */
#define BITP_IIR_DMASTAT_CPLD                 0            /*  Chain Pointer Loading Status */
#define BITM_IIR_DMASTAT_HALT_STAT           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Accelerator HALT status */
#define BITM_IIR_DMASTAT_CURCHNL             (_ADI_MSK_3(0x00000F80,0x00000F80UL, uint32_t  ))    /*  Current Channel */
#define BITM_IIR_DMASTAT_ACDONE              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  All Channels Done */
#define BITM_IIR_DMASTAT_WDONE               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Current Channel Done */
#define BITM_IIR_DMASTAT_SVDK                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Save Updated Dk State */
#define BITM_IIR_DMASTAT_WRBK                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Write Back */
#define BITM_IIR_DMASTAT_PPGS                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  MAC Processing in Progress */
#define BITM_IIR_DMASTAT_CDKLD               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Coefficient and Dk Loading */
#define BITM_IIR_DMASTAT_CPLD                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Chain Pointer Loading Status */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_MACSTAT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_MACSTAT_AINV                 5            /*  Addition Invalid */
#define BITP_IIR_MACSTAT_ARI                  4            /*  Adder Result Infinity */
#define BITP_IIR_MACSTAT_ARZ                  3            /*  Adder Result Zero */
#define BITP_IIR_MACSTAT_MINV                 2            /*  Multiply Invalid */
#define BITP_IIR_MACSTAT_MRI                  1            /*  Multiplier Result Infinity */
#define BITP_IIR_MACSTAT_MRZ                  0            /*  Multiplier Result Zero */
#define BITM_IIR_MACSTAT_AINV                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Addition Invalid */
#define BITM_IIR_MACSTAT_ARI                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Adder Result Infinity */
#define BITM_IIR_MACSTAT_ARZ                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Adder Result Zero */
#define BITM_IIR_MACSTAT_MINV                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Multiply Invalid */
#define BITM_IIR_MACSTAT_MRI                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Multiplier Result Infinity */
#define BITM_IIR_MACSTAT_MRZ                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Multiplier Result Zero */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DBG_CTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DBG_CTL_ADRINC               5            /*  Address Auto Increment */
#define BITP_IIR_DBG_CTL_MEM                  4            /*  Local Memory Access */
#define BITP_IIR_DBG_CTL_RUN                  2            /*  Release the MAC */
#define BITP_IIR_DBG_CTL_HLD                  1            /*  Hold or Single Step */
#define BITP_IIR_DBG_CTL_EN                   0            /*  Debug Mode Enable */
#define BITM_IIR_DBG_CTL_ADRINC              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Address Auto Increment */
#define BITM_IIR_DBG_CTL_MEM                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Local Memory Access */
#define BITM_IIR_DBG_CTL_RUN                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Release the MAC */
#define BITM_IIR_DBG_CTL_HLD                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Hold or Single Step */
#define BITM_IIR_DBG_CTL_EN                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Debug Mode Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DBG_ADDR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DBG_ADDR_VALUE               0            /*  Debug Address, Coefficient Memory Select */
#define BITM_IIR_DBG_ADDR_VALUE              (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Debug Address, Coefficient Memory Select */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DBG_WRDAT_LO                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DBG_WRDAT_LO_VALUE           0            /*  Debug Write Data Lower 32 Bits */
#define BITM_IIR_DBG_WRDAT_LO_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Debug Write Data Lower 32 Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DBG_WRDAT_HI                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DBG_WRDAT_HI_VALUE           0            /*  Debug Write Data Highest 8 Bits */
#define BITM_IIR_DBG_WRDAT_HI_VALUE          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Debug Write Data Highest 8 Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DBG_RDDAT_LO                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DBG_RDDAT_LO_VALUE           0            /*  Debug Read Data Lower 32 Bits */
#define BITM_IIR_DBG_RDDAT_LO_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Debug Read Data Lower 32 Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_DBG_RDDAT_HI                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_DBG_RDDAT_HI_VALUE           0            /*  Debug Read Data Highest 8 Bits */
#define BITM_IIR_DBG_RDDAT_HI_VALUE          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Debug Read Data Highest 8 Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_CTL2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_CTL2_TMASK                  31            /*  Trigger mask bit */
#define BITP_IIR_CTL2_TWAIT                  28            /*  Wait for trigger */
#define BITP_IIR_CTL2_IMASK                  24            /*  Interrupt Mask */
#define BITP_IIR_CTL2_WINDOW                 14            /*  Window Size Parameter */
#define BITP_IIR_CTL2_PRIO                   12            /*  Priority Level */
#define BITP_IIR_CTL2_BIQUADS                 0            /*  Number of Biquads */
#define BITM_IIR_CTL2_TMASK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Trigger mask bit */
#define BITM_IIR_CTL2_TWAIT                  (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Wait for trigger */
#define BITM_IIR_CTL2_IMASK                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Interrupt Mask */
#define BITM_IIR_CTL2_WINDOW                 (_ADI_MSK_3(0x00FFC000,0x00FFC000UL, uint32_t  ))    /*  Window Size Parameter */
#define BITM_IIR_CTL2_PRIO                   (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Priority Level */
#define BITM_IIR_CTL2_BIQUADS                (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Number of Biquads */
#define ENUM_IIR_CTL2_TMASK_ENA              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TMASK: Enable */
#define ENUM_IIR_CTL2_TMASK_DIS              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  TMASK: Mask */
#define ENUM_IIR_CTL2_TWAIT_DIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TWAIT: Disable wait for the trigger for the channel */
#define ENUM_IIR_CTL2_TWAIT_ENA              (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  TWAIT: Enable wait for external trigger input assertion for the channel */
#define ENUM_IIR_CTL2_IMASK_ENA              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IMASK: Enable */
#define ENUM_IIR_CTL2_IMASK_DIS              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  IMASK: Mask */
#define ENUM_IIR_CTL2_LEVEL0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PRIO: Level 0 (lowest) */
#define ENUM_IIR_CTL2_LEVEL1                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  PRIO: Level 1 */
#define ENUM_IIR_CTL2_LEVEL2                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  PRIO: Level 2 */
#define ENUM_IIR_CTL2_LEVEL3                 (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  PRIO: Level 3 (highest) */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_INIDX                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_INIDX_VALUE                  0            /*  Input Data Buffer Index */
#define BITM_IIR_INIDX_VALUE                 (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Input Data Buffer Index */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_INMOD                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_INMOD_VALUE                  0            /*  16-bit Input Data Buffer Index Modifier */
#define BITM_IIR_INMOD_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Input Data Buffer Index Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_INLEN                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_INLEN_VALUE                  0            /*  Input Data Buffer Length */
#define BITM_IIR_INLEN_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Input Data Buffer Length */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_INBASE                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_INBASE_VALUE                 0            /*  Input Data Buffer Base */
#define BITM_IIR_INBASE_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Input Data Buffer Base */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_OUTIDX                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_OUTIDX_VALUE                 0            /*  Output Data Buffer Index */
#define BITM_IIR_OUTIDX_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Output Data Buffer Index */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_OUTMOD                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_OUTMOD_VALUE                 0            /*  16-bit Input Data Buffer Index Modifier */
#define BITM_IIR_OUTMOD_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Input Data Buffer Index Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_OUTLEN                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_OUTLEN_VALUE                 0            /*  16-bit Output Data Buffer Length */
#define BITM_IIR_OUTLEN_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Output Data Buffer Length */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_OUTBASE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_OUTBASE_VALUE                0            /*  Output Buffer Base */
#define BITM_IIR_OUTBASE_VALUE               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Output Buffer Base */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_COEFIDX                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_COEFIDX_VALUE                0            /*  Coefficient Buffer Index */
#define BITM_IIR_COEFIDX_VALUE               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Coefficient Buffer Index */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_COEFMOD                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_COEFMOD_VALUE                0            /*  Coefficient Modifier */
#define BITM_IIR_COEFMOD_VALUE               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Coefficient Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_COEFLEN                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_COEFLEN_VALUE                0            /*  Coefficient Length */
#define BITM_IIR_COEFLEN_VALUE               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Coefficient Length */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_CHNPTR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_CHNPTR_VALUE                 0            /*  IIR Chain Pointer Address */
#define BITM_IIR_CHNPTR_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  IIR Chain Pointer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_SCTL1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_SCTL1_VALUE                  0            /*  Software Control Register 1 */
#define BITM_IIR_SCTL1_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Software Control Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_SCTL2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_SCTL2_VALUE                  0            /*  Software Control Register2 */
#define BITM_IIR_SCTL2_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Software Control Register2 */

/* -------------------------------------------------------------------------------------------------------------------------
          IIR_SGCTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_IIR_SGCTL_SSESEL                29            /*  Select Between Write Back or Save State Completion Interrupt */
#define BITP_IIR_SGCTL_RND                   14            /*  Rounding Mode Select */
#define BITP_IIR_SGCTL_FORTYBIT              12            /*  40-Bit Floating-Point Format Select */
#define BITP_IIR_SGCTL_SS                    10            /*  Save Biquad State */
#define BITM_IIR_SGCTL_SSESEL                (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Select Between Write Back or Save State Completion Interrupt */
#define BITM_IIR_SGCTL_RND                   (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Rounding Mode Select */
#define BITM_IIR_SGCTL_FORTYBIT              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  40-Bit Floating-Point Format Select */
#define BITM_IIR_SGCTL_SS                    (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Save Biquad State */


/* ============================================================================================================================
        The FIR accelerator
   ============================================================================================================================ */

/* ============================================================================================================================
        FIR1
   ============================================================================================================================ */
#define REG_FIR1_CTL1                        0x310BD000            /*  FIR1 FIR Global Control Register */
#define REG_FIR1_DMASTAT                     0x310BD004            /*  FIR1 FIR DMA Status Register */
#define REG_FIR1_MACSTAT                     0x310BD008            /*  FIR1 FIR MAC Status  Register */
#define REG_FIR1_DBG_CTL                     0x310BD010            /*  FIR1 FIR Debug Control Register */
#define REG_FIR1_DBG_ADDR                    0x310BD014            /*  FIR1 Debug Address Register */
#define REG_FIR1_DBG_WRDAT                   0x310BD018            /*  FIR1 FIR Debug Data Write Register */
#define REG_FIR1_DBG_RDDAT                   0x310BD01C            /*  FIR1 FIR Debug Data Read Register */
#define REG_FIR1_CTL2                        0x310BD040            /*  FIR1 FIR Channel Control Register */
#define REG_FIR1_INIDX                       0x310BD044            /*  FIR1 FIR Input Data Index Register */
#define REG_FIR1_INMOD                       0x310BD048            /*  FIR1 FIR Input Data Modifier Register */
#define REG_FIR1_INCNT                       0x310BD04C            /*  FIR1 FIR Input Data Count Register */
#define REG_FIR1_INBASE                      0x310BD050            /*  FIR1 FIR Input Data Base Register */
#define REG_FIR1_OUTIDX                      0x310BD054            /*  FIR1 FIR Output Data Index Register */
#define REG_FIR1_OUTMOD                      0x310BD058            /*  FIR1 FIR Output Data Modifier Register */
#define REG_FIR1_OUTCNT                      0x310BD05C            /*  FIR1 FIR Output Data Count Register */
#define REG_FIR1_OUTBASE                     0x310BD060            /*  FIR1 FIR Output Data Base Register */
#define REG_FIR1_COEFIDX                     0x310BD064            /*  FIR1 FIR Coefficient Index Register */
#define REG_FIR1_COEFMOD                     0x310BD068            /*  FIR1 FIR Coefficient Modifier Register */
#define REG_FIR1_COEFCNT                     0x310BD06C            /*  FIR1 FIR Coefficient Count Register */
#define REG_FIR1_CHNPTR                      0x310BD070            /*  FIR1 FIR Chain Pointer Register */
#define REG_FIR1_SCTL1                       0x310BD074            /*  FIR1 Software control register 1 */
#define REG_FIR1_SCTL2                       0x310BD078            /*  FIR1 Software control register 2 */
#define REG_FIR1_SGCTL                       0x310BD07C            /*  FIR1 Secondary global control register */

/* ============================================================================================================================
        FIR Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          FIR_CTL1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_CTL1_ACM                    31            /*  Auto Configuration Mode */
#define BITP_FIR_CTL1_HALT                   30            /*  HALT (pause accelerator) */
#define BITP_FIR_CTL1_BURST16_DIS            29            /*  Disable 16 Burst */
#define BITP_FIR_CTL1_DCP_DIS                28            /*  Disable Data Coefficient Load in Parallel */
#define BITP_FIR_CTL1_SMQ_LIUPS_EN           26            /*  Legacy I/P and O/P Index Update Scheme in SMART_Q Mode */
#define BITP_FIR_CTL1_RND                    14            /*  Rounding Mode */
#define BITP_FIR_CTL1_TC                     13            /*  Two's-Complement */
#define BITP_FIR_CTL1_FXD                    12            /*  Fixed-Point Accelerator Select */
#define BITP_FIR_CTL1_CCINTR                 11            /*  Channel Complete Interrupt */
#define BITP_FIR_CTL1_CAI                     9            /*  Channel Auto Iterate */
#define BITP_FIR_CTL1_DMAEN                   8            /*  DMA Enable */
#define BITP_FIR_CTL1_BURSTEN                 6            /*  Burst Mode Select */
#define BITP_FIR_CTL1_CH                      1            /*  Number of Channels */
#define BITP_FIR_CTL1_EN                      0            /*  FIR Enable */
#define BITM_FIR_CTL1_ACM                    (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Auto Configuration Mode */
#define BITM_FIR_CTL1_HALT                   (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  HALT (pause accelerator) */
#define BITM_FIR_CTL1_BURST16_DIS            (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Disable 16 Burst */
#define BITM_FIR_CTL1_DCP_DIS                (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Disable Data Coefficient Load in Parallel */
#define BITM_FIR_CTL1_SMQ_LIUPS_EN           (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Legacy I/P and O/P Index Update Scheme in SMART_Q Mode */
#define BITM_FIR_CTL1_RND                    (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Rounding Mode */
#define BITM_FIR_CTL1_TC                     (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Two's-Complement */
#define BITM_FIR_CTL1_FXD                    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Fixed-Point Accelerator Select */
#define BITM_FIR_CTL1_CCINTR                 (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Channel Complete Interrupt */
#define BITM_FIR_CTL1_CAI                    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Channel Auto Iterate */
#define BITM_FIR_CTL1_DMAEN                  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  DMA Enable */
#define BITM_FIR_CTL1_BURSTEN                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Burst Mode Select */
#define BITM_FIR_CTL1_CH                     (_ADI_MSK_3(0x0000003E,0x0000003EUL, uint32_t  ))    /*  Number of Channels */
#define BITM_FIR_CTL1_EN                     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  FIR Enable */
#define ENUM_FIR_CTL1_LEGACY                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  ACM: Legacy Mode. Load TCB without the FIR_CTL1 register. Core intervention may be required. */
#define ENUM_FIR_CTL1_AUTOCONFIG             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  ACM: Auto Configuration Mode. Load TCB with the FIR_CTL1 register. Core intervention is not required. */
#define ENUM_FIR_CTL1_RELEASE                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  HALT: Release. */
#define ENUM_FIR_CTL1_PAUSE                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  HALT: Pause. */
#define ENUM_FIR_CTL1_TONEAREST              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  RND: Round to Nearest */
#define ENUM_FIR_CTL1_TRUNCATE               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  RND: Truncate (round towards zero) */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_DMASTAT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_DMASTAT_HALT_STAT           14            /*  Accelerator HALT status. */
#define BITP_FIR_DMASTAT_CURITER             12            /*  Current MAC Iteration */
#define BITP_FIR_DMASTAT_CURCHNL              7            /*  Current Channel */
#define BITP_FIR_DMASTAT_ACDONE               6            /*  All Channels Done */
#define BITP_FIR_DMASTAT_WDONE                5            /*  Channel Done */
#define BITP_FIR_DMASTAT_WRBK                 4            /*  Writing Back */
#define BITP_FIR_DMASTAT_PPGS                 3            /*  MAC Processing in Progress */
#define BITP_FIR_DMASTAT_DLD                  2            /*  Data Preload */
#define BITP_FIR_DMASTAT_CLD                  1            /*  Coefficient Loading */
#define BITP_FIR_DMASTAT_CPLD                 0            /*  Chain Pointer Loading Status */
#define BITM_FIR_DMASTAT_HALT_STAT           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Accelerator HALT status. */
#define BITM_FIR_DMASTAT_CURITER             (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Current MAC Iteration */
#define BITM_FIR_DMASTAT_CURCHNL             (_ADI_MSK_3(0x00000F80,0x00000F80UL, uint32_t  ))    /*  Current Channel */
#define BITM_FIR_DMASTAT_ACDONE              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  All Channels Done */
#define BITM_FIR_DMASTAT_WDONE               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Channel Done */
#define BITM_FIR_DMASTAT_WRBK                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Writing Back */
#define BITM_FIR_DMASTAT_PPGS                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  MAC Processing in Progress */
#define BITM_FIR_DMASTAT_DLD                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Data Preload */
#define BITM_FIR_DMASTAT_CLD                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Coefficient Loading */
#define BITM_FIR_DMASTAT_CPLD                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Chain Pointer Loading Status */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_MACSTAT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_MACSTAT_AINV3               23            /*  Addition Invalid */
#define BITP_FIR_MACSTAT_ARI3                22            /*  Adder Result Overflow */
#define BITP_FIR_MACSTAT_ARZ3                21            /*  Adder Result Underflow */
#define BITP_FIR_MACSTAT_MINV3               20            /*  Multiply Invalid */
#define BITP_FIR_MACSTAT_MRI3                19            /*  Multiplier Result Overflow */
#define BITP_FIR_MACSTAT_MRZ3                18            /*  Multiplier Result Underflow */
#define BITP_FIR_MACSTAT_AINV2               17            /*  Addition Invalid */
#define BITP_FIR_MACSTAT_ARI2                16            /*  Adder Result Overflow */
#define BITP_FIR_MACSTAT_ARZ2                15            /*  Adder Result Underflow */
#define BITP_FIR_MACSTAT_MINV2               14            /*  Multiply Invalid */
#define BITP_FIR_MACSTAT_MRI2                13            /*  Multiplier Result Overflow */
#define BITP_FIR_MACSTAT_MRZ2                12            /*  Multiplier Result Underflow */
#define BITP_FIR_MACSTAT_AINV1               11            /*  Addition Invalid */
#define BITP_FIR_MACSTAT_ARI1                10            /*  Adder Result Overflow */
#define BITP_FIR_MACSTAT_ARZ1                 9            /*  Adder Result Underflow */
#define BITP_FIR_MACSTAT_MINV1                8            /*  Multiply Invalid */
#define BITP_FIR_MACSTAT_MRI1                 7            /*  Multiplier Result Overflow */
#define BITP_FIR_MACSTAT_MRZ1                 6            /*  Multiplier Result Underflow */
#define BITP_FIR_MACSTAT_AINV0                5            /*  Addition Invalid */
#define BITP_FIR_MACSTAT_ARI0                 4            /*  Adder Result Overflow */
#define BITP_FIR_MACSTAT_ARZ0                 3            /*  Adder Result Underflow */
#define BITP_FIR_MACSTAT_MINV0                2            /*  Multiply Invalid */
#define BITP_FIR_MACSTAT_MRI0                 1            /*  Multiplier Result Overflow */
#define BITP_FIR_MACSTAT_MRZ0                 0            /*  Multiplier Result Underflow */
#define BITM_FIR_MACSTAT_AINV3               (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Addition Invalid */
#define BITM_FIR_MACSTAT_ARI3                (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Adder Result Overflow */
#define BITM_FIR_MACSTAT_ARZ3                (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Adder Result Underflow */
#define BITM_FIR_MACSTAT_MINV3               (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Multiply Invalid */
#define BITM_FIR_MACSTAT_MRI3                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Multiplier Result Overflow */
#define BITM_FIR_MACSTAT_MRZ3                (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Multiplier Result Underflow */
#define BITM_FIR_MACSTAT_AINV2               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Addition Invalid */
#define BITM_FIR_MACSTAT_ARI2                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Adder Result Overflow */
#define BITM_FIR_MACSTAT_ARZ2                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Adder Result Underflow */
#define BITM_FIR_MACSTAT_MINV2               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Multiply Invalid */
#define BITM_FIR_MACSTAT_MRI2                (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Multiplier Result Overflow */
#define BITM_FIR_MACSTAT_MRZ2                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Multiplier Result Underflow */
#define BITM_FIR_MACSTAT_AINV1               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Addition Invalid */
#define BITM_FIR_MACSTAT_ARI1                (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Adder Result Overflow */
#define BITM_FIR_MACSTAT_ARZ1                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Adder Result Underflow */
#define BITM_FIR_MACSTAT_MINV1               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Multiply Invalid */
#define BITM_FIR_MACSTAT_MRI1                (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Multiplier Result Overflow */
#define BITM_FIR_MACSTAT_MRZ1                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Multiplier Result Underflow */
#define BITM_FIR_MACSTAT_AINV0               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Addition Invalid */
#define BITM_FIR_MACSTAT_ARI0                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Adder Result Overflow */
#define BITM_FIR_MACSTAT_ARZ0                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Adder Result Underflow */
#define BITM_FIR_MACSTAT_MINV0               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Multiply Invalid */
#define BITM_FIR_MACSTAT_MRI0                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Multiplier Result Overflow */
#define BITM_FIR_MACSTAT_MRZ0                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Multiplier Result Underflow */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_DBG_CTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_DBG_CTL_ADRINC               5            /*  Address Auto Increment */
#define BITP_FIR_DBG_CTL_MEM                  4            /*  Local Memory Access */
#define BITP_FIR_DBG_CTL_RUN                  2            /*  Release MAC */
#define BITP_FIR_DBG_CTL_HLD                  1            /*  Hold */
#define BITP_FIR_DBG_CTL_EN                   0            /*  Debug Mode Enable */
#define BITM_FIR_DBG_CTL_ADRINC              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Address Auto Increment */
#define BITM_FIR_DBG_CTL_MEM                 (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Local Memory Access */
#define BITM_FIR_DBG_CTL_RUN                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Release MAC */
#define BITM_FIR_DBG_CTL_HLD                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Hold */
#define BITM_FIR_DBG_CTL_EN                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Debug Mode Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_DBG_ADDR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_DBG_ADDR_VALUE               0            /*  Debug Address, Coefficient Memory Select */
#define BITM_FIR_DBG_ADDR_VALUE              (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Debug Address, Coefficient Memory Select */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_DBG_WRDAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_DBG_WRDAT_VALUE              0            /*  Debug Write Data */
#define BITM_FIR_DBG_WRDAT_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Debug Write Data */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_DBG_RDDAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_DBG_RDDAT_VALUE              0            /*  Debug Read Data */
#define BITM_FIR_DBG_RDDAT_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Debug Read Data */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_CTL2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_CTL2_TMASK                  31            /*  Trigger Mask */
#define BITP_FIR_CTL2_UPSAMP                 30            /*  Up Sampling Enable */
#define BITP_FIR_CTL2_SRCEN                  29            /*  Sample Rate Conversion Enable */
#define BITP_FIR_CTL2_TWAIT                  28            /*  Wait for Trigger */
#define BITP_FIR_CTL2_RATIO                  25            /*  Up/Down Sampling Ratio */
#define BITP_FIR_CTL2_IMASK                  24            /*  Interrupt Mask */
#define BITP_FIR_CTL2_WINDOW                 14            /*  Window Size */
#define BITP_FIR_CTL2_PRIO                   12            /*  Priority level */
#define BITP_FIR_CTL2_TAPLEN                  0            /*  Tap Length */
#define BITM_FIR_CTL2_TMASK                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Trigger Mask */
#define BITM_FIR_CTL2_UPSAMP                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Up Sampling Enable */
#define BITM_FIR_CTL2_SRCEN                  (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Sample Rate Conversion Enable */
#define BITM_FIR_CTL2_TWAIT                  (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Wait for Trigger */
#define BITM_FIR_CTL2_RATIO                  (_ADI_MSK_3(0x0E000000,0x0E000000UL, uint32_t  ))    /*  Up/Down Sampling Ratio */
#define BITM_FIR_CTL2_IMASK                  (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Interrupt Mask */
#define BITM_FIR_CTL2_WINDOW                 (_ADI_MSK_3(0x00FFC000,0x00FFC000UL, uint32_t  ))    /*  Window Size */
#define BITM_FIR_CTL2_PRIO                   (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Priority level */
#define BITM_FIR_CTL2_TAPLEN                 (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))    /*  Tap Length */
#define ENUM_FIR_CTL2_TMASK_EN               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TMASK: Enable */
#define ENUM_FIR_CTL2_TMASK_DIS              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  TMASK: Mask */
#define ENUM_FIR_CTL2_DIS                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TWAIT: Disable wait for trigger for the channel */
#define ENUM_FIR_CTL2_ENA                    (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  TWAIT: Enable wait for the external trigger assertion */
#define ENUM_FIR_CTL2_IMASK_ENA              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  IMASK: Enable */
#define ENUM_FIR_CTL2_IMASK_DIS              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  IMASK: Mask */
#define ENUM_FIR_CTL2_LEVEL0                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  PRIO: Level 0 (lowest) */
#define ENUM_FIR_CTL2_LEVEL1                 (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  PRIO: Level 1 */
#define ENUM_FIR_CTL2_LEVEL2                 (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  PRIO: Level 2 */
#define ENUM_FIR_CTL2_LEVEL3                 (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  PRIO: Level 3 (highest) */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_INIDX                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_INIDX_VALUE                  0            /*  Word Address with Lower 2 Bits Removed */
#define BITM_FIR_INIDX_VALUE                 (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Word Address with Lower 2 Bits Removed */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_INMOD                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_INMOD_VALUE                  0            /*  16-bit Input Data Buffer Modifier */
#define BITM_FIR_INMOD_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Input Data Buffer Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_INCNT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_INCNT_VALUE                  0            /*  16-bit Input Data Count */
#define BITM_FIR_INCNT_VALUE                 (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Input Data Count */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_INBASE                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_INBASE_VALUE                 0            /*  Word Address with Lower 2 Bits Removed */
#define BITM_FIR_INBASE_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Word Address with Lower 2 Bits Removed */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_OUTIDX                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_OUTIDX_VALUE                 0            /*  Word Address with Lower 2 Bits Removed */
#define BITM_FIR_OUTIDX_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Word Address with Lower 2 Bits Removed */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_OUTMOD                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_OUTMOD_VALUE                 0            /*  16-bit Output Data Modifier */
#define BITM_FIR_OUTMOD_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Output Data Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_OUTCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_OUTCNT_VALUE                 0            /*  16-bit Output Buffer Count */
#define BITM_FIR_OUTCNT_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Output Buffer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_OUTBASE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_OUTBASE_VALUE                0            /*  Word Address with Lower 2 Bits Removed */
#define BITM_FIR_OUTBASE_VALUE               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Word Address with Lower 2 Bits Removed */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_COEFIDX                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_COEFIDX_VALUE                0            /*  Word Addresses with Lower 2 Bits Removed */
#define BITM_FIR_COEFIDX_VALUE               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Word Addresses with Lower 2 Bits Removed */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_COEFMOD                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_COEFMOD_VALUE                0            /*  16-bit Coefficient Index Modifier */
#define BITM_FIR_COEFMOD_VALUE               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Coefficient Index Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_COEFCNT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_COEFCNT_CCNT                 0            /*  16-bit Coefficient Buffer Count */
#define BITM_FIR_COEFCNT_CCNT                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  16-bit Coefficient Buffer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_CHNPTR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_CHNPTR_VALUE                 0            /*  Chain Pointer Address */
#define BITM_FIR_CHNPTR_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Chain Pointer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_SCTL1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_SCTL1_VALUE                  0            /*  Software control register 1 */
#define BITM_FIR_SCTL1_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Software control register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_SCTL2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_SCTL2_VALUE                  0            /*  Software control register 2 */
#define BITM_FIR_SCTL2_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Software control register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          FIR_SGCTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_FIR_SGCTL_RND                   14            /*  Rounding Mode Select For Floating-Point Mode. */
#define BITP_FIR_SGCTL_TC                    13            /*  Two's-Complement Format Input Select For Fixed-Point Mode. */
#define BITP_FIR_SGCTL_FXD                   12            /*  Fixed-Point Accelerator Select. */
#define BITM_FIR_SGCTL_RND                   (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Rounding Mode Select For Floating-Point Mode. */
#define BITM_FIR_SGCTL_TC                    (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Two's-Complement Format Input Select For Fixed-Point Mode. */
#define BITM_FIR_SGCTL_FXD                   (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Fixed-Point Accelerator Select. */


/* ============================================================================================================================
        The IIR filter accelerator
   ============================================================================================================================ */

/* ============================================================================================================================
        IIR0
   ============================================================================================================================ */
#define REG_IIR0_CTL1                        0x310C4000            /*  IIR0 Global Control Register */
#define REG_IIR0_DMASTAT                     0x310C4004            /*  IIR0 DMA Status Register */
#define REG_IIR0_MACSTAT                     0x310C4008            /*  IIR0 MAC Status Register */
#define REG_IIR0_DBG_CTL                     0x310C400C            /*  IIR0 IIR Debug Control Register */
#define REG_IIR0_DBG_ADDR                    0x310C4010            /*  IIR0 IIR Debug Address Register */
#define REG_IIR0_DBG_WRDAT_LO                0x310C4014            /*  IIR0 IIR Debug Write Data Low Register */
#define REG_IIR0_DBG_WRDAT_HI                0x310C4018            /*  IIR0 IIR Debug Write Data High Register */
#define REG_IIR0_DBG_RDDAT_LO                0x310C401C            /*  IIR0 IIR Debug Read Data Low Register */
#define REG_IIR0_DBG_RDDAT_HI                0x310C4020            /*  IIR0 IIR Debug Read Data High Register */
#define REG_IIR0_CTL2                        0x310C4040            /*  IIR0 Channel Control Register */
#define REG_IIR0_INIDX                       0x310C4044            /*  IIR0 Input Data Index Register */
#define REG_IIR0_INMOD                       0x310C4048            /*  IIR0 Input Data Index Modifier Register */
#define REG_IIR0_INLEN                       0x310C404C            /*  IIR0 Input Data Buffer Length Register */
#define REG_IIR0_INBASE                      0x310C4050            /*  IIR0 Input Buffer Base Register */
#define REG_IIR0_OUTIDX                      0x310C4054            /*  IIR0 Output Data Buffer Index Register */
#define REG_IIR0_OUTMOD                      0x310C4058            /*  IIR0 IIR Output Data Index Modifier Register */
#define REG_IIR0_OUTLEN                      0x310C405C            /*  IIR0 IIR Output Data Buffer Length Register */
#define REG_IIR0_OUTBASE                     0x310C4060            /*  IIR0 Output Buffer Base Register */
#define REG_IIR0_COEFIDX                     0x310C4064            /*  IIR0 Coefficient Buffer Index Register */
#define REG_IIR0_COEFMOD                     0x310C4068            /*  IIR0 Coefficient Index Modifier Register */
#define REG_IIR0_COEFLEN                     0x310C406C            /*  IIR0 Coefficient Buffer Length Register */
#define REG_IIR0_CHNPTR                      0x310C4070            /*  IIR0 Chain Pointer Register */
#define REG_IIR0_SCTL1                       0x310C4074            /*  IIR0 Software Control Register1 */
#define REG_IIR0_SCTL2                       0x310C4078            /*  IIR0 Software Control Register2 */
#define REG_IIR0_SGCTL                       0x310C407C            /*  IIR0 Secondary Global Control Register */

/* ============================================================================================================================
        IIR1
   ============================================================================================================================ */
#define REG_IIR1_CTL1                        0x310C0000            /*  IIR1 Global Control Register */
#define REG_IIR1_DMASTAT                     0x310C0004            /*  IIR1 DMA Status Register */
#define REG_IIR1_MACSTAT                     0x310C0008            /*  IIR1 MAC Status Register */
#define REG_IIR1_DBG_CTL                     0x310C000C            /*  IIR1 IIR Debug Control Register */
#define REG_IIR1_DBG_ADDR                    0x310C0010            /*  IIR1 IIR Debug Address Register */
#define REG_IIR1_DBG_WRDAT_LO                0x310C0014            /*  IIR1 IIR Debug Write Data Low Register */
#define REG_IIR1_DBG_WRDAT_HI                0x310C0018            /*  IIR1 IIR Debug Write Data High Register */
#define REG_IIR1_DBG_RDDAT_LO                0x310C001C            /*  IIR1 IIR Debug Read Data Low Register */
#define REG_IIR1_DBG_RDDAT_HI                0x310C0020            /*  IIR1 IIR Debug Read Data High Register */
#define REG_IIR1_CTL2                        0x310C0040            /*  IIR1 Channel Control Register */
#define REG_IIR1_INIDX                       0x310C0044            /*  IIR1 Input Data Index Register */
#define REG_IIR1_INMOD                       0x310C0048            /*  IIR1 Input Data Index Modifier Register */
#define REG_IIR1_INLEN                       0x310C004C            /*  IIR1 Input Data Buffer Length Register */
#define REG_IIR1_INBASE                      0x310C0050            /*  IIR1 Input Buffer Base Register */
#define REG_IIR1_OUTIDX                      0x310C0054            /*  IIR1 Output Data Buffer Index Register */
#define REG_IIR1_OUTMOD                      0x310C0058            /*  IIR1 IIR Output Data Index Modifier Register */
#define REG_IIR1_OUTLEN                      0x310C005C            /*  IIR1 IIR Output Data Buffer Length Register */
#define REG_IIR1_OUTBASE                     0x310C0060            /*  IIR1 Output Buffer Base Register */
#define REG_IIR1_COEFIDX                     0x310C0064            /*  IIR1 Coefficient Buffer Index Register */
#define REG_IIR1_COEFMOD                     0x310C0068            /*  IIR1 Coefficient Index Modifier Register */
#define REG_IIR1_COEFLEN                     0x310C006C            /*  IIR1 Coefficient Buffer Length Register */
#define REG_IIR1_CHNPTR                      0x310C0070            /*  IIR1 Chain Pointer Register */
#define REG_IIR1_SCTL1                       0x310C0074            /*  IIR1 Software Control Register1 */
#define REG_IIR1_SCTL2                       0x310C0078            /*  IIR1 Software Control Register2 */
#define REG_IIR1_SGCTL                       0x310C007C            /*  IIR1 Secondary Global Control Register */

/* ============================================================================================================================
        IIR2
   ============================================================================================================================ */
#define REG_IIR2_CTL1                        0x310C1000            /*  IIR2 Global Control Register */
#define REG_IIR2_DMASTAT                     0x310C1004            /*  IIR2 DMA Status Register */
#define REG_IIR2_MACSTAT                     0x310C1008            /*  IIR2 MAC Status Register */
#define REG_IIR2_DBG_CTL                     0x310C100C            /*  IIR2 IIR Debug Control Register */
#define REG_IIR2_DBG_ADDR                    0x310C1010            /*  IIR2 IIR Debug Address Register */
#define REG_IIR2_DBG_WRDAT_LO                0x310C1014            /*  IIR2 IIR Debug Write Data Low Register */
#define REG_IIR2_DBG_WRDAT_HI                0x310C1018            /*  IIR2 IIR Debug Write Data High Register */
#define REG_IIR2_DBG_RDDAT_LO                0x310C101C            /*  IIR2 IIR Debug Read Data Low Register */
#define REG_IIR2_DBG_RDDAT_HI                0x310C1020            /*  IIR2 IIR Debug Read Data High Register */
#define REG_IIR2_CTL2                        0x310C1040            /*  IIR2 Channel Control Register */
#define REG_IIR2_INIDX                       0x310C1044            /*  IIR2 Input Data Index Register */
#define REG_IIR2_INMOD                       0x310C1048            /*  IIR2 Input Data Index Modifier Register */
#define REG_IIR2_INLEN                       0x310C104C            /*  IIR2 Input Data Buffer Length Register */
#define REG_IIR2_INBASE                      0x310C1050            /*  IIR2 Input Buffer Base Register */
#define REG_IIR2_OUTIDX                      0x310C1054            /*  IIR2 Output Data Buffer Index Register */
#define REG_IIR2_OUTMOD                      0x310C1058            /*  IIR2 IIR Output Data Index Modifier Register */
#define REG_IIR2_OUTLEN                      0x310C105C            /*  IIR2 IIR Output Data Buffer Length Register */
#define REG_IIR2_OUTBASE                     0x310C1060            /*  IIR2 Output Buffer Base Register */
#define REG_IIR2_COEFIDX                     0x310C1064            /*  IIR2 Coefficient Buffer Index Register */
#define REG_IIR2_COEFMOD                     0x310C1068            /*  IIR2 Coefficient Index Modifier Register */
#define REG_IIR2_COEFLEN                     0x310C106C            /*  IIR2 Coefficient Buffer Length Register */
#define REG_IIR2_CHNPTR                      0x310C1070            /*  IIR2 Chain Pointer Register */
#define REG_IIR2_SCTL1                       0x310C1074            /*  IIR2 Software Control Register1 */
#define REG_IIR2_SCTL2                       0x310C1078            /*  IIR2 Software Control Register2 */
#define REG_IIR2_SGCTL                       0x310C107C            /*  IIR2 Secondary Global Control Register */

/* ============================================================================================================================
        IIR3
   ============================================================================================================================ */
#define REG_IIR3_CTL1                        0x310C2000            /*  IIR3 Global Control Register */
#define REG_IIR3_DMASTAT                     0x310C2004            /*  IIR3 DMA Status Register */
#define REG_IIR3_MACSTAT                     0x310C2008            /*  IIR3 MAC Status Register */
#define REG_IIR3_DBG_CTL                     0x310C200C            /*  IIR3 IIR Debug Control Register */
#define REG_IIR3_DBG_ADDR                    0x310C2010            /*  IIR3 IIR Debug Address Register */
#define REG_IIR3_DBG_WRDAT_LO                0x310C2014            /*  IIR3 IIR Debug Write Data Low Register */
#define REG_IIR3_DBG_WRDAT_HI                0x310C2018            /*  IIR3 IIR Debug Write Data High Register */
#define REG_IIR3_DBG_RDDAT_LO                0x310C201C            /*  IIR3 IIR Debug Read Data Low Register */
#define REG_IIR3_DBG_RDDAT_HI                0x310C2020            /*  IIR3 IIR Debug Read Data High Register */
#define REG_IIR3_CTL2                        0x310C2040            /*  IIR3 Channel Control Register */
#define REG_IIR3_INIDX                       0x310C2044            /*  IIR3 Input Data Index Register */
#define REG_IIR3_INMOD                       0x310C2048            /*  IIR3 Input Data Index Modifier Register */
#define REG_IIR3_INLEN                       0x310C204C            /*  IIR3 Input Data Buffer Length Register */
#define REG_IIR3_INBASE                      0x310C2050            /*  IIR3 Input Buffer Base Register */
#define REG_IIR3_OUTIDX                      0x310C2054            /*  IIR3 Output Data Buffer Index Register */
#define REG_IIR3_OUTMOD                      0x310C2058            /*  IIR3 IIR Output Data Index Modifier Register */
#define REG_IIR3_OUTLEN                      0x310C205C            /*  IIR3 IIR Output Data Buffer Length Register */
#define REG_IIR3_OUTBASE                     0x310C2060            /*  IIR3 Output Buffer Base Register */
#define REG_IIR3_COEFIDX                     0x310C2064            /*  IIR3 Coefficient Buffer Index Register */
#define REG_IIR3_COEFMOD                     0x310C2068            /*  IIR3 Coefficient Index Modifier Register */
#define REG_IIR3_COEFLEN                     0x310C206C            /*  IIR3 Coefficient Buffer Length Register */
#define REG_IIR3_CHNPTR                      0x310C2070            /*  IIR3 Chain Pointer Register */
#define REG_IIR3_SCTL1                       0x310C2074            /*  IIR3 Software Control Register1 */
#define REG_IIR3_SCTL2                       0x310C2078            /*  IIR3 Software Control Register2 */
#define REG_IIR3_SGCTL                       0x310C207C            /*  IIR3 Secondary Global Control Register */

/* ============================================================================================================================
        IIR Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The FIR accelerator
   ============================================================================================================================ */

/* ============================================================================================================================
        FIR0
   ============================================================================================================================ */
#define REG_FIR0_CTL1                        0x310C3000            /*  FIR0 FIR Global Control Register */
#define REG_FIR0_DMASTAT                     0x310C3004            /*  FIR0 FIR DMA Status Register */
#define REG_FIR0_MACSTAT                     0x310C3008            /*  FIR0 FIR MAC Status  Register */
#define REG_FIR0_DBG_CTL                     0x310C3010            /*  FIR0 FIR Debug Control Register */
#define REG_FIR0_DBG_ADDR                    0x310C3014            /*  FIR0 Debug Address Register */
#define REG_FIR0_DBG_WRDAT                   0x310C3018            /*  FIR0 FIR Debug Data Write Register */
#define REG_FIR0_DBG_RDDAT                   0x310C301C            /*  FIR0 FIR Debug Data Read Register */
#define REG_FIR0_CTL2                        0x310C3040            /*  FIR0 FIR Channel Control Register */
#define REG_FIR0_INIDX                       0x310C3044            /*  FIR0 FIR Input Data Index Register */
#define REG_FIR0_INMOD                       0x310C3048            /*  FIR0 FIR Input Data Modifier Register */
#define REG_FIR0_INCNT                       0x310C304C            /*  FIR0 FIR Input Data Count Register */
#define REG_FIR0_INBASE                      0x310C3050            /*  FIR0 FIR Input Data Base Register */
#define REG_FIR0_OUTIDX                      0x310C3054            /*  FIR0 FIR Output Data Index Register */
#define REG_FIR0_OUTMOD                      0x310C3058            /*  FIR0 FIR Output Data Modifier Register */
#define REG_FIR0_OUTCNT                      0x310C305C            /*  FIR0 FIR Output Data Count Register */
#define REG_FIR0_OUTBASE                     0x310C3060            /*  FIR0 FIR Output Data Base Register */
#define REG_FIR0_COEFIDX                     0x310C3064            /*  FIR0 FIR Coefficient Index Register */
#define REG_FIR0_COEFMOD                     0x310C3068            /*  FIR0 FIR Coefficient Modifier Register */
#define REG_FIR0_COEFCNT                     0x310C306C            /*  FIR0 FIR Coefficient Count Register */
#define REG_FIR0_CHNPTR                      0x310C3070            /*  FIR0 FIR Chain Pointer Register */
#define REG_FIR0_SCTL1                       0x310C3074            /*  FIR0 Software control register 1 */
#define REG_FIR0_SCTL2                       0x310C3078            /*  FIR0 Software control register 2 */
#define REG_FIR0_SGCTL                       0x310C307C            /*  FIR0 Secondary global control register */

/* ============================================================================================================================
        FIR Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Your module description, here.
   ============================================================================================================================ */

/* ============================================================================================================================
        USBC0
   ============================================================================================================================ */
#define REG_USBC0_OTG_CTL                    0x310C5000            /*  USBC0 OTG Control ans Status Register */
#define REG_USBC0_OTG_IRQ                    0x310C5004            /*  USBC0 OTG Interrupt Register */
#define REG_USBC0_AHB_CFG                    0x310C5008            /*  USBC0 AHB Configuration Register */
#define REG_USBC0_CFG                        0x310C500C            /*  USBC0 USB Configuration Register */
#define REG_USBC0_RST_CTL                    0x310C5010            /*  USBC0 Reset Register */
#define REG_USBC0_ISTAT                      0x310C5014            /*  USBC0 Interrupt Status Register */
#define REG_USBC0_IMSK                       0x310C5018            /*  USBC0 Interrupt Mask Register */
#define REG_USBC0_RXDBG_STAT                 0x310C501C            /*  USBC0 Receive Status Debug Read Register */
#define REG_USBC0_RXDATA_STAT                0x310C5020            /*  USBC0 Receive Status Read/Pop Register */
#define REG_USBC0_RXFIFOSZ                   0x310C5024            /*  USBC0 Receive FIFO Size Register */
#define REG_USBC0_RXFIFOSZ_NP                0x310C5028            /*  USBC0 Non-periodic Transmit FIFO Size Register */
#define REG_USBC0_TXFIFO_STAT_NP             0x310C502C            /*  USBC0 Non-periodic Transmit FIFO/Queue Status Register */
#define REG_USBC0_PHYIF_CTL                  0x310C5034            /*  USBC0 PHY Interface Control Register */
#define REG_USBC0_MODID                      0x310C5040            /*  USBC0 Module ID Register */
#define REG_USBC0_HWCFG1                     0x310C5044            /*  USBC0 User Hardware Configuration 1 Register */
#define REG_USBC0_HWCFG2                     0x310C5048            /*  USBC0 User Hardware Configuration 2 Register */
#define REG_USBC0_HWCFG3                     0x310C504C            /*  USBC0 User Hardware Configuration 3 Register */
#define REG_USBC0_HWCFG4                     0x310C5050            /*  USBC0 User Hardware Configuration 4 Register */
#define REG_USBC0_DFIFO_CFG                  0x310C505C            /*  USBC0 DFIFO Configuration Register */
#define REG_USBC0_TXFIFOSZ_PER_H             0x310C5100            /*  USBC0 Host Periodic Transmit FIFO Size Register */
#define REG_USBC0_TXFIFOSZ1_IEP_H            0x310C5104            /*  USBC0 Device IN Endpoint 1 Transmit FIFO Size Register */
#define REG_USBC0_TXFIFOSZ2_IEP_H            0x310C5108            /*  USBC0 Device IN Endpoint 2 Transmit FIFO Size Register */
#define REG_USBC0_TXFIFOSZ3_IEP_H            0x310C510C            /*  USBC0 Device IN Endpoint 3 Transmit FIFO Size Register */
#define REG_USBC0_CFG_H                      0x310C5400            /*  USBC0 Host Configuration Register */
#define REG_USBC0_FIR_H                      0x310C5404            /*  USBC0 Host Frame Interval Register */
#define REG_USBC0_FNUM_H                     0x310C5408            /*  USBC0 Host Frame number/Frame time remaining  Register */
#define REG_USBC0_ISTAT_H                    0x310C5414            /*  USBC0 Host All Channels Interrupt Register */
#define REG_USBC0_IMSK_H                     0x310C5418            /*  USBC0 Host All Channels Interrupt Mask Register */
#define REG_USBC0_FL_BADDR_H                 0x310C541C            /*  USBC0 Host Frame List Base Address Register */
#define REG_USBC0_PORT_CTL_H                 0x310C5440            /*  USBC0 Host Port Control and Status Register */
#define REG_USBC0_CFG_D                      0x310C5800            /*  USBC0 Device Configuration Register */
#define REG_USBC0_CTL_D                      0x310C5804            /*  USBC0 Device Control Register */
#define REG_USBC0_STAT_D                     0x310C5808            /*  USBC0 Device Status Register */
#define REG_USBC0_IMASK_IEP_D                0x310C5810            /*  USBC0 Device IN Endpoint common Interrupt mask Register */
#define REG_USBC0_IMASK_OEP_D                0x310C5814            /*  USBC0 Device OUT Endpoint common Interrupt mask Register */
#define REG_USBC0_ISTAT_D                    0x310C5818            /*  USBC0 Device All Endpoint Interrupt Status Register */
#define REG_USBC0_IMSK_D                     0x310C581C            /*  USBC0 Device All Endpoint Interrupt Mask Register */
#define REG_USBC0_VBUSDIS_D                  0x310C5828            /*  USBC0 Device VBUS Discharge time Register */
#define REG_USBC0_VBUSPULSE_D                0x310C582C            /*  USBC0 Device VBUS pulsing time Register */
#define REG_USBC0_THR_CTL_D                  0x310C5830            /*  USBC0 Device Threshold Control Register */
#define REG_USBC0_IMSK_IEP_FEMPT_D           0x310C5834            /*  USBC0 Device IN Endpoint FIFO Empty Interrupt Mask Register */
#define REG_USBC0_PWR_CTL                    0x310C5E00            /*  USBC0 Power and clock gating control Register */
/* ============================================================================================================================
      HCHANNEL Register Definitions
   ============================================================================================================================ */
#define REG_USBC0_CHAR0_H                    0x310C5500            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR1_H                    0x310C5520            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR2_H                    0x310C5540            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR3_H                    0x310C5560            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR4_H                    0x310C5580            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR5_H                    0x310C55A0            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR6_H                    0x310C55C0            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR7_H                    0x310C55E0            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR8_H                    0x310C5600            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR9_H                    0x310C5620            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR10_H                   0x310C5640            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR11_H                   0x310C5660            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR12_H                   0x310C5680            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR13_H                   0x310C56A0            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR14_H                   0x310C56C0            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHAR15_H                   0x310C56E0            /*  USBC0 Host Channel n Characteristics Register */
#define REG_USBC0_CHARn_H(i)                 (REG_USBC0_CHAR0_H + ((i) * 32))
#define REG_USBC0_CHARn_H_COUNT              16
#define REG_USBC0_SPLT_CTL0_H                0x310C5504            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL1_H                0x310C5524            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL2_H                0x310C5544            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL3_H                0x310C5564            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL4_H                0x310C5584            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL5_H                0x310C55A4            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL6_H                0x310C55C4            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL7_H                0x310C55E4            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL8_H                0x310C5604            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL9_H                0x310C5624            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL10_H               0x310C5644            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL11_H               0x310C5664            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL12_H               0x310C5684            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL13_H               0x310C56A4            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL14_H               0x310C56C4            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTL15_H               0x310C56E4            /*  USBC0 Host Channel n split control Register */
#define REG_USBC0_SPLT_CTLn_H(i)             (REG_USBC0_SPLT_CTL0_H + ((i) * 32))
#define REG_USBC0_SPLT_CTLn_H_COUNT          16
#define REG_USBC0_ISTAT0_H                   0x310C5508            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT1_H                   0x310C5528            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT2_H                   0x310C5548            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT3_H                   0x310C5568            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT4_H                   0x310C5588            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT5_H                   0x310C55A8            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT6_H                   0x310C55C8            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT7_H                   0x310C55E8            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT8_H                   0x310C5608            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT9_H                   0x310C5628            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT10_H                  0x310C5648            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT11_H                  0x310C5668            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT12_H                  0x310C5688            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT13_H                  0x310C56A8            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT14_H                  0x310C56C8            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTAT15_H                  0x310C56E8            /*  USBC0 Host Channel n Interrupt Status Register */
#define REG_USBC0_ISTATn_H(i)                (REG_USBC0_ISTAT0_H + ((i) * 32))
#define REG_USBC0_ISTATn_H_COUNT             16
#define REG_USBC0_IMSK0_H                    0x310C550C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK1_H                    0x310C552C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK2_H                    0x310C554C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK3_H                    0x310C556C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK4_H                    0x310C558C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK5_H                    0x310C55AC            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK6_H                    0x310C55CC            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK7_H                    0x310C55EC            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK8_H                    0x310C560C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK9_H                    0x310C562C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK10_H                   0x310C564C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK11_H                   0x310C566C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK12_H                   0x310C568C            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK13_H                   0x310C56AC            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK14_H                   0x310C56CC            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSK15_H                   0x310C56EC            /*  USBC0 Host Channel n Interrupt Mask Register */
#define REG_USBC0_IMSKn_H(i)                 (REG_USBC0_IMSK0_H + ((i) * 32))
#define REG_USBC0_IMSKn_H_COUNT              16
#define REG_USBC0_TSIZ0_H                    0x310C5510            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ1_H                    0x310C5530            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ2_H                    0x310C5550            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ3_H                    0x310C5570            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ4_H                    0x310C5590            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ5_H                    0x310C55B0            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ6_H                    0x310C55D0            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ7_H                    0x310C55F0            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ8_H                    0x310C5610            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ9_H                    0x310C5630            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ10_H                   0x310C5650            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ11_H                   0x310C5670            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ12_H                   0x310C5690            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ13_H                   0x310C56B0            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ14_H                   0x310C56D0            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZ15_H                   0x310C56F0            /*  USBC0 Host Channel n Transfer Size Register */
#define REG_USBC0_TSIZn_H(i)                 (REG_USBC0_TSIZ0_H + ((i) * 32))
#define REG_USBC0_TSIZn_H_COUNT              16
#define REG_USBC0_DMA_ADDR0_H                0x310C5514            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR1_H                0x310C5534            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR2_H                0x310C5554            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR3_H                0x310C5574            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR4_H                0x310C5594            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR5_H                0x310C55B4            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR6_H                0x310C55D4            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR7_H                0x310C55F4            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR8_H                0x310C5614            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR9_H                0x310C5634            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR10_H               0x310C5654            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR11_H               0x310C5674            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR12_H               0x310C5694            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR13_H               0x310C56B4            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR14_H               0x310C56D4            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDR15_H               0x310C56F4            /*  USBC0 Host Channel n DMA Address Register */
#define REG_USBC0_DMA_ADDRn_H(i)             (REG_USBC0_DMA_ADDR0_H + ((i) * 32))
#define REG_USBC0_DMA_ADDRn_H_COUNT          16
#define REG_USBC0_DMA_BADDR0_H               0x310C551C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR1_H               0x310C553C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR2_H               0x310C555C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR3_H               0x310C557C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR4_H               0x310C559C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR5_H               0x310C55BC            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR6_H               0x310C55DC            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR7_H               0x310C55FC            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR8_H               0x310C561C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR9_H               0x310C563C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR10_H              0x310C565C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR11_H              0x310C567C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR12_H              0x310C569C            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR13_H              0x310C56BC            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR14_H              0x310C56DC            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR15_H              0x310C56FC            /*  USBC0 Host Channel n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDRn_H(i)            (REG_USBC0_DMA_BADDR0_H + ((i) * 32))
#define REG_USBC0_DMA_BADDRn_H_COUNT         16
/* ============================================================================================================================
      INENDPOINT Register Definitions
   ============================================================================================================================ */
#define REG_USBC0_CTL_IEP1_D                 0x310C5920            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP2_D                 0x310C5940            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP3_D                 0x310C5960            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP4_D                 0x310C5980            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP5_D                 0x310C59A0            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP6_D                 0x310C59C0            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP7_D                 0x310C59E0            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP8_D                 0x310C5A00            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP9_D                 0x310C5A20            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP10_D                0x310C5A40            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEP11_D                0x310C5A60            /*  USBC0 Device Control IN Endpoint n Control Register */
#define REG_USBC0_CTL_IEPn_D(i)              (REG_USBC0_CTL_IEP1_D + ((i) * 32))
#define REG_USBC0_CTL_IEPn_D_COUNT           11
#define REG_USBC0_ISTAT_IEP1_D               0x310C5928            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP2_D               0x310C5948            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP3_D               0x310C5968            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP4_D               0x310C5988            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP5_D               0x310C59A8            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP6_D               0x310C59C8            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP7_D               0x310C59E8            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP8_D               0x310C5A08            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP9_D               0x310C5A28            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP10_D              0x310C5A48            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEP11_D              0x310C5A68            /*  USBC0 Device Control IN Endpoint n Interrupt Control Register */
#define REG_USBC0_ISTAT_IEPn_D(i)            (REG_USBC0_ISTAT_IEP1_D + ((i) * 32))
#define REG_USBC0_ISTAT_IEPn_D_COUNT         11
#define REG_USBC0_TSIZ_IEP1_D                0x310C5930            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP2_D                0x310C5950            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP3_D                0x310C5970            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP4_D                0x310C5990            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP5_D                0x310C59B0            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP6_D                0x310C59D0            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP7_D                0x310C59F0            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP8_D                0x310C5A10            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP9_D                0x310C5A30            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP10_D               0x310C5A50            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEP11_D               0x310C5A70            /*  USBC0 Device Control IN Endpoint n Transfer size Register */
#define REG_USBC0_TSIZ_IEPn_D(i)             (REG_USBC0_TSIZ_IEP1_D + ((i) * 32))
#define REG_USBC0_TSIZ_IEPn_D_COUNT          11
#define REG_USBC0_DMA_ADDR_IEP1_D            0x310C5934            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP2_D            0x310C5954            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP3_D            0x310C5974            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP4_D            0x310C5994            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP5_D            0x310C59B4            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP6_D            0x310C59D4            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP7_D            0x310C59F4            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP8_D            0x310C5A14            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP9_D            0x310C5A34            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP10_D           0x310C5A54            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEP11_D           0x310C5A74            /*  USBC0 Device Control IN Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_IEPn_D(i)         (REG_USBC0_DMA_ADDR_IEP1_D + ((i) * 32))
#define REG_USBC0_DMA_ADDR_IEPn_D_COUNT      11
#define REG_USBC0_TXFSTAT_IEP1_D             0x310C5938            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP2_D             0x310C5958            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP3_D             0x310C5978            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP4_D             0x310C5998            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP5_D             0x310C59B8            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP6_D             0x310C59D8            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP7_D             0x310C59F8            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP8_D             0x310C5A18            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP9_D             0x310C5A38            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP10_D            0x310C5A58            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEP11_D            0x310C5A78            /*  USBC0 Device Control IN Endpoint Transmit FIFO Status Register */
#define REG_USBC0_TXFSTAT_IEPn_D(i)          (REG_USBC0_TXFSTAT_IEP1_D + ((i) * 32))
#define REG_USBC0_TXFSTAT_IEPn_D_COUNT       11
#define REG_USBC0_DMA_BADDR_IEP1_D           0x310C593C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP2_D           0x310C595C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP3_D           0x310C597C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP4_D           0x310C599C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP5_D           0x310C59BC            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP6_D           0x310C59DC            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP7_D           0x310C59FC            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP8_D           0x310C5A1C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP9_D           0x310C5A3C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP10_D          0x310C5A5C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEP11_D          0x310C5A7C            /*  USBC0 Device Control IN Endpoint n DMA Buffer Address Register */
#define REG_USBC0_DMA_BADDR_IEPn_D(i)        (REG_USBC0_DMA_BADDR_IEP1_D + ((i) * 32))
#define REG_USBC0_DMA_BADDR_IEPn_D_COUNT     11
/* ============================================================================================================================
      OUTENDPOINT Register Definitions
   ============================================================================================================================ */
#define REG_USBC0_CTL_OEP1_D                 0x310C5B20            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP2_D                 0x310C5B40            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP3_D                 0x310C5B60            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP4_D                 0x310C5B80            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP5_D                 0x310C5BA0            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP6_D                 0x310C5BC0            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP7_D                 0x310C5BE0            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP8_D                 0x310C5C00            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP9_D                 0x310C5C20            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP10_D                0x310C5C40            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEP11_D                0x310C5C60            /*  USBC0 Device OUT Endpoint n Control Register */
#define REG_USBC0_CTL_OEPn_D(i)              (REG_USBC0_CTL_OEP1_D + ((i) * 32))
#define REG_USBC0_CTL_OEPn_D_COUNT           11
#define REG_USBC0_ISTAT_OEP1_D               0x310C5B28            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP2_D               0x310C5B48            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP3_D               0x310C5B68            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP4_D               0x310C5B88            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP5_D               0x310C5BA8            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP6_D               0x310C5BC8            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP7_D               0x310C5BE8            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP8_D               0x310C5C08            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP9_D               0x310C5C28            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP10_D              0x310C5C48            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEP11_D              0x310C5C68            /*  USBC0 Device OUT Endpoint n Interrupt Register */
#define REG_USBC0_ISTAT_OEPn_D(i)            (REG_USBC0_ISTAT_OEP1_D + ((i) * 32))
#define REG_USBC0_ISTAT_OEPn_D_COUNT         11
#define REG_USBC0_TSIZ_OEP1_D                0x310C5B30            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP2_D                0x310C5B50            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP3_D                0x310C5B70            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP4_D                0x310C5B90            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP5_D                0x310C5BB0            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP6_D                0x310C5BD0            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP7_D                0x310C5BF0            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP8_D                0x310C5C10            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP9_D                0x310C5C30            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP10_D               0x310C5C50            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEP11_D               0x310C5C70            /*  USBC0 Device OUT Endpoint n Transfer Size Register */
#define REG_USBC0_TSIZ_OEPn_D(i)             (REG_USBC0_TSIZ_OEP1_D + ((i) * 32))
#define REG_USBC0_TSIZ_OEPn_D_COUNT          11
#define REG_USBC0_DMA_ADDR_OEP1_D            0x310C5B34            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP2_D            0x310C5B54            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP3_D            0x310C5B74            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP4_D            0x310C5B94            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP5_D            0x310C5BB4            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP6_D            0x310C5BD4            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP7_D            0x310C5BF4            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP8_D            0x310C5C14            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP9_D            0x310C5C34            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP10_D           0x310C5C54            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEP11_D           0x310C5C74            /*  USBC0 Device OUT Endpoint n DMA Address Register */
#define REG_USBC0_DMA_ADDR_OEPn_D(i)         (REG_USBC0_DMA_ADDR_OEP1_D + ((i) * 32))
#define REG_USBC0_DMA_ADDR_OEPn_D_COUNT      11
#define REG_USBC0_DMA_BADDR_OEP1_D           0x310C5B3C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP2_D           0x310C5B5C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP3_D           0x310C5B7C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP4_D           0x310C5B9C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP5_D           0x310C5BBC            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP6_D           0x310C5BDC            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP7_D           0x310C5BFC            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP8_D           0x310C5C1C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP9_D           0x310C5C3C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP10_D          0x310C5C5C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEP11_D          0x310C5C7C            /*  USBC0 Device OUT Endpoint n Buffer Address Register */
#define REG_USBC0_DMA_BADDR_OEPn_D(i)        (REG_USBC0_DMA_BADDR_OEP1_D + ((i) * 32))
#define REG_USBC0_DMA_BADDR_OEPn_D_COUNT     11

/* ============================================================================================================================
        USBC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          USBC_OTG_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_OTG_CTL_CURMOD             21
#define BITP_USBC_OTG_CTL_OTGVER             20
#define BITP_USBC_OTG_CTL_BSESVLD            19
#define BITP_USBC_OTG_CTL_ASESVLD            18
#define BITP_USBC_OTG_CTL_DBNCTIME           17
#define BITP_USBC_OTG_CTL_CONIDSTS           16
#define BITP_USBC_OTG_CTL_EHEN               12
#define BITP_USBC_OTG_CTL_DEVHNPEN           11
#define BITP_USBC_OTG_CTL_HSTSETHNPEN        10
#define BITP_USBC_OTG_CTL_HNPREQ              9
#define BITP_USBC_OTG_CTL_HSTNEGSCS           8
#define BITP_USBC_OTG_CTL_BVALIDOVVAL         7
#define BITP_USBC_OTG_CTL_BVALIDOVEN          6
#define BITP_USBC_OTG_CTL_AVALIDOVVAL         5
#define BITP_USBC_OTG_CTL_AVALIDOVEN          4
#define BITP_USBC_OTG_CTL_VBVALIDOVVAL        3
#define BITP_USBC_OTG_CTL_VBVALIDOVEN         2
#define BITP_USBC_OTG_CTL_SESREQ              1
#define BITP_USBC_OTG_CTL_SESREQSCS           0
#define BITM_USBC_OTG_CTL_CURMOD             (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_OTGVER             (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_BSESVLD            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_ASESVLD            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_DBNCTIME           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_CONIDSTS           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_EHEN               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_DEVHNPEN           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_HSTSETHNPEN        (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_HNPREQ             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_HSTNEGSCS          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_BVALIDOVVAL        (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_BVALIDOVEN         (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_AVALIDOVVAL        (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_AVALIDOVEN         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_VBVALIDOVVAL       (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_VBVALIDOVEN        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_SESREQ             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_OTG_CTL_SESREQSCS          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_OTG_IRQ                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_OTG_IRQ_DBNCEDONE          19
#define BITP_USBC_OTG_IRQ_ADEVTOUTCHG        18
#define BITP_USBC_OTG_IRQ_HSTNEGDET          17
#define BITP_USBC_OTG_IRQ_HSTNEGSUCSTSCHNG    9
#define BITP_USBC_OTG_IRQ_SESREQSUCSTSCHNG    8
#define BITP_USBC_OTG_IRQ_SESENDDET           2
#define BITM_USBC_OTG_IRQ_DBNCEDONE          (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_OTG_IRQ_ADEVTOUTCHG        (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_OTG_IRQ_HSTNEGDET          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_OTG_IRQ_HSTNEGSUCSTSCHNG   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_OTG_IRQ_SESREQSUCSTSCHNG   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_OTG_IRQ_SESENDDET          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_AHB_CFG                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_AHB_CFG_INVDESCENDIANESS   24
#define BITP_USBC_AHB_CFG_AHBSINGLE          23
#define BITP_USBC_AHB_CFG_NOTIALLDMAWRIT     22
#define BITP_USBC_AHB_CFG_REMMEMSUPP         21
#define BITP_USBC_AHB_CFG_NPTXFEMPLVL         7
#define BITP_USBC_AHB_CFG_DMAEN               5
#define BITP_USBC_AHB_CFG_HBSTLEN             1
#define BITP_USBC_AHB_CFG_GLBLINTRMSK         0
#define BITM_USBC_AHB_CFG_INVDESCENDIANESS   (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_AHB_CFG_AHBSINGLE          (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_AHB_CFG_NOTIALLDMAWRIT     (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_AHB_CFG_REMMEMSUPP         (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_AHB_CFG_NPTXFEMPLVL        (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_AHB_CFG_DMAEN              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_AHB_CFG_HBSTLEN            (_ADI_MSK_3(0x0000001E,0x0000001EUL, uint32_t  ))
#define BITM_USBC_AHB_CFG_GLBLINTRMSK        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CFG                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CFG_CORRUPTTXPKT           31
#define BITP_USBC_CFG_FORCEDEVMODE           30
#define BITP_USBC_CFG_FORCEHSTMODE           29
#define BITP_USBC_CFG_TXENDDELAY             28
#define BITP_USBC_CFG_IC_USBCAP              26
#define BITP_USBC_CFG_ULPI                   25
#define BITP_USBC_CFG_INDICATOR              24
#define BITP_USBC_CFG_COMPLEMENT             23
#define BITP_USBC_CFG_TERMSELDLPULSE         22
#define BITP_USBC_CFG_ULPIEXTVBUSINDICATOR   21
#define BITP_USBC_CFG_ULPIEXTVBUSDRV         20
#define BITP_USBC_CFG_ULPICLKSUSM            19
#define BITP_USBC_CFG_ULPIAUTORES            18
#define BITP_USBC_CFG_USBTRDTIM              10
#define BITP_USBC_CFG_HNPCAP                  9
#define BITP_USBC_CFG_SRPCAP                  8
#define BITP_USBC_CFG_DDRSEL                  7
#define BITP_USBC_CFG_PHYSEL                  6
#define BITP_USBC_CFG_FSINTF                  5
#define BITP_USBC_CFG_ULPI_UTMI_SEL           4
#define BITP_USBC_CFG_PHYIF                   3
#define BITP_USBC_CFG_TOUTCAL                 0
#define BITM_USBC_CFG_CORRUPTTXPKT           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_CFG_FORCEDEVMODE           (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_CFG_FORCEHSTMODE           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))
#define BITM_USBC_CFG_TXENDDELAY             (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))
#define BITM_USBC_CFG_IC_USBCAP              (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_CFG_ULPI                   (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_CFG_INDICATOR              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_CFG_COMPLEMENT             (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_CFG_TERMSELDLPULSE         (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_CFG_ULPIEXTVBUSINDICATOR   (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_CFG_ULPIEXTVBUSDRV         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_CFG_ULPICLKSUSM            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_CFG_ULPIAUTORES            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_CFG_USBTRDTIM              (_ADI_MSK_3(0x00003C00,0x00003C00UL, uint32_t  ))
#define BITM_USBC_CFG_HNPCAP                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_CFG_SRPCAP                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_CFG_DDRSEL                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_CFG_PHYSEL                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_CFG_FSINTF                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_CFG_ULPI_UTMI_SEL          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_CFG_PHYIF                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_CFG_TOUTCAL                (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_RST_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_RST_CTL_AHBIDLE            31
#define BITP_USBC_RST_CTL_DMAREQ             30
#define BITP_USBC_RST_CTL_TXFNUM              6
#define BITP_USBC_RST_CTL_TXFFLSH             5
#define BITP_USBC_RST_CTL_RXFFLSH             4
#define BITP_USBC_RST_CTL_FRMCNTRRST          2
#define BITP_USBC_RST_CTL_PIUFSSFTRST         1
#define BITP_USBC_RST_CTL_CSFTRST             0
#define BITM_USBC_RST_CTL_AHBIDLE            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_RST_CTL_DMAREQ             (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_RST_CTL_TXFNUM             (_ADI_MSK_3(0x000007C0,0x000007C0UL, uint32_t  ))
#define BITM_USBC_RST_CTL_TXFFLSH            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_RST_CTL_RXFFLSH            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_RST_CTL_FRMCNTRRST         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_RST_CTL_PIUFSSFTRST        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_RST_CTL_CSFTRST            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_ISTAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_ISTAT_WKUPINT              31
#define BITP_USBC_ISTAT_SESSREQINT           30
#define BITP_USBC_ISTAT_DISCONNINT           29
#define BITP_USBC_ISTAT_CONIDSTSCHNG         28
#define BITP_USBC_ISTAT_HCHINT               25
#define BITP_USBC_ISTAT_PRTINT               24
#define BITP_USBC_ISTAT_RESETDET             23
#define BITP_USBC_ISTAT_FETSUSP              22
#define BITP_USBC_ISTAT_INCOMPLP             21
#define BITP_USBC_ISTAT_INCOMPISOIN          20
#define BITP_USBC_ISTAT_OEPINT               19
#define BITP_USBC_ISTAT_IEPINT               18
#define BITP_USBC_ISTAT_EPMIS                17
#define BITP_USBC_ISTAT_EOPF                 15
#define BITP_USBC_ISTAT_ISOOUTDROP           14
#define BITP_USBC_ISTAT_ENUMDONE             13
#define BITP_USBC_ISTAT_USBRST               12
#define BITP_USBC_ISTAT_USBSUSP              11
#define BITP_USBC_ISTAT_ERLYSUSP             10
#define BITP_USBC_ISTAT_GOUTNAKEFF            7
#define BITP_USBC_ISTAT_GINNAKEFF             6
#define BITP_USBC_ISTAT_NPTXFEMP              5
#define BITP_USBC_ISTAT_RXFLVL                4
#define BITP_USBC_ISTAT_SOF                   3
#define BITP_USBC_ISTAT_OTGINT                2
#define BITP_USBC_ISTAT_MODEMIS               1
#define BITP_USBC_ISTAT_CURMOD                0
#define BITM_USBC_ISTAT_WKUPINT              (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_SESSREQINT           (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_DISCONNINT           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_CONIDSTSCHNG         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_HCHINT               (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_PRTINT               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_RESETDET             (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_ISTAT_FETSUSP              (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_ISTAT_INCOMPLP             (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_ISTAT_INCOMPISOIN          (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEPINT               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEPINT               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_ISTAT_EPMIS                (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_ISTAT_EOPF                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_ISTAT_ISOOUTDROP           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_ISTAT_ENUMDONE             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_ISTAT_USBRST               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_ISTAT_USBSUSP              (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_ISTAT_ERLYSUSP             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_ISTAT_GOUTNAKEFF           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_ISTAT_GINNAKEFF            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_ISTAT_NPTXFEMP             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_ISTAT_RXFLVL               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_ISTAT_SOF                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_ISTAT_OTGINT               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_ISTAT_MODEMIS              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_ISTAT_CURMOD               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMSK                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMSK_WKUPINTMSK            31
#define BITP_USBC_IMSK_SESSREQINTMSK         30
#define BITP_USBC_IMSK_DISCONNINTMSK         29
#define BITP_USBC_IMSK_CONIDSTSCHNGMSK       28
#define BITP_USBC_IMSK_HCHINTMSK             25
#define BITP_USBC_IMSK_PRTINTMSK             24
#define BITP_USBC_IMSK_RESETDETMSK           23
#define BITP_USBC_IMSK_FETSUSPMSK            22
#define BITP_USBC_IMSK_INCOMPLPMSK           21
#define BITP_USBC_IMSK_OEPINTMSK             19
#define BITP_USBC_IMSK_IEPINTMSK             18
#define BITP_USBC_IMSK_EPMISMSK              17
#define BITP_USBC_IMSK_EOPFMSK               15
#define BITP_USBC_IMSK_ISOOUTDROPMSK         14
#define BITP_USBC_IMSK_ENUMDONEMSK           13
#define BITP_USBC_IMSK_USBRSTMSK             12
#define BITP_USBC_IMSK_USBSUSPMSK            11
#define BITP_USBC_IMSK_ERLYSUSPMSK           10
#define BITP_USBC_IMSK_GOUTNAKEFFMSK          7
#define BITP_USBC_IMSK_GINNAKEFFMSK           6
#define BITP_USBC_IMSK_NPTXFEMPMSK            5
#define BITP_USBC_IMSK_RXFLVLMSK              4
#define BITP_USBC_IMSK_SOFMSK                 3
#define BITP_USBC_IMSK_OTGINTMSK              2
#define BITP_USBC_IMSK_MODEMISMSK             1
#define BITM_USBC_IMSK_WKUPINTMSK            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_IMSK_SESSREQINTMSK         (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_IMSK_DISCONNINTMSK         (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))
#define BITM_USBC_IMSK_CONIDSTSCHNGMSK       (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))
#define BITM_USBC_IMSK_HCHINTMSK             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_IMSK_PRTINTMSK             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_IMSK_RESETDETMSK           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_IMSK_FETSUSPMSK            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_IMSK_INCOMPLPMSK           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_IMSK_OEPINTMSK             (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_IMSK_IEPINTMSK             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_IMSK_EPMISMSK              (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_IMSK_EOPFMSK               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_IMSK_ISOOUTDROPMSK         (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_IMSK_ENUMDONEMSK           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_IMSK_USBRSTMSK             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_IMSK_USBSUSPMSK            (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_IMSK_ERLYSUSPMSK           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_IMSK_GOUTNAKEFFMSK         (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_IMSK_GINNAKEFFMSK          (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_IMSK_NPTXFEMPMSK           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_IMSK_RXFLVLMSK             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_IMSK_SOFMSK                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_IMSK_OTGINTMSK             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_IMSK_MODEMISMSK            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_RXDBG_STAT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_RXDBG_STAT_FN              21
#define BITP_USBC_RXDBG_STAT_PKTSTS          17
#define BITP_USBC_RXDBG_STAT_DPID            15
#define BITP_USBC_RXDBG_STAT_BCNT             4
#define BITP_USBC_RXDBG_STAT_CHNUM            0
#define BITM_USBC_RXDBG_STAT_FN              (_ADI_MSK_3(0x01E00000,0x01E00000UL, uint32_t  ))
#define BITM_USBC_RXDBG_STAT_PKTSTS          (_ADI_MSK_3(0x001E0000,0x001E0000UL, uint32_t  ))
#define BITM_USBC_RXDBG_STAT_DPID            (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))
#define BITM_USBC_RXDBG_STAT_BCNT            (_ADI_MSK_3(0x00007FF0,0x00007FF0UL, uint32_t  ))
#define BITM_USBC_RXDBG_STAT_CHNUM           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_RXDATA_STAT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_RXDATA_STAT_FN             21
#define BITP_USBC_RXDATA_STAT_PKTSTS         17
#define BITP_USBC_RXDATA_STAT_DPID           15
#define BITP_USBC_RXDATA_STAT_BCNT            4
#define BITP_USBC_RXDATA_STAT_CHNUM           0
#define BITM_USBC_RXDATA_STAT_FN             (_ADI_MSK_3(0x01E00000,0x01E00000UL, uint32_t  ))
#define BITM_USBC_RXDATA_STAT_PKTSTS         (_ADI_MSK_3(0x001E0000,0x001E0000UL, uint32_t  ))
#define BITM_USBC_RXDATA_STAT_DPID           (_ADI_MSK_3(0x00018000,0x00018000UL, uint32_t  ))
#define BITM_USBC_RXDATA_STAT_BCNT           (_ADI_MSK_3(0x00007FF0,0x00007FF0UL, uint32_t  ))
#define BITM_USBC_RXDATA_STAT_CHNUM          (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_RXFIFOSZ                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_RXFIFOSZ_RXFDEP             0
#define BITM_USBC_RXFIFOSZ_RXFDEP            (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_RXFIFOSZ_NP                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_RXFIFOSZ_NP_NPTXFDEP       16
#define BITP_USBC_RXFIFOSZ_NP_NPTXFSTADDR     0
#define BITM_USBC_RXFIFOSZ_NP_NPTXFDEP       (_ADI_MSK_3(0x0FFF0000,0x0FFF0000UL, uint32_t  ))
#define BITM_USBC_RXFIFOSZ_NP_NPTXFSTADDR    (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TXFIFO_STAT_NP                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TXFIFO_STAT_NP_NPTXQTOP    24
#define BITP_USBC_TXFIFO_STAT_NP_NPTXQSPCAVAIL 16
#define BITP_USBC_TXFIFO_STAT_NP_NPTXFSPCAVAIL  0
#define BITM_USBC_TXFIFO_STAT_NP_NPTXQTOP    (_ADI_MSK_3(0x7F000000,0x7F000000UL, uint32_t  ))
#define BITM_USBC_TXFIFO_STAT_NP_NPTXQSPCAVAIL (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))
#define BITM_USBC_TXFIFO_STAT_NP_NPTXFSPCAVAIL (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_PHYIF_CTL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_PHYIF_CTL_VSTSDONE         27
#define BITP_USBC_PHYIF_CTL_VSTSBSY          26
#define BITP_USBC_PHYIF_CTL_NEWREGREQ        25
#define BITP_USBC_PHYIF_CTL_REGWR            22
#define BITP_USBC_PHYIF_CTL_REGADDR          16
#define BITP_USBC_PHYIF_CTL_VCTRL             8
#define BITP_USBC_PHYIF_CTL_REGDATA           0
#define BITM_USBC_PHYIF_CTL_VSTSDONE         (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))
#define BITM_USBC_PHYIF_CTL_VSTSBSY          (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_PHYIF_CTL_NEWREGREQ        (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_PHYIF_CTL_REGWR            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_PHYIF_CTL_REGADDR          (_ADI_MSK_3(0x003F0000,0x003F0000UL, uint32_t  ))
#define BITM_USBC_PHYIF_CTL_VCTRL            (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))
#define BITM_USBC_PHYIF_CTL_REGDATA          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_MODID                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_MODID_SYNOPSYSID            0
#define BITM_USBC_MODID_SYNOPSYSID           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_HWCFG1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_HWCFG1_EPDIR                0
#define BITM_USBC_HWCFG1_EPDIR               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_HWCFG2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_HWCFG2_TKNQDEPTH           26
#define BITP_USBC_HWCFG2_PTXQDEPTH           24
#define BITP_USBC_HWCFG2_NPTXQDEPTH          22
#define BITP_USBC_HWCFG2_MULTIPROCINTRPT     20
#define BITP_USBC_HWCFG2_DYNFIFOSIZING       19
#define BITP_USBC_HWCFG2_PERIOSUPPORT        18
#define BITP_USBC_HWCFG2_NUMHSTCHNL          14
#define BITP_USBC_HWCFG2_NUMDEVEPS           10
#define BITP_USBC_HWCFG2_FSPHYTYPE            8
#define BITP_USBC_HWCFG2_HSPHYTYPE            6
#define BITP_USBC_HWCFG2_SINGPNT              5
#define BITP_USBC_HWCFG2_OTGARCH              3
#define BITP_USBC_HWCFG2_OTGMODE              0
#define BITM_USBC_HWCFG2_TKNQDEPTH           (_ADI_MSK_3(0x7C000000,0x7C000000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_PTXQDEPTH           (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_NPTXQDEPTH          (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_MULTIPROCINTRPT     (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_DYNFIFOSIZING       (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_PERIOSUPPORT        (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_NUMHSTCHNL          (_ADI_MSK_3(0x0003C000,0x0003C000UL, uint32_t  ))
#define BITM_USBC_HWCFG2_NUMDEVEPS           (_ADI_MSK_3(0x00003C00,0x00003C00UL, uint32_t  ))
#define BITM_USBC_HWCFG2_FSPHYTYPE           (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))
#define BITM_USBC_HWCFG2_HSPHYTYPE           (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))
#define BITM_USBC_HWCFG2_SINGPNT             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_HWCFG2_OTGARCH             (_ADI_MSK_3(0x00000018,0x00000018UL, uint32_t  ))
#define BITM_USBC_HWCFG2_OTGMODE             (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_HWCFG3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_HWCFG3_DFIFODEPTH          16
#define BITP_USBC_HWCFG3_LPMMODE             15
#define BITP_USBC_HWCFG3_BCSUPPORT           14
#define BITP_USBC_HWCFG3_HSICMODE            13
#define BITP_USBC_HWCFG3_ADPSUPPORT          12
#define BITP_USBC_HWCFG3_RSTTYPE             11
#define BITP_USBC_HWCFG3_OPTFEATURE          10
#define BITP_USBC_HWCFG3_VNDCTLSUPT           9
#define BITP_USBC_HWCFG3_I2CINTSEL            8
#define BITP_USBC_HWCFG3_OTGEN                7
#define BITP_USBC_HWCFG3_PKTSIZEWIDTH         4
#define BITP_USBC_HWCFG3_XFERSIZEWIDTH        0
#define BITM_USBC_HWCFG3_DFIFODEPTH          (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))
#define BITM_USBC_HWCFG3_LPMMODE             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_HWCFG3_BCSUPPORT           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_HWCFG3_HSICMODE            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_HWCFG3_ADPSUPPORT          (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_HWCFG3_RSTTYPE             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_HWCFG3_OPTFEATURE          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_HWCFG3_VNDCTLSUPT          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_HWCFG3_I2CINTSEL           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_HWCFG3_OTGEN               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_HWCFG3_PKTSIZEWIDTH        (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))
#define BITM_USBC_HWCFG3_XFERSIZEWIDTH       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_HWCFG4                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_HWCFG4_DESCDMA             31
#define BITP_USBC_HWCFG4_DESCDMAENABLED      30
#define BITP_USBC_HWCFG4_INEPS               26
#define BITP_USBC_HWCFG4_DEDFIFOMODE         25
#define BITP_USBC_HWCFG4_SESSENDFLTR         24
#define BITP_USBC_HWCFG4_BVALIDFLTR          23
#define BITP_USBC_HWCFG4_AVALIDFLTR          22
#define BITP_USBC_HWCFG4_VBUSVALIDFLTR       21
#define BITP_USBC_HWCFG4_IDDGFLTR            20
#define BITP_USBC_HWCFG4_NUMCTLEPS           16
#define BITP_USBC_HWCFG4_PHYDATAWIDTH        14
#define BITP_USBC_HWCFG4_ENHANCEDLPMSUPT     13
#define BITP_USBC_HWCFG4_ACGSUPT             12
#define BITP_USBC_HWCFG4_EXTENDEDHIBERNATION  7
#define BITP_USBC_HWCFG4_HIBERNATION          6
#define BITP_USBC_HWCFG4_AHBFREQ              5
#define BITP_USBC_HWCFG4_PARTIALPWRDN         4
#define BITP_USBC_HWCFG4_NUMDEVPERIOEPS       0
#define BITM_USBC_HWCFG4_DESCDMA             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_DESCDMAENABLED      (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_INEPS               (_ADI_MSK_3(0x3C000000,0x3C000000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_DEDFIFOMODE         (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_SESSENDFLTR         (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_BVALIDFLTR          (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_AVALIDFLTR          (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_VBUSVALIDFLTR       (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_IDDGFLTR            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_NUMCTLEPS           (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_PHYDATAWIDTH        (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_ENHANCEDLPMSUPT     (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_ACGSUPT             (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_HWCFG4_EXTENDEDHIBERNATION (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_HWCFG4_HIBERNATION         (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_HWCFG4_AHBFREQ             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_HWCFG4_PARTIALPWRDN        (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_HWCFG4_NUMDEVPERIOEPS      (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DFIFO_CFG                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DFIFO_CFG_EPINFOBASEADDR   16
#define BITP_USBC_DFIFO_CFG_GDFIFOCFG         0
#define BITM_USBC_DFIFO_CFG_EPINFOBASEADDR   (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))
#define BITM_USBC_DFIFO_CFG_GDFIFOCFG        (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TXFIFOSZ_PER_H                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TXFIFOSZ_PER_H_PTXFSIZE    16
#define BITP_USBC_TXFIFOSZ_PER_H_PTXFSTADDR   0
#define BITM_USBC_TXFIFOSZ_PER_H_PTXFSIZE    (_ADI_MSK_3(0x07FF0000,0x07FF0000UL, uint32_t  ))
#define BITM_USBC_TXFIFOSZ_PER_H_PTXFSTADDR  (_ADI_MSK_3(0x00001FFF,0x00001FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TXFIFOSZ1_IEP_H                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TXFIFOSZ1_IEP_H_INEPNTXFDEP 16
#define BITP_USBC_TXFIFOSZ1_IEP_H_INEPNTXFSTADDR  0
#define BITM_USBC_TXFIFOSZ1_IEP_H_INEPNTXFDEP (_ADI_MSK_3(0x01FF0000,0x01FF0000UL, uint32_t  ))
#define BITM_USBC_TXFIFOSZ1_IEP_H_INEPNTXFSTADDR (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TXFIFOSZ2_IEP_H                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TXFIFOSZ2_IEP_H_INEPNTXFDEP 16
#define BITP_USBC_TXFIFOSZ2_IEP_H_INEPNTXFSTADDR  0
#define BITM_USBC_TXFIFOSZ2_IEP_H_INEPNTXFDEP (_ADI_MSK_3(0x01FF0000,0x01FF0000UL, uint32_t  ))
#define BITM_USBC_TXFIFOSZ2_IEP_H_INEPNTXFSTADDR (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TXFIFOSZ3_IEP_H                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TXFIFOSZ3_IEP_H_INEPNTXFDEP 16
#define BITP_USBC_TXFIFOSZ3_IEP_H_INEPNTXFSTADDR  0
#define BITM_USBC_TXFIFOSZ3_IEP_H_INEPNTXFDEP (_ADI_MSK_3(0x01FF0000,0x01FF0000UL, uint32_t  ))
#define BITM_USBC_TXFIFOSZ3_IEP_H_INEPNTXFSTADDR (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CFG_H                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CFG_H_MODECHTIMEN          31
#define BITP_USBC_CFG_H_PERSCHEDENA          26
#define BITP_USBC_CFG_H_FRLISTEN             24
#define BITP_USBC_CFG_H_DESCDMA              23
#define BITP_USBC_CFG_H_DIS_TX_IPGAP_DLY_CHECK 16
#define BITP_USBC_CFG_H_RESVALID              8
#define BITP_USBC_CFG_H_ENA32KHZS             7
#define BITP_USBC_CFG_H_FSLSSUPP              2
#define BITP_USBC_CFG_H_FSLSPCLKSEL           0
#define BITM_USBC_CFG_H_MODECHTIMEN          (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_CFG_H_PERSCHEDENA          (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_CFG_H_FRLISTEN             (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))
#define BITM_USBC_CFG_H_DESCDMA              (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_CFG_H_DIS_TX_IPGAP_DLY_CHECK (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_CFG_H_RESVALID             (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))
#define BITM_USBC_CFG_H_ENA32KHZS            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_CFG_H_FSLSSUPP             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_CFG_H_FSLSPCLKSEL          (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_FIR_H                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_FIR_H_HFIRRLDCTRL          16
#define BITP_USBC_FIR_H_FRINT                 0
#define BITM_USBC_FIR_H_HFIRRLDCTRL          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_FIR_H_FRINT                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_FNUM_H                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_FNUM_H_FRREM               16
#define BITP_USBC_FNUM_H_FRNUM                0
#define BITM_USBC_FNUM_H_FRREM               (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))
#define BITM_USBC_FNUM_H_FRNUM               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_ISTAT_H                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_ISTAT_H_HAINT               0
#define BITM_USBC_ISTAT_H_HAINT              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMSK_H                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMSK_H_HAINTMSK             0
#define BITM_USBC_IMSK_H_HAINTMSK            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_FL_BADDR_H                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_FL_BADDR_H_HFLBADDR         0
#define BITM_USBC_FL_BADDR_H_HFLBADDR        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_PORT_CTL_H                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_PORT_CTL_H_PRTSPD          17
#define BITP_USBC_PORT_CTL_H_PRTTSTCTL       13
#define BITP_USBC_PORT_CTL_H_PRTPWR          12
#define BITP_USBC_PORT_CTL_H_PRTLNSTS        10
#define BITP_USBC_PORT_CTL_H_PRTRST           8
#define BITP_USBC_PORT_CTL_H_PRTSUSP          7
#define BITP_USBC_PORT_CTL_H_PRTRES           6
#define BITP_USBC_PORT_CTL_H_PRTOVRCURRCHNG   5
#define BITP_USBC_PORT_CTL_H_PRTOVRCURRACT    4
#define BITP_USBC_PORT_CTL_H_PRTENCHNG        3
#define BITP_USBC_PORT_CTL_H_PRTENA           2
#define BITP_USBC_PORT_CTL_H_PRTCONNDET       1
#define BITP_USBC_PORT_CTL_H_PRTCONNSTS       0
#define BITM_USBC_PORT_CTL_H_PRTSPD          (_ADI_MSK_3(0x00060000,0x00060000UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTTSTCTL       (_ADI_MSK_3(0x0001E000,0x0001E000UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTPWR          (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTLNSTS        (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTRST          (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTSUSP         (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTRES          (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTOVRCURRCHNG  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTOVRCURRACT   (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTENCHNG       (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTENA          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTCONNDET      (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_PORT_CTL_H_PRTCONNSTS      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CFG_D                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CFG_D_RESVALID             26
#define BITP_USBC_CFG_D_PERSCHINTVL          24
#define BITP_USBC_CFG_D_DESCDMA              23
#define BITP_USBC_CFG_D_ERRATICINTMSK        15
#define BITP_USBC_CFG_D_XCVRDLY              14
#define BITP_USBC_CFG_D_ENDEVOUTNAK          13
#define BITP_USBC_CFG_D_PERFRINT             11
#define BITP_USBC_CFG_D_DEVADDR               4
#define BITP_USBC_CFG_D_ENA32KHZSUSP          3
#define BITP_USBC_CFG_D_NZSTSOUTHSHK          2
#define BITP_USBC_CFG_D_DEVSPD                0
#define BITM_USBC_CFG_D_RESVALID             (_ADI_MSK_3(0xFC000000,0xFC000000UL, uint32_t  ))
#define BITM_USBC_CFG_D_PERSCHINTVL          (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))
#define BITM_USBC_CFG_D_DESCDMA              (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_CFG_D_ERRATICINTMSK        (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_CFG_D_XCVRDLY              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_CFG_D_ENDEVOUTNAK          (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_CFG_D_PERFRINT             (_ADI_MSK_3(0x00001800,0x00001800UL, uint32_t  ))
#define BITM_USBC_CFG_D_DEVADDR              (_ADI_MSK_3(0x000007F0,0x000007F0UL, uint32_t  ))
#define BITM_USBC_CFG_D_ENA32KHZSUSP         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_CFG_D_NZSTSOUTHSHK         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_CFG_D_DEVSPD               (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CTL_D                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CTL_D_ENCONTONBNA          17
#define BITP_USBC_CTL_D_NAKONBBLE            16
#define BITP_USBC_CTL_D_IGNRFRMNUM           15
#define BITP_USBC_CTL_D_GMC                  13
#define BITP_USBC_CTL_D_PWRONPRGDONE         11
#define BITP_USBC_CTL_D_CGOUTNAK             10
#define BITP_USBC_CTL_D_SGOUTNAK              9
#define BITP_USBC_CTL_D_CGNPINNAK             8
#define BITP_USBC_CTL_D_SGNPINNAK             7
#define BITP_USBC_CTL_D_TSTCTL                4
#define BITP_USBC_CTL_D_GOUTNAKSTS            3
#define BITP_USBC_CTL_D_GNPINNAKSTS           2
#define BITP_USBC_CTL_D_SFTDISCON             1
#define BITP_USBC_CTL_D_RMTWKUPSIG            0
#define BITM_USBC_CTL_D_ENCONTONBNA          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_CTL_D_NAKONBBLE            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_CTL_D_IGNRFRMNUM           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_CTL_D_GMC                  (_ADI_MSK_3(0x00006000,0x00006000UL, uint32_t  ))
#define BITM_USBC_CTL_D_PWRONPRGDONE         (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_CTL_D_CGOUTNAK             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_CTL_D_SGOUTNAK             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_CTL_D_CGNPINNAK            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_CTL_D_SGNPINNAK            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_CTL_D_TSTCTL               (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))
#define BITM_USBC_CTL_D_GOUTNAKSTS           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_CTL_D_GNPINNAKSTS          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_CTL_D_SFTDISCON            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_CTL_D_RMTWKUPSIG           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_STAT_D                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_STAT_D_DEVLNSTS            22
#define BITP_USBC_STAT_D_SOFFN                8
#define BITP_USBC_STAT_D_ERRTICERR            3
#define BITP_USBC_STAT_D_ENUMSPD              1
#define BITP_USBC_STAT_D_SUSPSTS              0
#define BITM_USBC_STAT_D_DEVLNSTS            (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))
#define BITM_USBC_STAT_D_SOFFN               (_ADI_MSK_3(0x003FFF00,0x003FFF00UL, uint32_t  ))
#define BITM_USBC_STAT_D_ERRTICERR           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_STAT_D_ENUMSPD             (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))
#define BITM_USBC_STAT_D_SUSPSTS             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMASK_IEP_D                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMASK_IEP_D_NAKMSK         13
#define BITP_USBC_IMASK_IEP_D_BNAININTRMSK    9
#define BITP_USBC_IMASK_IEP_D_TXFIFOUNDRNMSK  8
#define BITP_USBC_IMASK_IEP_D_INEPNAKEFFMSK   6
#define BITP_USBC_IMASK_IEP_D_INTKNEPMISMSK   5
#define BITP_USBC_IMASK_IEP_D_INTKNTXFEMPMSK  4
#define BITP_USBC_IMASK_IEP_D_TIMEOUTMSK      3
#define BITP_USBC_IMASK_IEP_D_AHBERRMSK       2
#define BITP_USBC_IMASK_IEP_D_EPDISBLDMSK     1
#define BITP_USBC_IMASK_IEP_D_XFERCOMPLMSK    0
#define BITM_USBC_IMASK_IEP_D_NAKMSK         (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_BNAININTRMSK   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_TXFIFOUNDRNMSK (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_INEPNAKEFFMSK  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_INTKNEPMISMSK  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_INTKNTXFEMPMSK (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_TIMEOUTMSK     (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_AHBERRMSK      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_EPDISBLDMSK    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_IMASK_IEP_D_XFERCOMPLMSK   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMASK_OEP_D                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMASK_OEP_D_NYETMSK        14
#define BITP_USBC_IMASK_OEP_D_NAKMSK         13
#define BITP_USBC_IMASK_OEP_D_BBLEERRMSK     12
#define BITP_USBC_IMASK_OEP_D_BNAOUTINTRMSK   9
#define BITP_USBC_IMASK_OEP_D_OUTPKTERRMSK    8
#define BITP_USBC_IMASK_OEP_D_BACK2BACKSETUP  6
#define BITP_USBC_IMASK_OEP_D_STSPHSERCVDMSK  5
#define BITP_USBC_IMASK_OEP_D_OUTTKNEPDISMSK  4
#define BITP_USBC_IMASK_OEP_D_SETUPMSK        3
#define BITP_USBC_IMASK_OEP_D_AHBERRMSK       2
#define BITP_USBC_IMASK_OEP_D_EPDISBLDMSK     1
#define BITP_USBC_IMASK_OEP_D_XFERCOMPLMSK    0
#define BITM_USBC_IMASK_OEP_D_NYETMSK        (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_NAKMSK         (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_BBLEERRMSK     (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_BNAOUTINTRMSK  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_OUTPKTERRMSK   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_BACK2BACKSETUP (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_STSPHSERCVDMSK (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_OUTTKNEPDISMSK (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_SETUPMSK       (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_AHBERRMSK      (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_EPDISBLDMSK    (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_IMASK_OEP_D_XFERCOMPLMSK   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_ISTAT_D                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_ISTAT_D_OUTEPINT11         27
#define BITP_USBC_ISTAT_D_OUTEPINT10         26
#define BITP_USBC_ISTAT_D_OUTEPINT9          25
#define BITP_USBC_ISTAT_D_OUTEPINT8          24
#define BITP_USBC_ISTAT_D_OUTEPINT7          23
#define BITP_USBC_ISTAT_D_OUTEPINT6          22
#define BITP_USBC_ISTAT_D_OUTEPINT5          21
#define BITP_USBC_ISTAT_D_OUTEPINT4          20
#define BITP_USBC_ISTAT_D_OUTEPINT3          19
#define BITP_USBC_ISTAT_D_OUTEPINT2          18
#define BITP_USBC_ISTAT_D_OUTEPINT1          17
#define BITP_USBC_ISTAT_D_OUTEPINT0          16
#define BITP_USBC_ISTAT_D_INEPINT11          11
#define BITP_USBC_ISTAT_D_INEPINT10          10
#define BITP_USBC_ISTAT_D_INEPINT9            9
#define BITP_USBC_ISTAT_D_INEPINT8            8
#define BITP_USBC_ISTAT_D_INEPINT7            7
#define BITP_USBC_ISTAT_D_INEPINT6            6
#define BITP_USBC_ISTAT_D_INEPINT5            5
#define BITP_USBC_ISTAT_D_INEPINT4            4
#define BITP_USBC_ISTAT_D_INEPINT3            3
#define BITP_USBC_ISTAT_D_INEPINT2            2
#define BITP_USBC_ISTAT_D_INEPINT1            1
#define BITP_USBC_ISTAT_D_INEPINT0            0
#define BITM_USBC_ISTAT_D_OUTEPINT11         (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT10         (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT9          (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT8          (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT7          (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT6          (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT5          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT4          (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT3          (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT2          (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT1          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_OUTEPINT0          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT11          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT10          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT9           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT8           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT7           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT6           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT5           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT4           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT3           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT2           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT1           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_ISTAT_D_INEPINT0           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMSK_D                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMSK_D_OUTEPMSK11          27
#define BITP_USBC_IMSK_D_OUTEPMSK10          26
#define BITP_USBC_IMSK_D_OUTEPMSK9           25
#define BITP_USBC_IMSK_D_OUTEPMSK8           24
#define BITP_USBC_IMSK_D_OUTEPMSK7           23
#define BITP_USBC_IMSK_D_OUTEPMSK6           22
#define BITP_USBC_IMSK_D_OUTEPMSK5           21
#define BITP_USBC_IMSK_D_OUTEPMSK4           20
#define BITP_USBC_IMSK_D_OUTEPMSK3           19
#define BITP_USBC_IMSK_D_OUTEPMSK2           18
#define BITP_USBC_IMSK_D_OUTEPMSK1           17
#define BITP_USBC_IMSK_D_OUTEPMSK0           16
#define BITP_USBC_IMSK_D_INEPMSK11           11
#define BITP_USBC_IMSK_D_INEPMSK10           10
#define BITP_USBC_IMSK_D_INEPMSK9             9
#define BITP_USBC_IMSK_D_INEPMSK8             8
#define BITP_USBC_IMSK_D_INEPMSK7             7
#define BITP_USBC_IMSK_D_INEPMSK6             6
#define BITP_USBC_IMSK_D_INEPMSK5             5
#define BITP_USBC_IMSK_D_INEPMSK4             4
#define BITP_USBC_IMSK_D_INEPMSK3             3
#define BITP_USBC_IMSK_D_INEPMSK2             2
#define BITP_USBC_IMSK_D_INEPMSK1             1
#define BITP_USBC_IMSK_D_INEPMSK0             0
#define BITM_USBC_IMSK_D_OUTEPMSK11          (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK10          (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK9           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK8           (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK7           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK6           (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK5           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK4           (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK3           (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK2           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK1           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_OUTEPMSK0           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK11           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK10           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK9            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK8            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK7            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK6            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK5            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK4            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK3            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK2            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK1            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_IMSK_D_INEPMSK0            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_VBUSDIS_D                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_VBUSDIS_D_DVBUSDIS          0
#define BITM_USBC_VBUSDIS_D_DVBUSDIS         (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_VBUSPULSE_D                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_VBUSPULSE_D_DVBUSPULSE      0
#define BITM_USBC_VBUSPULSE_D_DVBUSPULSE     (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_THR_CTL_D                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_THR_CTL_D_ARBPRKEN         27
#define BITP_USBC_THR_CTL_D_RXTHRLEN         17
#define BITP_USBC_THR_CTL_D_RXTHREN          16
#define BITP_USBC_THR_CTL_D_AHBTHRRATIO      11
#define BITP_USBC_THR_CTL_D_TXTHRLEN          2
#define BITP_USBC_THR_CTL_D_ISOTHREN          1
#define BITP_USBC_THR_CTL_D_NONISOTHREN       0
#define BITM_USBC_THR_CTL_D_ARBPRKEN         (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))
#define BITM_USBC_THR_CTL_D_RXTHRLEN         (_ADI_MSK_3(0x03FE0000,0x03FE0000UL, uint32_t  ))
#define BITM_USBC_THR_CTL_D_RXTHREN          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_THR_CTL_D_AHBTHRRATIO      (_ADI_MSK_3(0x00001800,0x00001800UL, uint32_t  ))
#define BITM_USBC_THR_CTL_D_TXTHRLEN         (_ADI_MSK_3(0x000007FC,0x000007FCUL, uint32_t  ))
#define BITM_USBC_THR_CTL_D_ISOTHREN         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_THR_CTL_D_NONISOTHREN      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMSK_IEP_FEMPT_D                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMSK_IEP_FEMPT_D_INEPTXFEMPMSK  0
#define BITM_USBC_IMSK_IEP_FEMPT_D_INEPTXFEMPMSK (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_PWR_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_PWR_CTL_L1SUSPENDED         7
#define BITP_USBC_PWR_CTL_PHYSLEEP            6
#define BITP_USBC_PWR_CTL_RSTPDWNMODULE       3
#define BITP_USBC_PWR_CTL_STOPPCLK            0
#define BITM_USBC_PWR_CTL_L1SUSPENDED        (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_PWR_CTL_PHYSLEEP           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_PWR_CTL_RSTPDWNMODULE      (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_PWR_CTL_STOPPCLK           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* ============================================================================================================================
 *    HCHANNEL Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CHAR[n]_H                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CHAR_H_CHENA               31
#define BITP_USBC_CHAR_H_CHDIS               30
#define BITP_USBC_CHAR_H_ODDFRM              29
#define BITP_USBC_CHAR_H_DEVADDR             22
#define BITP_USBC_CHAR_H_EC                  20
#define BITP_USBC_CHAR_H_EPTYPE              18
#define BITP_USBC_CHAR_H_LSPDDEV             17
#define BITP_USBC_CHAR_H_EPDIR               15
#define BITP_USBC_CHAR_H_EPNUM               11
#define BITP_USBC_CHAR_H_MPS                  0
#define BITM_USBC_CHAR_H_CHENA               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_CHDIS               (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_ODDFRM              (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_DEVADDR             (_ADI_MSK_3(0x1FC00000,0x1FC00000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_EC                  (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_EPTYPE              (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_LSPDDEV             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_EPDIR               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_CHAR_H_EPNUM               (_ADI_MSK_3(0x00007800,0x00007800UL, uint32_t  ))
#define BITM_USBC_CHAR_H_MPS                 (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_SPLT_CTL[n]_H                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_SPLT_CTL_H_SPLTENA         31
#define BITP_USBC_SPLT_CTL_H_COMPSPLT        16
#define BITP_USBC_SPLT_CTL_H_XACTPOS         14
#define BITP_USBC_SPLT_CTL_H_HUBADDR          7
#define BITP_USBC_SPLT_CTL_H_PRTADDR          0
#define BITM_USBC_SPLT_CTL_H_SPLTENA         (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_SPLT_CTL_H_COMPSPLT        (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_SPLT_CTL_H_XACTPOS         (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))
#define BITM_USBC_SPLT_CTL_H_HUBADDR         (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))
#define BITM_USBC_SPLT_CTL_H_PRTADDR         (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_ISTAT[n]_H                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_ISTAT_H_DESC_LST_ROLLINTR  13
#define BITP_USBC_ISTAT_H_XCS_XACT_ERR       12
#define BITP_USBC_ISTAT_H_BNAINTR            11
#define BITP_USBC_ISTAT_H_DATATGLERR         10
#define BITP_USBC_ISTAT_H_FRMOVRUN            9
#define BITP_USBC_ISTAT_H_BBLERR              8
#define BITP_USBC_ISTAT_H_XACTERR             7
#define BITP_USBC_ISTAT_H_NYET                6
#define BITP_USBC_ISTAT_H_ACK                 5
#define BITP_USBC_ISTAT_H_NAK                 4
#define BITP_USBC_ISTAT_H_STALL               3
#define BITP_USBC_ISTAT_H_AHBERR              2
#define BITP_USBC_ISTAT_H_CHHLTD              1
#define BITP_USBC_ISTAT_H_XFERCOMPL           0
#define BITM_USBC_ISTAT_H_DESC_LST_ROLLINTR  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_XCS_XACT_ERR       (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_BNAINTR            (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_DATATGLERR         (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_FRMOVRUN           (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_BBLERR             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_XACTERR            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_NYET               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_ACK                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_NAK                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_STALL              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_AHBERR             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_CHHLTD             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_ISTAT_H_XFERCOMPL          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_IMSK[n]_H                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_IMSK_H_DESC_LST_ROLLINTRMSK 13
#define BITP_USBC_IMSK_H_BNAINTRMSK          11
#define BITP_USBC_IMSK_H_AHBERRMSK            2
#define BITP_USBC_IMSK_H_CHHLTDMSK            1
#define BITP_USBC_IMSK_H_XFERCOMPLMSK         0
#define BITM_USBC_IMSK_H_DESC_LST_ROLLINTRMSK (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_IMSK_H_BNAINTRMSK          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_IMSK_H_AHBERRMSK           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_IMSK_H_CHHLTDMSK           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_IMSK_H_XFERCOMPLMSK        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TSIZ[n]_H                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TSIZ_H_DOPNG               31
#define BITP_USBC_TSIZ_H_PID                 29
#define BITP_USBC_TSIZ_H_PKTCNT              19
#define BITP_USBC_TSIZ_H_XFERSIZE             0
#define BITM_USBC_TSIZ_H_DOPNG               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_TSIZ_H_PID                 (_ADI_MSK_3(0x60000000,0x60000000UL, uint32_t  ))
#define BITM_USBC_TSIZ_H_PKTCNT              (_ADI_MSK_3(0x1FF80000,0x1FF80000UL, uint32_t  ))
#define BITM_USBC_TSIZ_H_XFERSIZE            (_ADI_MSK_3(0x0007FFFF,0x0007FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DMA_ADDR[n]_H                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DMA_ADDR_H_DMAADDR          0
#define BITM_USBC_DMA_ADDR_H_DMAADDR         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DMA_BADDR[n]_H                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DMA_BADDR_H_HCDMAB          0
#define BITM_USBC_DMA_BADDR_H_HCDMAB         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* ============================================================================================================================
 *    INENDPOINT Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CTL_IEP[n]_D                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CTL_IEP_D_EPENA            31
#define BITP_USBC_CTL_IEP_D_EPDIS            30
#define BITP_USBC_CTL_IEP_D_SETD1PID         29
#define BITP_USBC_CTL_IEP_D_SETD0PID         28
#define BITP_USBC_CTL_IEP_D_SNAK             27
#define BITP_USBC_CTL_IEP_D_CNAK             26
#define BITP_USBC_CTL_IEP_D_TXFNUM           22
#define BITP_USBC_CTL_IEP_D_STALL            21
#define BITP_USBC_CTL_IEP_D_EPTYPE           18
#define BITP_USBC_CTL_IEP_D_NAKSTS           17
#define BITP_USBC_CTL_IEP_D_DPID             16
#define BITP_USBC_CTL_IEP_D_USBACTEP         15
#define BITP_USBC_CTL_IEP_D_MPS               0
#define BITM_USBC_CTL_IEP_D_EPENA            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_EPDIS            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_SETD1PID         (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_SETD0PID         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_SNAK             (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_CNAK             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_TXFNUM           (_ADI_MSK_3(0x03C00000,0x03C00000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_STALL            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_EPTYPE           (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_NAKSTS           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_DPID             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_USBACTEP         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_CTL_IEP_D_MPS              (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_ISTAT_IEP[n]_D                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_ISTAT_IEP_D_NYETINTRPT     14
#define BITP_USBC_ISTAT_IEP_D_NAKINTRPT      13
#define BITP_USBC_ISTAT_IEP_D_BBLEERR        12
#define BITP_USBC_ISTAT_IEP_D_PKTDRPSTS      11
#define BITP_USBC_ISTAT_IEP_D_BNAINTR         9
#define BITP_USBC_ISTAT_IEP_D_TXFIFOUNDRN     8
#define BITP_USBC_ISTAT_IEP_D_TXFEMP          7
#define BITP_USBC_ISTAT_IEP_D_INEPNAKEFF      6
#define BITP_USBC_ISTAT_IEP_D_INTKNEPMIS      5
#define BITP_USBC_ISTAT_IEP_D_INTKNTXFEMP     4
#define BITP_USBC_ISTAT_IEP_D_TIMEOUT         3
#define BITP_USBC_ISTAT_IEP_D_AHBERR          2
#define BITP_USBC_ISTAT_IEP_D_EPDISBLD        1
#define BITP_USBC_ISTAT_IEP_D_XFERCOMPL       0
#define BITM_USBC_ISTAT_IEP_D_NYETINTRPT     (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_NAKINTRPT      (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_BBLEERR        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_PKTDRPSTS      (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_BNAINTR        (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_TXFIFOUNDRN    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_TXFEMP         (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_INEPNAKEFF     (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_INTKNEPMIS     (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_INTKNTXFEMP    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_TIMEOUT        (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_AHBERR         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_EPDISBLD       (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_ISTAT_IEP_D_XFERCOMPL      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TSIZ_IEP[n]_D                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TSIZ_IEP_D_MC              29
#define BITP_USBC_TSIZ_IEP_D_PKTCNT          19
#define BITP_USBC_TSIZ_IEP_D_XFERSIZE         0
#define BITM_USBC_TSIZ_IEP_D_MC              (_ADI_MSK_3(0x60000000,0x60000000UL, uint32_t  ))
#define BITM_USBC_TSIZ_IEP_D_PKTCNT          (_ADI_MSK_3(0x1FF80000,0x1FF80000UL, uint32_t  ))
#define BITM_USBC_TSIZ_IEP_D_XFERSIZE        (_ADI_MSK_3(0x0007FFFF,0x0007FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DMA_ADDR_IEP[n]_D               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DMA_ADDR_IEP_D_DMAADDR      0
#define BITM_USBC_DMA_ADDR_IEP_D_DMAADDR     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TXFSTAT_IEP[n]_D                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TXFSTAT_IEP_D_INEPTXFSPCAVAIL  0
#define BITM_USBC_TXFSTAT_IEP_D_INEPTXFSPCAVAIL (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DMA_BADDR_IEP[n]_D              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DMA_BADDR_IEP_D_DMABUFFERADDR  0
#define BITM_USBC_DMA_BADDR_IEP_D_DMABUFFERADDR (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* ============================================================================================================================
 *    OUTENDPOINT Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          USBC_CTL_OEP[n]_D                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_CTL_OEP_D_EPENA            31
#define BITP_USBC_CTL_OEP_D_EPDIS            30
#define BITP_USBC_CTL_OEP_D_SETD1PID         29
#define BITP_USBC_CTL_OEP_D_SETD0PID         28
#define BITP_USBC_CTL_OEP_D_SNAK             27
#define BITP_USBC_CTL_OEP_D_CNAK             26
#define BITP_USBC_CTL_OEP_D_STALL            21
#define BITP_USBC_CTL_OEP_D_SNP              20
#define BITP_USBC_CTL_OEP_D_EPTYPE           18
#define BITP_USBC_CTL_OEP_D_NAKSTS           17
#define BITP_USBC_CTL_OEP_D_DPID             16
#define BITP_USBC_CTL_OEP_D_USBACTEP         15
#define BITP_USBC_CTL_OEP_D_MPS               0
#define BITM_USBC_CTL_OEP_D_EPENA            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_EPDIS            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_SETD1PID         (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_SETD0PID         (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_SNAK             (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_CNAK             (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_STALL            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_SNP              (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_EPTYPE           (_ADI_MSK_3(0x000C0000,0x000C0000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_NAKSTS           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_DPID             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_USBACTEP         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_CTL_OEP_D_MPS              (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_ISTAT_OEP[n]_D                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_ISTAT_OEP_D_STUPPKTRCVD    15
#define BITP_USBC_ISTAT_OEP_D_NYETINTRPT     14
#define BITP_USBC_ISTAT_OEP_D_NAKINTRPT      13
#define BITP_USBC_ISTAT_OEP_D_BBLEERR        12
#define BITP_USBC_ISTAT_OEP_D_PKTDRPSTS      11
#define BITP_USBC_ISTAT_OEP_D_BNAINTR         9
#define BITP_USBC_ISTAT_OEP_D_OUTPKTERR       8
#define BITP_USBC_ISTAT_OEP_D_BACK2BACKSETUP  6
#define BITP_USBC_ISTAT_OEP_D_STSPHSERCVD     5
#define BITP_USBC_ISTAT_OEP_D_OUTTKNEPDIS     4
#define BITP_USBC_ISTAT_OEP_D_SETUP           3
#define BITP_USBC_ISTAT_OEP_D_AHBERR          2
#define BITP_USBC_ISTAT_OEP_D_EPDISBLD        1
#define BITP_USBC_ISTAT_OEP_D_XFERCOMPL       0
#define BITM_USBC_ISTAT_OEP_D_STUPPKTRCVD    (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_NYETINTRPT     (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_NAKINTRPT      (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_BBLEERR        (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_PKTDRPSTS      (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_BNAINTR        (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_OUTPKTERR      (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_BACK2BACKSETUP (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_STSPHSERCVD    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_OUTTKNEPDIS    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_SETUP          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_AHBERR         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_EPDISBLD       (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))
#define BITM_USBC_ISTAT_OEP_D_XFERCOMPL      (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_TSIZ_OEP[n]_D                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_TSIZ_OEP_D_RXDPID          29
#define BITP_USBC_TSIZ_OEP_D_PKTCNT          19
#define BITP_USBC_TSIZ_OEP_D_XFERSIZE         0
#define BITM_USBC_TSIZ_OEP_D_RXDPID          (_ADI_MSK_3(0x60000000,0x60000000UL, uint32_t  ))
#define BITM_USBC_TSIZ_OEP_D_PKTCNT          (_ADI_MSK_3(0x1FF80000,0x1FF80000UL, uint32_t  ))
#define BITM_USBC_TSIZ_OEP_D_XFERSIZE        (_ADI_MSK_3(0x0007FFFF,0x0007FFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DMA_ADDR_OEP[n]_D               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DMA_ADDR_OEP_D_DMAADDR      0
#define BITM_USBC_DMA_ADDR_OEP_D_DMAADDR     (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          USBC_DMA_BADDR_OEP[n]_D              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_USBC_DMA_BADDR_OEP_D_DMABUFFERADDR  0
#define BITM_USBC_DMA_BADDR_OEP_D_DMABUFFERADDR (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))


/* ============================================================================================================================
        Pulse Density Modulation interface block
   ============================================================================================================================ */

/* ============================================================================================================================
        PDM0
   ============================================================================================================================ */
#define REG_PDM0_CTL0                        0x310C90A4            /*  PDM0 PDM Control Register */
#define REG_PDM0_HPF_CTL                     0x310C90A8            /*  PDM0 High Pass Filter Control Register */
#define REG_PDM0_SP_CTL0                     0x310C90AC            /*  PDM0 Serial Port Control0 Register */
#define REG_PDM0_SP_CTL1                     0x310C90B0            /*  PDM0 Serial Port Control1 Register */
#define REG_PDM0_RESET                       0x310C90B4            /*  PDM0 Software Reset Register */

/* ============================================================================================================================
        PDM1
   ============================================================================================================================ */
#define REG_PDM1_CTL0                        0x310CA0A4            /*  PDM1 PDM Control Register */
#define REG_PDM1_HPF_CTL                     0x310CA0A8            /*  PDM1 High Pass Filter Control Register */
#define REG_PDM1_SP_CTL0                     0x310CA0AC            /*  PDM1 Serial Port Control0 Register */
#define REG_PDM1_SP_CTL1                     0x310CA0B0            /*  PDM1 Serial Port Control1 Register */
#define REG_PDM1_RESET                       0x310CA0B4            /*  PDM1 Software Reset Register */

/* ============================================================================================================================
        PDM Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PDM_CTL0                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PDM_CTL0_DEC_RATIO               8            /*  Decimation Ratio */
#define BITP_PDM_CTL0_CLK0_EN                 4            /*  PDM Clock0 Enable */
#define BITP_PDM_CTL0_CH23_EN                 1            /*  Channels 2/3 (PDM_DAT1) Enable */
#define BITP_PDM_CTL0_CH01_EN                 0            /*  Channels 0/1 (PDM_DAT0) Enable */
#define BITM_PDM_CTL0_DEC_RATIO              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Decimation Ratio */
#define BITM_PDM_CTL0_CLK0_EN                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  PDM Clock0 Enable */
#define BITM_PDM_CTL0_CH23_EN                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Channels 2/3 (PDM_DAT1) Enable */
#define BITM_PDM_CTL0_CH01_EN                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Channels 0/1 (PDM_DAT0) Enable */
#define ENUM_PDM_CTL0_SIXFOUR                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DEC_RATIO: 64 times decimation */
#define ENUM_PDM_CTL0_THREETWO               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  DEC_RATIO: 32 times decimation */
#define ENUM_PDM_CTL0_ONESIX                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  DEC_RATIO: 16 times decimation */
#define ENUM_PDM_CTL0_OFF                    (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CLK0_EN: PDM_CLK0 output disabled */
#define ENUM_PDM_CTL0_ON                     (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CLK0_EN: PDM_CLK0 output enabled */
#define ENUM_PDM_CTL0_CH23_OFF               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH23_EN: PDM channels 2/3 disabled */
#define ENUM_PDM_CTL0_CH23_ON                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  CH23_EN: PDM channels 2/3 enabled */
#define ENUM_PDM_CTL0_CH01_OFF               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH01_EN: PDM channels 0/1 disabled */
#define ENUM_PDM_CTL0_CH01_ON                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CH01_EN: PDM channels 0/1 enabled */

/* -------------------------------------------------------------------------------------------------------------------------
          PDM_HPF_CTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PDM_HPF_CTL_FC                   4            /*  High-pass filter cutoff frequency relative to output sample rate */
#define BITP_PDM_HPF_CTL_EN                   0            /*  High-pass filter enable */
#define BITM_PDM_HPF_CTL_FC                  (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  High-pass filter cutoff frequency relative to output sample rate */
#define BITM_PDM_HPF_CTL_EN                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  High-pass filter enable */
#define ENUM_PDM_HPF_CTL_OFF                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EN: High Pass Filter Off */
#define ENUM_PDM_HPF_CTL_ON                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  EN: High Pass Filter On */

/* -------------------------------------------------------------------------------------------------------------------------
          PDM_SP_CTL0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PDM_SP_CTL0_BCLK_POL             9            /*  Serial port - selects bclk polarity */
#define BITP_PDM_SP_CTL0_LRCLK_POL            8            /*  Serial port - selects lrclk polarity */
#define BITP_PDM_SP_CTL0_TRI_STATE            6            /*  Serial port output - tri-state enable */
#define BITP_PDM_SP_CTL0_CH0_SLOT_WIDTH       4            /*  Serial port - selects slot width */
#define BITP_PDM_SP_CTL0_DATA_FORMAT          1            /*  Serial port - selects data format */
#define BITP_PDM_SP_CTL0_SAI_MODE             0            /*  Serial port - selects SAI mode */
#define BITM_PDM_SP_CTL0_BCLK_POL            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Serial port - selects bclk polarity */
#define BITM_PDM_SP_CTL0_LRCLK_POL           (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Serial port - selects lrclk polarity */
#define BITM_PDM_SP_CTL0_TRI_STATE           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Serial port output - tri-state enable */
#define BITM_PDM_SP_CTL0_CH0_SLOT_WIDTH      (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Serial port - selects slot width */
#define BITM_PDM_SP_CTL0_DATA_FORMAT         (_ADI_MSK_3(0x0000000E,0x0000000EUL, uint32_t  ))    /*  Serial port - selects data format */
#define BITM_PDM_SP_CTL0_SAI_MODE            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Serial port - selects SAI mode */
#define ENUM_PDM_SP_CTL0_NEG                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  BCLK_POL: Capture on rising edge */
#define ENUM_PDM_SP_CTL0_POS                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  BCLK_POL: Capture on falling egde */
#define ENUM_PDM_SP_CTL0_NORM                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LRCLK_POL: Normal Polarity */
#define ENUM_PDM_SP_CTL0_INV                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  LRCLK_POL: Inverted Polarity */
#define ENUM_PDM_SP_CTL0_DISABLE             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TRI_STATE: tri-state disabled */
#define ENUM_PDM_SP_CTL0_ENABLE              (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  TRI_STATE: tri-state enabled */
#define ENUM_PDM_SP_CTL0_THIRTY_TWO          (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH0_SLOT_WIDTH: 32 BCLK's per slot */
#define ENUM_PDM_SP_CTL0_SIXTEEN             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CH0_SLOT_WIDTH: 16 BCLK's per slot */
#define ENUM_PDM_SP_CTL0_TWENTY_FOUR         (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CH0_SLOT_WIDTH: 24 BCLK's per slot */
#define ENUM_PDM_SP_CTL0_I2S                 (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  DATA_FORMAT: Typical I2S mode, delay by 1 */
#define ENUM_PDM_SP_CTL0_LJ                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DATA_FORMAT: Left Justified,delay by 0 */
#define ENUM_PDM_SP_CTL0_DEL8                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  DATA_FORMAT: Delay by 8 */
#define ENUM_PDM_SP_CTL0_DEL12               (_ADI_MSK_3(0x00000006,0x00000006UL, uint32_t  ))    /*  DATA_FORMAT: Delay by 12 */
#define ENUM_PDM_SP_CTL0_DEL16               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  DATA_FORMAT: Delay by 16 */
#define ENUM_PDM_SP_CTL0_STEREO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SAI_MODE: STEREO (I2S, LJ, RJ) */
#define ENUM_PDM_SP_CTL0_TDM                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SAI_MODE: TDM */

/* -------------------------------------------------------------------------------------------------------------------------
          PDM_SP_CTL1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PDM_SP_CTL1_CH3_SLOT            28            /*  Serial Port Channel 3 Slot Selection */
#define BITP_PDM_SP_CTL1_CH3_DRV             24            /*  Serial Port Channel 3 drive select */
#define BITP_PDM_SP_CTL1_CH2_SLOT            20            /*  Serial Port Channel 2 Slot Selection */
#define BITP_PDM_SP_CTL1_CH2_DRV             16            /*  Serial Port Channel 2 drive select */
#define BITP_PDM_SP_CTL1_CH1_SLOT            12            /*  Serial Port Channel 1 Slot Selection */
#define BITP_PDM_SP_CTL1_CH1_DRV              8            /*  Serial Port Channel 1 drive select */
#define BITP_PDM_SP_CTL1_CH0_SLOT             4            /*  Serial Port Channel 0 Slot Selection */
#define BITP_PDM_SP_CTL1_CH0_DRV              0            /*  Serial Port Channel 0 drive select */
#define BITM_PDM_SP_CTL1_CH3_SLOT            (_ADI_MSK_3(0xF0000000,0xF0000000UL, uint32_t  ))    /*  Serial Port Channel 3 Slot Selection */
#define BITM_PDM_SP_CTL1_CH3_DRV             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Serial Port Channel 3 drive select */
#define BITM_PDM_SP_CTL1_CH2_SLOT            (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  Serial Port Channel 2 Slot Selection */
#define BITM_PDM_SP_CTL1_CH2_DRV             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Serial Port Channel 2 drive select */
#define BITM_PDM_SP_CTL1_CH1_SLOT            (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  Serial Port Channel 1 Slot Selection */
#define BITM_PDM_SP_CTL1_CH1_DRV             (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Serial Port Channel 1 drive select */
#define BITM_PDM_SP_CTL1_CH0_SLOT            (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Serial Port Channel 0 Slot Selection */
#define BITM_PDM_SP_CTL1_CH0_DRV             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Serial Port Channel 0 drive select */
#define ENUM_PDM_SP_CTL1_CH3_SLOT0           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 0/I2S Left */
#define ENUM_PDM_SP_CTL1_CH3_SLOT1           (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 1/I2S Right */
#define ENUM_PDM_SP_CTL1_CH3_SLOT2           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 2 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT3           (_ADI_MSK_3(0x30000000,0x30000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 3 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT4           (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 4 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT5           (_ADI_MSK_3(0x50000000,0x50000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 5 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT6           (_ADI_MSK_3(0x60000000,0x60000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 6 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT7           (_ADI_MSK_3(0x70000000,0x70000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 7 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT8           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 8 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT9           (_ADI_MSK_3(0x90000000,0x90000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 9 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT10          (_ADI_MSK_3(0xA0000000,0xA0000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 10 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT11          (_ADI_MSK_3(0xB0000000,0xB0000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 11 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT12          (_ADI_MSK_3(0xC0000000,0xC0000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 12 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT13          (_ADI_MSK_3(0xD0000000,0xD0000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 13 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT14          (_ADI_MSK_3(0xE0000000,0xE0000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 14 */
#define ENUM_PDM_SP_CTL1_CH3_SLOT15          (_ADI_MSK_3(0xF0000000,0xF0000000UL, uint32_t  ))    /*  CH3_SLOT: Map channel to TDM slot 15 */
#define ENUM_PDM_SP_CTL1_CH3_NO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH3_DRV: Channel will not be driven on serial port */
#define ENUM_PDM_SP_CTL1_CH3_YES             (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  CH3_DRV: Channel will be driven on serial port in selected output slot. */
#define ENUM_PDM_SP_CTL1_CH2_SLOT0           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 0/I2S Left */
#define ENUM_PDM_SP_CTL1_CH2_SLOT1           (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 1/I2S Right */
#define ENUM_PDM_SP_CTL1_CH2_SLOT2           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 2 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT3           (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 3 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT4           (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 4 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT5           (_ADI_MSK_3(0x00500000,0x00500000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 5 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT6           (_ADI_MSK_3(0x00600000,0x00600000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 6 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT7           (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 7 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT8           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 8 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT9           (_ADI_MSK_3(0x00900000,0x00900000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 9 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT10          (_ADI_MSK_3(0x00A00000,0x00A00000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 10 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT11          (_ADI_MSK_3(0x00B00000,0x00B00000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 11 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT12          (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 12 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT13          (_ADI_MSK_3(0x00D00000,0x00D00000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 13 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT14          (_ADI_MSK_3(0x00E00000,0x00E00000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 14 */
#define ENUM_PDM_SP_CTL1_CH2_SLOT15          (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  CH2_SLOT: Map channel to TDM slot 15 */
#define ENUM_PDM_SP_CTL1_CH2_NO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH2_DRV: Channel will not be driven on serial port */
#define ENUM_PDM_SP_CTL1_CH2_YES             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  CH2_DRV: Channel will be driven on serial port in selected output slot. */
#define ENUM_PDM_SP_CTL1_CH1_SLOT0           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 0/I2S Left */
#define ENUM_PDM_SP_CTL1_CH1_SLOT1           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 1/I2S Right */
#define ENUM_PDM_SP_CTL1_CH1_SLOT2           (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 2 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT3           (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 3 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT4           (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 4 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT5           (_ADI_MSK_3(0x00005000,0x00005000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 5 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT6           (_ADI_MSK_3(0x00006000,0x00006000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 6 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT7           (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 7 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT8           (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 8 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT9           (_ADI_MSK_3(0x00009000,0x00009000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 9 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT10          (_ADI_MSK_3(0x0000A000,0x0000A000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 10 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT11          (_ADI_MSK_3(0x0000B000,0x0000B000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 11 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT12          (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 12 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT13          (_ADI_MSK_3(0x0000D000,0x0000D000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 13 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT14          (_ADI_MSK_3(0x0000E000,0x0000E000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 14 */
#define ENUM_PDM_SP_CTL1_CH1_SLOT15          (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  CH1_SLOT: Map channel to TDM slot 15 */
#define ENUM_PDM_SP_CTL1_NO                  (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH1_DRV: Channel will not be driven on serial port */
#define ENUM_PDM_SP_CTL1_YES                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  CH1_DRV: Channel will be driven on serial port in selected output slot. */
#define ENUM_PDM_SP_CTL1_CH0_SLOT0           (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 0/I2S Left */
#define ENUM_PDM_SP_CTL1_CH0_SLOT1           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 1/I2S Right */
#define ENUM_PDM_SP_CTL1_CH0_SLOT2           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 2 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT3           (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 3 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT4           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 4 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT5           (_ADI_MSK_3(0x00000050,0x00000050UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 5 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT6           (_ADI_MSK_3(0x00000060,0x00000060UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 6 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT7           (_ADI_MSK_3(0x00000070,0x00000070UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 7 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT8           (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 8 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT9           (_ADI_MSK_3(0x00000090,0x00000090UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 9 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT10          (_ADI_MSK_3(0x000000A0,0x000000A0UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 10 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT11          (_ADI_MSK_3(0x000000B0,0x000000B0UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 11 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT12          (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 12 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT13          (_ADI_MSK_3(0x000000D0,0x000000D0UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 13 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT14          (_ADI_MSK_3(0x000000E0,0x000000E0UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 14 */
#define ENUM_PDM_SP_CTL1_CH0_SLOT15          (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  CH0_SLOT: Map channel to TDM slot 15 */
#define ENUM_PDM_SP_CTL1_CH0_NO              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  CH0_DRV: Channel will not be driven on serial port */
#define ENUM_PDM_SP_CTL1_CH0_YES             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CH0_DRV: Channel will be driven on serial port in selected output slot. */

/* -------------------------------------------------------------------------------------------------------------------------
          PDM_RESET                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PDM_RESET_SOFT                   0            /*  Software reset not including register settings */
#define BITM_PDM_RESET_SOFT                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Software reset not including register settings */
#define ENUM_PDM_RESET_OFF                   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  SOFT: N/A */
#define ENUM_PDM_RESET_ON                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SOFT: Write once to soft reset */


/* ============================================================================================================================
        The S/PDIF module
   ============================================================================================================================ */

/* ============================================================================================================================
        SPDIF0
   ============================================================================================================================ */
#define REG_SPDIF0_TX_CTL                    0x310C9280            /*  SPDIF0 Transmit Control Register */
#define REG_SPDIF0_TX_STAT_A0                0x310C9284            /*  SPDIF0 Transmit Status A0 Register */
#define REG_SPDIF0_TX_STAT_B0                0x310C9288            /*  SPDIF0 Transmit Status B0 Register */
#define REG_SPDIF0_RX_CTL                    0x310C92A0            /*  SPDIF0 Receive Control */
#define REG_SPDIF0_RX_STAT                   0x310C92A4            /*  SPDIF0 Receive Status Register */
#define REG_SPDIF0_RX_STAT0_A                0x310C92A8            /*  SPDIF0 Receive Status A0 Register */
#define REG_SPDIF0_RX_STAT0_B                0x310C92AC            /*  SPDIF0 Receive Status B0 Register */
#define REG_SPDIF0_RX_STAT1_A                0x310C92B0            /*  SPDIF0 Receive Status A1 Register */
#define REG_SPDIF0_RX_STAT1_B                0x310C92B4            /*  SPDIF0 Receive Status B1 Register */
#define REG_SPDIF0_TX_STAT_A1                0x310C9350            /*  SPDIF0 Transmit Status A1 Register */
#define REG_SPDIF0_TX_STAT_A2                0x310C9354            /*  SPDIF0 Transmit Status A2 Register */
#define REG_SPDIF0_TX_STAT_A3                0x310C9358            /*  SPDIF0 Transmit Status A3 Register */
#define REG_SPDIF0_TX_STAT_A4                0x310C935C            /*  SPDIF0 Transmit Status A4 Register */
#define REG_SPDIF0_TX_STAT_A5                0x310C9360            /*  SPDIF0 Transmit Status A5 Register */
#define REG_SPDIF0_TX_STAT_B1                0x310C9368            /*  SPDIF0 Transmit Status B1 Register */
#define REG_SPDIF0_TX_STAT_B2                0x310C936C            /*  SPDIF0 Transmit Status B2 Register */
#define REG_SPDIF0_TX_STAT_B3                0x310C9370            /*  SPDIF0 Transmit Status B3 Register */
#define REG_SPDIF0_TX_STAT_B4                0x310C9374            /*  SPDIF0 Transmit Status B4 Register */
#define REG_SPDIF0_TX_STAT_B5                0x310C9378            /*  SPDIF0 Transmit Status B5 Register */
#define REG_SPDIF0_TX_UBUFF_A0               0x310C9380            /*  SPDIF0 Transmit User Buffer A0 Register */
#define REG_SPDIF0_TX_UBUFF_A1               0x310C9384            /*  SPDIF0 Transmit User Buffer A1 Register */
#define REG_SPDIF0_TX_UBUFF_A2               0x310C9388            /*  SPDIF0 Transmit User Buffer A2 Register */
#define REG_SPDIF0_TX_UBUFF_A3               0x310C938C            /*  SPDIF0 Transmit User Buffer A3 Register */
#define REG_SPDIF0_TX_UBUFF_A4               0x310C9390            /*  SPDIF0 Transmit User Buffer A4 Register */
#define REG_SPDIF0_TX_UBUFF_A5               0x310C9394            /*  SPDIF0 Transmit User Buffer A5 Register */
#define REG_SPDIF0_TX_UBUFF_B0               0x310C93A0            /*  SPDIF0 Transmit User Buffer B0 Register */
#define REG_SPDIF0_TX_UBUFF_B1               0x310C93A4            /*  SPDIF0 Transmit User Buffer B1 Register */
#define REG_SPDIF0_TX_UBUFF_B2               0x310C93A8            /*  SPDIF0 Transmit User Buffer B2 Register */
#define REG_SPDIF0_TX_UBUFF_B3               0x310C93AC            /*  SPDIF0 Transmit User Buffer B3 Register */
#define REG_SPDIF0_TX_UBUFF_B4               0x310C93B0            /*  SPDIF0 Transmit User Buffer B4 Register */
#define REG_SPDIF0_TX_UBUFF_B5               0x310C93B4            /*  SPDIF0 Transmit User Buffer B5 Register */
#define REG_SPDIF0_TX_USRUPDT                0x310C93BC            /*  SPDIF0 User Bit Update Register */

/* ============================================================================================================================
        SPDIF Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_CTL_BYTE0B             24            /*  Channel Status Byte for Subframe B */
#define BITP_SPDIF_TX_CTL_BYTE0A             16            /*  Channel Status Byte for Subframe A */
#define BITP_SPDIF_TX_CTL_EXTSYNC            15            /*  External Sync Enable */
#define BITP_SPDIF_TX_CTL_USRPEND            13            /*  User Bits Pending */
#define BITP_SPDIF_TX_CTL_BLKSTART           12            /*  Block Start */
#define BITP_SPDIF_TX_CTL_VALIDR             11            /*  Validity Bit B */
#define BITP_SPDIF_TX_CTL_VALIDL             10            /*  Validity Bit A */
#define BITP_SPDIF_TX_CTL_AUTO                9            /*  Automatically Generate Block Start */
#define BITP_SPDIF_TX_CTL_SMODEIN             6            /*  Serial Data Input Format */
#define BITP_SPDIF_TX_CTL_SCDFLR              5            /*  Select L/R Single-Channel, Double-Frequency Mode */
#define BITP_SPDIF_TX_CTL_SCDF                4            /*  Single-Channel, Double-Frequency Mode Enable */
#define BITP_SPDIF_TX_CTL_FREQ                2            /*  Frequency Multiplier */
#define BITP_SPDIF_TX_CTL_MUTE                1            /*  Mute */
#define BITP_SPDIF_TX_CTL_EN                  0            /*  Transmitter Enable */
#define BITM_SPDIF_TX_CTL_BYTE0B             (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Channel Status Byte for Subframe B */
#define BITM_SPDIF_TX_CTL_BYTE0A             (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Channel Status Byte for Subframe A */
#define BITM_SPDIF_TX_CTL_EXTSYNC            (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  External Sync Enable */
#define BITM_SPDIF_TX_CTL_USRPEND            (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  User Bits Pending */
#define BITM_SPDIF_TX_CTL_BLKSTART           (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Block Start */
#define BITM_SPDIF_TX_CTL_VALIDR             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Validity Bit B */
#define BITM_SPDIF_TX_CTL_VALIDL             (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Validity Bit A */
#define BITM_SPDIF_TX_CTL_AUTO               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Automatically Generate Block Start */
#define BITM_SPDIF_TX_CTL_SMODEIN            (_ADI_MSK_3(0x000001C0,0x000001C0UL, uint32_t  ))    /*  Serial Data Input Format */
#define BITM_SPDIF_TX_CTL_SCDFLR             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Select L/R Single-Channel, Double-Frequency Mode */
#define BITM_SPDIF_TX_CTL_SCDF               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Single-Channel, Double-Frequency Mode Enable */
#define BITM_SPDIF_TX_CTL_FREQ               (_ADI_MSK_3(0x0000000C,0x0000000CUL, uint32_t  ))    /*  Frequency Multiplier */
#define BITM_SPDIF_TX_CTL_MUTE               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Mute */
#define BITM_SPDIF_TX_CTL_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Transmitter Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_A0                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_A0_BYTE4          24            /*  Byte 4 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A0_BYTE3          16            /*  Byte 3 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A0_BYTE2           8            /*  Byte 2 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A0_BYTE1           0            /*  Byte 1 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A0_BYTE4          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 4 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A0_BYTE3          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 3 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A0_BYTE2          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 2 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A0_BYTE1          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 1 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_B0                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_B0_BYTE4          24            /*  Byte 4 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B0_BYTE3          16            /*  Byte 3 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B0_BYTE2           8            /*  Byte 2 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B0_BYTE1           0            /*  Byte 1 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B0_BYTE4          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 4 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B0_BYTE3          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 3 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B0_BYTE2          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 2 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B0_BYTE1          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 1 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_RX_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_RX_CTL_INVTDM             13            /*  Invert TDM clock */
#define BITP_SPDIF_RX_CTL_TDMSEL              9            /*  Select TDM clock frequency */
#define BITP_SPDIF_RX_CTL_RST                 4            /*  Reset SPDIF Receiver */
#define BITP_SPDIF_RX_CTL_RSTRTAUDIO          3            /*  Restart Audio */
#define BITP_SPDIF_RX_CTL_FASTLOCK            2            /*  Fast Lock Select */
#define BITP_SPDIF_RX_CTL_STRENGTH            1            /*  FS strength Control */
#define BITP_SPDIF_RX_CTL_EN                  0            /*  SPDIF Receiver Enable */
#define BITM_SPDIF_RX_CTL_INVTDM             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Invert TDM clock */
#define BITM_SPDIF_RX_CTL_TDMSEL             (_ADI_MSK_3(0x00001E00,0x00001E00UL, uint32_t  ))    /*  Select TDM clock frequency */
#define BITM_SPDIF_RX_CTL_RST                (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Reset SPDIF Receiver */
#define BITM_SPDIF_RX_CTL_RSTRTAUDIO         (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Restart Audio */
#define BITM_SPDIF_RX_CTL_FASTLOCK           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Fast Lock Select */
#define BITM_SPDIF_RX_CTL_STRENGTH           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  FS strength Control */
#define BITM_SPDIF_RX_CTL_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SPDIF Receiver Enable */
#define ENUM_SPDIF_RX_CTL_NORMAL             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  FASTLOCK: Enable normal mode */
#define ENUM_SPDIF_RX_CTL_FAST               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  FASTLOCK: Enable fast mode */
#define ENUM_SPDIF_RX_CTL_STRONG             (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  STRENGTH: Enable strong mode */
#define ENUM_SPDIF_RX_CTL_WEAK               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  STRENGTH: Enable weak mode */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_RX_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_RX_STAT_COMPMODE          16            /*  Compression Mode */
#define BITP_SPDIF_RX_STAT_WLCHANB           12            /*  Word Length Channel B */
#define BITP_SPDIF_RX_STAT_WLCHANA            8            /*  Word Length Channel A */
#define BITP_SPDIF_RX_STAT_LOCKLOSS           4            /*  Loss of Lock (sticky) */
#define BITP_SPDIF_RX_STAT_LOCK               3            /*  Lock Receiver */
#define BITP_SPDIF_RX_STAT_VALID              2            /*  Validity Bit */
#define BITP_SPDIF_RX_STAT_COMPTYPE           1            /*  Compression Type */
#define BITP_SPDIF_RX_STAT_AUDIOTYPE          0            /*  Audio Type */
#define BITM_SPDIF_RX_STAT_COMPMODE          (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Compression Mode */
#define BITM_SPDIF_RX_STAT_WLCHANB           (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  Word Length Channel B */
#define BITM_SPDIF_RX_STAT_WLCHANA           (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Word Length Channel A */
#define BITM_SPDIF_RX_STAT_LOCKLOSS          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Loss of Lock (sticky) */
#define BITM_SPDIF_RX_STAT_LOCK              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Lock Receiver */
#define BITM_SPDIF_RX_STAT_VALID             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Validity Bit */
#define BITM_SPDIF_RX_STAT_COMPTYPE          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Compression Type */
#define BITM_SPDIF_RX_STAT_AUDIOTYPE         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Audio Type */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_RX_STAT0_A                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_RX_STAT0_A_BYTE3          24            /*  CS Byte 3 */
#define BITP_SPDIF_RX_STAT0_A_BYTE2          16            /*  CS Byte 2 */
#define BITP_SPDIF_RX_STAT0_A_BYTE1           8            /*  CS Byte 1 */
#define BITP_SPDIF_RX_STAT0_A_BYTE0           0            /*  CS Byte 0 */
#define BITM_SPDIF_RX_STAT0_A_BYTE3          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  CS Byte 3 */
#define BITM_SPDIF_RX_STAT0_A_BYTE2          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  CS Byte 2 */
#define BITM_SPDIF_RX_STAT0_A_BYTE1          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  CS Byte 1 */
#define BITM_SPDIF_RX_STAT0_A_BYTE0          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  CS Byte 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_RX_STAT0_B                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_RX_STAT0_B_BYTE3          24            /*  CS Byte 3 */
#define BITP_SPDIF_RX_STAT0_B_BYTE2          16            /*  CS Byte 2 */
#define BITP_SPDIF_RX_STAT0_B_BYTE1           8            /*  CS Byte 1 */
#define BITP_SPDIF_RX_STAT0_B_BYTE0           0            /*  CS Byte 0 */
#define BITM_SPDIF_RX_STAT0_B_BYTE3          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  CS Byte 3 */
#define BITM_SPDIF_RX_STAT0_B_BYTE2          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  CS Byte 2 */
#define BITM_SPDIF_RX_STAT0_B_BYTE1          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  CS Byte 1 */
#define BITM_SPDIF_RX_STAT0_B_BYTE0          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  CS Byte 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_RX_STAT1_A                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_RX_STAT1_A_BYTE4           0            /*  CS Byte 4 */
#define BITM_SPDIF_RX_STAT1_A_BYTE4          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  CS Byte 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_RX_STAT1_B                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_RX_STAT1_B_BYTE4           0            /*  CS Byte 4 */
#define BITM_SPDIF_RX_STAT1_B_BYTE4          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  CS Byte 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_A1                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_A1_BYTE8          24            /*  Byte 8 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A1_BYTE7          16            /*  Byte 7 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A1_BYTE6           8            /*  Byte 6 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A1_BYTE5           0            /*  Byte 5 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A1_BYTE8          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 8 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A1_BYTE7          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 7 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A1_BYTE6          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 6 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A1_BYTE5          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 5 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_A2                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_A2_BYTE12         24            /*  Byte 12 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A2_BYTE11         16            /*  Byte 11 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A2_BYTE10          8            /*  Byte 10 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A2_BYTE9           0            /*  Byte 9 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A2_BYTE12         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 12 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A2_BYTE11         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 11 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A2_BYTE10         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 10 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A2_BYTE9          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 9 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_A3                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_A3_BYTE16         24            /*  Byte 16 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A3_BYTE15         16            /*  Byte 15 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A3_BYTE14          8            /*  Byte 14 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A3_BYTE13          0            /*  Byte 13 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A3_BYTE16         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 16 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A3_BYTE15         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 15 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A3_BYTE14         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 14 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A3_BYTE13         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 13 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_A4                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_A4_BYTE20         24            /*  Byte 20 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A4_BYTE19         16            /*  Byte 19 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A4_BYTE18          8            /*  Byte 18 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A4_BYTE17          0            /*  Byte 17 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A4_BYTE20         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 20 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A4_BYTE19         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 19 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A4_BYTE18         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 18 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A4_BYTE17         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 17 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_A5                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_A5_BYTE23         16            /*  Byte 23 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A5_BYTE22          8            /*  Byte 22 Sub Frame A */
#define BITP_SPDIF_TX_STAT_A5_BYTE21          0            /*  Byte 21 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A5_BYTE23         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 23 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A5_BYTE22         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 22 Sub Frame A */
#define BITM_SPDIF_TX_STAT_A5_BYTE21         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 21 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_B1                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_B1_BYTE8          24            /*  Byte 8 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B1_BYTE7          16            /*  Byte 7 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B1_BYTE6           8            /*  Byte 6 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B1_BYTE5           0            /*  Byte 5 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B1_BYTE8          (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 8 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B1_BYTE7          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 7 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B1_BYTE6          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 6 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B1_BYTE5          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 5 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_B2                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_B2_BYTE12         24            /*  Byte 12 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B2_BYTE11         16            /*  Byte 11 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B2_BYTE10          8            /*  Byte 10 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B2_BYTE9           0            /*  Byte 9 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B2_BYTE12         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 12 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B2_BYTE11         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 11 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B2_BYTE10         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 10 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B2_BYTE9          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 9 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_B3                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_B3_BYTE16         24            /*  Byte 16 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B3_BYTE15         16            /*  Byte 15 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B3_BYTE14          8            /*  Byte 14 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B3_BYTE13          0            /*  Byte 13 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B3_BYTE16         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 16 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B3_BYTE15         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 15 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B3_BYTE14         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 14 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B3_BYTE13         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 13 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_B4                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_B4_BYTE20         24            /*  Byte 20 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B4_BYTE19         16            /*  Byte 19 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B4_BYTE18          8            /*  Byte 18 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B4_BYTE17          0            /*  Byte 17 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B4_BYTE20         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 20 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B4_BYTE19         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 19 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B4_BYTE18         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 18 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B4_BYTE17         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 17 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_STAT_B5                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_STAT_B5_BYTE23         16            /*  Byte 23 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B5_BYTE22          8            /*  Byte 22 Sub Frame B */
#define BITP_SPDIF_TX_STAT_B5_BYTE21          0            /*  Byte 21 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B5_BYTE23         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 23 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B5_BYTE22         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 22 Sub Frame B */
#define BITM_SPDIF_TX_STAT_B5_BYTE21         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 21 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_A0                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_A0_BYTE3         24            /*  Byte 3 of Subframe A User Bit Buffer */
#define BITP_SPDIF_TX_UBUFF_A0_BYTE2         16            /*  Byte 2 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A0_BYTE1          8            /*  Byte 1 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A0_BYTE0          0            /*  Byte 0 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A0_BYTE3         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 3 of Subframe A User Bit Buffer */
#define BITM_SPDIF_TX_UBUFF_A0_BYTE2         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 2 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A0_BYTE1         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 1 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A0_BYTE0         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 0 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_A1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_A1_BYTE7         24            /*  Byte 7 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A1_BYTE6         16            /*  Byte 6 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A1_BYTE5          8            /*  Byte 5 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A1_BYTE4          0            /*  Byte 4 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A1_BYTE7         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 7 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A1_BYTE6         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 6 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A1_BYTE5         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 5 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A1_BYTE4         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 4 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_A2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_A2_BYTE11        24            /*  Byte 11 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A2_BYTE10        16            /*  Byte 10 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A2_BYTE9          8            /*  Byte 9 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A2_BYTE8          0            /*  Byte 8 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A2_BYTE11        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 11 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A2_BYTE10        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 10 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A2_BYTE9         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 9 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A2_BYTE8         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 8 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_A3                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_A3_BYTE15        24            /*  Byte 15 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A3_BYTE14        16            /*  Byte 14 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A3_BYTE13         8            /*  Byte 13 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A3_BYTE12         0            /*  Byte 12 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A3_BYTE15        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 15 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A3_BYTE14        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 14 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A3_BYTE13        (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 13 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A3_BYTE12        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 12 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_A4                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_A4_BYTE19        24            /*  Byte 19 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A4_BYTE18        16            /*  Byte 18 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A4_BYTE17         8            /*  Byte 17 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A4_BYTE16         0            /*  Byte 16 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A4_BYTE19        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 19 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A4_BYTE18        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 18 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A4_BYTE17        (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 17 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A4_BYTE16        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 16 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_A5                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_A5_BYTE23        24            /*  Byte 23 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A5_BYTE22        16            /*  Byte 22 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A5_BYTE21         8            /*  Byte 21 Sub Frame A */
#define BITP_SPDIF_TX_UBUFF_A5_BYTE20         0            /*  Byte 20 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A5_BYTE23        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 23 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A5_BYTE22        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 22 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A5_BYTE21        (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 21 Sub Frame A */
#define BITM_SPDIF_TX_UBUFF_A5_BYTE20        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 20 Sub Frame A */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_B0                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_B0_BYTE3         24            /*  Byte 3 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B0_BYTE2         16            /*  Byte 2 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B0_BYTE1          8            /*  Byte 1 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B0_BYTE0          0            /*  Byte 0 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B0_BYTE3         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 3 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B0_BYTE2         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 2 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B0_BYTE1         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 1 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B0_BYTE0         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 0 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_B1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_B1_BYTE7         24            /*  Byte 7 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B1_BYTE6         16            /*  Byte 6 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B1_BYTE5          8            /*  Byte 5 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B1_BYTE4          0            /*  Byte 4 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B1_BYTE7         (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 7 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B1_BYTE6         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 6 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B1_BYTE5         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 5 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B1_BYTE4         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 4 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_B2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_B2_BYTE11        24            /*  Byte 11 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B2_BYTE10        16            /*  Byte 10 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B2_BYTE9          8            /*  Byte 9 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B2_BYTE8          0            /*  Byte 8 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B2_BYTE11        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 11 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B2_BYTE10        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 10 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B2_BYTE9         (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 9 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B2_BYTE8         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 8 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_B3                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_B3_BYTE15        24            /*  Byte 15 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B3_BYTE14        16            /*  Byte 14 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B3_BYTE13         8            /*  Byte 13 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B3_BYTE12         0            /*  Byte 12 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B3_BYTE15        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 15 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B3_BYTE14        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 14 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B3_BYTE13        (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 13 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B3_BYTE12        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 12 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_B4                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_B4_BYTE19        24            /*  Byte 19 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B4_BYTE18        16            /*  Byte 18 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B4_BYTE17         8            /*  Byte 17 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B4_BYTE16         0            /*  Byte 16 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B4_BYTE19        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 19 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B4_BYTE18        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 18 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B4_BYTE17        (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 17 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B4_BYTE16        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 16 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_UBUFF_B5                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_UBUFF_B5_BYTE23        24            /*  Byte 23 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B5_BYTE22        16            /*  Byte 22 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B5_BYTE21         8            /*  Byte 21 Sub Frame B */
#define BITP_SPDIF_TX_UBUFF_B5_BYTE20         0            /*  Byte 20 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B5_BYTE23        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Byte 23 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B5_BYTE22        (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Byte 22 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B5_BYTE21        (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Byte 21 Sub Frame B */
#define BITM_SPDIF_TX_UBUFF_B5_BYTE20        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Byte 20 Sub Frame B */

/* -------------------------------------------------------------------------------------------------------------------------
          SPDIF_TX_USRUPDT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_SPDIF_TX_USRUPDT_EN              0            /*  Enable */
#define BITM_SPDIF_TX_USRUPDT_EN             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable */


/* ============================================================================================================================
        The Digital Audio Interface (DAIn) registers are used to configure DAI destinations for the DAI sources shown in the Group A - F Routing tables.
   ============================================================================================================================ */

/* ============================================================================================================================
        DAI0
   ============================================================================================================================ */
#define REG_DAI0_EXTD_CLK0                   0x310C9000            /*  DAI0 Extended Clock Routing Control Register 0 */
#define REG_DAI0_EXTD_CLK1                   0x310C9004            /*  DAI0 Extended Clock Routing Control Register 1 */
#define REG_DAI0_EXTD_CLK2                   0x310C9008            /*  DAI0 Extended Clock Routing Control Register 2 */
#define REG_DAI0_EXTD_CLK3                   0x310C900C            /*  DAI0 Extended Clock Routing Control Register 3 */
#define REG_DAI0_EXTD_CLK4                   0x310C9010            /*  DAI0 Extended Clock Routing Control Register 4 */
#define REG_DAI0_EXTD_CLK5                   0x310C9014            /*  DAI0 Extended Clock Routing Control Register 5 */
#define REG_DAI0_EXTD_DAT0                   0x310C9018            /*  DAI0 Extended Serial Data Routing Control Register 0 */
#define REG_DAI0_EXTD_DAT1                   0x310C901C            /*  DAI0 Extended Serial Data Routing Control Register 1 */
#define REG_DAI0_EXTD_DAT2                   0x310C9020            /*  DAI0 Extended Serial Data Routing Control Register 2 */
#define REG_DAI0_EXTD_DAT3                   0x310C9024            /*  DAI0 Extended Serial Data Routing Control Register 3 */
#define REG_DAI0_EXTD_DAT4                   0x310C9028            /*  DAI0 Extended Serial Data Routing Control Register 4 */
#define REG_DAI0_EXTD_DAT5                   0x310C902C            /*  DAI0 Extended Serial Data Routing Control Register 5 */
#define REG_DAI0_EXTD_DAT6                   0x310C9030            /*  DAI0 Extended Serial Data Routing Control Register 6 */
#define REG_DAI0_EXTD_FS0                    0x310C9034            /*  DAI0 Extended Frame Sync Routing Control Register 0 */
#define REG_DAI0_EXTD_FS1                    0x310C9038            /*  DAI0 Extended Frame Sync Routing Control Register 1 */
#define REG_DAI0_EXTD_FS2                    0x310C903C            /*  DAI0 Extended Frame Sync Routing Control Register 2 */
#define REG_DAI0_EXTD_FS4                    0x310C9044            /*  DAI0 Extended Frame Sync Routing Control Register 4 */
#define REG_DAI0_EXTD_PIN0                   0x310C9048            /*  DAI0 Extended Pin Buffer Assignment Register 0 */
#define REG_DAI0_EXTD_PIN1                   0x310C904C            /*  DAI0 Extended Pin Buffer Assignment Register 1 */
#define REG_DAI0_EXTD_PIN2                   0x310C9050            /*  DAI0 Extended Pin Buffer Assignment Register 2 */
#define REG_DAI0_EXTD_PIN3                   0x310C9054            /*  DAI0 Extended Pin Buffer Assignment Register 3 */
#define REG_DAI0_EXTD_PIN4                   0x310C9058            /*  DAI0 Extended Pin Buffer Assignment Register 4 */
#define REG_DAI0_EXTD_MISC0                  0x310C905C            /*  DAI0 Extended Miscellaneous Control Register 0 */
#define REG_DAI0_EXTD_MISC1                  0x310C9060            /*  DAI0 Extended Miscellaneous Control Register 1 */
#define REG_DAI0_EXTD_MISC2                  0x310C9064            /*  DAI0 Extended Miscellaneous Control Register 2 */
#define REG_DAI0_EXTD_PBEN0                  0x310C9068            /*  DAI0 Extended Pin Buffer Enable Register 0 */
#define REG_DAI0_EXTD_PBEN1                  0x310C906C            /*  DAI0 Extended Pin Buffer Enable Register 1 */
#define REG_DAI0_EXTD_PBEN2                  0x310C9070            /*  DAI0 Extended Pin Buffer Enable Register 2 */
#define REG_DAI0_EXTD_PBEN3                  0x310C9074            /*  DAI0 Extended Pin Buffer Enable Register 3 */
#define REG_DAI0_CLK0                        0x310C90C0            /*  DAI0 Clock Routing Control Register 0 */
#define REG_DAI0_CLK1                        0x310C90C4            /*  DAI0 Clock Routing Control Register 1 */
#define REG_DAI0_CLK2                        0x310C90C8            /*  DAI0 Clock Routing Control Register 2 */
#define REG_DAI0_CLK3                        0x310C90CC            /*  DAI0 Clock Routing Control Register 3 */
#define REG_DAI0_CLK4                        0x310C90D0            /*  DAI0 Clock Routing Control Register 4 */
#define REG_DAI0_CLK5                        0x310C90D4            /*  DAI0 Clock Routing Control Register 5 */
#define REG_DAI0_DAT0                        0x310C9100            /*  DAI0 Serial Data Routing Control Register 0 */
#define REG_DAI0_DAT1                        0x310C9104            /*  DAI0 Serial Data Routing Control Register 1 */
#define REG_DAI0_DAT2                        0x310C9108            /*  DAI0 Serial Data Routing Control Register 2 */
#define REG_DAI0_DAT3                        0x310C910C            /*  DAI0 Serial Data Routing Control Register 3 */
#define REG_DAI0_DAT4                        0x310C9110            /*  DAI0 Serial Data Routing Control Register 4 */
#define REG_DAI0_DAT5                        0x310C9114            /*  DAI0 Serial Data Routing Control Register 5 */
#define REG_DAI0_DAT6                        0x310C9118            /*  DAI0 Serial Data Routing Control Register 6 */
#define REG_DAI0_FS0                         0x310C9140            /*  DAI0 Frame Sync Routing Control Register 0 */
#define REG_DAI0_FS1                         0x310C9144            /*  DAI0 Frame Sync Routing Control Register 1 */
#define REG_DAI0_FS2                         0x310C9148            /*  DAI0 Frame Sync Routing Control Register 2 */
#define REG_DAI0_FS4                         0x310C9150            /*  DAI0 Frame Sync Routing Control Register 4 */
#define REG_DAI0_PIN0                        0x310C9180            /*  DAI0 Pin Buffer Assignment Register 0 */
#define REG_DAI0_PIN1                        0x310C9184            /*  DAI0 Pin Buffer Assignment Register 1 */
#define REG_DAI0_PIN2                        0x310C9188            /*  DAI0 Pin Buffer Assignment Register 2 */
#define REG_DAI0_PIN3                        0x310C918C            /*  DAI0 Pin Buffer Assignment Register 3 */
#define REG_DAI0_PIN4                        0x310C9190            /*  DAI0 Pin Buffer Assignment Register 4 */
#define REG_DAI0_MISC0                       0x310C91C0            /*  DAI0 Miscellaneous Control Register 0 */
#define REG_DAI0_MISC1                       0x310C91C4            /*  DAI0 Miscellaneous Control Register 1 */
#define REG_DAI0_MISC2                       0x310C91C8            /*  DAI0 Miscellaneous Control Register 1 */
#define REG_DAI0_PBEN0                       0x310C91E0            /*  DAI0 Pin Buffer Enable Register 0 */
#define REG_DAI0_PBEN1                       0x310C91E4            /*  DAI0 Pin Buffer Enable Register 1 */
#define REG_DAI0_PBEN2                       0x310C91E8            /*  DAI0 Pin Buffer Enable Register 2 */
#define REG_DAI0_PBEN3                       0x310C91EC            /*  DAI0 Pin Buffer Enable Register 3 */
#define REG_DAI0_IMSK_FE                     0x310C9200            /*  DAI0 Falling-Edge Interrupt Mask Register */
#define REG_DAI0_IMSK_RE                     0x310C9204            /*  DAI0 Rising-Edge Interrupt Mask Register */
#define REG_DAI0_IMSK_PRI                    0x310C9210            /*  DAI0 Core Interrupt Priority Assignment Register */
#define REG_DAI0_IRPTL_H                     0x310C9220            /*  DAI0 High Priority Interrupt Latch Register */
#define REG_DAI0_IRPTL_L                     0x310C9224            /*  DAI0 Low Priority Interrupt Latch Register */
#define REG_DAI0_IRPTL_HS                    0x310C9230            /*  DAI0 Shadow High Priority Interrupt Latch Register */
#define REG_DAI0_IRPTL_LS                    0x310C9234            /*  DAI0 Shadow Low Priority Interrupt Latch Register */
#define REG_DAI0_PIN_STAT                    0x310C92E4            /*  DAI0 Pin Status Register */
#define REG_DAI0_GBL_SP_EN                   0x310C92E8            /*  DAI0 Global SPORT Enable Register */
#define REG_DAI0_GBL_INT_EN                  0x310C92EC            /*  DAI0 Global SPORT Interrupt Grouping Register */
#define REG_DAI0_GBL_PCG_EN                  0x310C92F0            /*  DAI0 Global PCG Enable Control Register */

/* ============================================================================================================================
        DAI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_CLK0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_CLK0_IN5               20            /*  Extended Input Clock 5 */
#define BITP_DAI_EXTD_CLK0_IN4               16            /*  Extended Input Clock 4 */
#define BITP_DAI_EXTD_CLK0_IN3               12            /*  Extended Input Clock 3 */
#define BITP_DAI_EXTD_CLK0_IN2                8            /*  Extended Input Clock 2 */
#define BITP_DAI_EXTD_CLK0_IN1                4            /*  Extended Input Clock 1 */
#define BITP_DAI_EXTD_CLK0_IN0                0            /*  Extended Input Clock 0 */
#define BITM_DAI_EXTD_CLK0_IN5               (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Clock 5 */
#define BITM_DAI_EXTD_CLK0_IN4               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Clock 4 */
#define BITM_DAI_EXTD_CLK0_IN3               (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Clock 3 */
#define BITM_DAI_EXTD_CLK0_IN2               (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Clock 2 */
#define BITM_DAI_EXTD_CLK0_IN1               (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Clock 1 */
#define BITM_DAI_EXTD_CLK0_IN0               (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_CLK1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_CLK1_IN5               20            /*  Extended Input Clock 5 */
#define BITP_DAI_EXTD_CLK1_IN4               16            /*  Extended Input Clock 4 */
#define BITP_DAI_EXTD_CLK1_IN3               12            /*  Extended Input Clock 3 */
#define BITP_DAI_EXTD_CLK1_IN2                8            /*  Extended Input Clock 2 */
#define BITP_DAI_EXTD_CLK1_IN1                4            /*  Extended Input Clock 1 */
#define BITP_DAI_EXTD_CLK1_IN0                0            /*  Extended Input Clock 0 */
#define BITM_DAI_EXTD_CLK1_IN5               (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Clock 5 */
#define BITM_DAI_EXTD_CLK1_IN4               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Clock 4 */
#define BITM_DAI_EXTD_CLK1_IN3               (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Clock 3 */
#define BITM_DAI_EXTD_CLK1_IN2               (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Clock 2 */
#define BITM_DAI_EXTD_CLK1_IN1               (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Clock 1 */
#define BITM_DAI_EXTD_CLK1_IN0               (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_CLK2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_CLK2_IN4               16            /*  Extended Input Clock 4 */
#define BITP_DAI_EXTD_CLK2_IN3               12            /*  Extended Input Clock 3 */
#define BITP_DAI_EXTD_CLK2_IN2                8            /*  Extended Input Clock 2 */
#define BITP_DAI_EXTD_CLK2_IN1                4            /*  Extended Input Clock 1 */
#define BITP_DAI_EXTD_CLK2_IN0                0            /*  Extended Input Clock 0 */
#define BITM_DAI_EXTD_CLK2_IN4               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Clock 4 */
#define BITM_DAI_EXTD_CLK2_IN3               (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Clock 3 */
#define BITM_DAI_EXTD_CLK2_IN2               (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Clock 2 */
#define BITM_DAI_EXTD_CLK2_IN1               (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Clock 1 */
#define BITM_DAI_EXTD_CLK2_IN0               (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_CLK3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_CLK3_IN5               20            /*  Extended Input Clock 0 */
#define BITM_DAI_EXTD_CLK3_IN5               (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_CLK4                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_CLK4_IN5               20            /*  Extended Input Clock 5 */
#define BITP_DAI_EXTD_CLK4_IN4               16            /*  Extended Input Clock 4 */
#define BITP_DAI_EXTD_CLK4_IN3               12            /*  Extended Input Clock 3 */
#define BITP_DAI_EXTD_CLK4_IN2                8            /*  Extended Input Clock 2 */
#define BITP_DAI_EXTD_CLK4_IN1                4            /*  Extended Input Clock 1 */
#define BITP_DAI_EXTD_CLK4_IN0                0            /*  Extended Input Clock 0 */
#define BITM_DAI_EXTD_CLK4_IN5               (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Clock 5 */
#define BITM_DAI_EXTD_CLK4_IN4               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Clock 4 */
#define BITM_DAI_EXTD_CLK4_IN3               (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Clock 3 */
#define BITM_DAI_EXTD_CLK4_IN2               (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Clock 2 */
#define BITM_DAI_EXTD_CLK4_IN1               (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Clock 1 */
#define BITM_DAI_EXTD_CLK4_IN0               (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_CLK5                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_CLK5_IN5               20            /*  Extended Input Clock 5 */
#define BITP_DAI_EXTD_CLK5_IN4               16            /*  Extended Input Clock 4 */
#define BITP_DAI_EXTD_CLK5_IN3               12            /*  Extended Input Clock 3 */
#define BITP_DAI_EXTD_CLK5_IN2                8            /*  Extended Input Clock 2 */
#define BITP_DAI_EXTD_CLK5_IN1                4            /*  Extended Input Clock 1 */
#define BITP_DAI_EXTD_CLK5_IN0                0            /*  Extended Input Clock 0 */
#define BITM_DAI_EXTD_CLK5_IN5               (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Clock 5 */
#define BITM_DAI_EXTD_CLK5_IN4               (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Clock 4 */
#define BITM_DAI_EXTD_CLK5_IN3               (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Clock 3 */
#define BITM_DAI_EXTD_CLK5_IN2               (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Clock 2 */
#define BITM_DAI_EXTD_CLK5_IN1               (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Clock 1 */
#define BITM_DAI_EXTD_CLK5_IN0               (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT0_IN4               17            /*  Extended Input Data 4 */
#define BITP_DAI_EXTD_DAT0_IN3               13            /*  Extended Input Data 3 */
#define BITP_DAI_EXTD_DAT0_IN2                9            /*  Extended Input Data 2 */
#define BITP_DAI_EXTD_DAT0_IN1                5            /*  Extended Input Data 1 */
#define BITP_DAI_EXTD_DAT0_IN0                1            /*  Extended Input Data 0 */
#define BITM_DAI_EXTD_DAT0_IN4               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Input Data 4 */
#define BITM_DAI_EXTD_DAT0_IN3               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Input Data 3 */
#define BITM_DAI_EXTD_DAT0_IN2               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Input Data 2 */
#define BITM_DAI_EXTD_DAT0_IN1               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Input Data 1 */
#define BITM_DAI_EXTD_DAT0_IN0               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT1_IN4               17            /*  Extended Input Data 4 */
#define BITP_DAI_EXTD_DAT1_IN3               13            /*  Extended Input Data 3 */
#define BITP_DAI_EXTD_DAT1_IN2                9            /*  Extended Input Data 2 */
#define BITP_DAI_EXTD_DAT1_IN1                5            /*  Extended Input Data 1 */
#define BITP_DAI_EXTD_DAT1_IN0                1            /*  Extended Input Data 0 */
#define BITM_DAI_EXTD_DAT1_IN4               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Input Data 4 */
#define BITM_DAI_EXTD_DAT1_IN3               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Input Data 3 */
#define BITM_DAI_EXTD_DAT1_IN2               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Input Data 2 */
#define BITM_DAI_EXTD_DAT1_IN1               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Input Data 1 */
#define BITM_DAI_EXTD_DAT1_IN0               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT2_IN4               17            /*  Extended Input Data 4 */
#define BITP_DAI_EXTD_DAT2_IN3               13            /*  Extended Input Data 3 */
#define BITP_DAI_EXTD_DAT2_IN2                9            /*  Extended Input Data 2 */
#define BITP_DAI_EXTD_DAT2_IN1                5            /*  Extended Input Data 1 */
#define BITP_DAI_EXTD_DAT2_IN0                1            /*  Extended Input Data 0 */
#define BITM_DAI_EXTD_DAT2_IN4               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Input Data 4 */
#define BITM_DAI_EXTD_DAT2_IN3               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Input Data 3 */
#define BITM_DAI_EXTD_DAT2_IN2               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Input Data 2 */
#define BITM_DAI_EXTD_DAT2_IN1               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Input Data 1 */
#define BITM_DAI_EXTD_DAT2_IN0               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT3_IN4               17            /*  Extended Input Data 4 */
#define BITP_DAI_EXTD_DAT3_IN3               13            /*  Extended Input Data 3 */
#define BITP_DAI_EXTD_DAT3_IN2                9            /*  Extended Input Data 2 */
#define BITP_DAI_EXTD_DAT3_IN1                5            /*  Extended Input Data 1 */
#define BITP_DAI_EXTD_DAT3_IN0                1            /*  Extended Input Data 0 */
#define BITM_DAI_EXTD_DAT3_IN4               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Input Data 4 */
#define BITM_DAI_EXTD_DAT3_IN3               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Input Data 3 */
#define BITM_DAI_EXTD_DAT3_IN2               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Input Data 2 */
#define BITM_DAI_EXTD_DAT3_IN1               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Input Data 1 */
#define BITM_DAI_EXTD_DAT3_IN0               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT4                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT4_IN2                9            /*  Extended Input Data 2 */
#define BITP_DAI_EXTD_DAT4_IN1                5            /*  Extended Input Data 1 */
#define BITP_DAI_EXTD_DAT4_IN0                1            /*  Extended Input Data 0 */
#define BITM_DAI_EXTD_DAT4_IN2               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Input Data 2 */
#define BITM_DAI_EXTD_DAT4_IN1               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Input Data 1 */
#define BITM_DAI_EXTD_DAT4_IN0               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT5                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT5_IN4               17            /*  Extended Input Data 4 */
#define BITM_DAI_EXTD_DAT5_IN4               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Input Data 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_DAT6                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_DAT6_IN3               13            /*  Extended Input Data 3 */
#define BITP_DAI_EXTD_DAT6_IN2                9            /*  Extended Input Data 2 */
#define BITP_DAI_EXTD_DAT6_IN1                5            /*  Extended Input Data 1 */
#define BITP_DAI_EXTD_DAT6_IN0                1            /*  Extended Input Data 0 */
#define BITM_DAI_EXTD_DAT6_IN3               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Input Data 3 */
#define BITM_DAI_EXTD_DAT6_IN2               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Input Data 2 */
#define BITM_DAI_EXTD_DAT6_IN1               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Input Data 1 */
#define BITM_DAI_EXTD_DAT6_IN0               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_FS0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_FS0_IN5                20            /*  Extended Input Frame Sync 5 */
#define BITP_DAI_EXTD_FS0_IN4                16            /*  Extended Input Frame Sync 4 */
#define BITP_DAI_EXTD_FS0_IN3                12            /*  Extended Input Frame Sync 3 */
#define BITP_DAI_EXTD_FS0_IN2                 8            /*  Extended Input Frame Sync 2 */
#define BITP_DAI_EXTD_FS0_IN1                 4            /*  Extended Input Frame Sync 1 */
#define BITP_DAI_EXTD_FS0_IN0                 0            /*  Extended Input Frame Sync 0 */
#define BITM_DAI_EXTD_FS0_IN5                (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Frame Sync 5 */
#define BITM_DAI_EXTD_FS0_IN4                (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Frame Sync 4 */
#define BITM_DAI_EXTD_FS0_IN3                (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Frame Sync 3 */
#define BITM_DAI_EXTD_FS0_IN2                (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Frame Sync 2 */
#define BITM_DAI_EXTD_FS0_IN1                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Frame Sync 1 */
#define BITM_DAI_EXTD_FS0_IN0                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_FS1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_FS1_IN5                20            /*  Extended Input Frame Sync 5 */
#define BITP_DAI_EXTD_FS1_IN4                16            /*  Extended Input Frame Sync 4 */
#define BITP_DAI_EXTD_FS1_IN3                12            /*  Extended Input Frame Sync 3 */
#define BITP_DAI_EXTD_FS1_IN2                 8            /*  Extended Input Frame Sync 2 */
#define BITP_DAI_EXTD_FS1_IN1                 4            /*  Extended Input Frame Sync 1 */
#define BITP_DAI_EXTD_FS1_IN0                 0            /*  Extended Input Frame Sync 0 */
#define BITM_DAI_EXTD_FS1_IN5                (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input Frame Sync 5 */
#define BITM_DAI_EXTD_FS1_IN4                (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input Frame Sync 4 */
#define BITM_DAI_EXTD_FS1_IN3                (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Frame Sync 3 */
#define BITM_DAI_EXTD_FS1_IN2                (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Frame Sync 2 */
#define BITM_DAI_EXTD_FS1_IN1                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Frame Sync 1 */
#define BITM_DAI_EXTD_FS1_IN0                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_FS2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_FS2_IN2                 8            /*  Extended Input Frame Sync 2 */
#define BITP_DAI_EXTD_FS2_IN1                 4            /*  Extended Input Frame Sync 1 */
#define BITP_DAI_EXTD_FS2_IN0                 0            /*  Extended Input Frame Sync 0 */
#define BITM_DAI_EXTD_FS2_IN2                (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Frame Sync 2 */
#define BITM_DAI_EXTD_FS2_IN1                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Frame Sync 1 */
#define BITM_DAI_EXTD_FS2_IN0                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_FS4                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_FS4_IN3                12            /*  Extended Input Frame Sync 3 */
#define BITP_DAI_EXTD_FS4_IN2                 8            /*  Extended Input Frame Sync 2 */
#define BITP_DAI_EXTD_FS4_IN1                 4            /*  Extended Input Frame Sync 1 */
#define BITP_DAI_EXTD_FS4_IN0                 0            /*  Extended Input Frame Sync 0 */
#define BITM_DAI_EXTD_FS4_IN3                (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input Frame Sync 3 */
#define BITM_DAI_EXTD_FS4_IN2                (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input Frame Sync 2 */
#define BITM_DAI_EXTD_FS4_IN1                (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input Frame Sync 1 */
#define BITM_DAI_EXTD_FS4_IN0                (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PIN0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PIN0_PB04              13            /*  Extended Pin Buffer 4 Input */
#define BITP_DAI_EXTD_PIN0_PB03               9            /*  Extended Pin Buffer 3 Input */
#define BITP_DAI_EXTD_PIN0_PB02               5            /*  Extended Pin Buffer 2 Input */
#define BITP_DAI_EXTD_PIN0_PB01               1            /*  Extended Pin Buffer 1 Input */
#define BITM_DAI_EXTD_PIN0_PB04              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer 4 Input */
#define BITM_DAI_EXTD_PIN0_PB03              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer 3 Input */
#define BITM_DAI_EXTD_PIN0_PB02              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer 2 Input */
#define BITM_DAI_EXTD_PIN0_PB01              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer 1 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PIN1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PIN1_PB08              13            /*  Extended Pin Buffer 8 Input */
#define BITP_DAI_EXTD_PIN1_PB07               9            /*  Extended Pin Buffer 7 Input */
#define BITP_DAI_EXTD_PIN1_PB06               5            /*  Extended Pin Buffer 6 Input */
#define BITP_DAI_EXTD_PIN1_PB05               1            /*  Extended Pin Buffer 5 Input */
#define BITM_DAI_EXTD_PIN1_PB08              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer 8 Input */
#define BITM_DAI_EXTD_PIN1_PB07              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer 7 Input */
#define BITM_DAI_EXTD_PIN1_PB06              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer 6 Input */
#define BITM_DAI_EXTD_PIN1_PB05              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer 5 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PIN2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PIN2_PB12              13            /*  Extended Pin Buffer 12 Input */
#define BITP_DAI_EXTD_PIN2_PB11               9            /*  Extended Pin Buffer 11 Input */
#define BITP_DAI_EXTD_PIN2_PB10               5            /*  Extended Pin Buffer 10 Input */
#define BITP_DAI_EXTD_PIN2_PB09               1            /*  Extended Pin Buffer 9 Input */
#define BITM_DAI_EXTD_PIN2_PB12              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer 12 Input */
#define BITM_DAI_EXTD_PIN2_PB11              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer 11 Input */
#define BITM_DAI_EXTD_PIN2_PB10              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer 10 Input */
#define BITM_DAI_EXTD_PIN2_PB09              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer 9 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PIN3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PIN3_PB16              13            /*  Extended Pin Buffer 16 Input */
#define BITP_DAI_EXTD_PIN3_PB15               9            /*  Extended Pin Buffer 15 Input */
#define BITP_DAI_EXTD_PIN3_PB14               5            /*  Extended Pin Buffer 14 Input */
#define BITP_DAI_EXTD_PIN3_PB13               1            /*  Extended Pin Buffer 13 Input */
#define BITM_DAI_EXTD_PIN3_PB16              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer 16 Input */
#define BITM_DAI_EXTD_PIN3_PB15              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer 15 Input */
#define BITM_DAI_EXTD_PIN3_PB14              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer 14 Input */
#define BITM_DAI_EXTD_PIN3_PB13              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer 13 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PIN4                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PIN4_PB20              13            /*  Extended Pin Buffer 20 Input */
#define BITP_DAI_EXTD_PIN4_PB19               9            /*  Extended Pin Buffer 19 Input */
#define BITP_DAI_EXTD_PIN4_PB18               5            /*  Extended Pin Buffer 18 Input */
#define BITP_DAI_EXTD_PIN4_PB17               1            /*  Extended Pin Buffer 17 Input */
#define BITM_DAI_EXTD_PIN4_PB20              (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer 20 Input */
#define BITM_DAI_EXTD_PIN4_PB19              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer 19 Input */
#define BITM_DAI_EXTD_PIN4_PB18              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer 18 Input */
#define BITM_DAI_EXTD_PIN4_PB17              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer 17 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_MISC0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_MISC0_IN11             20            /*  Extended Input 11 */
#define BITP_DAI_EXTD_MISC0_IN10             16            /*  Extended Input 10 */
#define BITP_DAI_EXTD_MISC0_IN9              12            /*  Extended Input 9 */
#define BITP_DAI_EXTD_MISC0_IN8               8            /*  Extended Input 8 */
#define BITP_DAI_EXTD_MISC0_IN7               4            /*  Extended Input 7 */
#define BITP_DAI_EXTD_MISC0_IN6               0            /*  Extended Input 6 */
#define BITM_DAI_EXTD_MISC0_IN11             (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input 11 */
#define BITM_DAI_EXTD_MISC0_IN10             (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input 10 */
#define BITM_DAI_EXTD_MISC0_IN9              (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input 9 */
#define BITM_DAI_EXTD_MISC0_IN8              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input 8 */
#define BITM_DAI_EXTD_MISC0_IN7              (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input 7 */
#define BITM_DAI_EXTD_MISC0_IN6              (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_MISC1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_MISC1_IN5              20            /*  Extended Input 5 */
#define BITP_DAI_EXTD_MISC1_IN4              16            /*  Extended Input 4 */
#define BITP_DAI_EXTD_MISC1_IN3              12            /*  Extended Input 3 */
#define BITP_DAI_EXTD_MISC1_IN2               8            /*  Extended Input 2 */
#define BITP_DAI_EXTD_MISC1_IN1               4            /*  Extended Input 1 */
#define BITP_DAI_EXTD_MISC1_IN0               0            /*  Extended Input 0 */
#define BITM_DAI_EXTD_MISC1_IN5              (_ADI_MSK_3(0x00300000,0x00300000UL, uint32_t  ))    /*  Extended Input 5 */
#define BITM_DAI_EXTD_MISC1_IN4              (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  Extended Input 4 */
#define BITM_DAI_EXTD_MISC1_IN3              (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input 3 */
#define BITM_DAI_EXTD_MISC1_IN2              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input 2 */
#define BITM_DAI_EXTD_MISC1_IN1              (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input 1 */
#define BITM_DAI_EXTD_MISC1_IN0              (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_MISC2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_MISC2_IN3              12            /*  Extended Input 3 */
#define BITP_DAI_EXTD_MISC2_IN2               8            /*  Extended Input 2 */
#define BITP_DAI_EXTD_MISC2_IN1               4            /*  Extended Input 1 */
#define BITP_DAI_EXTD_MISC2_IN0               0            /*  Extended Input 0 */
#define BITM_DAI_EXTD_MISC2_IN3              (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Extended Input 3 */
#define BITM_DAI_EXTD_MISC2_IN2              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Extended Input 2 */
#define BITM_DAI_EXTD_MISC2_IN1              (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Extended Input 1 */
#define BITM_DAI_EXTD_MISC2_IN0              (_ADI_MSK_3(0x00000003,0x00000003UL, uint32_t  ))    /*  Extended Input 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PBEN0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PBEN0_PB05             17            /*  Extended Pin Buffer Enable 5 */
#define BITP_DAI_EXTD_PBEN0_PB04             13            /*  Extended Pin Buffer Enable 4 */
#define BITP_DAI_EXTD_PBEN0_PB03              9            /*  Extended Pin Buffer Enable 3 */
#define BITP_DAI_EXTD_PBEN0_PB02              5            /*  Extended Pin Buffer Enable 2 */
#define BITP_DAI_EXTD_PBEN0_PB01              1            /*  Extended Pin Buffer Enable 1 */
#define BITM_DAI_EXTD_PBEN0_PB05             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 5 */
#define BITM_DAI_EXTD_PBEN0_PB04             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 4 */
#define BITM_DAI_EXTD_PBEN0_PB03             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer Enable 3 */
#define BITM_DAI_EXTD_PBEN0_PB02             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer Enable 2 */
#define BITM_DAI_EXTD_PBEN0_PB01             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer Enable 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PBEN1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PBEN1_PB10             17            /*  Extended Pin Buffer Enable 10 */
#define BITP_DAI_EXTD_PBEN1_PB09             13            /*  Extended Pin Buffer Enable 9 */
#define BITP_DAI_EXTD_PBEN1_PB08              9            /*  Extended Pin Buffer Enable 8 */
#define BITP_DAI_EXTD_PBEN1_PB07              5            /*  Extended Pin Buffer Enable 7 */
#define BITP_DAI_EXTD_PBEN1_PB06              1            /*  Extended Pin Buffer Enable 6 */
#define BITM_DAI_EXTD_PBEN1_PB10             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 10 */
#define BITM_DAI_EXTD_PBEN1_PB09             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 9 */
#define BITM_DAI_EXTD_PBEN1_PB08             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer Enable 8 */
#define BITM_DAI_EXTD_PBEN1_PB07             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer Enable 7 */
#define BITM_DAI_EXTD_PBEN1_PB06             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer Enable 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PBEN2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PBEN2_PB15             17            /*  Extended Pin Buffer Enable 15 */
#define BITP_DAI_EXTD_PBEN2_PB14             13            /*  Extended Pin Buffer Enable 14 */
#define BITP_DAI_EXTD_PBEN2_PB13              9            /*  Extended Pin Buffer Enable 13 */
#define BITP_DAI_EXTD_PBEN2_PB12              5            /*  Extended Pin Buffer Enable 12 */
#define BITP_DAI_EXTD_PBEN2_PB11              1            /*  Extended Pin Buffer Enable 11 */
#define BITM_DAI_EXTD_PBEN2_PB15             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 15 */
#define BITM_DAI_EXTD_PBEN2_PB14             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 14 */
#define BITM_DAI_EXTD_PBEN2_PB13             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer Enable 13 */
#define BITM_DAI_EXTD_PBEN2_PB12             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer Enable 12 */
#define BITM_DAI_EXTD_PBEN2_PB11             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer Enable 11 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_EXTD_PBEN3                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_EXTD_PBEN3_PB20             17            /*  Extended Pin Buffer Enable 20 */
#define BITP_DAI_EXTD_PBEN3_PB19             13            /*  Extended Pin Buffer Enable 19 */
#define BITP_DAI_EXTD_PBEN3_PB18              9            /*  Extended Pin Buffer Enable 18 */
#define BITP_DAI_EXTD_PBEN3_PB17              5            /*  Extended Pin Buffer Enable 17 */
#define BITP_DAI_EXTD_PBEN3_PB16              1            /*  Extended Pin Buffer Enable 16 */
#define BITM_DAI_EXTD_PBEN3_PB20             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 20 */
#define BITM_DAI_EXTD_PBEN3_PB19             (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Extended Pin Buffer Enable 19 */
#define BITM_DAI_EXTD_PBEN3_PB18             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Extended Pin Buffer Enable 18 */
#define BITM_DAI_EXTD_PBEN3_PB17             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Extended Pin Buffer Enable 17 */
#define BITM_DAI_EXTD_PBEN3_PB16             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Extended Pin Buffer Enable 16 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_CLK0                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_CLK0_IN5                    25            /*  Input Clock 5 */
#define BITP_DAI_CLK0_IN4                    20            /*  Input Clock 4 */
#define BITP_DAI_CLK0_IN3                    15            /*  Input Clock 3 */
#define BITP_DAI_CLK0_IN2                    10            /*  Input Clock 2 */
#define BITP_DAI_CLK0_IN1                     5            /*  Input Clock 1 */
#define BITP_DAI_CLK0_IN0                     0            /*  Input Clock 0 */
#define BITM_DAI_CLK0_IN5                    (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Clock 5 */
#define BITM_DAI_CLK0_IN4                    (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Clock 4 */
#define BITM_DAI_CLK0_IN3                    (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Clock 3 */
#define BITM_DAI_CLK0_IN2                    (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Clock 2 */
#define BITM_DAI_CLK0_IN1                    (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Clock 1 */
#define BITM_DAI_CLK0_IN0                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_CLK1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_CLK1_IN5                    25            /*  Input Clock 5 */
#define BITP_DAI_CLK1_IN4                    20            /*  Input Clock 4 */
#define BITP_DAI_CLK1_IN3                    15            /*  Input Clock 3 */
#define BITP_DAI_CLK1_IN2                    10            /*  Input Clock 2 */
#define BITP_DAI_CLK1_IN1                     5            /*  Input Clock 1 */
#define BITP_DAI_CLK1_IN0                     0            /*  Input Clock 0 */
#define BITM_DAI_CLK1_IN5                    (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Clock 5 */
#define BITM_DAI_CLK1_IN4                    (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Clock 4 */
#define BITM_DAI_CLK1_IN3                    (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Clock 3 */
#define BITM_DAI_CLK1_IN2                    (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Clock 2 */
#define BITM_DAI_CLK1_IN1                    (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Clock 1 */
#define BITM_DAI_CLK1_IN0                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_CLK2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_CLK2_IN4                    20            /*  Input Clock 4 */
#define BITP_DAI_CLK2_IN3                    15            /*  Input Clock 3 */
#define BITP_DAI_CLK2_IN2                    10            /*  Input Clock 2 */
#define BITP_DAI_CLK2_IN1                     5            /*  Input Clock 1 */
#define BITP_DAI_CLK2_IN0                     0            /*  Input Clock 0 */
#define BITM_DAI_CLK2_IN4                    (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Clock 4 */
#define BITM_DAI_CLK2_IN3                    (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Clock 3 */
#define BITM_DAI_CLK2_IN2                    (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Clock 2 */
#define BITM_DAI_CLK2_IN1                    (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Clock 1 */
#define BITM_DAI_CLK2_IN0                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_CLK3                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_CLK3_IN5                    25            /*  Input Clock 5 */
#define BITM_DAI_CLK3_IN5                    (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Clock 5 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_CLK4                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_CLK4_IN5                    25            /*  Input Clock 5 */
#define BITP_DAI_CLK4_IN4                    20            /*  Input Clock 4 */
#define BITP_DAI_CLK4_IN3                    15            /*  Input Clock 3 */
#define BITP_DAI_CLK4_IN1                     5            /*  Input Clock 1 */
#define BITP_DAI_CLK4_IN0                     0            /*  Input Clock 0 */
#define BITM_DAI_CLK4_IN5                    (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Clock 5 */
#define BITM_DAI_CLK4_IN4                    (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Clock 4 */
#define BITM_DAI_CLK4_IN3                    (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Clock 3 */
#define BITM_DAI_CLK4_IN1                    (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Clock 1 */
#define BITM_DAI_CLK4_IN0                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_CLK5                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_CLK5_IN5                    25            /*  Input Clock 5 */
#define BITP_DAI_CLK5_IN4                    20            /*  Input Clock 4 */
#define BITP_DAI_CLK5_IN3                    15            /*  Input Clock 3 */
#define BITP_DAI_CLK5_IN2                    10            /*  Input Clock 2 */
#define BITP_DAI_CLK5_IN1                     5            /*  Input Clock 1 */
#define BITP_DAI_CLK5_IN0                     0            /*  Input Clock 0 */
#define BITM_DAI_CLK5_IN5                    (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Clock 5 */
#define BITM_DAI_CLK5_IN4                    (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Clock 4 */
#define BITM_DAI_CLK5_IN3                    (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Clock 3 */
#define BITM_DAI_CLK5_IN2                    (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Clock 2 */
#define BITM_DAI_CLK5_IN1                    (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Clock 1 */
#define BITM_DAI_CLK5_IN0                    (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Clock 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT0                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT0_IN4                    24            /*  Input Data 4 */
#define BITP_DAI_DAT0_IN3                    18            /*  Input Data 3 */
#define BITP_DAI_DAT0_IN2                    12            /*  Input Data 2 */
#define BITP_DAI_DAT0_IN1                     6            /*  Input Data 1 */
#define BITP_DAI_DAT0_IN0                     0            /*  Input Data 0 */
#define BITM_DAI_DAT0_IN4                    (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Input Data 4 */
#define BITM_DAI_DAT0_IN3                    (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Input Data 3 */
#define BITM_DAI_DAT0_IN2                    (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Input Data 2 */
#define BITM_DAI_DAT0_IN1                    (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Input Data 1 */
#define BITM_DAI_DAT0_IN0                    (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT1_IN4                    24            /*  Input Data 4 */
#define BITP_DAI_DAT1_IN3                    18            /*  Input Data 3 */
#define BITP_DAI_DAT1_IN2                    12            /*  Input Data 2 */
#define BITP_DAI_DAT1_IN1                     6            /*  Input Data 1 */
#define BITP_DAI_DAT1_IN0                     0            /*  Input Data 0 */
#define BITM_DAI_DAT1_IN4                    (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Input Data 4 */
#define BITM_DAI_DAT1_IN3                    (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Input Data 3 */
#define BITM_DAI_DAT1_IN2                    (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Input Data 2 */
#define BITM_DAI_DAT1_IN1                    (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Input Data 1 */
#define BITM_DAI_DAT1_IN0                    (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT2_IN4                    24            /*  Input Data 4 */
#define BITP_DAI_DAT2_IN3                    18            /*  Input Data 3 */
#define BITP_DAI_DAT2_IN2                    12            /*  Input Data 2 */
#define BITP_DAI_DAT2_IN1                     6            /*  Input Data 1 */
#define BITP_DAI_DAT2_IN0                     0            /*  Input Data 0 */
#define BITM_DAI_DAT2_IN4                    (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Input Data 4 */
#define BITM_DAI_DAT2_IN3                    (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Input Data 3 */
#define BITM_DAI_DAT2_IN2                    (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Input Data 2 */
#define BITM_DAI_DAT2_IN1                    (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Input Data 1 */
#define BITM_DAI_DAT2_IN0                    (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT3                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT3_IN4                    24            /*  Input Data 4 */
#define BITP_DAI_DAT3_IN3                    18            /*  Input Data 3 */
#define BITP_DAI_DAT3_IN2                    12            /*  Input Data 2 */
#define BITP_DAI_DAT3_IN1                     6            /*  Input Data 1 */
#define BITP_DAI_DAT3_IN0                     0            /*  Input Data 0 */
#define BITM_DAI_DAT3_IN4                    (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Input Data 4 */
#define BITM_DAI_DAT3_IN3                    (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Input Data 3 */
#define BITM_DAI_DAT3_IN2                    (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Input Data 2 */
#define BITM_DAI_DAT3_IN1                    (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Input Data 1 */
#define BITM_DAI_DAT3_IN0                    (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT4                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT4_IN2                    12            /*  Input Data 2 */
#define BITP_DAI_DAT4_IN1                     6            /*  Input Data 1 */
#define BITP_DAI_DAT4_IN0                     0            /*  Input Data 0 */
#define BITM_DAI_DAT4_IN2                    (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Input Data 2 */
#define BITM_DAI_DAT4_IN1                    (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Input Data 1 */
#define BITM_DAI_DAT4_IN0                    (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT5                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT5_IN4                    24            /*  Input Data 4 */
#define BITM_DAI_DAT5_IN4                    (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Input Data 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_DAT6                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_DAT6_IN4                    24            /*  Input Data 4 */
#define BITP_DAI_DAT6_IN3                    18            /*  Input Data 3 */
#define BITP_DAI_DAT6_IN2                    12            /*  Input Data 2 */
#define BITP_DAI_DAT6_IN1                     6            /*  Input Data 1 */
#define BITP_DAI_DAT6_IN0                     0            /*  Input Data 0 */
#define BITM_DAI_DAT6_IN4                    (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Input Data 4 */
#define BITM_DAI_DAT6_IN3                    (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Input Data 3 */
#define BITM_DAI_DAT6_IN2                    (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Input Data 2 */
#define BITM_DAI_DAT6_IN1                    (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Input Data 1 */
#define BITM_DAI_DAT6_IN0                    (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Input Data 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_FS0                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_FS0_IN5                     25            /*  Input Frame Sync 5 */
#define BITP_DAI_FS0_IN4                     20            /*  Input Frame Sync 4 */
#define BITP_DAI_FS0_IN3                     15            /*  Input Frame Sync 3 */
#define BITP_DAI_FS0_IN2                     10            /*  Input Frame Sync 2 */
#define BITP_DAI_FS0_IN1                      5            /*  Input Frame Sync 1 */
#define BITP_DAI_FS0_IN0                      0            /*  Input Frame Sync 0 */
#define BITM_DAI_FS0_IN5                     (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Frame Sync 5 */
#define BITM_DAI_FS0_IN4                     (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Frame Sync 4 */
#define BITM_DAI_FS0_IN3                     (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Frame Sync 3 */
#define BITM_DAI_FS0_IN2                     (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Frame Sync 2 */
#define BITM_DAI_FS0_IN1                     (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Frame Sync 1 */
#define BITM_DAI_FS0_IN0                     (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_FS1                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_FS1_IN5                     25            /*  Input Frame Sync 5 */
#define BITP_DAI_FS1_IN4                     20            /*  Input Frame Sync 4 */
#define BITP_DAI_FS1_IN3                     15            /*  Input Frame Sync 3 */
#define BITP_DAI_FS1_IN2                     10            /*  Input Frame Sync 2 */
#define BITP_DAI_FS1_IN1                      5            /*  Input Frame Sync 1 */
#define BITP_DAI_FS1_IN0                      0            /*  Input Frame Sync 0 */
#define BITM_DAI_FS1_IN5                     (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input Frame Sync 5 */
#define BITM_DAI_FS1_IN4                     (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input Frame Sync 4 */
#define BITM_DAI_FS1_IN3                     (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Frame Sync 3 */
#define BITM_DAI_FS1_IN2                     (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Frame Sync 2 */
#define BITM_DAI_FS1_IN1                     (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Frame Sync 1 */
#define BITM_DAI_FS1_IN0                     (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_FS2                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_FS2_IN2                     10            /*  Input Frame Sync 2 */
#define BITP_DAI_FS2_IN1                      5            /*  Input Frame Sync 1 */
#define BITP_DAI_FS2_IN0                      0            /*  Input Frame Sync 0 */
#define BITM_DAI_FS2_IN2                     (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Frame Sync 2 */
#define BITM_DAI_FS2_IN1                     (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Frame Sync 1 */
#define BITM_DAI_FS2_IN0                     (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_FS4                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_FS4_IN3                     15            /*  Input Frame Sync 3 */
#define BITP_DAI_FS4_IN2                     10            /*  Input Frame Sync 2 */
#define BITP_DAI_FS4_IN1                      5            /*  Input Frame Sync 1 */
#define BITP_DAI_FS4_IN0                      0            /*  Input Frame Sync 0 */
#define BITM_DAI_FS4_IN3                     (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input Frame Sync 3 */
#define BITM_DAI_FS4_IN2                     (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input Frame Sync 2 */
#define BITM_DAI_FS4_IN1                     (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input Frame Sync 1 */
#define BITM_DAI_FS4_IN0                     (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input Frame Sync 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PIN0                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PIN0_PB04                   21            /*  Pin Buffer 4 Input */
#define BITP_DAI_PIN0_PB03                   14            /*  Pin Buffer 3 Input */
#define BITP_DAI_PIN0_PB02                    7            /*  Pin Buffer 2 Input */
#define BITP_DAI_PIN0_PB01                    0            /*  Pin Buffer 1 Input */
#define BITM_DAI_PIN0_PB04                   (_ADI_MSK_3(0x0FE00000,0x0FE00000UL, uint32_t  ))    /*  Pin Buffer 4 Input */
#define BITM_DAI_PIN0_PB03                   (_ADI_MSK_3(0x001FC000,0x001FC000UL, uint32_t  ))    /*  Pin Buffer 3 Input */
#define BITM_DAI_PIN0_PB02                   (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Pin Buffer 2 Input */
#define BITM_DAI_PIN0_PB01                   (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Pin Buffer 1 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PIN1                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PIN1_PB08                   21            /*  Pin Buffer 8 Input */
#define BITP_DAI_PIN1_PB07                   14            /*  Pin Buffer 7 Input */
#define BITP_DAI_PIN1_PB06                    7            /*  Pin Buffer 6 Input */
#define BITP_DAI_PIN1_PB05                    0            /*  Pin Buffer 5 Input */
#define BITM_DAI_PIN1_PB08                   (_ADI_MSK_3(0x0FE00000,0x0FE00000UL, uint32_t  ))    /*  Pin Buffer 8 Input */
#define BITM_DAI_PIN1_PB07                   (_ADI_MSK_3(0x001FC000,0x001FC000UL, uint32_t  ))    /*  Pin Buffer 7 Input */
#define BITM_DAI_PIN1_PB06                   (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Pin Buffer 6 Input */
#define BITM_DAI_PIN1_PB05                   (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Pin Buffer 5 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PIN2                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PIN2_PB12                   21            /*  Pin Buffer 12 Input */
#define BITP_DAI_PIN2_PB11                   14            /*  Pin Buffer 11 Input */
#define BITP_DAI_PIN2_PB10                    7            /*  Pin Buffer 10 Input */
#define BITP_DAI_PIN2_PB09                    0            /*  Pin Buffer 9 Input */
#define BITM_DAI_PIN2_PB12                   (_ADI_MSK_3(0x0FE00000,0x0FE00000UL, uint32_t  ))    /*  Pin Buffer 12 Input */
#define BITM_DAI_PIN2_PB11                   (_ADI_MSK_3(0x001FC000,0x001FC000UL, uint32_t  ))    /*  Pin Buffer 11 Input */
#define BITM_DAI_PIN2_PB10                   (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Pin Buffer 10 Input */
#define BITM_DAI_PIN2_PB09                   (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Pin Buffer 9 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PIN3                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PIN3_PB16                   21            /*  Pin Buffer 16 Input */
#define BITP_DAI_PIN3_PB15                   14            /*  Pin Buffer 15 Input */
#define BITP_DAI_PIN3_PB14                    7            /*  Pin Buffer 14 Input */
#define BITP_DAI_PIN3_PB13                    0            /*  Pin Buffer 13 Input */
#define BITM_DAI_PIN3_PB16                   (_ADI_MSK_3(0x0FE00000,0x0FE00000UL, uint32_t  ))    /*  Pin Buffer 16 Input */
#define BITM_DAI_PIN3_PB15                   (_ADI_MSK_3(0x001FC000,0x001FC000UL, uint32_t  ))    /*  Pin Buffer 15 Input */
#define BITM_DAI_PIN3_PB14                   (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Pin Buffer 14 Input */
#define BITM_DAI_PIN3_PB13                   (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Pin Buffer 13 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PIN4                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PIN4_INV20                  29            /*  Pin Buffer 20 Invert */
#define BITP_DAI_PIN4_INV19                  28            /*  Pin Buffer 19 Invert */
#define BITP_DAI_PIN4_PB20                   21            /*  Pin Buffer 20 Input */
#define BITP_DAI_PIN4_PB19                   14            /*  Pin Buffer 19 Input */
#define BITP_DAI_PIN4_PB18                    7            /*  Pin Buffer 18 Input */
#define BITP_DAI_PIN4_PB17                    0            /*  Pin Buffer 17 Input */
#define BITM_DAI_PIN4_INV20                  (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Pin Buffer 20 Invert */
#define BITM_DAI_PIN4_INV19                  (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Pin Buffer 19 Invert */
#define BITM_DAI_PIN4_PB20                   (_ADI_MSK_3(0x0FE00000,0x0FE00000UL, uint32_t  ))    /*  Pin Buffer 20 Input */
#define BITM_DAI_PIN4_PB19                   (_ADI_MSK_3(0x001FC000,0x001FC000UL, uint32_t  ))    /*  Pin Buffer 19 Input */
#define BITM_DAI_PIN4_PB18                   (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Pin Buffer 18 Input */
#define BITM_DAI_PIN4_PB17                   (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Pin Buffer 17 Input */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_MISC0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_MISC0_INV11                 31            /*  Invert 11 */
#define BITP_DAI_MISC0_INV10                 30            /*  Invert 10 */
#define BITP_DAI_MISC0_IN11                  25            /*  Input 11 */
#define BITP_DAI_MISC0_IN10                  20            /*  Input 10 */
#define BITP_DAI_MISC0_IN9                   15            /*  Input 9 */
#define BITP_DAI_MISC0_IN8                   10            /*  Input 8 */
#define BITP_DAI_MISC0_IN7                    5            /*  Input 7 */
#define BITP_DAI_MISC0_IN6                    0            /*  Input 6 */
#define BITM_DAI_MISC0_INV11                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Invert 11 */
#define BITM_DAI_MISC0_INV10                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Invert 10 */
#define BITM_DAI_MISC0_IN11                  (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input 11 */
#define BITM_DAI_MISC0_IN10                  (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input 10 */
#define BITM_DAI_MISC0_IN9                   (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input 9 */
#define BITM_DAI_MISC0_IN8                   (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input 8 */
#define BITM_DAI_MISC0_IN7                   (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input 7 */
#define BITM_DAI_MISC0_IN6                   (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_MISC1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_MISC1_IN5                   25            /*  Input 5 */
#define BITP_DAI_MISC1_IN4                   20            /*  Input 4 */
#define BITP_DAI_MISC1_IN3                   15            /*  Input 3 */
#define BITP_DAI_MISC1_IN2                   10            /*  Input 2 */
#define BITP_DAI_MISC1_IN1                    5            /*  Input 1 */
#define BITP_DAI_MISC1_IN0                    0            /*  Input 0 */
#define BITM_DAI_MISC1_IN5                   (_ADI_MSK_3(0x3E000000,0x3E000000UL, uint32_t  ))    /*  Input 5 */
#define BITM_DAI_MISC1_IN4                   (_ADI_MSK_3(0x01F00000,0x01F00000UL, uint32_t  ))    /*  Input 4 */
#define BITM_DAI_MISC1_IN3                   (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input 3 */
#define BITM_DAI_MISC1_IN2                   (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input 2 */
#define BITM_DAI_MISC1_IN1                   (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input 1 */
#define BITM_DAI_MISC1_IN0                   (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_MISC2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_MISC2_IN3                   15            /*  Input 3 */
#define BITP_DAI_MISC2_IN2                   10            /*  Input 2 */
#define BITP_DAI_MISC2_IN1                    5            /*  Input 1 */
#define BITP_DAI_MISC2_IN0                    0            /*  Input 0 */
#define BITM_DAI_MISC2_IN3                   (_ADI_MSK_3(0x000F8000,0x000F8000UL, uint32_t  ))    /*  Input 3 */
#define BITM_DAI_MISC2_IN2                   (_ADI_MSK_3(0x00007C00,0x00007C00UL, uint32_t  ))    /*  Input 2 */
#define BITM_DAI_MISC2_IN1                   (_ADI_MSK_3(0x000003E0,0x000003E0UL, uint32_t  ))    /*  Input 1 */
#define BITM_DAI_MISC2_IN0                   (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Input 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PBEN0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PBEN0_PB05                  24            /*  Pin Buffer Enable 5 */
#define BITP_DAI_PBEN0_PB04                  18            /*  Pin Buffer Enable 4 */
#define BITP_DAI_PBEN0_PB03                  12            /*  Pin Buffer Enable 3 */
#define BITP_DAI_PBEN0_PB02                   6            /*  Pin Buffer Enable 2 */
#define BITP_DAI_PBEN0_PB01                   0            /*  Pin Buffer Enable 1 */
#define BITM_DAI_PBEN0_PB05                  (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Pin Buffer Enable 5 */
#define BITM_DAI_PBEN0_PB04                  (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Pin Buffer Enable 4 */
#define BITM_DAI_PBEN0_PB03                  (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Pin Buffer Enable 3 */
#define BITM_DAI_PBEN0_PB02                  (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Pin Buffer Enable 2 */
#define BITM_DAI_PBEN0_PB01                  (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Pin Buffer Enable 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PBEN1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PBEN1_PB10                  24            /*  Pin Buffer Enable 10 */
#define BITP_DAI_PBEN1_PB09                  18            /*  Pin Buffer Enable 9 */
#define BITP_DAI_PBEN1_PB08                  12            /*  Pin Buffer Enable 8 */
#define BITP_DAI_PBEN1_PB07                   6            /*  Pin Buffer Enable 7 */
#define BITP_DAI_PBEN1_PB06                   0            /*  Pin Buffer Enable 6 */
#define BITM_DAI_PBEN1_PB10                  (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Pin Buffer Enable 10 */
#define BITM_DAI_PBEN1_PB09                  (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Pin Buffer Enable 9 */
#define BITM_DAI_PBEN1_PB08                  (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Pin Buffer Enable 8 */
#define BITM_DAI_PBEN1_PB07                  (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Pin Buffer Enable 7 */
#define BITM_DAI_PBEN1_PB06                  (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Pin Buffer Enable 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PBEN2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PBEN2_PB15                  24            /*  Pin Buffer Enable 15 */
#define BITP_DAI_PBEN2_PB14                  18            /*  Pin Buffer Enable 14 */
#define BITP_DAI_PBEN2_PB13                  12            /*  Pin Buffer Enable 13 */
#define BITP_DAI_PBEN2_PB12                   6            /*  Pin Buffer Enable 12 */
#define BITP_DAI_PBEN2_PB11                   0            /*  Pin Buffer Enable 11 */
#define BITM_DAI_PBEN2_PB15                  (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Pin Buffer Enable 15 */
#define BITM_DAI_PBEN2_PB14                  (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Pin Buffer Enable 14 */
#define BITM_DAI_PBEN2_PB13                  (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Pin Buffer Enable 13 */
#define BITM_DAI_PBEN2_PB12                  (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Pin Buffer Enable 12 */
#define BITM_DAI_PBEN2_PB11                  (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Pin Buffer Enable 11 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PBEN3                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PBEN3_PB20                  24            /*  Pin Buffer Enable 20 */
#define BITP_DAI_PBEN3_PB19                  18            /*  Pin Buffer Enable 19 */
#define BITP_DAI_PBEN3_PB18                  12            /*  Pin Buffer Enable 18 */
#define BITP_DAI_PBEN3_PB17                   6            /*  Pin Buffer Enable 17 */
#define BITP_DAI_PBEN3_PB16                   0            /*  Pin Buffer Enable 16 */
#define BITM_DAI_PBEN3_PB20                  (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Pin Buffer Enable 20 */
#define BITM_DAI_PBEN3_PB19                  (_ADI_MSK_3(0x00FC0000,0x00FC0000UL, uint32_t  ))    /*  Pin Buffer Enable 19 */
#define BITM_DAI_PBEN3_PB18                  (_ADI_MSK_3(0x0003F000,0x0003F000UL, uint32_t  ))    /*  Pin Buffer Enable 18 */
#define BITM_DAI_PBEN3_PB17                  (_ADI_MSK_3(0x00000FC0,0x00000FC0UL, uint32_t  ))    /*  Pin Buffer Enable 17 */
#define BITM_DAI_PBEN3_PB16                  (_ADI_MSK_3(0x0000003F,0x0000003FUL, uint32_t  ))    /*  Pin Buffer Enable 16 */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IMSK_FE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IMSK_FE_MISCINT9            31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IMSK_FE_MISCINT8            30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IMSK_FE_MISCINT7            29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IMSK_FE_MISCINT6            28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IMSK_FE_MISCINT5            27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IMSK_FE_MISCINT4            26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IMSK_FE_MISCINT3            25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IMSK_FE_MISCINT2            24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IMSK_FE_MISCINT1            23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IMSK_FE_MISCINT0            22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IMSK_FE_SRC3MUTE            21            /*  SRC3 Mute */
#define BITP_DAI_IMSK_FE_SRC2MUTE            20            /*  SRC2 Mute */
#define BITP_DAI_IMSK_FE_SRC1MUTE            19            /*  SRC1 Mute */
#define BITP_DAI_IMSK_FE_SRC0MUTE            18            /*  SRC0 Mute */
#define BITP_DAI_IMSK_FE_RXCHSCH              7            /*  SPDIF Rx Channel Status Change */
#define BITP_DAI_IMSK_FE_RXNONAUDIO           4            /*  Receive Non Audio */
#define BITP_DAI_IMSK_FE_RXLOSSOFLOCK         2            /*  Receive Loss of Lock */
#define BITP_DAI_IMSK_FE_RXLOCK               1            /*  Receive Lock */
#define BITP_DAI_IMSK_FE_RXVALID              0            /*  Receive Valid */
#define BITM_DAI_IMSK_FE_MISCINT9            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IMSK_FE_MISCINT8            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IMSK_FE_MISCINT7            (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IMSK_FE_MISCINT6            (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IMSK_FE_MISCINT5            (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IMSK_FE_MISCINT4            (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IMSK_FE_MISCINT3            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IMSK_FE_MISCINT2            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IMSK_FE_MISCINT1            (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IMSK_FE_MISCINT0            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IMSK_FE_SRC3MUTE            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IMSK_FE_SRC2MUTE            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IMSK_FE_SRC1MUTE            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IMSK_FE_SRC0MUTE            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IMSK_FE_RXCHSCH             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change */
#define BITM_DAI_IMSK_FE_RXNONAUDIO          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Non Audio */
#define BITM_DAI_IMSK_FE_RXLOSSOFLOCK        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Loss of Lock */
#define BITM_DAI_IMSK_FE_RXLOCK              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Lock */
#define BITM_DAI_IMSK_FE_RXVALID             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IMSK_RE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IMSK_RE_MISCINT9            31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IMSK_RE_MISCINT8            30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IMSK_RE_MISCINT7            29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IMSK_RE_MISCINT6            28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IMSK_RE_MISCINT5            27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IMSK_RE_MISCINT4            26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IMSK_RE_MISCINT3            25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IMSK_RE_MISCINT2            24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IMSK_RE_MISCINT1            23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IMSK_RE_MISCINT0            22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IMSK_RE_SRC3MUTE            21            /*  SRC3 Mute */
#define BITP_DAI_IMSK_RE_SRC2MUTE            20            /*  SRC2 Mute */
#define BITP_DAI_IMSK_RE_SRC1MUTE            19            /*  SRC1 Mute */
#define BITP_DAI_IMSK_RE_SRC0MUTE            18            /*  SRC0 Mute */
#define BITP_DAI_IMSK_RE_RXCHSCH              7            /*  SPDIF Rx Channel Status Change */
#define BITP_DAI_IMSK_RE_RXNONAUDIO           4            /*  Receive Non Audio */
#define BITP_DAI_IMSK_RE_RXLOSSOFLOCK         2            /*  Receive Loss of Lock */
#define BITP_DAI_IMSK_RE_RXLOCK               1            /*  Receive Lock */
#define BITP_DAI_IMSK_RE_RXVALID              0            /*  Receive Valid */
#define BITM_DAI_IMSK_RE_MISCINT9            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IMSK_RE_MISCINT8            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IMSK_RE_MISCINT7            (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IMSK_RE_MISCINT6            (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IMSK_RE_MISCINT5            (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IMSK_RE_MISCINT4            (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IMSK_RE_MISCINT3            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IMSK_RE_MISCINT2            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IMSK_RE_MISCINT1            (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IMSK_RE_MISCINT0            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IMSK_RE_SRC3MUTE            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IMSK_RE_SRC2MUTE            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IMSK_RE_SRC1MUTE            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IMSK_RE_SRC0MUTE            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IMSK_RE_RXCHSCH             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change */
#define BITM_DAI_IMSK_RE_RXNONAUDIO          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Non Audio */
#define BITM_DAI_IMSK_RE_RXLOSSOFLOCK        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Loss of Lock */
#define BITM_DAI_IMSK_RE_RXLOCK              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Lock */
#define BITM_DAI_IMSK_RE_RXVALID             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IMSK_PRI                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IMSK_PRI_MISCINT9           31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IMSK_PRI_MISCINT8           30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IMSK_PRI_MISCINT7           29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IMSK_PRI_MISCINT6           28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IMSK_PRI_MISCINT5           27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IMSK_PRI_MISCINT4           26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IMSK_PRI_MISCINT3           25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IMSK_PRI_MISCINT2           24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IMSK_PRI_MISCINT1           23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IMSK_PRI_MISCINT0           22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IMSK_PRI_SRC3MUTE           21            /*  SRC3 Mute */
#define BITP_DAI_IMSK_PRI_SRC2MUTE           20            /*  SRC2 Mute */
#define BITP_DAI_IMSK_PRI_SRC1MUTE           19            /*  SRC1 Mute */
#define BITP_DAI_IMSK_PRI_SRC0MUTE           18            /*  SRC0 Mute */
#define BITP_DAI_IMSK_PRI_RXCHSCH             7            /*  SPDIF Rx Channel Status Change */
#define BITP_DAI_IMSK_PRI_RXNONAUDIO          4            /*  Receiver Non-Audio */
#define BITP_DAI_IMSK_PRI_RXLOSSOFLOCK        2            /*  Receive Loss of Lock */
#define BITP_DAI_IMSK_PRI_RXLOCK              1            /*  Receive Lock */
#define BITP_DAI_IMSK_PRI_RXVALID             0            /*  Receive Valid */
#define BITM_DAI_IMSK_PRI_MISCINT9           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IMSK_PRI_MISCINT8           (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IMSK_PRI_MISCINT7           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IMSK_PRI_MISCINT6           (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IMSK_PRI_MISCINT5           (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IMSK_PRI_MISCINT4           (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IMSK_PRI_MISCINT3           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IMSK_PRI_MISCINT2           (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IMSK_PRI_MISCINT1           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IMSK_PRI_MISCINT0           (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IMSK_PRI_SRC3MUTE           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IMSK_PRI_SRC2MUTE           (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IMSK_PRI_SRC1MUTE           (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IMSK_PRI_SRC0MUTE           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IMSK_PRI_RXCHSCH            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change */
#define BITM_DAI_IMSK_PRI_RXNONAUDIO         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receiver Non-Audio */
#define BITM_DAI_IMSK_PRI_RXLOSSOFLOCK       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Loss of Lock */
#define BITM_DAI_IMSK_PRI_RXLOCK             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Lock */
#define BITM_DAI_IMSK_PRI_RXVALID            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IRPTL_H                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IRPTL_H_MISCINT9            31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IRPTL_H_MISCINT8            30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IRPTL_H_MISCINT7            29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IRPTL_H_MISCINT6            28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IRPTL_H_MISCINT5            27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IRPTL_H_MISCINT4            26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IRPTL_H_MISCINT3            25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IRPTL_H_MISCINT2            24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IRPTL_H_MISCINT1            23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IRPTL_H_MISCINT0            22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IRPTL_H_SRC3MUTE            21            /*  SRC3 Mute */
#define BITP_DAI_IRPTL_H_SRC2MUTE            20            /*  SRC2 Mute */
#define BITP_DAI_IRPTL_H_SRC1MUTE            19            /*  SRC1 Mute */
#define BITP_DAI_IRPTL_H_SRC0MUTE            18            /*  SRC0 Mute */
#define BITP_DAI_IRPTL_H_RXCHSCH              7            /*  SPDIF Rx Channel Status Change Indication */
#define BITP_DAI_IRPTL_H_RXNONAUDIO           4            /*  Receive Non Audio */
#define BITP_DAI_IRPTL_H_RXLOSSOFLOCK         2            /*  Receive Loss of Lock */
#define BITP_DAI_IRPTL_H_RXLOCK               1            /*  Receive Lock */
#define BITP_DAI_IRPTL_H_RXVALID              0            /*  Receive Valid */
#define BITM_DAI_IRPTL_H_MISCINT9            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IRPTL_H_MISCINT8            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IRPTL_H_MISCINT7            (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IRPTL_H_MISCINT6            (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IRPTL_H_MISCINT5            (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IRPTL_H_MISCINT4            (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IRPTL_H_MISCINT3            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IRPTL_H_MISCINT2            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IRPTL_H_MISCINT1            (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IRPTL_H_MISCINT0            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IRPTL_H_SRC3MUTE            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IRPTL_H_SRC2MUTE            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IRPTL_H_SRC1MUTE            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IRPTL_H_SRC0MUTE            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IRPTL_H_RXCHSCH             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change Indication */
#define BITM_DAI_IRPTL_H_RXNONAUDIO          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Non Audio */
#define BITM_DAI_IRPTL_H_RXLOSSOFLOCK        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Loss of Lock */
#define BITM_DAI_IRPTL_H_RXLOCK              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Lock */
#define BITM_DAI_IRPTL_H_RXVALID             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IRPTL_L                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IRPTL_L_MISCINT9            31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IRPTL_L_MISCINT8            30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IRPTL_L_MISCINT7            29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IRPTL_L_MISCINT6            28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IRPTL_L_MISCINT5            27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IRPTL_L_MISCINT4            26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IRPTL_L_MISCINT3            25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IRPTL_L_MISCINT2            24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IRPTL_L_MISCINT1            23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IRPTL_L_MISCINT0            22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IRPTL_L_SRC3MUTE            21            /*  SRC3 Mute */
#define BITP_DAI_IRPTL_L_SRC2MUTE            20            /*  SRC2 Mute */
#define BITP_DAI_IRPTL_L_SRC1MUTE            19            /*  SRC1 Mute */
#define BITP_DAI_IRPTL_L_SRC0MUTE            18            /*  SRC0 Mute */
#define BITP_DAI_IRPTL_L_RXCHSCH              7            /*  SPDIF Rx Channel Status Change */
#define BITP_DAI_IRPTL_L_RXNONAUDIO           4            /*  Receive Non Audio */
#define BITP_DAI_IRPTL_L_RXLOSSOFLOCK         2            /*  Receive Loss of Lock */
#define BITP_DAI_IRPTL_L_RXLOCK               1            /*  Receive Lock */
#define BITP_DAI_IRPTL_L_RXVALID              0            /*  Receive Valid */
#define BITM_DAI_IRPTL_L_MISCINT9            (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IRPTL_L_MISCINT8            (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IRPTL_L_MISCINT7            (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IRPTL_L_MISCINT6            (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IRPTL_L_MISCINT5            (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IRPTL_L_MISCINT4            (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IRPTL_L_MISCINT3            (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IRPTL_L_MISCINT2            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IRPTL_L_MISCINT1            (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IRPTL_L_MISCINT0            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IRPTL_L_SRC3MUTE            (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IRPTL_L_SRC2MUTE            (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IRPTL_L_SRC1MUTE            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IRPTL_L_SRC0MUTE            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IRPTL_L_RXCHSCH             (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change */
#define BITM_DAI_IRPTL_L_RXNONAUDIO          (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Non Audio */
#define BITM_DAI_IRPTL_L_RXLOSSOFLOCK        (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Loss of Lock */
#define BITM_DAI_IRPTL_L_RXLOCK              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Lock */
#define BITM_DAI_IRPTL_L_RXVALID             (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IRPTL_HS                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IRPTL_HS_MISCINT9           31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IRPTL_HS_MISCINT8           30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IRPTL_HS_MISCINT7           29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IRPTL_HS_MISCINT6           28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IRPTL_HS_MISCINT5           27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IRPTL_HS_MISCINT4           26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IRPTL_HS_MISCINT3           25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IRPTL_HS_MISCINT2           24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IRPTL_HS_MISCINT1           23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IRPTL_HS_MISCINT0           22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IRPTL_HS_SRC3MUTE           21            /*  SRC3 Mute */
#define BITP_DAI_IRPTL_HS_SRC2MUTE           20            /*  SRC2 Mute */
#define BITP_DAI_IRPTL_HS_SRC1MUTE           19            /*  SRC1 Mute */
#define BITP_DAI_IRPTL_HS_SRC0MUTE           18            /*  SRC0 Mute */
#define BITP_DAI_IRPTL_HS_RXCHSCH             7            /*  SPDIF Rx Channel Status Change */
#define BITP_DAI_IRPTL_HS_RXNONAUDIO          4            /*  Receive Non Audio */
#define BITP_DAI_IRPTL_HS_RXLOSSOFLOCK        2            /*  Receive Loss of Lock */
#define BITP_DAI_IRPTL_HS_RXLOCK              1            /*  Receive Lock */
#define BITP_DAI_IRPTL_HS_RXVALID             0            /*  Receive Valid */
#define BITM_DAI_IRPTL_HS_MISCINT9           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IRPTL_HS_MISCINT8           (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IRPTL_HS_MISCINT7           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IRPTL_HS_MISCINT6           (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IRPTL_HS_MISCINT5           (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IRPTL_HS_MISCINT4           (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IRPTL_HS_MISCINT3           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IRPTL_HS_MISCINT2           (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IRPTL_HS_MISCINT1           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IRPTL_HS_MISCINT0           (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IRPTL_HS_SRC3MUTE           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IRPTL_HS_SRC2MUTE           (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IRPTL_HS_SRC1MUTE           (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IRPTL_HS_SRC0MUTE           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IRPTL_HS_RXCHSCH            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change */
#define BITM_DAI_IRPTL_HS_RXNONAUDIO         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receive Non Audio */
#define BITM_DAI_IRPTL_HS_RXLOSSOFLOCK       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Loss of Lock */
#define BITM_DAI_IRPTL_HS_RXLOCK             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Lock */
#define BITM_DAI_IRPTL_HS_RXVALID            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_IRPTL_LS                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_IRPTL_LS_MISCINT9           31            /*  Miscellaneous Interrupt 9 */
#define BITP_DAI_IRPTL_LS_MISCINT8           30            /*  Miscellaneous Interrupt 8 */
#define BITP_DAI_IRPTL_LS_MISCINT7           29            /*  Miscellaneous Interrupt 7 */
#define BITP_DAI_IRPTL_LS_MISCINT6           28            /*  Miscellaneous Interrupt 6 */
#define BITP_DAI_IRPTL_LS_MISCINT5           27            /*  Miscellaneous Interrupt 5 */
#define BITP_DAI_IRPTL_LS_MISCINT4           26            /*  Miscellaneous Interrupt 4 */
#define BITP_DAI_IRPTL_LS_MISCINT3           25            /*  Miscellaneous Interrupt 3 */
#define BITP_DAI_IRPTL_LS_MISCINT2           24            /*  Miscellaneous Interrupt 2 */
#define BITP_DAI_IRPTL_LS_MISCINT1           23            /*  Miscellaneous Interrupt 1 */
#define BITP_DAI_IRPTL_LS_MISCINT0           22            /*  Miscellaneous Interrupt 0 */
#define BITP_DAI_IRPTL_LS_SRC3MUTE           21            /*  SRC3 Mute */
#define BITP_DAI_IRPTL_LS_SRC2MUTE           20            /*  SRC2 Mute */
#define BITP_DAI_IRPTL_LS_SRC1MUTE           19            /*  SRC1 Mute */
#define BITP_DAI_IRPTL_LS_SRC0MUTE           18            /*  SRC0 Mute */
#define BITP_DAI_IRPTL_LS_RXCHSCH             7            /*  SPDIF Rx Channel Status Change */
#define BITP_DAI_IRPTL_LS_RXNONAUDIO          4            /*  Receiver Non Audio */
#define BITP_DAI_IRPTL_LS_RXLOSSOFLOCK        2            /*  Receive Emphasis Loss of Lock */
#define BITP_DAI_IRPTL_LS_RXLOCK              1            /*  Receive Error Lock */
#define BITP_DAI_IRPTL_LS_RXVALID             0            /*  Receive Valid */
#define BITM_DAI_IRPTL_LS_MISCINT9           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 9 */
#define BITM_DAI_IRPTL_LS_MISCINT8           (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 8 */
#define BITM_DAI_IRPTL_LS_MISCINT7           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 7 */
#define BITM_DAI_IRPTL_LS_MISCINT6           (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 6 */
#define BITM_DAI_IRPTL_LS_MISCINT5           (_ADI_MSK_3(0x08000000,0x08000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 5 */
#define BITM_DAI_IRPTL_LS_MISCINT4           (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 4 */
#define BITM_DAI_IRPTL_LS_MISCINT3           (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 3 */
#define BITM_DAI_IRPTL_LS_MISCINT2           (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Miscellaneous Interrupt 2 */
#define BITM_DAI_IRPTL_LS_MISCINT1           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Miscellaneous Interrupt 1 */
#define BITM_DAI_IRPTL_LS_MISCINT0           (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Miscellaneous Interrupt 0 */
#define BITM_DAI_IRPTL_LS_SRC3MUTE           (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  SRC3 Mute */
#define BITM_DAI_IRPTL_LS_SRC2MUTE           (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  SRC2 Mute */
#define BITM_DAI_IRPTL_LS_SRC1MUTE           (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SRC1 Mute */
#define BITM_DAI_IRPTL_LS_SRC0MUTE           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SRC0 Mute */
#define BITM_DAI_IRPTL_LS_RXCHSCH            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPDIF Rx Channel Status Change */
#define BITM_DAI_IRPTL_LS_RXNONAUDIO         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Receiver Non Audio */
#define BITM_DAI_IRPTL_LS_RXLOSSOFLOCK       (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Receive Emphasis Loss of Lock */
#define BITM_DAI_IRPTL_LS_RXLOCK             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Receive Error Lock */
#define BITM_DAI_IRPTL_LS_RXVALID            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Receive Valid */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_PIN_STAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_PIN_STAT_PB20               19            /*  Pin Buffer 20 Status */
#define BITP_DAI_PIN_STAT_PB19               18            /*  Pin Buffer 19 Status */
#define BITP_DAI_PIN_STAT_PB18               17            /*  Pin Buffer 18 Status */
#define BITP_DAI_PIN_STAT_PB17               16            /*  Pin Buffer 17 Status */
#define BITP_DAI_PIN_STAT_PB16               15            /*  Pin Buffer 16 Status */
#define BITP_DAI_PIN_STAT_PB15               14            /*  Pin Buffer 15 Status */
#define BITP_DAI_PIN_STAT_PB14               13            /*  Pin Buffer 14 Status */
#define BITP_DAI_PIN_STAT_PB13               12            /*  Pin Buffer 13 Status */
#define BITP_DAI_PIN_STAT_PB12               11            /*  Pin Buffer 12 Status */
#define BITP_DAI_PIN_STAT_PB11               10            /*  Pin Buffer 11 Status */
#define BITP_DAI_PIN_STAT_PB10                9            /*  Pin Buffer 10 Status */
#define BITP_DAI_PIN_STAT_PB09                8            /*  Pin Buffer 09 Status */
#define BITP_DAI_PIN_STAT_PB08                7            /*  Pin Buffer 08 Status */
#define BITP_DAI_PIN_STAT_PB07                6            /*  Pin Buffer 07 Status */
#define BITP_DAI_PIN_STAT_PB06                5            /*  Pin Buffer 06 Status */
#define BITP_DAI_PIN_STAT_PB05                4            /*  Pin Buffer 05 Status */
#define BITP_DAI_PIN_STAT_PB04                3            /*  Pin Buffer 04 Status */
#define BITP_DAI_PIN_STAT_PB03                2            /*  Pin Buffer 03 Status */
#define BITP_DAI_PIN_STAT_PB02                1            /*  Pin Buffer 02 Status */
#define BITP_DAI_PIN_STAT_PB01                0            /*  Pin Buffer 01 Status */
#define BITM_DAI_PIN_STAT_PB20               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Pin Buffer 20 Status */
#define BITM_DAI_PIN_STAT_PB19               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Pin Buffer 19 Status */
#define BITM_DAI_PIN_STAT_PB18               (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pin Buffer 18 Status */
#define BITM_DAI_PIN_STAT_PB17               (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Pin Buffer 17 Status */
#define BITM_DAI_PIN_STAT_PB16               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Pin Buffer 16 Status */
#define BITM_DAI_PIN_STAT_PB15               (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Pin Buffer 15 Status */
#define BITM_DAI_PIN_STAT_PB14               (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Pin Buffer 14 Status */
#define BITM_DAI_PIN_STAT_PB13               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Pin Buffer 13 Status */
#define BITM_DAI_PIN_STAT_PB12               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Pin Buffer 12 Status */
#define BITM_DAI_PIN_STAT_PB11               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Pin Buffer 11 Status */
#define BITM_DAI_PIN_STAT_PB10               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Pin Buffer 10 Status */
#define BITM_DAI_PIN_STAT_PB09               (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Pin Buffer 09 Status */
#define BITM_DAI_PIN_STAT_PB08               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Pin Buffer 08 Status */
#define BITM_DAI_PIN_STAT_PB07               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pin Buffer 07 Status */
#define BITM_DAI_PIN_STAT_PB06               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Pin Buffer 06 Status */
#define BITM_DAI_PIN_STAT_PB05               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Pin Buffer 05 Status */
#define BITM_DAI_PIN_STAT_PB04               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Pin Buffer 04 Status */
#define BITM_DAI_PIN_STAT_PB03               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Pin Buffer 03 Status */
#define BITM_DAI_PIN_STAT_PB02               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Pin Buffer 02 Status */
#define BITM_DAI_PIN_STAT_PB01               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Pin Buffer 01 Status */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_GBL_SP_EN                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_GBL_SP_EN_GBL_SP3B_SC_EN    19            /*  SPORT3 B Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP3B_PC_EN    18            /*  SPORT3 B Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP3A_SC_EN    17            /*  SPORT3 A Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP3A_PC_EN    16            /*  SPORT3 A Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP2B_SC_EN    15            /*  SPORT2 B Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP2B_PC_EN    14            /*  SPORT2 B Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP2A_SC_EN    13            /*  SPORT2 A Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP2A_PC_EN    12            /*  SPORT2 A Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP1B_SC_EN    11            /*  SPORT1 B Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP1B_PC_EN    10            /*  SPORT1 B Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP1A_SC_EN     9            /*  SPORT1 A Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP1A_PC_EN     8            /*  SPORT1 A Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP0B_SC_EN     7            /*  SPORT0 B Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP0B_PC_EN     6            /*  SPORT0 B Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP0A_SC_EN     5            /*  SPORT0 A Secondary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SP0A_PC_EN     4            /*  SPORT0 A Primary Channel Select */
#define BITP_DAI_GBL_SP_EN_GBL_SPEN_GRP1      3            /*  Group 1 SPORT Subgroup Select */
#define BITP_DAI_GBL_SP_EN_GBL_SPEN_GRP0      2            /*  Group 0 SPORT Subgroup Select */
#define BITP_DAI_GBL_SP_EN_GBL_SPEN_DAIX      1            /*  DAI SPORTs Enable */
#define BITP_DAI_GBL_SP_EN_GBL_SP_EN          0            /*  Global SPORTs Enable */
#define BITM_DAI_GBL_SP_EN_GBL_SP3B_SC_EN    (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  SPORT3 B Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP3B_PC_EN    (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  SPORT3 B Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP3A_SC_EN    (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  SPORT3 A Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP3A_PC_EN    (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  SPORT3 A Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP2B_SC_EN    (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  SPORT2 B Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP2B_PC_EN    (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  SPORT2 B Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP2A_SC_EN    (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  SPORT2 A Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP2A_PC_EN    (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  SPORT2 A Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP1B_SC_EN    (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  SPORT1 B Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP1B_PC_EN    (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SPORT1 B Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP1A_SC_EN    (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  SPORT1 A Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP1A_PC_EN    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  SPORT1 A Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP0B_SC_EN    (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SPORT0 B Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP0B_PC_EN    (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  SPORT0 B Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP0A_SC_EN    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  SPORT0 A Secondary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SP0A_PC_EN    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  SPORT0 A Primary Channel Select */
#define BITM_DAI_GBL_SP_EN_GBL_SPEN_GRP1     (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Group 1 SPORT Subgroup Select */
#define BITM_DAI_GBL_SP_EN_GBL_SPEN_GRP0     (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Group 0 SPORT Subgroup Select */
#define BITM_DAI_GBL_SP_EN_GBL_SPEN_DAIX     (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DAI SPORTs Enable */
#define BITM_DAI_GBL_SP_EN_GBL_SP_EN         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Global SPORTs Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_GBL_INT_EN                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_GBL_INT_EN_GRP1_ERR_EN      21            /*  Enable Error For Group1 */
#define BITP_DAI_GBL_INT_EN_GRP0_ERR_EN      20            /*  Enable Error For Group0 */
#define BITP_DAI_GBL_INT_EN_GRP1_TRG_EN      19            /*  Group 1 Trigger Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_TRG_EN      18            /*  Group 0 Trigger Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_INT_EN      17            /*  Group 1 Interrupt Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_INT_EN      16            /*  Group 0 Interrupt Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP3BINT_EN  15            /*  SP3B Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP3AINT_EN  14            /*  SP3A Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP2BINT_EN  13            /*  SP2B Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP2AINT_EN  12            /*  SP2A Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP1BINT_EN  11            /*  SP1B Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP1AINT_EN  10            /*  SP1A Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP0BINT_EN   9            /*  SP0B Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP1_SP0AINT_EN   8            /*  SP0A Interrupt/Trigger Group 1 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP3BINT_EN   7            /*  SP3B Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP3AINT_EN   6            /*  SP3A Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP2BINT_EN   5            /*  SP2B Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP2AINT_EN   4            /*  SP2A Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP1BINT_EN   3            /*  SP1B Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP1AINT_EN   2            /*  SP1A Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP0BINT_EN   1            /*  SP0B Interrupt/Trigger Group 0 Enable */
#define BITP_DAI_GBL_INT_EN_GRP0_SP0AINT_EN   0            /*  SP0A Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_ERR_EN      (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Enable Error For Group1 */
#define BITM_DAI_GBL_INT_EN_GRP0_ERR_EN      (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Enable Error For Group0 */
#define BITM_DAI_GBL_INT_EN_GRP1_TRG_EN      (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Group 1 Trigger Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_TRG_EN      (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Group 0 Trigger Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_INT_EN      (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Group 1 Interrupt Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_INT_EN      (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Group 0 Interrupt Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP3BINT_EN  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  SP3B Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP3AINT_EN  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  SP3A Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP2BINT_EN  (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  SP2B Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP2AINT_EN  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  SP2A Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP1BINT_EN  (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  SP1B Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP1AINT_EN  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SP1A Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP0BINT_EN  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  SP0B Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP1_SP0AINT_EN  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  SP0A Interrupt/Trigger Group 1 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP3BINT_EN  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  SP3B Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP3AINT_EN  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  SP3A Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP2BINT_EN  (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  SP2B Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP2AINT_EN  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  SP2A Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP1BINT_EN  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  SP1B Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP1AINT_EN  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  SP1A Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP0BINT_EN  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SP0B Interrupt/Trigger Group 0 Enable */
#define BITM_DAI_GBL_INT_EN_GRP0_SP0AINT_EN  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SP0A Interrupt/Trigger Group 0 Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          DAI_GBL_PCG_EN                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGH_FS_EN   23            /*  PCG-H Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGH_CLK_EN  22            /*  PCG-H Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGG_FS_EN   21            /*  PCG-G Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGG_CLK_EN  20            /*  PCG-G Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGD_FS_EN   19            /*  PCG-D Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGD_CLK_EN  18            /*  PCG-D Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGC_FS_EN   17            /*  PCG-C Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGC_CLK_EN  16            /*  PCG-C Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGF_FS_EN   15            /*  PCG-F Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGF_CLK_EN  14            /*  PCG-F Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGE_FS_EN   13            /*  PCG-E Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGE_CLK_EN  12            /*  PCG-E Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGB_FS_EN   11            /*  PCG-B Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGB_CLK_EN  10            /*  PCG-B Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGA_FS_EN    9            /*  PCG-A Frame Sync Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCGA_CLK_EN   8            /*  PCG-A Clock Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCG_CDGH_EN   2            /*  PCG C/D/G/H Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCG_ABEF_EN   1            /*  PCG A/B/E/F Enable */
#define BITP_DAI_GBL_PCG_EN_GBL_PCG_EN        0            /*  Global PCG Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGH_FS_EN   (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  PCG-H Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGH_CLK_EN  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  PCG-H Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGG_FS_EN   (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  PCG-G Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGG_CLK_EN  (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  PCG-G Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGD_FS_EN   (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  PCG-D Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGD_CLK_EN  (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  PCG-D Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGC_FS_EN   (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PCG-C Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGC_CLK_EN  (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PCG-C Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGF_FS_EN   (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  PCG-F Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGF_CLK_EN  (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  PCG-F Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGE_FS_EN   (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  PCG-E Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGE_CLK_EN  (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  PCG-E Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGB_FS_EN   (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  PCG-B Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGB_CLK_EN  (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  PCG-B Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGA_FS_EN   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  PCG-A Frame Sync Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCGA_CLK_EN  (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  PCG-A Clock Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCG_CDGH_EN  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  PCG C/D/G/H Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCG_ABEF_EN  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PCG A/B/E/F Enable */
#define BITM_DAI_GBL_PCG_EN_GBL_PCG_EN       (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Global PCG Enable */


/* ============================================================================================================================
        Precision Clock Generator
   ============================================================================================================================ */

/* ============================================================================================================================
        PCG0
   ============================================================================================================================ */
#define REG_PCG0_CTLA0                       0x310C9300            /*  PCG0 Precision Clock A Control 0 Register */
#define REG_PCG0_CTLA1                       0x310C9304            /*  PCG0 Precision Clock A Control 1 Register */
#define REG_PCG0_CTLB0                       0x310C9308            /*  PCG0 Precision Clock B Control 0 Register */
#define REG_PCG0_CTLB1                       0x310C930C            /*  PCG0 Precision Clock B Control 1 Register */
#define REG_PCG0_PW1                         0x310C9310            /*  PCG0 Precision Clock Pulse Width Control 1 Register */
#define REG_PCG0_SYNC1                       0x310C9314            /*  PCG0 Precision Clock Frame Sync Synchronization 1 Register */
#define REG_PCG0_CTLE0                       0x310C9318            /*  PCG0 Precision Clock E Control 0 Register */
#define REG_PCG0_CTLE1                       0x310C931C            /*  PCG0 Precision Clock E Control 1 Register */
#define REG_PCG0_CTLF0                       0x310C9320            /*  PCG0 Precision Clock F Control 0 Register */
#define REG_PCG0_CTLF1                       0x310C9324            /*  PCG0 Precision Clock F Control 1 Register */
#define REG_PCG0_PW3                         0x310C9328            /*  PCG0 Precision Clock Pulse Width Control 3 Register */
#define REG_PCG0_SYNC3                       0x310C932C            /*  PCG0 Precision Clock Frame Sync Synchronization 3 Register */
#define REG_PCG0_CTLC0                       0x310CA300            /*  PCG0 Precision Clock C Control 0 Register */
#define REG_PCG0_CTLC1                       0x310CA304            /*  PCG0 Precision Clock C Control 1 Register */
#define REG_PCG0_CTLD0                       0x310CA308            /*  PCG0 Precision Clock D Control 0 Register */
#define REG_PCG0_CTLD1                       0x310CA30C            /*  PCG0 Precision Clock D Control 1 Register */
#define REG_PCG0_PW2                         0x310CA310            /*  PCG0 Precision Clock Pulse Width Control 2 Register */
#define REG_PCG0_SYNC2                       0x310CA314            /*  PCG0 Precision Clock Frame Sync Synchronization 2 Register */
#define REG_PCG0_CTLG0                       0x310CA318            /*  PCG0 Precision Clock G Control 0 Register */
#define REG_PCG0_CTLG1                       0x310CA31C            /*  PCG0 Precision Clock G Control 1 Register */
#define REG_PCG0_CTLH0                       0x310CA320            /*  PCG0 Precision Clock H Control 0 Register */
#define REG_PCG0_CTLH1                       0x310CA324            /*  PCG0 Precision Clock H Control 1 Register */
#define REG_PCG0_PW4                         0x310CA328            /*  PCG0 Precision Clock Pulse Width Control 4 Register */
#define REG_PCG0_SYNC4                       0x310CA32C            /*  PCG0 Precision Clock Frame Sync Synchronization 4 Register */

/* ============================================================================================================================
        PCG Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLA0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLA0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLA0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLA0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLA0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLA0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLA0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLA0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLA0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLA1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLA1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLA1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLA1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLA1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLA1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLA1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLA1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLA1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLB0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLB0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLB0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLB0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLB0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLB0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLB0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLB0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLB0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLB1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLB1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLB1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLB1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLB1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLB1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLB1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLB1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLB1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_PW1                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_PW1_INVFSB                  17            /*  Active Low Frame Sync Select for Frame in Bypass PCG B */
#define BITP_PCG_PW1_FSB                     16            /*  Pulse Width for Frame Sync PCG B */
#define BITP_PCG_PW1_STROBEB                 16            /*  One Shot Frame Sync Bypass Mode PCG B */
#define BITP_PCG_PW1_INVFSA                   1            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW1_FSA                      0            /*  Pulse Width for Frame Sync PCG A */
#define BITP_PCG_PW1_STROBEA                  0            /*  One Shot Frame Sync PCG A */
#define BITM_PCG_PW1_INVFSB                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame in Bypass PCG B */
#define BITM_PCG_PW1_FSB                     (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG B */
#define BITM_PCG_PW1_STROBEB                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  One Shot Frame Sync Bypass Mode PCG B */
#define BITM_PCG_PW1_INVFSA                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW1_FSA                     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG A */
#define BITM_PCG_PW1_STROBEA                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  One Shot Frame Sync PCG A */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_SYNC1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_SYNC1_HWB_TRIGEN            22            /*  Hardware trigger Sync B Enable */
#define BITP_PCG_SYNC1_FSB_CLKINSEL          21            /*  CLKIN source for FSB */
#define BITP_PCG_SYNC1_CLKB_CLKINSEL         20            /*  CLKIN source for CLKB */
#define BITP_PCG_SYNC1_FSBSRC                19            /*  Frame Sync B Source */
#define BITP_PCG_SYNC1_CLKBSRC               18            /*  Clock B Source */
#define BITP_PCG_SYNC1_CLKB                  17            /*  Clock B Enable */
#define BITP_PCG_SYNC1_FSB                   16            /*  Frame Sync B Enable */
#define BITP_PCG_SYNC1_HWA_TRIGEN             6            /*  Hardware trigger Sync A Enable */
#define BITP_PCG_SYNC1_FSA_CLKINSEL           5            /*  CLKIN source for FSA */
#define BITP_PCG_SYNC1_CLKA_CLKINSEL          4            /*  CLKIN source for CLKA */
#define BITP_PCG_SYNC1_FSASRC                 3            /*  Frame Sync Source */
#define BITP_PCG_SYNC1_CLKASRC                2            /*  Clock A Source */
#define BITP_PCG_SYNC1_CLKA                   1            /*  Clock A Enable */
#define BITP_PCG_SYNC1_FSA                    0            /*  Frame Sync A Enable */
#define BITM_PCG_SYNC1_HWB_TRIGEN            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Hardware trigger Sync B Enable */
#define BITM_PCG_SYNC1_FSB_CLKINSEL          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  CLKIN source for FSB */
#define BITM_PCG_SYNC1_CLKB_CLKINSEL         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  CLKIN source for CLKB */
#define BITM_PCG_SYNC1_FSBSRC                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Frame Sync B Source */
#define BITM_PCG_SYNC1_CLKBSRC               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Clock B Source */
#define BITM_PCG_SYNC1_CLKB                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Clock B Enable */
#define BITM_PCG_SYNC1_FSB                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Frame Sync B Enable */
#define BITM_PCG_SYNC1_HWA_TRIGEN            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Hardware trigger Sync A Enable */
#define BITM_PCG_SYNC1_FSA_CLKINSEL          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CLKIN source for FSA */
#define BITM_PCG_SYNC1_CLKA_CLKINSEL         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CLKIN source for CLKA */
#define BITM_PCG_SYNC1_FSASRC                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_SYNC1_CLKASRC               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clock A Source */
#define BITM_PCG_SYNC1_CLKA                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock A Enable */
#define BITM_PCG_SYNC1_FSA                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Sync A Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLE0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLE0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLE0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLE0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLE0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLE0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLE0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLE0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLE0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLE1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLE1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLE1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLE1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLE1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLE1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLE1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLE1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLE1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLF0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLF0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLF0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLF0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLF0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLF0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLF0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLF0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLF0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLF1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLF1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLF1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLF1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLF1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLF1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLF1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLF1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLF1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_PW3                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_PW3_INVFSF                  17            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW3_FSF                     16            /*  Pulse Width for Frame Sync PCG F */
#define BITP_PCG_PW3_STROBEF                 16            /*  One Shot Frame Sync PCG D */
#define BITP_PCG_PW3_INVFSE                   1            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW3_FSE                      0            /*  Pulse Width for Frame Sync PCG E */
#define BITP_PCG_PW3_STROBEE                  0            /*  One Shot Frame Sync PCG E */
#define BITM_PCG_PW3_INVFSF                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW3_FSF                     (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG F */
#define BITM_PCG_PW3_STROBEF                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  One Shot Frame Sync PCG D */
#define BITM_PCG_PW3_INVFSE                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW3_FSE                     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG E */
#define BITM_PCG_PW3_STROBEE                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  One Shot Frame Sync PCG E */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_SYNC3                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_SYNC3_HWF_TRIGEN            22            /*  Hardware Trigger Sync F Enable */
#define BITP_PCG_SYNC3_FSF_CLKINSEL          21            /*  CLKIN source for FSF */
#define BITP_PCG_SYNC3_CLKF_CLKINSEL         20            /*  CLKIN source for CLKF */
#define BITP_PCG_SYNC3_FSFSRC                19            /*  Frame Sync F Source */
#define BITP_PCG_SYNC3_CLKFSRC               18            /*  Clock F Source */
#define BITP_PCG_SYNC3_CLKF                  17            /*  Clock F Enable */
#define BITP_PCG_SYNC3_FSF                   16            /*  Frame Sync F Enable */
#define BITP_PCG_SYNC3_HWE_TRIGEN             6            /*  Hardware Trigger Sync E Enable */
#define BITP_PCG_SYNC3_FSE_CLKINSEL           5            /*  CLKIN source for FSE */
#define BITP_PCG_SYNC3_CLKE_CLKINSEL          4            /*  CLKIN source for CLKE */
#define BITP_PCG_SYNC3_FSESRC                 3            /*  Frame Sync Source */
#define BITP_PCG_SYNC3_CLKESRC                2            /*  Clock E Source */
#define BITP_PCG_SYNC3_CLKE                   1            /*  Clock E Enable */
#define BITP_PCG_SYNC3_FSE                    0            /*  Frame Sync E Enable */
#define BITM_PCG_SYNC3_HWF_TRIGEN            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Hardware Trigger Sync F Enable */
#define BITM_PCG_SYNC3_FSF_CLKINSEL          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  CLKIN source for FSF */
#define BITM_PCG_SYNC3_CLKF_CLKINSEL         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  CLKIN source for CLKF */
#define BITM_PCG_SYNC3_FSFSRC                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Frame Sync F Source */
#define BITM_PCG_SYNC3_CLKFSRC               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Clock F Source */
#define BITM_PCG_SYNC3_CLKF                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Clock F Enable */
#define BITM_PCG_SYNC3_FSF                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Frame Sync F Enable */
#define BITM_PCG_SYNC3_HWE_TRIGEN            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Hardware Trigger Sync E Enable */
#define BITM_PCG_SYNC3_FSE_CLKINSEL          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CLKIN source for FSE */
#define BITM_PCG_SYNC3_CLKE_CLKINSEL         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CLKIN source for CLKE */
#define BITM_PCG_SYNC3_FSESRC                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_SYNC3_CLKESRC               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clock E Source */
#define BITM_PCG_SYNC3_CLKE                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock E Enable */
#define BITM_PCG_SYNC3_FSE                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Sync E Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLC0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLC0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLC0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLC0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLC0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLC0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLC0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLC0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLC0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLC1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLC1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLC1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLC1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLC1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLC1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLC1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLC1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLC1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLD0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLD0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLD0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLD0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLD0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLD0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLD0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLD0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLD0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLD1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLD1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLD1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLD1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLD1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLD1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLD1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLD1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLD1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_PW2                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_PW2_INVFSD                  17            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW2_FSD                     16            /*  Pulse Width for Frame Sync PCG D */
#define BITP_PCG_PW2_STROBED                 16            /*  One Shot Frame Sync PCG D */
#define BITP_PCG_PW2_INVFSC                   1            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW2_FSC                      0            /*  Pulse Width for Frame Sync PCG C */
#define BITP_PCG_PW2_STROBEC                  0            /*  One Shot Frame Sync PCG C */
#define BITM_PCG_PW2_INVFSD                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW2_FSD                     (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG D */
#define BITM_PCG_PW2_STROBED                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  One Shot Frame Sync PCG D */
#define BITM_PCG_PW2_INVFSC                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW2_FSC                     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG C */
#define BITM_PCG_PW2_STROBEC                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  One Shot Frame Sync PCG C */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_SYNC2                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_SYNC2_HWD_TRIGEN            22            /*  Hardware trigger Sync D Enable */
#define BITP_PCG_SYNC2_FSD_CLKINSEL          21            /*  CLKIN source for FSD */
#define BITP_PCG_SYNC2_CLKD_CLKINSEL         20            /*  CLKIN source for CLKD */
#define BITP_PCG_SYNC2_FSDSRC                19            /*  Frame Sync D Source */
#define BITP_PCG_SYNC2_CLKDSRC               18            /*  Clock D Source */
#define BITP_PCG_SYNC2_CLKD                  17            /*  Clock D Enable */
#define BITP_PCG_SYNC2_FSD                   16            /*  Frame Sync D Enable */
#define BITP_PCG_SYNC2_HWC_TRIGEN             6            /*  Hardware trigger Sync C Enable */
#define BITP_PCG_SYNC2_FSC_CLKINSEL           5            /*  CLKIN source for FSC */
#define BITP_PCG_SYNC2_CLKC_CLKINSEL          4            /*  CLKIN source for CLKC */
#define BITP_PCG_SYNC2_FSCSRC                 3            /*  Frame Sync Source */
#define BITP_PCG_SYNC2_CLKCSRC                2            /*  Clock C Source */
#define BITP_PCG_SYNC2_CLKC                   1            /*  Clock C Enable */
#define BITP_PCG_SYNC2_FSC                    0            /*  Frame Sync C Enable */
#define BITM_PCG_SYNC2_HWD_TRIGEN            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Hardware trigger Sync D Enable */
#define BITM_PCG_SYNC2_FSD_CLKINSEL          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  CLKIN source for FSD */
#define BITM_PCG_SYNC2_CLKD_CLKINSEL         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  CLKIN source for CLKD */
#define BITM_PCG_SYNC2_FSDSRC                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Frame Sync D Source */
#define BITM_PCG_SYNC2_CLKDSRC               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Clock D Source */
#define BITM_PCG_SYNC2_CLKD                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Clock D Enable */
#define BITM_PCG_SYNC2_FSD                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Frame Sync D Enable */
#define BITM_PCG_SYNC2_HWC_TRIGEN            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Hardware trigger Sync C Enable */
#define BITM_PCG_SYNC2_FSC_CLKINSEL          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CLKIN source for FSC */
#define BITM_PCG_SYNC2_CLKC_CLKINSEL         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CLKIN source for CLKC */
#define BITM_PCG_SYNC2_FSCSRC                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_SYNC2_CLKCSRC               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clock C Source */
#define BITM_PCG_SYNC2_CLKC                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock C Enable */
#define BITM_PCG_SYNC2_FSC                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Sync C Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLG0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLG0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLG0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLG0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLG0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLG0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLG0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLG0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLG0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLG1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLG1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLG1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLG1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLG1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLG1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLG1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLG1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLG1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLH0                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLH0_CLKEN                 31            /*  Clock Enable */
#define BITP_PCG_CTLH0_FSEN                  30            /*  Frame Sync Enable */
#define BITP_PCG_CTLH0_FSPHASEHI             20            /*  Phase for Frame Sync High */
#define BITP_PCG_CTLH0_FSDIV                  0            /*  Frame Sync Divider */
#define BITM_PCG_CTLH0_CLKEN                 (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Enable */
#define BITM_PCG_CTLH0_FSEN                  (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Enable */
#define BITM_PCG_CTLH0_FSPHASEHI             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync High */
#define BITM_PCG_CTLH0_FSDIV                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Frame Sync Divider */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_CTLH1                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_CTLH1_CLKSRC                31            /*  Clock Source */
#define BITP_PCG_CTLH1_FSSRC                 30            /*  Frame Sync Source */
#define BITP_PCG_CTLH1_FSPHASELO             20            /*  Phase for Frame Sync Low */
#define BITP_PCG_CTLH1_CLKDIV                 0            /*  Clock Divisor */
#define BITM_PCG_CTLH1_CLKSRC                (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Clock Source */
#define BITM_PCG_CTLH1_FSSRC                 (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_CTLH1_FSPHASELO             (_ADI_MSK_3(0x3FF00000,0x3FF00000UL, uint32_t  ))    /*  Phase for Frame Sync Low */
#define BITM_PCG_CTLH1_CLKDIV                (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Clock Divisor */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_PW4                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_PW4_INVFSH                  17            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW4_FSH                     16            /*  Pulse Width for Frame Sync PCG H */
#define BITP_PCG_PW4_STROBEH                 16            /*  One Shot Frame Sync PCG H */
#define BITP_PCG_PW4_INVFSG                   1            /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITP_PCG_PW4_FSG                      0            /*  Pulse Width for Frame Sync PCG G */
#define BITP_PCG_PW4_STROBEG                  0            /*  One Shot Frame Sync PCG G */
#define BITM_PCG_PW4_INVFSH                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW4_FSH                     (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG H */
#define BITM_PCG_PW4_STROBEH                 (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  One Shot Frame Sync PCG H */
#define BITM_PCG_PW4_INVFSG                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Active Low Frame Sync Select for Frame Sync in Bypass Mode */
#define BITM_PCG_PW4_FSG                     (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Pulse Width for Frame Sync PCG G */
#define BITM_PCG_PW4_STROBEG                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  One Shot Frame Sync PCG G */

/* -------------------------------------------------------------------------------------------------------------------------
          PCG_SYNC4                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PCG_SYNC4_HWH_TRIGEN            22            /*  Hardware Trigger Sync H Enable */
#define BITP_PCG_SYNC4_FSH_CLKINSEL          21            /*  CLKIN source for FSH */
#define BITP_PCG_SYNC4_CLKH_CLKINSEL         20            /*  CLKIN source for CLKH */
#define BITP_PCG_SYNC4_FSHSRC                19            /*  Frame Sync H Source */
#define BITP_PCG_SYNC4_CLKHSRC               18            /*  Clock H Source */
#define BITP_PCG_SYNC4_CLKH                  17            /*  Clock H Enable */
#define BITP_PCG_SYNC4_FSH                   16            /*  Frame Sync H Enable */
#define BITP_PCG_SYNC4_HWG_TRIGEN             6            /*  Hardware Trigger Sync G Enable */
#define BITP_PCG_SYNC4_FSG_CLKINSEL           5            /*  CLKIN source for FSG */
#define BITP_PCG_SYNC4_CLKG_CLKINSEL          4            /*  CLKIN source for CLKG */
#define BITP_PCG_SYNC4_FSGSRC                 3            /*  Frame Sync Source */
#define BITP_PCG_SYNC4_CLKGSRC                2            /*  Clock G Source */
#define BITP_PCG_SYNC4_CLKG                   1            /*  Clock G Enable */
#define BITP_PCG_SYNC4_FSG                    0            /*  Frame Sync G Enable */
#define BITM_PCG_SYNC4_HWH_TRIGEN            (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Hardware Trigger Sync H Enable */
#define BITM_PCG_SYNC4_FSH_CLKINSEL          (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  CLKIN source for FSH */
#define BITM_PCG_SYNC4_CLKH_CLKINSEL         (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  CLKIN source for CLKH */
#define BITM_PCG_SYNC4_FSHSRC                (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Frame Sync H Source */
#define BITM_PCG_SYNC4_CLKHSRC               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Clock H Source */
#define BITM_PCG_SYNC4_CLKH                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Clock H Enable */
#define BITM_PCG_SYNC4_FSH                   (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Frame Sync H Enable */
#define BITM_PCG_SYNC4_HWG_TRIGEN            (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Hardware Trigger Sync G Enable */
#define BITM_PCG_SYNC4_FSG_CLKINSEL          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  CLKIN source for FSG */
#define BITM_PCG_SYNC4_CLKG_CLKINSEL         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  CLKIN source for CLKG */
#define BITM_PCG_SYNC4_FSGSRC                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Frame Sync Source */
#define BITM_PCG_SYNC4_CLKGSRC               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Clock G Source */
#define BITM_PCG_SYNC4_CLKG                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clock G Enable */
#define BITM_PCG_SYNC4_FSG                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Frame Sync G Enable */


/* ============================================================================================================================
        Sample Rate Converter Module
   ============================================================================================================================ */

/* ============================================================================================================================
        ASRC0
   ============================================================================================================================ */
#define REG_ASRC0_CTL01                      0x310C9240            /*  ASRC0 Control Register for ASRC 0 and 1 */
#define REG_ASRC0_CTL23                      0x310C9244            /*  ASRC0 Control Register for ASRC 2 and 3 */
#define REG_ASRC0_MUTE                       0x310C9248            /*  ASRC0 Mute Register */
#define REG_ASRC0_RAT01                      0x310C9260            /*  ASRC0 Ratio Register for ASRC 0 and 1 */
#define REG_ASRC0_RAT23                      0x310C9264            /*  ASRC0 Ratio Register for ASRC 2 and 3 */

/* ============================================================================================================================
        ASRC1
   ============================================================================================================================ */
#define REG_ASRC1_CTL01                      0x310CA240            /*  ASRC1 Control Register for ASRC 0 and 1 */
#define REG_ASRC1_CTL23                      0x310CA244            /*  ASRC1 Control Register for ASRC 2 and 3 */
#define REG_ASRC1_MUTE                       0x310CA248            /*  ASRC1 Mute Register */
#define REG_ASRC1_RAT01                      0x310CA260            /*  ASRC1 Ratio Register for ASRC 0 and 1 */
#define REG_ASRC1_RAT23                      0x310CA264            /*  ASRC1 Ratio Register for ASRC 2 and 3 */

/* ============================================================================================================================
        ASRC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          ASRC_CTL01                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ASRC_CTL01_EN1                  31            /*  Enable SRC 1 */
#define BITP_ASRC_CTL01_MPHASE1              30            /*  Matched-phase Mode 1 */
#define BITP_ASRC_CTL01_LENOUT1              28            /*  Length Output 1 */
#define BITP_ASRC_CTL01_SMODEOUT1            26            /*  Serial Mode Output 1 */
#define BITP_ASRC_CTL01_DITHER1              25            /*  Dither Enable 1 */
#define BITP_ASRC_CTL01_SOFTMUTE1            24            /*  Soft Mute 1 */
#define BITP_ASRC_CTL01_DEEMPHASIS1          22            /*  De-emphasize Audio 1 */
#define BITP_ASRC_CTL01_BYP1                 21            /*  Bypass 1 */
#define BITP_ASRC_CTL01_SMODEIN1             18            /*  Serial Mode Input 1 */
#define BITP_ASRC_CTL01_AUTOMUTE1            17            /*  Auto Hard Mute 1 */
#define BITP_ASRC_CTL01_HARDMUTE1            16            /*  Hard Mute 1 */
#define BITP_ASRC_CTL01_EN0                  15            /*  Enable SRC 0 */
#define BITP_ASRC_CTL01_MPHASE0              14            /*  Matched-phase Mode 0 */
#define BITP_ASRC_CTL01_LENOUT0              12            /*  Length Output 0 */
#define BITP_ASRC_CTL01_SMODEOUT0            10            /*  Serial Mode Output 0 */
#define BITP_ASRC_CTL01_DITHER0               9            /*  Dither Enable 0 */
#define BITP_ASRC_CTL01_SOFTMUTE0             8            /*  Soft Mute 0 */
#define BITP_ASRC_CTL01_DEEMPHASIS0           6            /*  De-emphasize Audio 0 */
#define BITP_ASRC_CTL01_BYP0                  5            /*  Bypass 0 */
#define BITP_ASRC_CTL01_SMODEIN0              2            /*  Serial Mode Input 0 */
#define BITP_ASRC_CTL01_AUTOMUTE0             1            /*  Auto Hard Mute 0 */
#define BITP_ASRC_CTL01_HARDMUTE0             0            /*  Hard Mute 0 */
#define BITM_ASRC_CTL01_EN1                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Enable SRC 1 */
#define BITM_ASRC_CTL01_MPHASE1              (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Matched-phase Mode 1 */
#define BITM_ASRC_CTL01_LENOUT1              (_ADI_MSK_3(0x30000000,0x30000000UL, uint32_t  ))    /*  Length Output 1 */
#define BITM_ASRC_CTL01_SMODEOUT1            (_ADI_MSK_3(0x0C000000,0x0C000000UL, uint32_t  ))    /*  Serial Mode Output 1 */
#define BITM_ASRC_CTL01_DITHER1              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Dither Enable 1 */
#define BITM_ASRC_CTL01_SOFTMUTE1            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Soft Mute 1 */
#define BITM_ASRC_CTL01_DEEMPHASIS1          (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  De-emphasize Audio 1 */
#define BITM_ASRC_CTL01_BYP1                 (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Bypass 1 */
#define BITM_ASRC_CTL01_SMODEIN1             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  Serial Mode Input 1 */
#define BITM_ASRC_CTL01_AUTOMUTE1            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Auto Hard Mute 1 */
#define BITM_ASRC_CTL01_HARDMUTE1            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Hard Mute 1 */
#define BITM_ASRC_CTL01_EN0                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Enable SRC 0 */
#define BITM_ASRC_CTL01_MPHASE0              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Matched-phase Mode 0 */
#define BITM_ASRC_CTL01_LENOUT0              (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Length Output 0 */
#define BITM_ASRC_CTL01_SMODEOUT0            (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))    /*  Serial Mode Output 0 */
#define BITM_ASRC_CTL01_DITHER0              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Dither Enable 0 */
#define BITM_ASRC_CTL01_SOFTMUTE0            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Soft Mute 0 */
#define BITM_ASRC_CTL01_DEEMPHASIS0          (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  De-emphasize Audio 0 */
#define BITM_ASRC_CTL01_BYP0                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bypass 0 */
#define BITM_ASRC_CTL01_SMODEIN0             (_ADI_MSK_3(0x0000001C,0x0000001CUL, uint32_t  ))    /*  Serial Mode Input 0 */
#define BITM_ASRC_CTL01_AUTOMUTE0            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Auto Hard Mute 0 */
#define BITM_ASRC_CTL01_HARDMUTE0            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Hard Mute 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ASRC_CTL23                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ASRC_CTL23_EN3                  31            /*  Enable SRC 3 */
#define BITP_ASRC_CTL23_MPHASE3              30            /*  Matched-phase Mode 3 */
#define BITP_ASRC_CTL23_LENOUT3              28            /*  Length Output 3 */
#define BITP_ASRC_CTL23_SMODEOUT3            26            /*  Serial Mode Output 3 */
#define BITP_ASRC_CTL23_DITHER3              25            /*  Dither Enable 3 */
#define BITP_ASRC_CTL23_SOFTMUTE3            24            /*  Soft Mute 3 */
#define BITP_ASRC_CTL23_DEEMPHASIS3          22            /*  De-emphasize Audio 3 */
#define BITP_ASRC_CTL23_BYP3                 21            /*  Bypass 3 */
#define BITP_ASRC_CTL23_SMODEIN3             18            /*  Serial Mode Input 3 */
#define BITP_ASRC_CTL23_AUTOMUTE3            17            /*  Auto Hard Mute 3 */
#define BITP_ASRC_CTL23_HARDMUTE3            16            /*  Hard Mute 3 */
#define BITP_ASRC_CTL23_EN2                  15            /*  Enable SRC 2 */
#define BITP_ASRC_CTL23_MPHASE2              14            /*  Matched-phase Mode 2 */
#define BITP_ASRC_CTL23_LENOUT2              12            /*  Length Output 2 */
#define BITP_ASRC_CTL23_SMODEOUT2            10            /*  Serial Mode Output 2 */
#define BITP_ASRC_CTL23_DITHER2               9            /*  Dither Enable 2 */
#define BITP_ASRC_CTL23_SOFTMUTE2             8            /*  Soft Mute 2 */
#define BITP_ASRC_CTL23_DEEMPHASIS2           6            /*  De-emphasize Audio 2 */
#define BITP_ASRC_CTL23_BYP2                  5            /*  Bypass 2 */
#define BITP_ASRC_CTL23_SMODEIN2              2            /*  Serial Mode Input 2 */
#define BITP_ASRC_CTL23_AUTOMUTE2             1            /*  Auto Hard Mute 2 */
#define BITP_ASRC_CTL23_HARDMUTE2             0            /*  Hard Mute 2 */
#define BITM_ASRC_CTL23_EN3                  (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Enable SRC 3 */
#define BITM_ASRC_CTL23_MPHASE3              (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Matched-phase Mode 3 */
#define BITM_ASRC_CTL23_LENOUT3              (_ADI_MSK_3(0x30000000,0x30000000UL, uint32_t  ))    /*  Length Output 3 */
#define BITM_ASRC_CTL23_SMODEOUT3            (_ADI_MSK_3(0x0C000000,0x0C000000UL, uint32_t  ))    /*  Serial Mode Output 3 */
#define BITM_ASRC_CTL23_DITHER3              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Dither Enable 3 */
#define BITM_ASRC_CTL23_SOFTMUTE3            (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Soft Mute 3 */
#define BITM_ASRC_CTL23_DEEMPHASIS3          (_ADI_MSK_3(0x00C00000,0x00C00000UL, uint32_t  ))    /*  De-emphasize Audio 3 */
#define BITM_ASRC_CTL23_BYP3                 (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  Bypass 3 */
#define BITM_ASRC_CTL23_SMODEIN3             (_ADI_MSK_3(0x001C0000,0x001C0000UL, uint32_t  ))    /*  Serial Mode Input 3 */
#define BITM_ASRC_CTL23_AUTOMUTE3            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Auto Hard Mute 3 */
#define BITM_ASRC_CTL23_HARDMUTE3            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Hard Mute 3 */
#define BITM_ASRC_CTL23_EN2                  (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Enable SRC 2 */
#define BITM_ASRC_CTL23_MPHASE2              (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  Matched-phase Mode 2 */
#define BITM_ASRC_CTL23_LENOUT2              (_ADI_MSK_3(0x00003000,0x00003000UL, uint32_t  ))    /*  Length Output 2 */
#define BITM_ASRC_CTL23_SMODEOUT2            (_ADI_MSK_3(0x00000C00,0x00000C00UL, uint32_t  ))    /*  Serial Mode Output 2 */
#define BITM_ASRC_CTL23_DITHER2              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Dither Enable 2 */
#define BITM_ASRC_CTL23_SOFTMUTE2            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Soft Mute 2 */
#define BITM_ASRC_CTL23_DEEMPHASIS2          (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  De-emphasize Audio 2 */
#define BITM_ASRC_CTL23_BYP2                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Bypass 2 */
#define BITM_ASRC_CTL23_SMODEIN2             (_ADI_MSK_3(0x0000001C,0x0000001CUL, uint32_t  ))    /*  Serial Mode Input 2 */
#define BITM_ASRC_CTL23_AUTOMUTE2            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Auto Hard Mute 2 */
#define BITM_ASRC_CTL23_HARDMUTE2            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Hard Mute 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ASRC_MUTE                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ASRC_MUTE_MUTE3                  3            /*  Mute ASRC3 */
#define BITP_ASRC_MUTE_MUTE2                  2            /*  Mute ASRC2 */
#define BITP_ASRC_MUTE_MUTE1                  1            /*  Mute ASRC1 */
#define BITP_ASRC_MUTE_MUTE0                  0            /*  Mute ASRC0 */
#define BITM_ASRC_MUTE_MUTE3                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Mute ASRC3 */
#define BITM_ASRC_MUTE_MUTE2                 (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Mute ASRC2 */
#define BITM_ASRC_MUTE_MUTE1                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Mute ASRC1 */
#define BITM_ASRC_MUTE_MUTE0                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Mute ASRC0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ASRC_RAT01                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ASRC_RAT01_MUTEOUT1             31            /*  Mute Status for ASRC1 */
#define BITP_ASRC_RAT01_RATIO1               16            /*  Sampling Ratio of Frame Syncs for ASRC1 */
#define BITP_ASRC_RAT01_MUTEOUT0             15            /*  Mute Status for ASRC0 */
#define BITP_ASRC_RAT01_RATIO0                0            /*  Sampling Ratio of Frame Syncs for ASRC0 */
#define BITM_ASRC_RAT01_MUTEOUT1             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Mute Status for ASRC1 */
#define BITM_ASRC_RAT01_RATIO1               (_ADI_MSK_3(0x7FFF0000,0x7FFF0000UL, uint32_t  ))    /*  Sampling Ratio of Frame Syncs for ASRC1 */
#define BITM_ASRC_RAT01_MUTEOUT0             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Mute Status for ASRC0 */
#define BITM_ASRC_RAT01_RATIO0               (_ADI_MSK_3(0x00007FFF,0x00007FFFUL, uint32_t  ))    /*  Sampling Ratio of Frame Syncs for ASRC0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ASRC_RAT23                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ASRC_RAT23_MUTEOUT3             31            /*  Mute Status for ASRC3 */
#define BITP_ASRC_RAT23_RATIO3               16            /*  Sampling Ratio of Frame Syncs for ASRC3 */
#define BITP_ASRC_RAT23_MUTEOUT2             15            /*  Mute Status for ASRC2 */
#define BITP_ASRC_RAT23_RATIO2                0            /*  Sampling Ratio of Frame Syncs for ASRC2 */
#define BITM_ASRC_RAT23_MUTEOUT3             (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Mute Status for ASRC3 */
#define BITM_ASRC_RAT23_RATIO3               (_ADI_MSK_3(0x7FFF0000,0x7FFF0000UL, uint32_t  ))    /*  Sampling Ratio of Frame Syncs for ASRC3 */
#define BITM_ASRC_RAT23_MUTEOUT2             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Mute Status for ASRC2 */
#define BITM_ASRC_RAT23_RATIO2               (_ADI_MSK_3(0x00007FFF,0x00007FFFUL, uint32_t  ))    /*  Sampling Ratio of Frame Syncs for ASRC2 */


/* ============================================================================================================================
        The S/PDIF module
   ============================================================================================================================ */

/* ============================================================================================================================
        SPDIF1
   ============================================================================================================================ */
#define REG_SPDIF1_TX_CTL                    0x310CA280            /*  SPDIF1 Transmit Control Register */
#define REG_SPDIF1_TX_STAT_A0                0x310CA284            /*  SPDIF1 Transmit Status A0 Register */
#define REG_SPDIF1_TX_STAT_B0                0x310CA288            /*  SPDIF1 Transmit Status B0 Register */
#define REG_SPDIF1_RX_CTL                    0x310CA2A0            /*  SPDIF1 Receive Control */
#define REG_SPDIF1_RX_STAT                   0x310CA2A4            /*  SPDIF1 Receive Status Register */
#define REG_SPDIF1_RX_STAT0_A                0x310CA2A8            /*  SPDIF1 Receive Status A0 Register */
#define REG_SPDIF1_RX_STAT0_B                0x310CA2AC            /*  SPDIF1 Receive Status B0 Register */
#define REG_SPDIF1_RX_STAT1_A                0x310CA2B0            /*  SPDIF1 Receive Status A1 Register */
#define REG_SPDIF1_RX_STAT1_B                0x310CA2B4            /*  SPDIF1 Receive Status B1 Register */
#define REG_SPDIF1_TX_STAT_A1                0x310CA350            /*  SPDIF1 Transmit Status A1 Register */
#define REG_SPDIF1_TX_STAT_A2                0x310CA354            /*  SPDIF1 Transmit Status A2 Register */
#define REG_SPDIF1_TX_STAT_A3                0x310CA358            /*  SPDIF1 Transmit Status A3 Register */
#define REG_SPDIF1_TX_STAT_A4                0x310CA35C            /*  SPDIF1 Transmit Status A4 Register */
#define REG_SPDIF1_TX_STAT_A5                0x310CA360            /*  SPDIF1 Transmit Status A5 Register */
#define REG_SPDIF1_TX_STAT_B1                0x310CA368            /*  SPDIF1 Transmit Status B1 Register */
#define REG_SPDIF1_TX_STAT_B2                0x310CA36C            /*  SPDIF1 Transmit Status B2 Register */
#define REG_SPDIF1_TX_STAT_B3                0x310CA370            /*  SPDIF1 Transmit Status B3 Register */
#define REG_SPDIF1_TX_STAT_B4                0x310CA374            /*  SPDIF1 Transmit Status B4 Register */
#define REG_SPDIF1_TX_STAT_B5                0x310CA378            /*  SPDIF1 Transmit Status B5 Register */
#define REG_SPDIF1_TX_UBUFF_A0               0x310CA380            /*  SPDIF1 Transmit User Buffer A0 Register */
#define REG_SPDIF1_TX_UBUFF_A1               0x310CA384            /*  SPDIF1 Transmit User Buffer A1 Register */
#define REG_SPDIF1_TX_UBUFF_A2               0x310CA388            /*  SPDIF1 Transmit User Buffer A2 Register */
#define REG_SPDIF1_TX_UBUFF_A3               0x310CA38C            /*  SPDIF1 Transmit User Buffer A3 Register */
#define REG_SPDIF1_TX_UBUFF_A4               0x310CA390            /*  SPDIF1 Transmit User Buffer A4 Register */
#define REG_SPDIF1_TX_UBUFF_A5               0x310CA394            /*  SPDIF1 Transmit User Buffer A5 Register */
#define REG_SPDIF1_TX_UBUFF_B0               0x310CA3A0            /*  SPDIF1 Transmit User Buffer B0 Register */
#define REG_SPDIF1_TX_UBUFF_B1               0x310CA3A4            /*  SPDIF1 Transmit User Buffer B1 Register */
#define REG_SPDIF1_TX_UBUFF_B2               0x310CA3A8            /*  SPDIF1 Transmit User Buffer B2 Register */
#define REG_SPDIF1_TX_UBUFF_B3               0x310CA3AC            /*  SPDIF1 Transmit User Buffer B3 Register */
#define REG_SPDIF1_TX_UBUFF_B4               0x310CA3B0            /*  SPDIF1 Transmit User Buffer B4 Register */
#define REG_SPDIF1_TX_UBUFF_B5               0x310CA3B4            /*  SPDIF1 Transmit User Buffer B5 Register */
#define REG_SPDIF1_TX_USRUPDT                0x310CA3BC            /*  SPDIF1 User Bit Update Register */

/* ============================================================================================================================
        SPDIF Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        The Digital Audio Interface (DAIn) registers are used to configure DAI destinations for the DAI sources shown in the Group A - F Routing tables.
   ============================================================================================================================ */

/* ============================================================================================================================
        DAI1
   ============================================================================================================================ */
#define REG_DAI1_EXTD_CLK0                   0x310CA000            /*  DAI1 Extended Clock Routing Control Register 0 */
#define REG_DAI1_EXTD_CLK1                   0x310CA004            /*  DAI1 Extended Clock Routing Control Register 1 */
#define REG_DAI1_EXTD_CLK2                   0x310CA008            /*  DAI1 Extended Clock Routing Control Register 2 */
#define REG_DAI1_EXTD_CLK3                   0x310CA00C            /*  DAI1 Extended Clock Routing Control Register 3 */
#define REG_DAI1_EXTD_CLK4                   0x310CA010            /*  DAI1 Extended Clock Routing Control Register 4 */
#define REG_DAI1_EXTD_CLK5                   0x310CA014            /*  DAI1 Extended Clock Routing Control Register 5 */
#define REG_DAI1_EXTD_DAT0                   0x310CA018            /*  DAI1 Extended Serial Data Routing Control Register 0 */
#define REG_DAI1_EXTD_DAT1                   0x310CA01C            /*  DAI1 Extended Serial Data Routing Control Register 1 */
#define REG_DAI1_EXTD_DAT2                   0x310CA020            /*  DAI1 Extended Serial Data Routing Control Register 2 */
#define REG_DAI1_EXTD_DAT3                   0x310CA024            /*  DAI1 Extended Serial Data Routing Control Register 3 */
#define REG_DAI1_EXTD_DAT4                   0x310CA028            /*  DAI1 Extended Serial Data Routing Control Register 4 */
#define REG_DAI1_EXTD_DAT5                   0x310CA02C            /*  DAI1 Extended Serial Data Routing Control Register 5 */
#define REG_DAI1_EXTD_DAT6                   0x310CA030            /*  DAI1 Extended Serial Data Routing Control Register 6 */
#define REG_DAI1_EXTD_FS0                    0x310CA034            /*  DAI1 Extended Frame Sync Routing Control Register 0 */
#define REG_DAI1_EXTD_FS1                    0x310CA038            /*  DAI1 Extended Frame Sync Routing Control Register 1 */
#define REG_DAI1_EXTD_FS2                    0x310CA03C            /*  DAI1 Extended Frame Sync Routing Control Register 2 */
#define REG_DAI1_EXTD_FS4                    0x310CA044            /*  DAI1 Extended Frame Sync Routing Control Register 4 */
#define REG_DAI1_EXTD_PIN0                   0x310CA048            /*  DAI1 Extended Pin Buffer Assignment Register 0 */
#define REG_DAI1_EXTD_PIN1                   0x310CA04C            /*  DAI1 Extended Pin Buffer Assignment Register 1 */
#define REG_DAI1_EXTD_PIN2                   0x310CA050            /*  DAI1 Extended Pin Buffer Assignment Register 2 */
#define REG_DAI1_EXTD_PIN3                   0x310CA054            /*  DAI1 Extended Pin Buffer Assignment Register 3 */
#define REG_DAI1_EXTD_PIN4                   0x310CA058            /*  DAI1 Extended Pin Buffer Assignment Register 4 */
#define REG_DAI1_EXTD_MISC0                  0x310CA05C            /*  DAI1 Extended Miscellaneous Control Register 0 */
#define REG_DAI1_EXTD_MISC1                  0x310CA060            /*  DAI1 Extended Miscellaneous Control Register 1 */
#define REG_DAI1_EXTD_MISC2                  0x310CA064            /*  DAI1 Extended Miscellaneous Control Register 2 */
#define REG_DAI1_EXTD_PBEN0                  0x310CA068            /*  DAI1 Extended Pin Buffer Enable Register 0 */
#define REG_DAI1_EXTD_PBEN1                  0x310CA06C            /*  DAI1 Extended Pin Buffer Enable Register 1 */
#define REG_DAI1_EXTD_PBEN2                  0x310CA070            /*  DAI1 Extended Pin Buffer Enable Register 2 */
#define REG_DAI1_EXTD_PBEN3                  0x310CA074            /*  DAI1 Extended Pin Buffer Enable Register 3 */
#define REG_DAI1_CLK0                        0x310CA0C0            /*  DAI1 Clock Routing Control Register 0 */
#define REG_DAI1_CLK1                        0x310CA0C4            /*  DAI1 Clock Routing Control Register 1 */
#define REG_DAI1_CLK2                        0x310CA0C8            /*  DAI1 Clock Routing Control Register 2 */
#define REG_DAI1_CLK3                        0x310CA0CC            /*  DAI1 Clock Routing Control Register 3 */
#define REG_DAI1_CLK4                        0x310CA0D0            /*  DAI1 Clock Routing Control Register 4 */
#define REG_DAI1_CLK5                        0x310CA0D4            /*  DAI1 Clock Routing Control Register 5 */
#define REG_DAI1_DAT0                        0x310CA100            /*  DAI1 Serial Data Routing Control Register 0 */
#define REG_DAI1_DAT1                        0x310CA104            /*  DAI1 Serial Data Routing Control Register 1 */
#define REG_DAI1_DAT2                        0x310CA108            /*  DAI1 Serial Data Routing Control Register 2 */
#define REG_DAI1_DAT3                        0x310CA10C            /*  DAI1 Serial Data Routing Control Register 3 */
#define REG_DAI1_DAT4                        0x310CA110            /*  DAI1 Serial Data Routing Control Register 4 */
#define REG_DAI1_DAT5                        0x310CA114            /*  DAI1 Serial Data Routing Control Register 5 */
#define REG_DAI1_DAT6                        0x310CA118            /*  DAI1 Serial Data Routing Control Register 6 */
#define REG_DAI1_FS0                         0x310CA140            /*  DAI1 Frame Sync Routing Control Register 0 */
#define REG_DAI1_FS1                         0x310CA144            /*  DAI1 Frame Sync Routing Control Register 1 */
#define REG_DAI1_FS2                         0x310CA148            /*  DAI1 Frame Sync Routing Control Register 2 */
#define REG_DAI1_FS4                         0x310CA150            /*  DAI1 Frame Sync Routing Control Register 4 */
#define REG_DAI1_PIN0                        0x310CA180            /*  DAI1 Pin Buffer Assignment Register 0 */
#define REG_DAI1_PIN1                        0x310CA184            /*  DAI1 Pin Buffer Assignment Register 1 */
#define REG_DAI1_PIN2                        0x310CA188            /*  DAI1 Pin Buffer Assignment Register 2 */
#define REG_DAI1_PIN3                        0x310CA18C            /*  DAI1 Pin Buffer Assignment Register 3 */
#define REG_DAI1_PIN4                        0x310CA190            /*  DAI1 Pin Buffer Assignment Register 4 */
#define REG_DAI1_MISC0                       0x310CA1C0            /*  DAI1 Miscellaneous Control Register 0 */
#define REG_DAI1_MISC1                       0x310CA1C4            /*  DAI1 Miscellaneous Control Register 1 */
#define REG_DAI1_MISC2                       0x310CA1C8            /*  DAI1 Miscellaneous Control Register 1 */
#define REG_DAI1_PBEN0                       0x310CA1E0            /*  DAI1 Pin Buffer Enable Register 0 */
#define REG_DAI1_PBEN1                       0x310CA1E4            /*  DAI1 Pin Buffer Enable Register 1 */
#define REG_DAI1_PBEN2                       0x310CA1E8            /*  DAI1 Pin Buffer Enable Register 2 */
#define REG_DAI1_PBEN3                       0x310CA1EC            /*  DAI1 Pin Buffer Enable Register 3 */
#define REG_DAI1_IMSK_FE                     0x310CA200            /*  DAI1 Falling-Edge Interrupt Mask Register */
#define REG_DAI1_IMSK_RE                     0x310CA204            /*  DAI1 Rising-Edge Interrupt Mask Register */
#define REG_DAI1_IMSK_PRI                    0x310CA210            /*  DAI1 Core Interrupt Priority Assignment Register */
#define REG_DAI1_IRPTL_H                     0x310CA220            /*  DAI1 High Priority Interrupt Latch Register */
#define REG_DAI1_IRPTL_L                     0x310CA224            /*  DAI1 Low Priority Interrupt Latch Register */
#define REG_DAI1_IRPTL_HS                    0x310CA230            /*  DAI1 Shadow High Priority Interrupt Latch Register */
#define REG_DAI1_IRPTL_LS                    0x310CA234            /*  DAI1 Shadow Low Priority Interrupt Latch Register */
#define REG_DAI1_PIN_STAT                    0x310CA2E4            /*  DAI1 Pin Status Register */
#define REG_DAI1_GBL_SP_EN                   0x310CA2E8            /*  DAI1 Global SPORT Enable Register */
#define REG_DAI1_GBL_INT_EN                  0x310CA2EC            /*  DAI1 Global SPORT Interrupt Grouping Register */

/* ============================================================================================================================
        DAI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        Security Packet Engine
   ============================================================================================================================ */

/* ============================================================================================================================
        PKTE0
   ============================================================================================================================ */
#define REG_PKTE0_CTL_STAT                   0x310CD000            /*  PKTE0 Packet Engine Control Register */
#define REG_PKTE0_SRC_ADDR                   0x310CD004            /*  PKTE0 Packet Engine Source Address */
#define REG_PKTE0_DEST_ADDR                  0x310CD008            /*  PKTE0 Packet Engine Destination Address */
#define REG_PKTE0_SA_ADDR                    0x310CD00C            /*  PKTE0 Packet Engine SA Address */
#define REG_PKTE0_STATE_ADDR                 0x310CD010            /*  PKTE0 Packet Engine State Record Address */
#define REG_PKTE0_ARC4STATE_ADDR             0x310CD014            /*  PKTE0 Packet Engine ARC4 State Record Address */
#define REG_PKTE0_USERID                     0x310CD018            /*  PKTE0 Packet Engine User ID */
#define REG_PKTE0_LEN                        0x310CD01C            /*  PKTE0 Packet Engine Length Register */
#define REG_PKTE0_CDRBASE_ADDR               0x310CD080            /*  PKTE0 Packet Engine Command Descriptor Ring Base Address */
#define REG_PKTE0_RDRBASE_ADDR               0x310CD084            /*  PKTE0 Packet Engine Result Descriptor Ring Base Address */
#define REG_PKTE0_RING_CFG                   0x310CD088            /*  PKTE0 Packet Engine Ring Configuration */
#define REG_PKTE0_RING_THRESH                0x310CD08C            /*  PKTE0 Packet Engine Ring Threshold Registers */
#define REG_PKTE0_CDSC_CNT                   0x310CD090            /*  PKTE0 Packet Engine Command Descriptor Count Register */
#define REG_PKTE0_CDSC_INCR                  0x310CD090            /*  PKTE0 Packet Engine Command Descriptor Count Increment Register */
#define REG_PKTE0_RDSC_CNT                   0x310CD094            /*  PKTE0 Packet Engine Result Descriptor Count Registers */
#define REG_PKTE0_RDSC_DECR                  0x310CD094            /*  PKTE0 Packet Engine Result Descriptor Count Decrement Registers */
#define REG_PKTE0_RING_PTR                   0x310CD098            /*  PKTE0 Packet Engine Ring Pointer Status */
#define REG_PKTE0_RING_STAT                  0x310CD09C            /*  PKTE0 Packet Engine Ring Status */
#define REG_PKTE0_CFG                        0x310CD100            /*  PKTE0 Packet Engine Configuration Register */
#define REG_PKTE0_STAT                       0x310CD104            /*  PKTE0 Packet Engine Status Register */
#define REG_PKTE0_BUF_THRESH                 0x310CD10C            /*  PKTE0 Packet Engine Buffer Threshold Register */
#define REG_PKTE0_INBUF_CNT                  0x310CD110            /*  PKTE0 Packet Engine Input Buffer Count Register */
#define REG_PKTE0_INBUF_INCR                 0x310CD110            /*  PKTE0 Packet Engine Input Buffer Count Increment Register */
#define REG_PKTE0_OUTBUF_CNT                 0x310CD114            /*  PKTE0 Packet Engine Output Buffer Count Register */
#define REG_PKTE0_OUTBUF_DECR                0x310CD114            /*  PKTE0 Packet Engine Output Buffer Count Decrement Register */
#define REG_PKTE0_BUF_PTR                    0x310CD118            /*  PKTE0 Packet Engine Buffer Pointer Register */
#define REG_PKTE0_DMA_CFG                    0x310CD120            /*  PKTE0 Packet Engine DMA Configuration Register */
#define REG_PKTE0_ENDIAN_CFG                 0x310CD1D0            /*  PKTE0 Packet Engine Endian Configuration Register */
#define REG_PKTE0_HLT_CTL                    0x310CD1E0            /*  PKTE0 Packet Engine Halt Control Register */
#define REG_PKTE0_HLT_STAT                   0x310CD1E0            /*  PKTE0 Packet Engine Halt Status Register */
#define REG_PKTE0_CONT                       0x310CD1E4            /*  PKTE0 PKTE Continue Register */
#define REG_PKTE0_CLK_CTL                    0x310CD1E8            /*  PKTE0 PE Clock Control Register */
#define REG_PKTE0_IUMSK_STAT                 0x310CD200            /*  PKTE0 Interrupt Unmasked Status Register */
#define REG_PKTE0_IMSK_STAT                  0x310CD204            /*  PKTE0 Interrupt Masked Status Register */
#define REG_PKTE0_INT_CLR                    0x310CD204            /*  PKTE0 Interrupt Clear Register */
#define REG_PKTE0_INT_EN                     0x310CD208            /*  PKTE0 Interrupt Enable Register */
#define REG_PKTE0_INT_CFG                    0x310CD20C            /*  PKTE0 Interrupt Configuration Register */
#define REG_PKTE0_IMSK_EN                    0x310CD210            /*  PKTE0 Interrupt Mask Enable Register */
#define REG_PKTE0_IMSK_DIS                   0x310CD214            /*  PKTE0 Interrupt Mask Disable Register */
#define REG_PKTE0_SA_CMD0                    0x310CD400            /*  PKTE0 SA Command 0 */
#define REG_PKTE0_SA_CMD1                    0x310CD404            /*  PKTE0 SA Command 1 */
#define REG_PKTE0_SA_SPI                     0x310CD468            /*  PKTE0 SA SPI Register */
#define REG_PKTE0_SA_ARC4IJPTR               0x310CD47C            /*  PKTE0 ARC4 i and j Pointer Register */
#define REG_PKTE0_SA_NONCE                   0x310CD47C            /*  PKTE0 SA Initialization Vector Register */
#define REG_PKTE0_SA_RDY                     0x310CD47C            /*  PKTE0 SA Ready Indicator */
#define REG_PKTE0_ARC4STATE_BUF              0x310CD700            /*  PKTE0 Starting Entry of 256-byte ARC4 State Buffer */
#define REG_PKTE0_DATAIO_BUF                 0x310CD800            /*  PKTE0 Starting Entry of 256-byte Data Input/Output Buffer */
/* ============================================================================================================================
      SA_IDIGEST Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_SA_IDIGEST0                0x310CD428            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST1                0x310CD42C            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST2                0x310CD430            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST3                0x310CD434            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST4                0x310CD438            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST5                0x310CD43C            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST6                0x310CD440            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGEST7                0x310CD444            /*  PKTE0 SA Inner Hash Digest Registers */
#define REG_PKTE0_SA_IDIGESTn(i)             (REG_PKTE0_SA_IDIGEST0 + ((i) * 4))
#define REG_PKTE0_SA_IDIGESTn_COUNT          8
/* ============================================================================================================================
      SA_KEY Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_SA_KEY0                    0x310CD408            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY1                    0x310CD40C            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY2                    0x310CD410            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY3                    0x310CD414            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY4                    0x310CD418            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY5                    0x310CD41C            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY6                    0x310CD420            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEY7                    0x310CD424            /*  PKTE0 SA Key Registers */
#define REG_PKTE0_SA_KEYn(i)                 (REG_PKTE0_SA_KEY0 + ((i) * 4))
#define REG_PKTE0_SA_KEYn_COUNT              8
/* ============================================================================================================================
      SA_ODIGEST Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_SA_ODIGEST0                0x310CD448            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST1                0x310CD44C            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST2                0x310CD450            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST3                0x310CD454            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST4                0x310CD458            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST5                0x310CD45C            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST6                0x310CD460            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGEST7                0x310CD464            /*  PKTE0 SA Outer Hash Digest Registers */
#define REG_PKTE0_SA_ODIGESTn(i)             (REG_PKTE0_SA_ODIGEST0 + ((i) * 4))
#define REG_PKTE0_SA_ODIGESTn_COUNT          8
/* ============================================================================================================================
      SA_SEQNUM Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_SA_SEQNUM0                 0x310CD46C            /*  PKTE0 SA Sequence Number Register */
#define REG_PKTE0_SA_SEQNUM1                 0x310CD470            /*  PKTE0 SA Sequence Number Register */
#define REG_PKTE0_SA_SEQNUMn(i)              (REG_PKTE0_SA_SEQNUM0 + ((i) * 4))
#define REG_PKTE0_SA_SEQNUMn_COUNT           2
/* ============================================================================================================================
      SA_SEQNUM_MASK Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_SA_SEQNUM_MSK0             0x310CD474            /*  PKTE0 SA Sequence Number Mask Registers */
#define REG_PKTE0_SA_SEQNUM_MSK1             0x310CD478            /*  PKTE0 SA Sequence Number Mask Registers */
#define REG_PKTE0_SA_SEQNUM_MSKn(i)          (REG_PKTE0_SA_SEQNUM_MSK0 + ((i) * 4))
#define REG_PKTE0_SA_SEQNUM_MSKn_COUNT       2
/* ============================================================================================================================
      STATE_BYTE_CNT Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_STATE_BYTE_CNT0            0x310CD510            /*  PKTE0 State Hash Byte Count Registers */
#define REG_PKTE0_STATE_BYTE_CNT1            0x310CD514            /*  PKTE0 State Hash Byte Count Registers */
#define REG_PKTE0_STATE_BYTE_CNTn(i)         (REG_PKTE0_STATE_BYTE_CNT0 + ((i) * 4))
#define REG_PKTE0_STATE_BYTE_CNTn_COUNT      2
/* ============================================================================================================================
      STATE_IDIGEST Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_STATE_IDIGEST0             0x310CD518            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST1             0x310CD51C            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST2             0x310CD520            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST3             0x310CD524            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST4             0x310CD528            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST5             0x310CD52C            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST6             0x310CD530            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGEST7             0x310CD534            /*  PKTE0 State Inner Digest Registers */
#define REG_PKTE0_STATE_IDIGESTn(i)          (REG_PKTE0_STATE_IDIGEST0 + ((i) * 4))
#define REG_PKTE0_STATE_IDIGESTn_COUNT       8
/* ============================================================================================================================
      STATE_IV Register Definitions
   ============================================================================================================================ */
#define REG_PKTE0_STATE_IV0                  0x310CD500            /*  PKTE0 State Initialization Vector Registers */
#define REG_PKTE0_STATE_IV1                  0x310CD504            /*  PKTE0 State Initialization Vector Registers */
#define REG_PKTE0_STATE_IV2                  0x310CD508            /*  PKTE0 State Initialization Vector Registers */
#define REG_PKTE0_STATE_IV3                  0x310CD50C            /*  PKTE0 State Initialization Vector Registers */
#define REG_PKTE0_STATE_IVn(i)               (REG_PKTE0_STATE_IV0 + ((i) * 4))
#define REG_PKTE0_STATE_IVn_COUNT            4

/* ============================================================================================================================
        PKTE Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CTL_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CTL_STAT_PADCTLSTAT        24            /*  Pad Control/Pad Status */
#define BITP_PKTE_CTL_STAT_EXTERRCD          20            /*  Extended Error Code */
#define BITP_PKTE_CTL_STAT_EXTERR            19            /*  Extended Error */
#define BITP_PKTE_CTL_STAT_SQNMERR           18            /*  Sequence Number Error */
#define BITP_PKTE_CTL_STAT_PADERR            17            /*  Pad Error */
#define BITP_PKTE_CTL_STAT_AUTHERR           16            /*  Authentication Error */
#define BITP_PKTE_CTL_STAT_PADVAL             8            /*  Pad Value */
#define BITP_PKTE_CTL_STAT_PRNGMD             6            /*  PRNG Mode */
#define BITP_PKTE_CTL_STAT_HASHFINAL          4            /*  Hash Final */
#define BITP_PKTE_CTL_STAT_INITARC4           3            /*  Init ARC4 */
#define BITP_PKTE_CTL_STAT_PERDY              1            /*  Packet Engine Ready */
#define BITP_PKTE_CTL_STAT_HOSTRDY            0            /*  Host Ready */
#define BITM_PKTE_CTL_STAT_PADCTLSTAT        (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Pad Control/Pad Status */
#define BITM_PKTE_CTL_STAT_EXTERRCD          (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  Extended Error Code */
#define BITM_PKTE_CTL_STAT_EXTERR            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Extended Error */
#define BITM_PKTE_CTL_STAT_SQNMERR           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Sequence Number Error */
#define BITM_PKTE_CTL_STAT_PADERR            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Pad Error */
#define BITM_PKTE_CTL_STAT_AUTHERR           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Authentication Error */
#define BITM_PKTE_CTL_STAT_PADVAL            (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Pad Value */
#define BITM_PKTE_CTL_STAT_PRNGMD            (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  PRNG Mode */
#define BITM_PKTE_CTL_STAT_HASHFINAL         (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Hash Final */
#define BITM_PKTE_CTL_STAT_INITARC4          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Init ARC4 */
#define BITM_PKTE_CTL_STAT_PERDY             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Packet Engine Ready */
#define BITM_PKTE_CTL_STAT_HOSTRDY           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Host Ready */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SRC_ADDR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SRC_ADDR_VALUE              0            /*  Packet Source Address */
#define BITM_PKTE_SRC_ADDR_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Packet Source Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_DEST_ADDR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_DEST_ADDR_VALUE             0            /*  Packet Destination Address */
#define BITM_PKTE_DEST_ADDR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Packet Destination Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_ADDR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_ADDR_VALUE               0            /*  SA Record Address */
#define BITM_PKTE_SA_ADDR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SA Record Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_STATE_ADDR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_STATE_ADDR_VALUE            0            /*  State Record Address */
#define BITM_PKTE_STATE_ADDR_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  State Record Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_ARC4STATE_ADDR                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_ARC4STATE_ADDR_VALUE        0            /*  Arc4 State Record Address */
#define BITM_PKTE_ARC4STATE_ADDR_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Arc4 State Record Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_USERID                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_USERID_VALUE                0            /*  Command Descriptor User ID */
#define BITM_PKTE_USERID_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Command Descriptor User ID */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_LEN                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_LEN_BYPASS                 24            /*  Bypass */
#define BITP_PKTE_LEN_PEDONE                 23            /*  PE Done */
#define BITP_PKTE_LEN_HSTRDY                 22            /*  Host Ready */
#define BITP_PKTE_LEN_TOTLEN                  0            /*  Total length */
#define BITM_PKTE_LEN_BYPASS                 (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Bypass */
#define BITM_PKTE_LEN_PEDONE                 (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  PE Done */
#define BITM_PKTE_LEN_HSTRDY                 (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Host Ready */
#define BITM_PKTE_LEN_TOTLEN                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Total length */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CDRBASE_ADDR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CDRBASE_ADDR_VALUE          0            /*  Command Descriptor Ring Base Address */
#define BITM_PKTE_CDRBASE_ADDR_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Command Descriptor Ring Base Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RDRBASE_ADDR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RDRBASE_ADDR_VALUE          0            /*  Result Descriptor Ring Base Address */
#define BITM_PKTE_RDRBASE_ADDR_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Result Descriptor Ring Base Address */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RING_CFG                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RING_CFG_ENEXTTRIG         31            /*  Enable  External Trigger */
#define BITP_PKTE_RING_CFG_RINGSZ             0            /*  Ring Size */
#define BITM_PKTE_RING_CFG_ENEXTTRIG         (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Enable  External Trigger */
#define BITM_PKTE_RING_CFG_RINGSZ            (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Ring Size */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RING_THRESH                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RING_THRESH_TOEN           31            /*  Timeout Enable */
#define BITP_PKTE_RING_THRESH_RDTO           26            /*  Read Descriptor Timeout */
#define BITP_PKTE_RING_THRESH_RDRTHRSH       16            /*  Result Descriptor Ring Threshold */
#define BITP_PKTE_RING_THRESH_CDRTHRSH        0            /*  Command Descriptor Ring Threshold */
#define BITM_PKTE_RING_THRESH_TOEN           (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Timeout Enable */
#define BITM_PKTE_RING_THRESH_RDTO           (_ADI_MSK_3(0x3C000000,0x3C000000UL, uint32_t  ))    /*  Read Descriptor Timeout */
#define BITM_PKTE_RING_THRESH_RDRTHRSH       (_ADI_MSK_3(0x03FF0000,0x03FF0000UL, uint32_t  ))    /*  Result Descriptor Ring Threshold */
#define BITM_PKTE_RING_THRESH_CDRTHRSH       (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Command Descriptor Ring Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CDSC_CNT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CDSC_CNT_VALUE              0            /*  Command Descriptor Count */
#define BITM_PKTE_CDSC_CNT_VALUE             (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Command Descriptor Count */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CDSC_INCR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CDSC_INCR_VALUE             0            /*  Command Descriptor Count Increment */
#define BITM_PKTE_CDSC_INCR_VALUE            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Command Descriptor Count Increment */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RDSC_CNT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RDSC_CNT_VALUE              0            /*  Result Descriptor Count */
#define BITM_PKTE_RDSC_CNT_VALUE             (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Result Descriptor Count */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RDSC_DECR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RDSC_DECR_VALUE             0            /*  Read Count Decrement */
#define BITM_PKTE_RDSC_DECR_VALUE            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read Count Decrement */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RING_PTR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RING_PTR_RDRPTR            16            /*  Result Descriptor Ring Write Pointer */
#define BITP_PKTE_RING_PTR_CDRPTR             0            /*  Command Descriptor Ring Read Pointer */
#define BITM_PKTE_RING_PTR_RDRPTR            (_ADI_MSK_3(0x03FF0000,0x03FF0000UL, uint32_t  ))    /*  Result Descriptor Ring Write Pointer */
#define BITM_PKTE_RING_PTR_CDRPTR            (_ADI_MSK_3(0x000003FF,0x000003FFUL, uint32_t  ))    /*  Command Descriptor Ring Read Pointer */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_RING_STAT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_RING_STAT_RDRUNFL           1            /*  Result Descriptor Ring Underflow */
#define BITP_PKTE_RING_STAT_CDROVFL           0            /*  Command Descriptor Ring Overflow */
#define BITM_PKTE_RING_STAT_RDRUNFL          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Result Descriptor Ring Underflow */
#define BITM_PKTE_RING_STAT_CDROVFL          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Command Descriptor Ring Overflow */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CFG                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CFG_SWPDAT                 18            /*  Swap Data */
#define BITP_PKTE_CFG_SWPSA                  17            /*  Swap SA */
#define BITP_PKTE_CFG_SWPCDRD                16            /*  Swap CD RD */
#define BITP_PKTE_CFG_ENCDRUPDT              10            /*  Enable CDR Update */
#define BITP_PKTE_CFG_MODE                    8            /*  Packet Engine Mode */
#define BITP_PKTE_CFG_RSTRING                 1            /*  Reset Ring */
#define BITP_PKTE_CFG_RSTPE                   0            /*  Reset Packet Engine */
#define BITM_PKTE_CFG_SWPDAT                 (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Swap Data */
#define BITM_PKTE_CFG_SWPSA                  (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Swap SA */
#define BITM_PKTE_CFG_SWPCDRD                (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Swap CD RD */
#define BITM_PKTE_CFG_ENCDRUPDT              (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Enable CDR Update */
#define BITM_PKTE_CFG_MODE                   (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Packet Engine Mode */
#define BITM_PKTE_CFG_RSTRING                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Reset Ring */
#define BITM_PKTE_CFG_RSTPE                  (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Reset Packet Engine */
#define ENUM_PKTE_CFG_HOST                   (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  MODE: Direct Host Mode. */
#define ENUM_PKTE_CFG_TCM0                   (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  MODE: Target Command Mode with Result Descriptor Ring Disabled. */
#define ENUM_PKTE_CFG_TCM1                   (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  MODE: Target Command Mode with Result Descriptor Ring Enabled. */
#define ENUM_PKTE_CFG_AUTO                   (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  MODE: Autonomous Ring Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_STAT_OBUFFULLCNT           22            /*  Output Buffer Full Count */
#define BITP_PKTE_STAT_IBUFEMPTYCNT          12            /*  Input Buffer Empty Count */
#define BITP_PKTE_STAT_OBUFREQ               11            /*  Output Buffer Request Active */
#define BITP_PKTE_STAT_IBUFREQ               10            /*  Input Buffer Request Active */
#define BITP_PKTE_STAT_OPDN                   9            /*  Operation Done */
#define BITP_PKTE_STAT_EXTERR                 8            /*  Extended Error */
#define BITP_PKTE_STAT_SNUMERR                7            /*  Sequence Number Error */
#define BITP_PKTE_STAT_PADERR                 6            /*  Pad Error */
#define BITP_PKTE_STAT_AUTHERR                5            /*  Authentication Error */
#define BITP_PKTE_STAT_OUTHSHDN               4            /*  Outer Hash Done */
#define BITP_PKTE_STAT_INHSHDN                3            /*  Inner Hash Done */
#define BITP_PKTE_STAT_ENCRYPTDN              2            /*  Encrypt Done */
#define BITP_PKTE_STAT_OUTPTDN                1            /*  PE Output Done */
#define BITP_PKTE_STAT_INPTDN                 0            /*  Packet Engine Input Done */
#define BITM_PKTE_STAT_OBUFFULLCNT           (_ADI_MSK_3(0xFFC00000,0xFFC00000UL, uint32_t  ))    /*  Output Buffer Full Count */
#define BITM_PKTE_STAT_IBUFEMPTYCNT          (_ADI_MSK_3(0x003FF000,0x003FF000UL, uint32_t  ))    /*  Input Buffer Empty Count */
#define BITM_PKTE_STAT_OBUFREQ               (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Request Active */
#define BITM_PKTE_STAT_IBUFREQ               (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Request Active */
#define BITM_PKTE_STAT_OPDN                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_STAT_EXTERR                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Extended Error */
#define BITM_PKTE_STAT_SNUMERR               (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Sequence Number Error */
#define BITM_PKTE_STAT_PADERR                (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Pad Error */
#define BITM_PKTE_STAT_AUTHERR               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Authentication Error */
#define BITM_PKTE_STAT_OUTHSHDN              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Outer Hash Done */
#define BITM_PKTE_STAT_INHSHDN               (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Inner Hash Done */
#define BITM_PKTE_STAT_ENCRYPTDN             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Encrypt Done */
#define BITM_PKTE_STAT_OUTPTDN               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PE Output Done */
#define BITM_PKTE_STAT_INPTDN                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Packet Engine Input Done */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_BUF_THRESH                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_BUF_THRESH_OUTBUF          16            /*  Output Buffer Threshold */
#define BITP_PKTE_BUF_THRESH_INBUF            0            /*  Input Buffer Threshold */
#define BITM_PKTE_BUF_THRESH_OUTBUF          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_BUF_THRESH_INBUF           (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Input Buffer Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_INBUF_CNT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_INBUF_CNT_VALUE             0            /*  Input Buffer Count */
#define BITM_PKTE_INBUF_CNT_VALUE            (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Input Buffer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_INBUF_INCR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_INBUF_INCR_VALUE            0            /*  Input Buffer Increment */
#define BITM_PKTE_INBUF_INCR_VALUE           (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Input Buffer Increment */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_OUTBUF_CNT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_OUTBUF_CNT_VALUE            0            /*  Output Buffer Count */
#define BITM_PKTE_OUTBUF_CNT_VALUE           (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Output Buffer Count */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_OUTBUF_DECR                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_OUTBUF_DECR_VALUE           0            /*  Output Buffer Count Decrement */
#define BITM_PKTE_OUTBUF_DECR_VALUE          (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Output Buffer Count Decrement */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_BUF_PTR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_BUF_PTR_OUTBUF             16            /*  Output Buffer Pointer */
#define BITP_PKTE_BUF_PTR_INBUF               0            /*  Input Buffer Pointer */
#define BITM_PKTE_BUF_PTR_OUTBUF             (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Output Buffer Pointer */
#define BITM_PKTE_BUF_PTR_INBUF              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Input Buffer Pointer */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_DMA_CFG                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_DMA_CFG_IDLE               20            /*  Idle Enable */
#define BITP_PKTE_DMA_CFG_INCR               19            /*  Increment Enable */
#define BITP_PKTE_DMA_CFG_MSTRBIGEND         16            /*  Master Big Endian */
#define BITP_PKTE_DMA_CFG_MXBRSTSZ            0            /*  Max Burst Size */
#define BITM_PKTE_DMA_CFG_IDLE               (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  Idle Enable */
#define BITM_PKTE_DMA_CFG_INCR               (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Increment Enable */
#define BITM_PKTE_DMA_CFG_MSTRBIGEND         (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  Master Big Endian */
#define BITM_PKTE_DMA_CFG_MXBRSTSZ           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Max Burst Size */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_ENDIAN_CFG                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_ENDIAN_CFG_TGTBSWP         16            /*  Target Byte Swap */
#define BITP_PKTE_ENDIAN_CFG_MSTRBSWP         0            /*  Master Byte Swap */
#define BITM_PKTE_ENDIAN_CFG_TGTBSWP         (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Target Byte Swap */
#define BITM_PKTE_ENDIAN_CFG_MSTRBSWP        (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Master Byte Swap */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_HLT_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_HLT_CTL_WRRD                5            /*  Halt On Write Result Descriptor */
#define BITP_PKTE_HLT_CTL_WRSA                4            /*  Halt On Write SA */
#define BITP_PKTE_HLT_CTL_HWRDAT              3            /*  Halt On Write Data */
#define BITP_PKTE_HLT_CTL_RDSA                2            /*  Halt On Read SA */
#define BITP_PKTE_HLT_CTL_RDCD                1            /*  Halt On Read Command Descriptor */
#define BITP_PKTE_HLT_CTL_EN                  0            /*  Enable Halt Mode */
#define BITM_PKTE_HLT_CTL_WRRD               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Halt On Write Result Descriptor */
#define BITM_PKTE_HLT_CTL_WRSA               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Halt On Write SA */
#define BITM_PKTE_HLT_CTL_HWRDAT             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Halt On Write Data */
#define BITM_PKTE_HLT_CTL_RDSA               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Halt On Read SA */
#define BITM_PKTE_HLT_CTL_RDCD               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Halt On Read Command Descriptor */
#define BITM_PKTE_HLT_CTL_EN                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Halt Mode */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_HLT_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_HLT_STAT_DATSTATE          24            /*  Data State */
#define BITP_PKTE_HLT_STAT_RDSASTATE         20            /*  Read SA State */
#define BITP_PKTE_HLT_STAT_MNSTATE           16            /*  Main State */
#define BITP_PKTE_HLT_STAT_WRRD               5            /*  Halt On Write Result Descriptor */
#define BITP_PKTE_HLT_STAT_WRSA               4            /*  Halt On Write SA */
#define BITP_PKTE_HLT_STAT_WRDAT              3            /*  Halt On Write Data */
#define BITP_PKTE_HLT_STAT_RDSA               2            /*  Halt On Read SA */
#define BITP_PKTE_HLT_STAT_RDCD               1            /*  Halt On Read Command Descriptor */
#define BITP_PKTE_HLT_STAT_EN                 0            /*  Halt Mode Enabled Status */
#define BITM_PKTE_HLT_STAT_DATSTATE          (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  Data State */
#define BITM_PKTE_HLT_STAT_RDSASTATE         (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  Read SA State */
#define BITM_PKTE_HLT_STAT_MNSTATE           (_ADI_MSK_3(0x000F0000,0x000F0000UL, uint32_t  ))    /*  Main State */
#define BITM_PKTE_HLT_STAT_WRRD              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Halt On Write Result Descriptor */
#define BITM_PKTE_HLT_STAT_WRSA              (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Halt On Write SA */
#define BITM_PKTE_HLT_STAT_WRDAT             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Halt On Write Data */
#define BITM_PKTE_HLT_STAT_RDSA              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Halt On Read SA */
#define BITM_PKTE_HLT_STAT_RDCD              (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Halt On Read Command Descriptor */
#define BITM_PKTE_HLT_STAT_EN                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Halt Mode Enabled Status */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CONT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CONT_VALUE                  0            /*  Continue Operating */
#define BITM_PKTE_CONT_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Continue Operating */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_CLK_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_CLK_CTL_ENHSHCLK            4            /*  Enable Hash Clock */
#define BITP_PKTE_CLK_CTL_ENARC4CLK           3            /*  Enable ARC4 Clock */
#define BITP_PKTE_CLK_CTL_ENAESCLK            2            /*  Enable AES Clock */
#define BITP_PKTE_CLK_CTL_ENDESCLK            1            /*  Enable DES Clock */
#define BITP_PKTE_CLK_CTL_ENPECLK             0            /*  Enable Packet Engine Clock */
#define BITM_PKTE_CLK_CTL_ENHSHCLK           (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Enable Hash Clock */
#define BITM_PKTE_CLK_CTL_ENARC4CLK          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Enable ARC4 Clock */
#define BITM_PKTE_CLK_CTL_ENAESCLK           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Enable AES Clock */
#define BITM_PKTE_CLK_CTL_ENDESCLK           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Enable DES Clock */
#define BITM_PKTE_CLK_CTL_ENPECLK            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable Packet Engine Clock */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_IUMSK_STAT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_IUMSK_STAT_IFERR           18            /*  Interface Error */
#define BITP_PKTE_IUMSK_STAT_PROCERR         17            /*  PKTE Processing Error */
#define BITP_PKTE_IUMSK_STAT_RINGERR         16            /*  PKTE Ring Error */
#define BITP_PKTE_IUMSK_STAT_HLT             15            /*  Halt */
#define BITP_PKTE_IUMSK_STAT_OBUFTHRSH       11            /*  Output Buffer Threshold */
#define BITP_PKTE_IUMSK_STAT_IBUFTHRSH       10            /*  Input Buffer Threshold */
#define BITP_PKTE_IUMSK_STAT_OPDN             9            /*  Operation Done */
#define BITP_PKTE_IUMSK_STAT_RDRTHRSH         1            /*  RDR Threshold */
#define BITP_PKTE_IUMSK_STAT_CDRTHRSH         0            /*  CDR Threshold */
#define BITM_PKTE_IUMSK_STAT_IFERR           (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Interface Error */
#define BITM_PKTE_IUMSK_STAT_PROCERR         (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PKTE Processing Error */
#define BITM_PKTE_IUMSK_STAT_RINGERR         (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PKTE Ring Error */
#define BITM_PKTE_IUMSK_STAT_HLT             (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Halt */
#define BITM_PKTE_IUMSK_STAT_OBUFTHRSH       (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_IUMSK_STAT_IBUFTHRSH       (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Threshold */
#define BITM_PKTE_IUMSK_STAT_OPDN            (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_IUMSK_STAT_RDRTHRSH        (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RDR Threshold */
#define BITM_PKTE_IUMSK_STAT_CDRTHRSH        (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDR Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_IMSK_STAT                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_IMSK_STAT_IFERR            18            /*  Interface Error */
#define BITP_PKTE_IMSK_STAT_PROCERR          17            /*  PKTE Processing Error */
#define BITP_PKTE_IMSK_STAT_RINGERR          16            /*  PE Ring Error */
#define BITP_PKTE_IMSK_STAT_HLT              15            /*  Halt */
#define BITP_PKTE_IMSK_STAT_OBUFTHRSH        11            /*  Output Buffer Threshold */
#define BITP_PKTE_IMSK_STAT_IBUFTHRSH        10            /*  Input Buffer Threshold */
#define BITP_PKTE_IMSK_STAT_OPDN              9            /*  Operation Done */
#define BITP_PKTE_IMSK_STAT_RDRTHRSH          1            /*  RDR Threshold */
#define BITP_PKTE_IMSK_STAT_CDRTHRSH          0            /*  CDR Threshold */
#define BITM_PKTE_IMSK_STAT_IFERR            (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Interface Error */
#define BITM_PKTE_IMSK_STAT_PROCERR          (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PKTE Processing Error */
#define BITM_PKTE_IMSK_STAT_RINGERR          (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PE Ring Error */
#define BITM_PKTE_IMSK_STAT_HLT              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Halt */
#define BITM_PKTE_IMSK_STAT_OBUFTHRSH        (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_IMSK_STAT_IBUFTHRSH        (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Threshold */
#define BITM_PKTE_IMSK_STAT_OPDN             (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_IMSK_STAT_RDRTHRSH         (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RDR Threshold */
#define BITM_PKTE_IMSK_STAT_CDRTHRSH         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDR Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_INT_CLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_INT_CLR_IFERR              18            /*  Interface Error */
#define BITP_PKTE_INT_CLR_PROCERR            17            /*  PKTE Processing Error */
#define BITP_PKTE_INT_CLR_RINGERR            16            /*  PKTE Ring Error */
#define BITP_PKTE_INT_CLR_HLT                15            /*  Halt */
#define BITP_PKTE_INT_CLR_OBUFTHRSH          11            /*  Output Buffer Threshold */
#define BITP_PKTE_INT_CLR_IBUFTHRSH          10            /*  Input Buffer Threshold */
#define BITP_PKTE_INT_CLR_OPDN                9            /*  Operation Done */
#define BITP_PKTE_INT_CLR_RDRTHRSH            1            /*  RDR Threshold */
#define BITP_PKTE_INT_CLR_CDRTHRSH            0            /*  CDR Threshold */
#define BITM_PKTE_INT_CLR_IFERR              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Interface Error */
#define BITM_PKTE_INT_CLR_PROCERR            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PKTE Processing Error */
#define BITM_PKTE_INT_CLR_RINGERR            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PKTE Ring Error */
#define BITM_PKTE_INT_CLR_HLT                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Halt */
#define BITM_PKTE_INT_CLR_OBUFTHRSH          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_INT_CLR_IBUFTHRSH          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Threshold */
#define BITM_PKTE_INT_CLR_OPDN               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_INT_CLR_RDRTHRSH           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RDR Threshold */
#define BITM_PKTE_INT_CLR_CDRTHRSH           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDR Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_INT_EN                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_INT_EN_IFERR               18            /*  Interface Error */
#define BITP_PKTE_INT_EN_PROCERR             17            /*  PKTE Processing Error */
#define BITP_PKTE_INT_EN_RINGERR             16            /*  PKTE Ring Error */
#define BITP_PKTE_INT_EN_HLT                 15            /*  Halt */
#define BITP_PKTE_INT_EN_OBUFTHRSH           11            /*  Output Buffer Threshold */
#define BITP_PKTE_INT_EN_IBUFTHRSH           10            /*  Input Buffer Threshold */
#define BITP_PKTE_INT_EN_OPDN                 9            /*  Operation Done */
#define BITP_PKTE_INT_EN_RDRTHRSH             1            /*  RDR Threshold */
#define BITP_PKTE_INT_EN_CDRTHRSH             0            /*  CDR Threshold */
#define BITM_PKTE_INT_EN_IFERR               (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Interface Error */
#define BITM_PKTE_INT_EN_PROCERR             (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PKTE Processing Error */
#define BITM_PKTE_INT_EN_RINGERR             (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PKTE Ring Error */
#define BITM_PKTE_INT_EN_HLT                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Halt */
#define BITM_PKTE_INT_EN_OBUFTHRSH           (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_INT_EN_IBUFTHRSH           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Threshold */
#define BITM_PKTE_INT_EN_OPDN                (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_INT_EN_RDRTHRSH            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RDR Threshold */
#define BITM_PKTE_INT_EN_CDRTHRSH            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDR Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_INT_CFG                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_INT_CFG_PULSECLR            1            /*  Clear After Pulse Interrupt */
#define BITP_PKTE_INT_CFG_TYPE                0            /*  Interrupt Type */
#define BITM_PKTE_INT_CFG_PULSECLR           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Clear After Pulse Interrupt */
#define BITM_PKTE_INT_CFG_TYPE               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Interrupt Type */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_IMSK_EN                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_IMSK_EN_IFERR              18            /*  Interface Error */
#define BITP_PKTE_IMSK_EN_PROCERR            17            /*  PKTE Processing Error */
#define BITP_PKTE_IMSK_EN_RINGERR            16            /*  PKTE Ring Error */
#define BITP_PKTE_IMSK_EN_HLT                15            /*  Halt */
#define BITP_PKTE_IMSK_EN_OBUFTHRSH          11            /*  Output Buffer Threshold */
#define BITP_PKTE_IMSK_EN_IBUFTHRSH          10            /*  Input Buffer Threshold */
#define BITP_PKTE_IMSK_EN_OPDN                9            /*  Operation Done */
#define BITP_PKTE_IMSK_EN_RDRTHRSH            1            /*  RDR Threshold */
#define BITP_PKTE_IMSK_EN_CDRTHRSH            0            /*  CDR Threshold */
#define BITM_PKTE_IMSK_EN_IFERR              (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Interface Error */
#define BITM_PKTE_IMSK_EN_PROCERR            (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PKTE Processing Error */
#define BITM_PKTE_IMSK_EN_RINGERR            (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PKTE Ring Error */
#define BITM_PKTE_IMSK_EN_HLT                (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Halt */
#define BITM_PKTE_IMSK_EN_OBUFTHRSH          (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_IMSK_EN_IBUFTHRSH          (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Threshold */
#define BITM_PKTE_IMSK_EN_OPDN               (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_IMSK_EN_RDRTHRSH           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RDR Threshold */
#define BITM_PKTE_IMSK_EN_CDRTHRSH           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDR Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_IMSK_DIS                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_IMSK_DIS_IFERR             18            /*  Interface Error */
#define BITP_PKTE_IMSK_DIS_PROCERR           17            /*  PKTE Processing Error */
#define BITP_PKTE_IMSK_DIS_RINGERR           16            /*  PKTE Ring Error */
#define BITP_PKTE_IMSK_DIS_HLT               15            /*  Halt */
#define BITP_PKTE_IMSK_DIS_OBUFTHRSH         11            /*  Output Buffer Threshold */
#define BITP_PKTE_IMSK_DIS_IBUFTHRSH         10            /*  Input Buffer Threshold */
#define BITP_PKTE_IMSK_DIS_OPDN               9            /*  Operation Done */
#define BITP_PKTE_IMSK_DIS_RDRTHRSH           1            /*  RDR Threshold */
#define BITP_PKTE_IMSK_DIS_CDRTHRSH           0            /*  CDR Threshold */
#define BITM_PKTE_IMSK_DIS_IFERR             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Interface Error */
#define BITM_PKTE_IMSK_DIS_PROCERR           (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  PKTE Processing Error */
#define BITM_PKTE_IMSK_DIS_RINGERR           (_ADI_MSK_3(0x00010000,0x00010000UL, uint32_t  ))    /*  PKTE Ring Error */
#define BITM_PKTE_IMSK_DIS_HLT               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Halt */
#define BITM_PKTE_IMSK_DIS_OBUFTHRSH         (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Output Buffer Threshold */
#define BITM_PKTE_IMSK_DIS_IBUFTHRSH         (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Input Buffer Threshold */
#define BITM_PKTE_IMSK_DIS_OPDN              (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Operation Done */
#define BITM_PKTE_IMSK_DIS_RDRTHRSH          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  RDR Threshold */
#define BITM_PKTE_IMSK_DIS_CDRTHRSH          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  CDR Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_CMD0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_CMD0_SVHASH             29            /*  Save Hash */
#define BITP_PKTE_SA_CMD0_SVIV               28            /*  Save IV */
#define BITP_PKTE_SA_CMD0_HASHSRC            26            /*  Hash Source */
#define BITP_PKTE_SA_CMD0_IVSRC              24            /*  IV Source */
#define BITP_PKTE_SA_CMD0_DIGESTLEN          20            /*  Digest Length */
#define BITP_PKTE_SA_CMD0_HDRPROC            19            /*  Header Processing */
#define BITP_PKTE_SA_CMD0_EXTPAD             18            /*  Extended Pad */
#define BITP_PKTE_SA_CMD0_SCPAD              17            /*  Stream Cipher Padding */
#define BITP_PKTE_SA_CMD0_HASH               12            /*  Hash Algorithm Select */
#define BITP_PKTE_SA_CMD0_CIPHER              8            /*  Cipher Algorithm Select */
#define BITP_PKTE_SA_CMD0_PADTYPE             6            /*  Pad Type */
#define BITP_PKTE_SA_CMD0_OPGRP               4            /*  Operation Group */
#define BITP_PKTE_SA_CMD0_DIR                 3            /*  Direction */
#define BITP_PKTE_SA_CMD0_OPCD                0            /*  Operation Code */
#define BITM_PKTE_SA_CMD0_SVHASH             (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Save Hash */
#define BITM_PKTE_SA_CMD0_SVIV               (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  Save IV */
#define BITM_PKTE_SA_CMD0_HASHSRC            (_ADI_MSK_3(0x0C000000,0x0C000000UL, uint32_t  ))    /*  Hash Source */
#define BITM_PKTE_SA_CMD0_IVSRC              (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  IV Source */
#define BITM_PKTE_SA_CMD0_DIGESTLEN          (_ADI_MSK_3(0x00F00000,0x00F00000UL, uint32_t  ))    /*  Digest Length */
#define BITM_PKTE_SA_CMD0_HDRPROC            (_ADI_MSK_3(0x00080000,0x00080000UL, uint32_t  ))    /*  Header Processing */
#define BITM_PKTE_SA_CMD0_EXTPAD             (_ADI_MSK_3(0x00040000,0x00040000UL, uint32_t  ))    /*  Extended Pad */
#define BITM_PKTE_SA_CMD0_SCPAD              (_ADI_MSK_3(0x00020000,0x00020000UL, uint32_t  ))    /*  Stream Cipher Padding */
#define BITM_PKTE_SA_CMD0_HASH               (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  Hash Algorithm Select */
#define BITM_PKTE_SA_CMD0_CIPHER             (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Cipher Algorithm Select */
#define BITM_PKTE_SA_CMD0_PADTYPE            (_ADI_MSK_3(0x000000C0,0x000000C0UL, uint32_t  ))    /*  Pad Type */
#define BITM_PKTE_SA_CMD0_OPGRP              (_ADI_MSK_3(0x00000030,0x00000030UL, uint32_t  ))    /*  Operation Group */
#define BITM_PKTE_SA_CMD0_DIR                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Direction */
#define BITM_PKTE_SA_CMD0_OPCD               (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  Operation Code */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_CMD1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_CMD1_ENSQNCHK           29            /*  Sequence Number Check Enable */
#define BITP_PKTE_SA_CMD1_AESDECKEY          28            /*  AES Dec Key */
#define BITP_PKTE_SA_CMD1_AESKEYLEN          24            /*  AES Key Length */
#define BITP_PKTE_SA_CMD1_ARC4KEYLEN         24            /*  ARC4 Key Length */
#define BITP_PKTE_SA_CMD1_HSHCOFFST          16            /*  Hash Crypt Offset */
#define BITP_PKTE_SA_CMD1_BYTEOFFST          13            /*  Byte Offset */
#define BITP_PKTE_SA_CMD1_HMAC               12            /*  Keyed-Hash SSL Message Authentication Code */
#define BITP_PKTE_SA_CMD1_SSLMAC             11            /*  Ssl Mac */
#define BITP_PKTE_SA_CMD1_CIPHERMD            8            /*  Cipher Mode */
#define BITP_PKTE_SA_CMD1_CPYPAD              3            /*  Copy Pad */
#define BITP_PKTE_SA_CMD1_CPYPAYLD            2            /*  Copy Payload */
#define BITP_PKTE_SA_CMD1_CPYHDR              1            /*  Copy Header */
#define BITP_PKTE_SA_CMD1_CPYDGST             0            /*  Copy Digest */
#define BITM_PKTE_SA_CMD1_ENSQNCHK           (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Sequence Number Check Enable */
#define BITM_PKTE_SA_CMD1_AESDECKEY          (_ADI_MSK_3(0x10000000,0x10000000UL, uint32_t  ))    /*  AES Dec Key */
#define BITM_PKTE_SA_CMD1_AESKEYLEN          (_ADI_MSK_3(0x07000000,0x07000000UL, uint32_t  ))    /*  AES Key Length */
#define BITM_PKTE_SA_CMD1_ARC4KEYLEN         (_ADI_MSK_3(0x1F000000,0x1F000000UL, uint32_t  ))    /*  ARC4 Key Length */
#define BITM_PKTE_SA_CMD1_HSHCOFFST          (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Hash Crypt Offset */
#define BITM_PKTE_SA_CMD1_BYTEOFFST          (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  Byte Offset */
#define BITM_PKTE_SA_CMD1_HMAC               (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Keyed-Hash SSL Message Authentication Code */
#define BITM_PKTE_SA_CMD1_SSLMAC             (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Ssl Mac */
#define BITM_PKTE_SA_CMD1_CIPHERMD           (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Cipher Mode */
#define BITM_PKTE_SA_CMD1_CPYPAD             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Copy Pad */
#define BITM_PKTE_SA_CMD1_CPYPAYLD           (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Copy Payload */
#define BITM_PKTE_SA_CMD1_CPYHDR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Copy Header */
#define BITM_PKTE_SA_CMD1_CPYDGST            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Copy Digest */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_SPI                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_SPI_VALUE                0            /*  SA SPI */
#define BITM_PKTE_SA_SPI_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SA SPI */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_ARC4IJPTR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_ARC4IJPTR_JPTR           8            /*  J Pointer */
#define BITP_PKTE_SA_ARC4IJPTR_IPTR           0            /*  I Pointer */
#define BITM_PKTE_SA_ARC4IJPTR_JPTR          (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  J Pointer */
#define BITM_PKTE_SA_ARC4IJPTR_IPTR          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  I Pointer */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_NONCE                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_NONCE_VALUE              0            /*  SA Nonce */
#define BITM_PKTE_SA_NONCE_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SA Nonce */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_RDY                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_RDY_VALUE                0            /*  SA Ready */
#define BITM_PKTE_SA_RDY_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SA Ready */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_ARC4STATE_BUF                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_ARC4STATE_BUF_VALUE         0            /*  Buffer value */
#define BITM_PKTE_ARC4STATE_BUF_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Buffer value */

/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_DATAIO_BUF                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_DATAIO_BUF_VALUE            0            /*  Buffer Value */
#define BITM_PKTE_DATAIO_BUF_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Buffer Value */

/* ============================================================================================================================
 *    SA_IDIGEST Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_IDIGEST[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_IDIGEST_VALUE            0            /*  Inner Hash Digest */
#define BITM_PKTE_SA_IDIGEST_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Inner Hash Digest */

/* ============================================================================================================================
 *    SA_KEY Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_KEY[n]                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_KEY_VALUE                0            /*  Cipher Key */
#define BITM_PKTE_SA_KEY_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Cipher Key */

/* ============================================================================================================================
 *    SA_ODIGEST Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_ODIGEST[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_ODIGEST_VALUE            0            /*  Outer Hash Digest */
#define BITM_PKTE_SA_ODIGEST_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Outer Hash Digest */

/* ============================================================================================================================
 *    SA_SEQNUM Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_SEQNUM[n]                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_SEQNUM_VALUE             0            /*  SA Sequence Number */
#define BITM_PKTE_SA_SEQNUM_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SA Sequence Number */

/* ============================================================================================================================
 *    SA_SEQNUM_MASK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_SA_SEQNUM_MSK[n]                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_SA_SEQNUM_MSK_VALUE         0            /*  SA Sequence Number */
#define BITM_PKTE_SA_SEQNUM_MSK_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SA Sequence Number */

/* ============================================================================================================================
 *    STATE_BYTE_CNT Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_STATE_BYTE_CNT[n]               Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_STATE_BYTE_CNT_VALUE        0            /*  STATE Byte Count */
#define BITM_PKTE_STATE_BYTE_CNT_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  STATE Byte Count */

/* ============================================================================================================================
 *    STATE_IDIGEST Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_STATE_IDIGEST[n]                Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_STATE_IDIGEST_VALUE         0            /*  Saved Inner Hash Digest */
#define BITM_PKTE_STATE_IDIGEST_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Saved Inner Hash Digest */

/* ============================================================================================================================
 *    STATE_IV Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKTE_STATE_IV[n]                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKTE_STATE_IV_VALUE              0            /*  State Initialization Vector */
#define BITM_PKTE_STATE_IV_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  State Initialization Vector */


/* ============================================================================================================================
        True Random Number Generator
   ============================================================================================================================ */

/* ============================================================================================================================
        TRNG0
   ============================================================================================================================ */
#define REG_TRNG0_INTACK                     0x310D0010            /*  TRNG0 TRNG Interrupt Acknowledge Register */
#define REG_TRNG0_STAT                       0x310D0010            /*  TRNG0 TRNG Status Register */
#define REG_TRNG0_CTL                        0x310D0014            /*  TRNG0 TRNG Control Register */
#define REG_TRNG0_CFG                        0x310D0018            /*  TRNG0 TRNG Configuration Register */
#define REG_TRNG0_ALMCNT                     0x310D001C            /*  TRNG0 TRNG Alarm Counter Register */
#define REG_TRNG0_FROEN                      0x310D0020            /*  TRNG0 TRNG FRO Enable Register */
#define REG_TRNG0_FRODETUNE                  0x310D0024            /*  TRNG0 TRNG FRO De-tune Register */
#define REG_TRNG0_ALMMSK                     0x310D0028            /*  TRNG0 TRNG Alarm Mask Register */
#define REG_TRNG0_ALMSTP                     0x310D002C            /*  TRNG0 TRNG Alarm Stop Register */
#define REG_TRNG0_LFSR_L                     0x310D0030            /*  TRNG0 TRNG LFSR Access Register */
#define REG_TRNG0_LFSR_M                     0x310D0034            /*  TRNG0 TRNG LFSR Access Register */
#define REG_TRNG0_LFSR_H                     0x310D0038            /*  TRNG0 TRNG LFSR Access Register */
#define REG_TRNG0_CNT                        0x310D003C            /*  TRNG0 Counter Register */
#define REG_TRNG0_RUNCNT                     0x310D0040            /*  TRNG0 TRNG Run Count Registers */
#define REG_TRNG0_MONOBITCNT                 0x310D005C            /*  TRNG0 TRNG Monobit Test Result Register */
#define REG_TRNG0_TEST                       0x310D0070            /*  TRNG0 TRNG Test Register */
#define REG_TRNG0_BLKCNT                     0x310D0074            /*  TRNG0 TRNG Block Count Register */
/* ============================================================================================================================
      INBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRNG0_INPUT0                     0x310D0000            /*  TRNG0 TRNG Input Registers */
#define REG_TRNG0_INPUT1                     0x310D0004            /*  TRNG0 TRNG Input Registers */
#define REG_TRNG0_INPUTn(i)                  (REG_TRNG0_INPUT0 + ((i) * 4))
#define REG_TRNG0_INPUTn_COUNT               2
/* ============================================================================================================================
      KEYBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRNG0_KEY0                       0x310D0040            /*  TRNG0 Post-Process Key Registers */
#define REG_TRNG0_KEY1                       0x310D0044            /*  TRNG0 Post-Process Key Registers */
#define REG_TRNG0_KEY2                       0x310D0048            /*  TRNG0 Post-Process Key Registers */
#define REG_TRNG0_KEY3                       0x310D004C            /*  TRNG0 Post-Process Key Registers */
#define REG_TRNG0_KEY4                       0x310D0050            /*  TRNG0 Post-Process Key Registers */
#define REG_TRNG0_KEY5                       0x310D0054            /*  TRNG0 Post-Process Key Registers */
#define REG_TRNG0_KEYn(i)                    (REG_TRNG0_KEY0 + ((i) * 4))
#define REG_TRNG0_KEYn_COUNT                 6
/* ============================================================================================================================
      OUTBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRNG0_OUTPUT0                    0x310D0000            /*  TRNG0 TRNG Output Registers */
#define REG_TRNG0_OUTPUT1                    0x310D0004            /*  TRNG0 TRNG Output Registers */
#define REG_TRNG0_OUTPUT2                    0x310D0008            /*  TRNG0 TRNG Output Registers */
#define REG_TRNG0_OUTPUT3                    0x310D000C            /*  TRNG0 TRNG Output Registers */
#define REG_TRNG0_OUTPUTn(i)                 (REG_TRNG0_OUTPUT0 + ((i) * 4))
#define REG_TRNG0_OUTPUTn_COUNT              4
/* ============================================================================================================================
      POKERBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRNG0_POKER0                     0x310D0060            /*  TRNG0 TRNG Poker Test Result Registers */
#define REG_TRNG0_POKER1                     0x310D0064            /*  TRNG0 TRNG Poker Test Result Registers */
#define REG_TRNG0_POKER2                     0x310D0068            /*  TRNG0 TRNG Poker Test Result Registers */
#define REG_TRNG0_POKER3                     0x310D006C            /*  TRNG0 TRNG Poker Test Result Registers */
#define REG_TRNG0_POKERn(i)                  (REG_TRNG0_POKER0 + ((i) * 4))
#define REG_TRNG0_POKERn_COUNT               4
/* ============================================================================================================================
      RUNBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRNG0_RUN1                       0x310D0044            /*  TRNG0 TRNG Run Test State and Result Registers */
#define REG_TRNG0_RUN2                       0x310D0048            /*  TRNG0 TRNG Run Test State and Result Registers */
#define REG_TRNG0_RUN3                       0x310D004C            /*  TRNG0 TRNG Run Test State and Result Registers */
#define REG_TRNG0_RUN4                       0x310D0050            /*  TRNG0 TRNG Run Test State and Result Registers */
#define REG_TRNG0_RUN5                       0x310D0054            /*  TRNG0 TRNG Run Test State and Result Registers */
#define REG_TRNG0_RUN6                       0x310D0058            /*  TRNG0 TRNG Run Test State and Result Registers */
#define REG_TRNG0_RUNn(i)                    (REG_TRNG0_RUN1 + ((i) * 4))
#define REG_TRNG0_RUNn_COUNT                 6
/* ============================================================================================================================
      VBLOCK Register Definitions
   ============================================================================================================================ */
#define REG_TRNG0_V0                         0x310D0060            /*  TRNG0 TRNG Post-Process "V" Value Registers */
#define REG_TRNG0_V1                         0x310D0064            /*  TRNG0 TRNG Post-Process "V" Value Registers */
#define REG_TRNG0_Vn(i)                      (REG_TRNG0_V0 + ((i) * 4))
#define REG_TRNG0_Vn_COUNT                   2

/* ============================================================================================================================
        TRNG Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_INTACK                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_INTACK_MBITFAIL             7            /*  Monobit Fail Acknowledge */
#define BITP_TRNG_INTACK_PKRFAIL              6            /*  Poker Fail Acknowledge */
#define BITP_TRNG_INTACK_LRUNFAIL             5            /*  Long Run Fail Acknowledge */
#define BITP_TRNG_INTACK_RUNFAIL              4            /*  Run Fail Acknowledge */
#define BITP_TRNG_INTACK_NOISEFAIL            3            /*  Noise Fail Acknowledge */
#define BITP_TRNG_INTACK_STUCKOUT             2            /*  Stuck Out Acknowledge */
#define BITP_TRNG_INTACK_SHDNOVR              1            /*  Shutdown Overflow Acknowledge */
#define BITP_TRNG_INTACK_OPENRDGATE           0            /*  Open Read Gate */
#define BITP_TRNG_INTACK_RDY                  0            /*  Ready Acknowledge */
#define BITM_TRNG_INTACK_MBITFAIL            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Monobit Fail Acknowledge */
#define BITM_TRNG_INTACK_PKRFAIL             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Poker Fail Acknowledge */
#define BITM_TRNG_INTACK_LRUNFAIL            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Long Run Fail Acknowledge */
#define BITM_TRNG_INTACK_RUNFAIL             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Run Fail Acknowledge */
#define BITM_TRNG_INTACK_NOISEFAIL           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Noise Fail Acknowledge */
#define BITM_TRNG_INTACK_STUCKOUT            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Stuck Out Acknowledge */
#define BITM_TRNG_INTACK_SHDNOVR             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Shutdown Overflow Acknowledge */
#define BITM_TRNG_INTACK_OPENRDGATE          (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Open Read Gate */
#define BITM_TRNG_INTACK_RDY                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Ready Acknowledge */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_STAT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_STAT_NEEDCLK               24            /*  Need Clock */
#define BITP_TRNG_STAT_BLKAVAIL              16            /*  Blocks Available */
#define BITP_TRNG_STAT_TSTRDY                 8            /*  Test Ready */
#define BITP_TRNG_STAT_MBITFAIL               7            /*  Monobit Fail */
#define BITP_TRNG_STAT_PKRFAIL                6            /*  Poker Fail */
#define BITP_TRNG_STAT_LRUNFAIL               5            /*  Long Run Fail */
#define BITP_TRNG_STAT_RUNFAIL                4            /*  Run Fail */
#define BITP_TRNG_STAT_NOISEFAIL              3            /*  Noise Fail */
#define BITP_TRNG_STAT_STUCKOUT               2            /*  Stuck Out */
#define BITP_TRNG_STAT_SHDNOVR                1            /*  Shutdown Overflow */
#define BITP_TRNG_STAT_RDY                    0            /*  Ready */
#define BITM_TRNG_STAT_NEEDCLK               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Need Clock */
#define BITM_TRNG_STAT_BLKAVAIL              (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Blocks Available */
#define BITM_TRNG_STAT_TSTRDY                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Test Ready */
#define BITM_TRNG_STAT_MBITFAIL              (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Monobit Fail */
#define BITM_TRNG_STAT_PKRFAIL               (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Poker Fail */
#define BITM_TRNG_STAT_LRUNFAIL              (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Long Run Fail */
#define BITM_TRNG_STAT_RUNFAIL               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Run Fail */
#define BITM_TRNG_STAT_NOISEFAIL             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Noise Fail */
#define BITM_TRNG_STAT_STUCKOUT              (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Stuck Out */
#define BITM_TRNG_STAT_SHDNOVR               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Shutdown Overflow */
#define BITM_TRNG_STAT_RDY                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Ready */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_CTL                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_CTL_STARTUPCYC             16            /*  Startup Cycles */
#define BITP_TRNG_CTL_RESEED                 15            /*  Re-seed */
#define BITP_TRNG_CTL_PPROCEN                12            /*  Post Processor Enable */
#define BITP_TRNG_CTL_TRNGEN                 10            /*  Enable TRNG */
#define BITP_TRNG_CTL_TSTMODE                 8            /*  Test Mode */
#define BITP_TRNG_CTL_MBITFAILMSK             7            /*  Monobit Fail Mask */
#define BITP_TRNG_CTL_PKRFAILMSK              6            /*  Poker Fail Mask */
#define BITP_TRNG_CTL_LRUNFAILMSK             5            /*  Long Run Fail Mask */
#define BITP_TRNG_CTL_RUNFAILMSK              4            /*  Run Fail Mask */
#define BITP_TRNG_CTL_NOISEFAILMSK            3            /*  Noise Fail Mask */
#define BITP_TRNG_CTL_STUCKOUTMSK             2            /*  Stuck Out Mask */
#define BITP_TRNG_CTL_SHDNOVRMSK              1            /*  Shutdown Overflow Mask */
#define BITP_TRNG_CTL_RDYMSK                  0            /*  Ready Mask */
#define BITM_TRNG_CTL_STARTUPCYC             (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Startup Cycles */
#define BITM_TRNG_CTL_RESEED                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Re-seed */
#define BITM_TRNG_CTL_PPROCEN                (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Post Processor Enable */
#define BITM_TRNG_CTL_TRNGEN                 (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Enable TRNG */
#define BITM_TRNG_CTL_TSTMODE                (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Test Mode */
#define BITM_TRNG_CTL_MBITFAILMSK            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Monobit Fail Mask */
#define BITM_TRNG_CTL_PKRFAILMSK             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Poker Fail Mask */
#define BITM_TRNG_CTL_LRUNFAILMSK            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Long Run Fail Mask */
#define BITM_TRNG_CTL_RUNFAILMSK             (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Run Fail Mask */
#define BITM_TRNG_CTL_NOISEFAILMSK           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Noise Fail Mask */
#define BITM_TRNG_CTL_STUCKOUTMSK            (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Stuck Out Mask */
#define BITM_TRNG_CTL_SHDNOVRMSK             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Shutdown Overflow Mask */
#define BITM_TRNG_CTL_RDYMSK                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Ready Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_CFG                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_CFG_MAXREFCYC              16            /*  Max Refill Cycles */
#define BITP_TRNG_CFG_RDTIMEOUT              12            /*  Read Timeout */
#define BITP_TRNG_CFG_SAMPLEDIV               8            /*  Sample Div */
#define BITP_TRNG_CFG_MINREFCYC               0            /*  Min Refill Cycles */
#define BITM_TRNG_CFG_MAXREFCYC              (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Max Refill Cycles */
#define BITM_TRNG_CFG_RDTIMEOUT              (_ADI_MSK_3(0x0000F000,0x0000F000UL, uint32_t  ))    /*  Read Timeout */
#define BITM_TRNG_CFG_SAMPLEDIV              (_ADI_MSK_3(0x00000F00,0x00000F00UL, uint32_t  ))    /*  Sample Div */
#define BITM_TRNG_CFG_MINREFCYC              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Min Refill Cycles */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_ALMCNT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_ALMCNT_SHDNCNT             24            /*  Shutdown Count */
#define BITP_TRNG_ALMCNT_SHDNFATAL           23            /*  Shutdown Fatal */
#define BITP_TRNG_ALMCNT_SHDNTHRESH          16            /*  Shutdown Threshold */
#define BITP_TRNG_ALMCNT_STALLRUNPKR         15            /*  Stall Run Poker */
#define BITP_TRNG_ALMCNT_ALMTHRESH            0            /*  Alarm Threshold */
#define BITM_TRNG_ALMCNT_SHDNCNT             (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Shutdown Count */
#define BITM_TRNG_ALMCNT_SHDNFATAL           (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Shutdown Fatal */
#define BITM_TRNG_ALMCNT_SHDNTHRESH          (_ADI_MSK_3(0x001F0000,0x001F0000UL, uint32_t  ))    /*  Shutdown Threshold */
#define BITM_TRNG_ALMCNT_STALLRUNPKR         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Stall Run Poker */
#define BITM_TRNG_ALMCNT_ALMTHRESH           (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Alarm Threshold */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_FROEN                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_FROEN_FROS                  0            /*  Enable Free-Running Oscillators */
#define BITM_TRNG_FROEN_FROS                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Enable Free-Running Oscillators */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_FRODETUNE                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_FRODETUNE_FROS              0            /*  FRO De-tune Bits */
#define BITM_TRNG_FRODETUNE_FROS             (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  FRO De-tune Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_ALMMSK                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_ALMMSK_FROS                 0            /*  FRO Alarm Mask */
#define BITM_TRNG_ALMMSK_FROS                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  FRO Alarm Mask */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_ALMSTP                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_ALMSTP_FROS                 0            /*  FRO Alarm Stop Bits */
#define BITM_TRNG_ALMSTP_FROS                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  FRO Alarm Stop Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_LFSR_L                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_LFSR_L_VALUE                0            /*  LFSR[31:0] */
#define BITM_TRNG_LFSR_L_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  LFSR[31:0] */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_LFSR_M                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_LFSR_M_VALUE                0            /*  LFSR[63:32] */
#define BITM_TRNG_LFSR_M_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  LFSR[63:32] */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_LFSR_H                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_LFSR_H_VALUE                0            /*  LFSR[80:64] */
#define BITM_TRNG_LFSR_H_VALUE               (_ADI_MSK_3(0x0001FFFF,0x0001FFFFUL, uint32_t  ))    /*  LFSR[80:64] */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_CNT                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_CNT_VALUE                   0            /*  Sample Counter */
#define BITM_TRNG_CNT_VALUE                  (_ADI_MSK_3(0x00FFFFFF,0x00FFFFFFUL, uint32_t  ))    /*  Sample Counter */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_RUNCNT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_RUNCNT_LENMAX              24            /*  Run Length Max */
#define BITP_TRNG_RUNCNT_LENCNT              16            /*  Run Length  Br Count */
#define BITP_TRNG_RUNCNT_STATE               15            /*  Run State */
#define BITP_TRNG_RUNCNT_TSTCNT               0            /*  Run Test Count */
#define BITM_TRNG_RUNCNT_LENMAX              (_ADI_MSK_3(0x3F000000,0x3F000000UL, uint32_t  ))    /*  Run Length Max */
#define BITM_TRNG_RUNCNT_LENCNT              (_ADI_MSK_3(0x003F0000,0x003F0000UL, uint32_t  ))    /*  Run Length  Br Count */
#define BITM_TRNG_RUNCNT_STATE               (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Run State */
#define BITM_TRNG_RUNCNT_TSTCNT              (_ADI_MSK_3(0x00007FFF,0x00007FFFUL, uint32_t  ))    /*  Run Test Count */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_MONOBITCNT                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_MONOBITCNT_VALUE            0            /*  Monobit Count */
#define BITM_TRNG_MONOBITCNT_VALUE           (_ADI_MSK_3(0x0001FFFF,0x0001FFFFUL, uint32_t  ))    /*  Monobit Count */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_TEST                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_TEST_IRQ                   31            /*  Test IRQ */
#define BITP_TRNG_TEST_PATTERN               16            /*  Test Pattern */
#define BITP_TRNG_TEST_SEL                    8            /*  Test Select */
#define BITP_TRNG_TEST_PPROC                  6            /*  Test Post Proc */
#define BITP_TRNG_TEST_RUNPKR                 5            /*  Test Run Poker */
#define BITP_TRNG_TEST_CONTPKR                4            /*  Continue Poker */
#define BITP_TRNG_TEST_NOLFSRFB               3            /*  No LFSR Feedback */
#define BITP_TRNG_TEST_PATTDET                2            /*  Test Pattern Detect */
#define BITP_TRNG_TEST_PATTFRO                1            /*  Test Pattern FRO */
#define BITP_TRNG_TEST_ENOUT                  0            /*  Test Enable Out */
#define BITM_TRNG_TEST_IRQ                   (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  Test IRQ */
#define BITM_TRNG_TEST_PATTERN               (_ADI_MSK_3(0x0FFF0000,0x0FFF0000UL, uint32_t  ))    /*  Test Pattern */
#define BITM_TRNG_TEST_SEL                   (_ADI_MSK_3(0x00001F00,0x00001F00UL, uint32_t  ))    /*  Test Select */
#define BITM_TRNG_TEST_PPROC                 (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Test Post Proc */
#define BITM_TRNG_TEST_RUNPKR                (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Test Run Poker */
#define BITM_TRNG_TEST_CONTPKR               (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Continue Poker */
#define BITM_TRNG_TEST_NOLFSRFB              (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  No LFSR Feedback */
#define BITM_TRNG_TEST_PATTDET               (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Test Pattern Detect */
#define BITM_TRNG_TEST_PATTFRO               (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Test Pattern FRO */
#define BITM_TRNG_TEST_ENOUT                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Test Enable Out */

/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_BLKCNT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_BLKCNT_VALUE                4            /*  Block Count */
#define BITM_TRNG_BLKCNT_VALUE               (_ADI_MSK_3(0xFFFFFFF0,0xFFFFFFF0UL, uint32_t  ))    /*  Block Count */

/* ============================================================================================================================
 *    INBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_INPUT[n]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_INPUT_VALUE                 0            /*  Input Bits for 32-bit Word n */
#define BITM_TRNG_INPUT_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Input Bits for 32-bit Word n */

/* ============================================================================================================================
 *    KEYBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_KEY[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_KEY_VALUE                   0            /*  Key  bits */
#define BITM_TRNG_KEY_VALUE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Key  bits */

/* ============================================================================================================================
 *    OUTBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_OUTPUT[n]                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_OUTPUT_VALUE                0            /*  Output Bits for 32-bit Word n */
#define BITM_TRNG_OUTPUT_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Output Bits for 32-bit Word n */

/* ============================================================================================================================
 *    POKERBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_POKER[n]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_POKER_CNT3                 24            /*  Poker Count n + 3 */
#define BITP_TRNG_POKER_CNT2                 16            /*  Poker Count n + 2 */
#define BITP_TRNG_POKER_CNT1                  8            /*  Poker Count n + 1 */
#define BITP_TRNG_POKER_CNT0                  0            /*  Poker Count n */
#define BITM_TRNG_POKER_CNT3                 (_ADI_MSK_3(0xFF000000,0xFF000000UL, uint32_t  ))    /*  Poker Count n + 3 */
#define BITM_TRNG_POKER_CNT2                 (_ADI_MSK_3(0x00FF0000,0x00FF0000UL, uint32_t  ))    /*  Poker Count n + 2 */
#define BITM_TRNG_POKER_CNT1                 (_ADI_MSK_3(0x0000FF00,0x0000FF00UL, uint32_t  ))    /*  Poker Count n + 1 */
#define BITM_TRNG_POKER_CNT0                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Poker Count n */

/* ============================================================================================================================
 *    RUNBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_RUN[n]                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_RUN_CNTONES                16            /*  Count Ones */
#define BITP_TRNG_RUN_CNTZEROS                0            /*  Count Zeros */
#define BITM_TRNG_RUN_CNTONES                (_ADI_MSK_3(0x0FFF0000,0x0FFF0000UL, uint32_t  ))    /*  Count Ones */
#define BITM_TRNG_RUN_CNTZEROS               (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))    /*  Count Zeros */

/* ============================================================================================================================
 *    VBLOCK Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TRNG_V[n]                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TRNG_V_VALUE                     0            /*  Holds "V" value for post-processing */
#define BITM_TRNG_V_VALUE                    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Holds "V" value for post-processing */


/* ============================================================================================================================
        Public Key Accelerator
   ============================================================================================================================ */

/* ============================================================================================================================
        PKA0
   ============================================================================================================================ */
#define REG_PKA0_APTR                        0x310D4000            /*  PKA0 PKA Vector_A Address */
#define REG_PKA0_BPTR                        0x310D4004            /*  PKA0 PKA Vector_B Address */
#define REG_PKA0_CPTR                        0x310D4008            /*  PKA0 PKA Vector_C Address */
#define REG_PKA0_DPTR                        0x310D400C            /*  PKA0 PKA Vector_D Address */
#define REG_PKA0_ALEN                        0x310D4010            /*  PKA0 PKA Vector_A Length */
#define REG_PKA0_BLEN                        0x310D4014            /*  PKA0 PKA Vector_B Length */
#define REG_PKA0_SHIFT                       0x310D4018            /*  PKA0 PKA Bit Shift Value */
#define REG_PKA0_FUNC                        0x310D401C            /*  PKA0 PKA Function */
#define REG_PKA0_COMPARE                     0x310D4020            /*  PKA0 PKA Compare Result */
#define REG_PKA0_RESULTMSW                   0x310D4024            /*  PKA0 PKA Most-Significant-Word of Result Vector */
#define REG_PKA0_DIVMSW                      0x310D4028            /*  PKA0 PKA Most-Significant-Word of Divide Remainder */
#define REG_PKA0_RAM                         0x310D6000            /*  PKA0 Start of PKA RAM space */

/* ============================================================================================================================
        PKA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKA_APTR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_APTR_VALUE                   0            /*  Pointer to Vector A */
#define BITM_PKA_APTR_VALUE                  (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Pointer to Vector A */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_BPTR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_BPTR_VALUE                   0            /*  Pointer to Vector B */
#define BITM_PKA_BPTR_VALUE                  (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Pointer to Vector B */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_CPTR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_CPTR_CPTR                    0            /*  Pointer to Vector C */
#define BITM_PKA_CPTR_CPTR                   (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Pointer to Vector C */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_DPTR                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_DPTR_VALUE                   0            /*  Pointer to Vector D */
#define BITM_PKA_DPTR_VALUE                  (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Pointer to Vector D */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_ALEN                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_ALEN_VALUE                   0            /*  Length of Vector A */
#define BITM_PKA_ALEN_VALUE                  (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Length of Vector A */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_BLEN                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_BLEN_VALUE                   0            /*  Length of Vector B */
#define BITM_PKA_BLEN_VALUE                  (_ADI_MSK_3(0x000001FF,0x000001FFUL, uint32_t  ))    /*  Length of Vector B */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_SHIFT                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_SHIFT_VALUE                  0            /*  Bits to Shift */
#define BITM_PKA_SHIFT_VALUE                 (_ADI_MSK_3(0x0000001F,0x0000001FUL, uint32_t  ))    /*  Bits to Shift */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_FUNC                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_FUNC_STALLRSLT              24            /*  Stall Result */
#define BITP_PKA_FUNC_RUN                    15            /*  Run */
#define BITP_PKA_FUNC_SEQOPS                 12            /*  Sequencer Operation Select */
#define BITP_PKA_FUNC_CPY                    11            /*  Copy */
#define BITP_PKA_FUNC_CMP                    10            /*  Perform Compare Operation */
#define BITP_PKA_FUNC_MODULO                  9            /*  Perform Modulo Operation */
#define BITP_PKA_FUNC_DIV                     8            /*  Perform Divide Operation */
#define BITP_PKA_FUNC_LSHFT                   7            /*  Perform Left Shift Operation */
#define BITP_PKA_FUNC_RSHFT                   6            /*  Perform Right Shift Operation */
#define BITP_PKA_FUNC_SUB                     5            /*  Perform Subtract Operation */
#define BITP_PKA_FUNC_ADD                     4            /*  Perform Add Operation */
#define BITP_PKA_FUNC_MSONE                   3            /*  Most Significant One */
#define BITP_PKA_FUNC_ADDSUB                  1            /*  Perform Combined Add/Subtract Operation */
#define BITP_PKA_FUNC_MULT                    0            /*  Perform Multiply Operation */
#define BITM_PKA_FUNC_STALLRSLT              (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Stall Result */
#define BITM_PKA_FUNC_RUN                    (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Run */
#define BITM_PKA_FUNC_SEQOPS                 (_ADI_MSK_3(0x00007000,0x00007000UL, uint32_t  ))    /*  Sequencer Operation Select */
#define BITM_PKA_FUNC_CPY                    (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  Copy */
#define BITM_PKA_FUNC_CMP                    (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Perform Compare Operation */
#define BITM_PKA_FUNC_MODULO                 (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Perform Modulo Operation */
#define BITM_PKA_FUNC_DIV                    (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Perform Divide Operation */
#define BITM_PKA_FUNC_LSHFT                  (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Perform Left Shift Operation */
#define BITM_PKA_FUNC_RSHFT                  (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Perform Right Shift Operation */
#define BITM_PKA_FUNC_SUB                    (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Perform Subtract Operation */
#define BITM_PKA_FUNC_ADD                    (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Perform Add Operation */
#define BITM_PKA_FUNC_MSONE                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Most Significant One */
#define BITM_PKA_FUNC_ADDSUB                 (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Perform Combined Add/Subtract Operation */
#define BITM_PKA_FUNC_MULT                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Perform Multiply Operation */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_COMPARE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_COMPARE_AGTB                 2            /*  Vector A is Greater Than Vector B */
#define BITP_PKA_COMPARE_ALTB                 1            /*  Vector A is Less Than Vector B */
#define BITP_PKA_COMPARE_AEQB                 0            /*  Vector A is equal to Vector B */
#define BITM_PKA_COMPARE_AGTB                (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Vector A is Greater Than Vector B */
#define BITM_PKA_COMPARE_ALTB                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Vector A is Less Than Vector B */
#define BITM_PKA_COMPARE_AEQB                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Vector A is equal to Vector B */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_RESULTMSW                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_RESULTMSW_ZERO              15            /*  Result Is Zero */
#define BITP_PKA_RESULTMSW_ADDR               0            /*  Address of Most-significant Nonzero Word */
#define BITM_PKA_RESULTMSW_ZERO              (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Result Is Zero */
#define BITM_PKA_RESULTMSW_ADDR              (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Address of Most-significant Nonzero Word */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_DIVMSW                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_DIVMSW_ZERO                 15            /*  Remainder Result Vector is Zeros */
#define BITP_PKA_DIVMSW_ADDR                  0            /*  Address of Most-significant Nonzero Word */
#define BITM_PKA_DIVMSW_ZERO                 (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  Remainder Result Vector is Zeros */
#define BITM_PKA_DIVMSW_ADDR                 (_ADI_MSK_3(0x000007FF,0x000007FFUL, uint32_t  ))    /*  Address of Most-significant Nonzero Word */

/* -------------------------------------------------------------------------------------------------------------------------
          PKA_RAM                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKA_RAM_VALUE                    0            /*  First Location in PKA RAM */
#define BITM_PKA_RAM_VALUE                   (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  First Location in PKA RAM */


/* ============================================================================================================================
        Public Key Processor Interrupt Controller
   ============================================================================================================================ */

/* ============================================================================================================================
        PKIC0
   ============================================================================================================================ */
#define REG_PKIC0_POL_CTL                    0x310D8000            /*  PKIC0 Polarity Control Register */
#define REG_PKIC0_TYPE_CTL                   0x310D8004            /*  PKIC0 Type Control Register */
#define REG_PKIC0_EN_CTL                     0x310D8008            /*  PKIC0 Enable Control Register */
#define REG_PKIC0_EN_SET                     0x310D800C            /*  PKIC0 Enable Set Register */
#define REG_PKIC0_RAW_STAT                   0x310D800C            /*  PKIC0 Raw Status Register */
#define REG_PKIC0_ACK                        0x310D8010            /*  PKIC0 Acknowledge Register */
#define REG_PKIC0_EN_STAT                    0x310D8010            /*  PKIC0 Enabled Status Register */
#define REG_PKIC0_EN_CLR                     0x310D8014            /*  PKIC0 Enable Clear Register */

/* ============================================================================================================================
        PKIC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_POL_CTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_POL_CTL_SLERRINT            5            /*  Slave Error IRQ */
#define BITP_PKIC_POL_CTL_TRNGINT             3            /*  TRNG IRQ */
#define BITP_PKIC_POL_CTL_PKAINT1             1            /*  PKA Completion IRQ */
#define BITM_PKIC_POL_CTL_SLERRINT           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_POL_CTL_TRNGINT            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_POL_CTL_PKAINT1            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_TYPE_CTL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_TYPE_CTL_SLERRINT           5            /*  Slave Error IRQ */
#define BITP_PKIC_TYPE_CTL_TRNGINT            3            /*  TRNG IRQ */
#define BITP_PKIC_TYPE_CTL_PKAINT1            1            /*  PKA Completion IRQ */
#define BITM_PKIC_TYPE_CTL_SLERRINT          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_TYPE_CTL_TRNGINT           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_TYPE_CTL_PKAINT1           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_EN_CTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_EN_CTL_SLERRINT             5            /*  Slave Error IRQ */
#define BITP_PKIC_EN_CTL_TRNGINT              3            /*  TRNG IRQ */
#define BITP_PKIC_EN_CTL_PKAINT1              1            /*  PKA Completion IRQ */
#define BITM_PKIC_EN_CTL_SLERRINT            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_EN_CTL_TRNGINT             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_EN_CTL_PKAINT1             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_EN_SET                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_EN_SET_SLERRINT             5            /*  Slave Error IRQ */
#define BITP_PKIC_EN_SET_TRNGINT              3            /*  TRNG IRQ */
#define BITP_PKIC_EN_SET_PKAINT1              1            /*  PKA Completion IRQ */
#define BITM_PKIC_EN_SET_SLERRINT            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_EN_SET_TRNGINT             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_EN_SET_PKAINT1             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_RAW_STAT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_RAW_STAT_SLERRINT           5            /*  Slave Error IRQ */
#define BITP_PKIC_RAW_STAT_TRNGINT            3            /*  TRNG IRQ */
#define BITP_PKIC_RAW_STAT_PKAINT1            1            /*  PKA Completion IRQ */
#define BITM_PKIC_RAW_STAT_SLERRINT          (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_RAW_STAT_TRNGINT           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_RAW_STAT_PKAINT1           (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_ACK                             Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_ACK_SLERRINT                5            /*  Slave Error IRQ */
#define BITP_PKIC_ACK_TRNGINT                 3            /*  TRNG IRQ */
#define BITP_PKIC_ACK_PKAINT1                 1            /*  PKA Completion IRQ */
#define BITM_PKIC_ACK_SLERRINT               (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_ACK_TRNGINT                (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_ACK_PKAINT1                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_EN_STAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_EN_STAT_SLERRINT            5            /*  Slave Error IRQ */
#define BITP_PKIC_EN_STAT_TRNGINT             3            /*  TRNG IRQ */
#define BITP_PKIC_EN_STAT_PKAINT1             1            /*  PKA Completion IRQ */
#define BITM_PKIC_EN_STAT_SLERRINT           (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_EN_STAT_TRNGINT            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_EN_STAT_PKAINT1            (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */

/* -------------------------------------------------------------------------------------------------------------------------
          PKIC_EN_CLR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_PKIC_EN_CLR_SLERRINT             5            /*  Slave Error IRQ */
#define BITP_PKIC_EN_CLR_TRNGINT              3            /*  TRNG IRQ */
#define BITP_PKIC_EN_CLR_PKAINT1              1            /*  PKA Completion IRQ */
#define BITM_PKIC_EN_CLR_SLERRINT            (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Slave Error IRQ */
#define BITM_PKIC_EN_CLR_TRNGINT             (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  TRNG IRQ */
#define BITM_PKIC_EN_CLR_PKAINT1             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  PKA Completion IRQ */


/* ============================================================================================================================
        Extended Memory DMA
   ============================================================================================================================ */

/* ============================================================================================================================
        EMDMA0
   ============================================================================================================================ */
#define REG_EMDMA0_CTL                       0x310E002C            /*  EMDMA0 External Memory DMA Control Register */
#define REG_EMDMA0_INDX1                     0x310E0080            /*  EMDMA0 External Index Register */
#define REG_EMDMA0_MOD1                      0x310E0084            /*  EMDMA0 External Modifier Register */
#define REG_EMDMA0_CNT1                      0x310E0088            /*  EMDMA0 External Count Register */
#define REG_EMDMA0_INDX0                     0x310E008C            /*  EMDMA0 Internal Index Register */
#define REG_EMDMA0_MOD0                      0x310E0090            /*  EMDMA0 Internal Modifier Register */
#define REG_EMDMA0_CNT0                      0x310E0094            /*  EMDMA0 Internal Count Register */
#define REG_EMDMA0_CHNPTR                    0x310E0098            /*  EMDMA0 Chain Pointer Register */
#define REG_EMDMA0_BASE                      0x310E009C            /*  EMDMA0 External Base Address Register */
#define REG_EMDMA0_TPTR                      0x310E00A0            /*  EMDMA0 Tap List Pointer Register */
#define REG_EMDMA0_BUFLEN                    0x310E00A4            /*  EMDMA0 Circular Buffer Length Register */
#define REG_EMDMA0_TCNT                      0x310E00AC            /*  EMDMA0 Delay Line Tap Count Register */

/* ============================================================================================================================
        EMDMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_CTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_CTL_DIRS                  25            /*  DMA Transfer Direction Status */
#define BITP_EMDMA_CTL_DMAS1                 24            /*  DMA External Interface Status */
#define BITP_EMDMA_CTL_WBS                   23            /*  Write Back Status */
#define BITP_EMDMA_CTL_TLS                   22            /*  TAP List Loading Status */
#define BITP_EMDMA_CTL_CHS                   21            /*  DMA Chaining Status */
#define BITP_EMDMA_CTL_DMAS0                 20            /*  DMA Transfer Status */
#define BITP_EMDMA_CTL_DFS                   16            /*  DMA FIFO Status */
#define BITP_EMDMA_CTL_INTDONE0              12            /*  Internal DMA Completion Interrupt (Control) */
#define BITP_EMDMA_CTL_TLEN                   9            /*  Tap List DMA Enable */
#define BITP_EMDMA_CTL_OFCEN                  8            /*  On the Fly Control Loading Enable */
#define BITP_EMDMA_CTL_WRBEN                  7            /*  Write Back Enable */
#define BITP_EMDMA_CTL_DFLSH                  5            /*  Flush DMA FIFO */
#define BITP_EMDMA_CTL_CBEN                   4            /*  Circular Buffering Enable */
#define BITP_EMDMA_CTL_DLEN                   3            /*  Enable Delay Line DMA */
#define BITP_EMDMA_CTL_CHEN                   2            /*  Enable Chaining */
#define BITP_EMDMA_CTL_TRAN                   1            /*  DMA Direction */
#define BITP_EMDMA_CTL_EN                     0            /*  DMA Enable */
#define BITM_EMDMA_CTL_DIRS                  (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  DMA Transfer Direction Status */
#define BITM_EMDMA_CTL_DMAS1                 (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  DMA External Interface Status */
#define BITM_EMDMA_CTL_WBS                   (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Write Back Status */
#define BITM_EMDMA_CTL_TLS                   (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  TAP List Loading Status */
#define BITM_EMDMA_CTL_CHS                   (_ADI_MSK_3(0x00200000,0x00200000UL, uint32_t  ))    /*  DMA Chaining Status */
#define BITM_EMDMA_CTL_DMAS0                 (_ADI_MSK_3(0x00100000,0x00100000UL, uint32_t  ))    /*  DMA Transfer Status */
#define BITM_EMDMA_CTL_DFS                   (_ADI_MSK_3(0x00030000,0x00030000UL, uint32_t  ))    /*  DMA FIFO Status */
#define BITM_EMDMA_CTL_INTDONE0              (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  Internal DMA Completion Interrupt (Control) */
#define BITM_EMDMA_CTL_TLEN                  (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  Tap List DMA Enable */
#define BITM_EMDMA_CTL_OFCEN                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  On the Fly Control Loading Enable */
#define BITM_EMDMA_CTL_WRBEN                 (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Write Back Enable */
#define BITM_EMDMA_CTL_DFLSH                 (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  Flush DMA FIFO */
#define BITM_EMDMA_CTL_CBEN                  (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  Circular Buffering Enable */
#define BITM_EMDMA_CTL_DLEN                  (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Enable Delay Line DMA */
#define BITM_EMDMA_CTL_CHEN                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Enable Chaining */
#define BITM_EMDMA_CTL_TRAN                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DMA Direction */
#define BITM_EMDMA_CTL_EN                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  DMA Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_INDX1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_INDX1_VALUE                0            /*  DMA External Address Index */
#define BITM_EMDMA_INDX1_VALUE               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  DMA External Address Index */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_MOD1                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_MOD1_VALUE                 0            /*  DMA External Address Modifier */
#define BITM_EMDMA_MOD1_VALUE                (_ADI_MSK_3(0x07FFFFFF,0x07FFFFFFUL, uint32_t  ))    /*  DMA External Address Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_CNT1                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_CNT1_CNT1                  0            /*  External Word Count */
#define BITM_EMDMA_CNT1_CNT1                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  External Word Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_INDX0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_INDX0_VALUE                0            /*  DMA buffer Start Address */
#define BITM_EMDMA_INDX0_VALUE               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  DMA buffer Start Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_MOD0                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_MOD0_VALUE                 0            /*  DMA Address Modifier */
#define BITM_EMDMA_MOD0_VALUE                (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  DMA Address Modifier */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_CNT0                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_CNT0_VALUE                 0            /*  DMA Word Count */
#define BITM_EMDMA_CNT0_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  DMA Word Count */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_CHNPTR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_CHNPTR_CPDR               31            /*  CPDR DMA Direction for the next TCB */
#define BITP_EMDMA_CHNPTR_PCI                30            /*  Program Controlled Interrupt */
#define BITP_EMDMA_CHNPTR_ADDR                0            /*  Next Descriptor (Chain) Pointer Address */
#define BITM_EMDMA_CHNPTR_CPDR               (_ADI_MSK_3(0x80000000,0x80000000UL, uint32_t  ))    /*  CPDR DMA Direction for the next TCB */
#define BITM_EMDMA_CHNPTR_PCI                (_ADI_MSK_3(0x40000000,0x40000000UL, uint32_t  ))    /*  Program Controlled Interrupt */
#define BITM_EMDMA_CHNPTR_ADDR               (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Next Descriptor (Chain) Pointer Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_BASE                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_BASE_ADDR                  0            /*  External Delay Line Base Address */
#define BITM_EMDMA_BASE_ADDR                 (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  External Delay Line Base Address */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_TPTR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_TPTR_VALUE                 0            /*  Delay Line Tap List Pointer */
#define BITM_EMDMA_TPTR_VALUE                (_ADI_MSK_3(0x3FFFFFFF,0x3FFFFFFFUL, uint32_t  ))    /*  Delay Line Tap List Pointer */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_BUFLEN                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_BUFLEN_CLEN                0            /*  Delay Line Circular Buffer Length */
#define BITM_EMDMA_BUFLEN_CLEN               (_ADI_MSK_3(0x03FFFFFF,0x03FFFFFFUL, uint32_t  ))    /*  Delay Line Circular Buffer Length */

/* -------------------------------------------------------------------------------------------------------------------------
          EMDMA_TCNT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_EMDMA_TCNT_VALUE                 0            /*  Delay Line Tap Count */
#define BITM_EMDMA_TCNT_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Delay Line Tap Count */


/* ============================================================================================================================
        Extended Memory DMA
   ============================================================================================================================ */

/* ============================================================================================================================
        EMDMA1
   ============================================================================================================================ */
#define REG_EMDMA1_CTL                       0x310E0030            /*  EMDMA1 External Memory DMA Control Register */
#define REG_EMDMA1_INDX1                     0x310E00C0            /*  EMDMA1 External Index Register */
#define REG_EMDMA1_MOD1                      0x310E00C4            /*  EMDMA1 External Modifier Register */
#define REG_EMDMA1_CNT1                      0x310E00C8            /*  EMDMA1 External Count Register */
#define REG_EMDMA1_INDX0                     0x310E00CC            /*  EMDMA1 Internal Index Register */
#define REG_EMDMA1_MOD0                      0x310E00D0            /*  EMDMA1 Internal Modifier Register */
#define REG_EMDMA1_CNT0                      0x310E00D4            /*  EMDMA1 Internal Count Register */
#define REG_EMDMA1_CHNPTR                    0x310E00D8            /*  EMDMA1 Chain Pointer Register */
#define REG_EMDMA1_BASE                      0x310E00DC            /*  EMDMA1 External Base Address Register */
#define REG_EMDMA1_TPTR                      0x310E00E0            /*  EMDMA1 Tap List Pointer Register */
#define REG_EMDMA1_BUFLEN                    0x310E00E4            /*  EMDMA1 Circular Buffer Length Register */
#define REG_EMDMA1_TCNT                      0x310E00EC            /*  EMDMA1 Delay Line Tap Count Register */

/* ============================================================================================================================
        EMDMA Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        DAP ROM
   ============================================================================================================================ */

/* ============================================================================================================================
        DAPROM0
   ============================================================================================================================ */
#define REG_DAPROM0_ROMENTRY00               0x31100000            /*  DAPROM0 ROM Entry 00 */
#define REG_DAPROM0_ROMENTRY01               0x31100004            /*  DAPROM0 ROM Entry 01 */
#define REG_DAPROM0_ROMENTRY02               0x31100008            /*  DAPROM0 ROM Entry 02 */
#define REG_DAPROM0_ROMENTRY03               0x3110000C            /*  DAPROM0 ROM Entry 03 */
#define REG_DAPROM0_ROMENTRY04               0x31100010            /*  DAPROM0 ROM Entry 04 */
#define REG_DAPROM0_ROMENTRY05               0x31100014            /*  DAPROM0 ROM Entry 05 */
#define REG_DAPROM0_ROMENTRY06               0x31100018            /*  DAPROM0 ROM Entry 06 */
#define REG_DAPROM0_ROMENTRY07               0x3110001C            /*  DAPROM0 ROM Entry 07 */
#define REG_DAPROM0_ROMENTRY08               0x31100020            /*  DAPROM0 ROM Entry 08 */
#define REG_DAPROM0_ROMENTRY09               0x31100024            /*  DAPROM0 ROM Entry 09 */
#define REG_DAPROM0_ROMENTRY10               0x31100028            /*  DAPROM0 ROM Entry 10 */
#define REG_DAPROM0_ROMENTRY11               0x3110002C            /*  DAPROM0 ROM Entry 11 */
#define REG_DAPROM0_ROMENTRY12               0x31100030            /*  DAPROM0 ROM Entry 12 */
#define REG_DAPROM0_ROMENTRY13               0x31100034            /*  DAPROM0 ROM Entry 13 */

/* ============================================================================================================================
        DAPROM Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY00                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY00_ROMENTRY00     0            /*  SHARC0 DBG */
#define BITM_DAPROM_ROMENTRY00_ROMENTRY00    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SHARC0 DBG */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY01                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY01_ROMENTRY01     0            /*  SHARC0 CTI */
#define BITM_DAPROM_ROMENTRY01_ROMENTRY01    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SHARC0 CTI */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY02                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY02_ROMENTRY02     0            /*  SHARC0 PTM */
#define BITM_DAPROM_ROMENTRY02_ROMENTRY02    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SHARC0 PTM */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY03                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY03_ROMENTRY03     0            /*  STM */
#define BITM_DAPROM_ROMENTRY03_ROMENTRY03    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  STM */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY04                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY04_ROMENTRY04     0            /*  SHARC1 DBG */
#define BITM_DAPROM_ROMENTRY04_ROMENTRY04    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SHARC1 DBG */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY05                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY05_ROMENTRY05     0            /*  SHARC1 CTI */
#define BITM_DAPROM_ROMENTRY05_ROMENTRY05    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SHARC1 CTI */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY06                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY06_ROMENTRY06     0            /*  SHARC1 PTM */
#define BITM_DAPROM_ROMENTRY06_ROMENTRY06    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SHARC1 PTM */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY07                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY07_ROMENTRY07     0            /*  CSTF */
#define BITM_DAPROM_ROMENTRY07_ROMENTRY07    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  CSTF */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY08                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY08_ROMENTRY08     0            /*  ETF */
#define BITM_DAPROM_ROMENTRY08_ROMENTRY08    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ETF */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY09                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY09_ROMENTRY09     0            /*  ETR */
#define BITM_DAPROM_ROMENTRY09_ROMENTRY09    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ETR */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY10                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY10_ROMENTRY10     0            /*  TPIU */
#define BITM_DAPROM_ROMENTRY10_ROMENTRY10    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  TPIU */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY11                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY11_ROMENTRY11     0            /*  Trace CTI */
#define BITM_DAPROM_ROMENTRY11_ROMENTRY11    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Trace CTI */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY12                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY12_ROMENTRY12     0            /*  System CTI */
#define BITM_DAPROM_ROMENTRY12_ROMENTRY12    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  System CTI */

/* -------------------------------------------------------------------------------------------------------------------------
          DAPROM_ROMENTRY13                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_DAPROM_ROMENTRY13_ROMENTRY13     0            /*  A5 Integration ROM */
#define BITM_DAPROM_ROMENTRY13_ROMENTRY13    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  A5 Integration ROM */


/* ============================================================================================================================
        CSCTI_Register_Definitions
   ============================================================================================================================ */

/* ============================================================================================================================
        CTI1
   ============================================================================================================================ */
#define REG_CTI1_CTICONTROL                  0x31102000            /*  CTI1 CTI Control Register */
#define REG_CTI1_CTIINTACK                   0x31102010            /*  CTI1 CTI Interrupt Acknowledge Register */
#define REG_CTI1_CTIAPPSET                   0x31102014            /*  CTI1 CTI Application Trigger Set Register */
#define REG_CTI1_CTIAPPCLEAR                 0x31102018            /*  CTI1 CTI Application Trigger Clear Register */
#define REG_CTI1_CTIAPPPULSE                 0x3110201C            /*  CTI1 CTI Application Pulse Register */
#define REG_CTI1_CTIINEN0                    0x31102020            /*  CTI1 CTI Trigger 0 to Channel Enable Register */
#define REG_CTI1_CTIINEN1                    0x31102024            /*  CTI1 CTI Trigger 1 to Channel Enable Register */
#define REG_CTI1_CTIINEN2                    0x31102028            /*  CTI1 CTI Trigger 2 to Channel Enable Register */
#define REG_CTI1_CTIINEN3                    0x3110202C            /*  CTI1 CTI Trigger 3 to Channel Enable Register */
#define REG_CTI1_CTIINEN4                    0x31102030            /*  CTI1 CTI Trigger 4 to Channel Enable Register */
#define REG_CTI1_CTIINEN5                    0x31102034            /*  CTI1 CTI Trigger 5 to Channel Enable Register */
#define REG_CTI1_CTIINEN6                    0x31102038            /*  CTI1 CTI Trigger 6 to Channel Enable Register */
#define REG_CTI1_CTIINEN7                    0x3110203C            /*  CTI1 CTI Trigger 7 to Channel Enable Register */
#define REG_CTI1_CTIOUTEN0                   0x311020A0            /*  CTI1 CTI Channel to Trigger 0 Enable Register */
#define REG_CTI1_CTIOUTEN1                   0x311020A4            /*  CTI1 CTI Channel to Trigger 1 Enable Register */
#define REG_CTI1_CTIOUTEN2                   0x311020A8            /*  CTI1 CTI Channel to Trigger 2 Enable Register */
#define REG_CTI1_CTIOUTEN3                   0x311020AC            /*  CTI1 CTI Channel to Trigger 3 Enable Register */
#define REG_CTI1_CTIOUTEN4                   0x311020B0            /*  CTI1 CTI Channel to Trigger 4 Enable Register */
#define REG_CTI1_CTIOUTEN5                   0x311020B4            /*  CTI1 CTI Channel to Trigger 5 Enable Register */
#define REG_CTI1_CTIOUTEN6                   0x311020B8            /*  CTI1 CTI Channel to Trigger 6 Enable Register */
#define REG_CTI1_CTIOUTEN7                   0x311020BC            /*  CTI1 CTI Channel to Trigger 7 Enable Register */
#define REG_CTI1_CTITRIGINSTATUS             0x31102130            /*  CTI1 CTI Trigger In Status Register */
#define REG_CTI1_CTITRIGOUTSTATUS            0x31102134            /*  CTI1 CTI Trigger Out Status Register */
#define REG_CTI1_CTICHINSTATUS               0x31102138            /*  CTI1 CTI Channel In Status Register */
#define REG_CTI1_CTICHOUTSTATUS              0x3110213C            /*  CTI1 CTI Channel Out Status Register */
#define REG_CTI1_CTIGATE                     0x31102140            /*  CTI1 Enable CTI Channel Gate Register */
#define REG_CTI1_ASICCTL                     0x31102144            /*  CTI1 External Multiplexor Control Register */
#define REG_CTI1_ITCHINACK                   0x31102EDC            /*  CTI1 ITCHINACK */
#define REG_CTI1_ITTRIGINACK                 0x31102EE0            /*  CTI1 ITTRIGINACK */
#define REG_CTI1_ITCHOUT                     0x31102EE4            /*  CTI1 ITCHOUT */
#define REG_CTI1_ITTRIGOUT                   0x31102EE8            /*  CTI1 ITTRIGOUT */
#define REG_CTI1_ITCHOUTACK                  0x31102EEC            /*  CTI1 ITCHOUTACK */
#define REG_CTI1_ITTRIGOUTACK                0x31102EF0            /*  CTI1 ITTRIGOUTACK */
#define REG_CTI1_ITCHIN                      0x31102EF4            /*  CTI1 ITCHIN */
#define REG_CTI1_ITTRIGIN                    0x31102EF8            /*  CTI1 ITTRIGIN */
#define REG_CTI1_ITCTRL                      0x31102F00            /*  CTI1 Integration Mode Control Register */
#define REG_CTI1_CLAIMSET                    0x31102FA0            /*  CTI1 Claim Tag Set Register */
#define REG_CTI1_CLAIMCLR                    0x31102FA4            /*  CTI1 Claim Tag Clear Register */
#define REG_CTI1_LAR                         0x31102FB0            /*  CTI1 Lock Access Register */
#define REG_CTI1_LSR                         0x31102FB4            /*  CTI1 Lock Status Register */
#define REG_CTI1_AUTHSTATUS                  0x31102FB8            /*  CTI1 Authentication Status */
#define REG_CTI1_DEVID                       0x31102FC8            /*  CTI1 Device ID */
#define REG_CTI1_DEVTYPE                     0x31102FCC            /*  CTI1 Device Type */
#define REG_CTI1_PERIPHID4                   0x31102FD0            /*  CTI1 Peripheral ID4 */
#define REG_CTI1_PERIPHID5                   0x31102FD4            /*  CTI1 Peripheral ID5 */
#define REG_CTI1_PERIPHID6                   0x31102FD8            /*  CTI1 Peripheral ID6 */
#define REG_CTI1_PERIPHID7                   0x31102FDC            /*  CTI1 Peripheral ID7 */
#define REG_CTI1_PERIPHID0                   0x31102FE0            /*  CTI1 Peripheral ID0 */
#define REG_CTI1_PERIPHID1                   0x31102FE4            /*  CTI1 Peripheral ID1 */
#define REG_CTI1_PERIPHID2                   0x31102FE8            /*  CTI1 Peripheral ID2 */
#define REG_CTI1_PERIPHID3                   0x31102FEC            /*  CTI1 Peripheral ID3 */
#define REG_CTI1_COMPID0                     0x31102FF0            /*  CTI1 Component ID0 */
#define REG_CTI1_COMPID1                     0x31102FF4            /*  CTI1 Component ID1 */
#define REG_CTI1_COMPID2                     0x31102FF8            /*  CTI1 Component ID2 */
#define REG_CTI1_COMPID3                     0x31102FFC            /*  CTI1 Component ID3 */

/* ============================================================================================================================
        CTI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTICONTROL                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTICONTROL_GLBEN             0            /*  Global CTI Enable */
#define BITM_CTI_CTICONTROL_GLBEN            (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Global CTI Enable */
#define ENUM_CTI_CTICONTROL_DIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  GLBEN: Disabled */
#define ENUM_CTI_CTICONTROL_EN               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  GLBEN: Enabled */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINTACK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINTACK_INTACK             0            /*  Interrupt Acknowledge */
#define BITM_CTI_CTIINTACK_INTACK            (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Interrupt Acknowledge */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIAPPSET                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIAPPSET_APPSET             0            /*  Set Channel Event */
#define BITM_CTI_CTIAPPSET_APPSET            (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Set Channel Event */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIAPPCLEAR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIAPPCLEAR_APPCLEAR         0            /*  Channel Clear */
#define BITM_CTI_CTIAPPCLEAR_APPCLEAR        (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Clear */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIAPPPULSE                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIAPPPULSE_BIT_0APPULSE     0            /*  Channel Event Pulse */
#define BITM_CTI_CTIAPPPULSE_BIT_0APPULSE    (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Event Pulse */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN0                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN0_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN0_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN1_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN1_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN2_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN2_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN3_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN3_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN4                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN4_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN4_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN5                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN5_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN5_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN6                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN6_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN6_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIINEN7                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIINEN7_TRIGINEN            0            /*  Channel Trigger Input Enable */
#define BITM_CTI_CTIINEN7_TRIGINEN           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Input Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN0_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN0_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN1_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN1_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN2_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN2_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN3_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN3_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN4                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN4_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN4_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN5                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN5_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN5_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN6                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN6_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN6_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIOUTEN7                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIOUTEN7_TRIGOUTEN          0            /*  Channel Trigger Output Enable */
#define BITM_CTI_CTIOUTEN7_TRIGOUTEN         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Trigger Output Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTITRIGINSTATUS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTITRIGINSTATUS_TRIGINSTATUS  0            /*  Trigger In Status */
#define BITM_CTI_CTITRIGINSTATUS_TRIGINSTATUS (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Trigger In Status */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTITRIGOUTSTATUS                 Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTITRIGOUTSTATUS_TRIGOUTSTATUS  0            /*  Trigger Output Status */
#define BITM_CTI_CTITRIGOUTSTATUS_TRIGOUTSTATUS (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Trigger Output Status */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTICHINSTATUS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTICHINSTATUS_CTCHINSTATUS   0            /*  Channel Input Status */
#define BITM_CTI_CTICHINSTATUS_CTCHINSTATUS  (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Input Status */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTICHOUTSTATUS                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTICHOUTSTATUS_CTCHOUTSTATUS  0            /*  Channel Out Status */
#define BITM_CTI_CTICHOUTSTATUS_CTCHOUTSTATUS (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Channel Out Status */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CTIGATE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CTIGATE_CTIGATEEN3           3            /*  Enable CTICHOUT3 */
#define BITP_CTI_CTIGATE_CTIGATEEN2           2            /*  Enable CTICHOUT2 */
#define BITP_CTI_CTIGATE_CTIGATEEN1           1            /*  Enable CTICHOUT1 */
#define BITP_CTI_CTIGATE_CTIGATEEN0           0            /*  Enable CTICHOUT0 */
#define BITM_CTI_CTIGATE_CTIGATEEN3          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Enable CTICHOUT3 */
#define BITM_CTI_CTIGATE_CTIGATEEN2          (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Enable CTICHOUT2 */
#define BITM_CTI_CTIGATE_CTIGATEEN1          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Enable CTICHOUT1 */
#define BITM_CTI_CTIGATE_CTIGATEEN0          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Enable CTICHOUT0 */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ASICCTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ASICCTL_ASICCTL              0            /*  ASIC Control */
#define BITM_CTI_ASICCTL_ASICCTL             (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  ASIC Control */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITCHINACK                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITCHINACK_CTCHINACK          0            /*  Set the value of the CTCHINACK outputs */
#define BITM_CTI_ITCHINACK_CTCHINACK         (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Set the value of the CTCHINACK outputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITTRIGINACK                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITTRIGINACK_CTTRIGINACK      0            /*  Set the value of the CTTRIGINACK outputs */
#define BITM_CTI_ITTRIGINACK_CTTRIGINACK     (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Set the value of the CTTRIGINACK outputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITCHOUT                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITCHOUT_CTCHOUT              0            /*  Set the value of the CTCHOUT outputs */
#define BITM_CTI_ITCHOUT_CTCHOUT             (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Set the value of the CTCHOUT outputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITTRIGOUT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITTRIGOUT_CTTRIGOUT          0            /*  Set the value of the CTTRIGOUT outputs */
#define BITM_CTI_ITTRIGOUT_CTTRIGOUT         (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Set the value of the CTTRIGOUT outputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITCHOUTACK                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITCHOUTACK_CTCHOUTACK        0            /*  Read the values of the CTCHOUTACK inputs */
#define BITM_CTI_ITCHOUTACK_CTCHOUTACK       (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Read the values of the CTCHOUTACK inputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITTRIGOUTACK                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITTRIGOUTACK_CTTRIGOUTACK    0            /*  Read the values of the CTTRIGOUTACK inputs */
#define BITM_CTI_ITTRIGOUTACK_CTTRIGOUTACK   (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read the values of the CTTRIGOUTACK inputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITCHIN                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITCHIN_CTCHIN                0            /*  Read the values of the CTCHIN inputs */
#define BITM_CTI_ITCHIN_CTCHIN               (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Read the values of the CTCHIN inputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITTRIGIN                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITTRIGIN_CTTRIGIN            0            /*  Read the values of the CTTRIGIN inputs */
#define BITM_CTI_ITTRIGIN_CTTRIGIN           (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Read the values of the CTTRIGIN inputs */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_ITCTRL                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_ITCTRL_INTEGRATION_MODE      0            /*  Integration Mode Enable */
#define BITM_CTI_ITCTRL_INTEGRATION_MODE     (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Integration Mode Enable */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CLAIMSET                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CLAIMSET_CLAIMSET            0            /*  Claim Tag Set Register Bits */
#define BITM_CTI_CLAIMSET_CLAIMSET           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Claim Tag Set Register Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_CLAIMCLR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_CLAIMCLR_CLAIMCLR            0            /*  Claim Tag Clear Register Bits */
#define BITM_CTI_CLAIMCLR_CLAIMCLR           (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Claim Tag Clear Register Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_LAR                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_LAR_WACODE                   0            /*  Write Access Code */
#define BITM_CTI_LAR_WACODE                  (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Write Access Code */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_LSR                              Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_LSR_ACCESS                   1            /*  Access Blocked to Device */
#define BITP_CTI_LSR_LOCK                     0            /*  Lock Exists for Device */
#define BITM_CTI_LSR_ACCESS                  (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Access Blocked to Device */
#define BITM_CTI_LSR_LOCK                    (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Lock Exists for Device */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_AUTHSTATUS                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_AUTHSTATUS_NDBG_EN           3            /*  Non-invasive Debug Enabled Status */
#define BITP_CTI_AUTHSTATUS_NDBG_CTL          2            /*  Non-invasive Debug Controlled */
#define BITP_CTI_AUTHSTATUS_IDBG_EN           1            /*  Invasive Debug Enable Status */
#define BITP_CTI_AUTHSTATUS_IDBG_CTL          0            /*  Invasive Debug Controlled */
#define BITM_CTI_AUTHSTATUS_NDBG_EN          (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Non-invasive Debug Enabled Status */
#define BITM_CTI_AUTHSTATUS_NDBG_CTL         (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Non-invasive Debug Controlled */
#define BITM_CTI_AUTHSTATUS_IDBG_EN          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Invasive Debug Enable Status */
#define BITM_CTI_AUTHSTATUS_IDBG_CTL         (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Invasive Debug Controlled */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_DEVID                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_DEVID_DEVID                  0            /*  Device ID Field */
#define BITM_CTI_DEVID_DEVID                 (_ADI_MSK_3(0x000FFFFF,0x000FFFFFUL, uint32_t  ))    /*  Device ID Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_DEVTYPE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_DEVTYPE_DEVTYPE              0            /*  Device Type Field */
#define BITM_CTI_DEVTYPE_DEVTYPE             (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Device Type Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID4                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID4_PID4               0            /*  Peripheral ID4 Field */
#define BITM_CTI_PERIPHID4_PID4              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID4 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID5                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID5_PID5               0            /*  Peripheral ID5 Field */
#define BITM_CTI_PERIPHID5_PID5              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID5 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID6                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID6_PID6               0            /*  Peripheral ID6 Field */
#define BITM_CTI_PERIPHID6_PID6              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID6 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID7                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID7_PID7               0            /*  Peripheral ID7 Field */
#define BITM_CTI_PERIPHID7_PID7              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID7 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID0_PID0               0            /*  Peripheral ID0 Field */
#define BITM_CTI_PERIPHID0_PID0              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID0 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID1_PID1               0            /*  Peripheral ID1 Field */
#define BITM_CTI_PERIPHID1_PID1              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID1 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID2_PID2               0            /*  Peripheral ID2 Field */
#define BITM_CTI_PERIPHID2_PID2              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID2 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_PERIPHID3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_PERIPHID3_PID3               0            /*  Peripheral ID3 Field */
#define BITM_CTI_PERIPHID3_PID3              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Peripheral ID3 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_COMPID0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_COMPID0_ID0                  0            /*  Component ID0 Field */
#define BITM_CTI_COMPID0_ID0                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID0 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_COMPID1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_COMPID1_ID1                  0            /*  Component ID1 Field */
#define BITM_CTI_COMPID1_ID1                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID1 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_COMPID2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_COMPID2_ID2                  0            /*  Component ID2 Field */
#define BITM_CTI_COMPID2_ID2                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID2 Field */

/* -------------------------------------------------------------------------------------------------------------------------
          CTI_COMPID3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CTI_COMPID3_ID3                  0            /*  Component ID3 Field */
#define BITM_CTI_COMPID3_ID3                 (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID3 Field */


/* ============================================================================================================================
        Program Flow Trace
   ============================================================================================================================ */

/* ============================================================================================================================
        CSPFT0
   ============================================================================================================================ */
#define REG_CSPFT0_CCER                      0x311031E8            /*  CSPFT0 Configuration Code Extension Register */
/* ============================================================================================================================
      Component Identification Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT0_CID0                      0x31103FF0            /*  CSPFT0 Component ID0 Register */
#define REG_CSPFT0_CID1                      0x31103FF4            /*  CSPFT0 Component ID1 Register */
#define REG_CSPFT0_CID2                      0x31103FF8            /*  CSPFT0 Component ID2 Register */
#define REG_CSPFT0_CID3                      0x31103FFC            /*  CSPFT0 Component ID3 Register */
/* ============================================================================================================================
      Management Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT0_CLAIMSET                  0x31103FA0            /*  CSPFT0 Claim Tag Set Register */
#define REG_CSPFT0_CLAIMCLR                  0x31103FA4            /*  CSPFT0 Claim Tag Clear Register */
#define REG_CSPFT0_LAR                       0x31103FB0            /*  CSPFT0 Lock Access Register */
#define REG_CSPFT0_LSR                       0x31103FB4            /*  CSPFT0 Lock Status Register */
#define REG_CSPFT0_AUTHSTATUS                0x31103FB8            /*  CSPFT0 Authentication Status Register */
#define REG_CSPFT0_DEVTYPE                   0x31103FCC            /*  CSPFT0 Device Type Identifier Register */
/* ============================================================================================================================
      Peripheral Identification Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT0_PID4                      0x31103FD0            /*  CSPFT0 Peripheral ID4 Register */
#define REG_CSPFT0_PID0                      0x31103FE0            /*  CSPFT0 Peripheral ID0 Register */
#define REG_CSPFT0_PID1                      0x31103FE4            /*  CSPFT0 Peripheral ID1 Register */
#define REG_CSPFT0_PID2                      0x31103FE8            /*  CSPFT0 Peripheral ID2 Register */
#define REG_CSPFT0_PID3                      0x31103FEC            /*  CSPFT0 Peripheral ID3 Register */
/* ============================================================================================================================
      Trace Address Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT0_ACVR0                     0x31103040            /*  CSPFT0 Address Comparator Value Register */
#define REG_CSPFT0_ACVR1                     0x31103044            /*  CSPFT0 Address Comparator Value Register */
#define REG_CSPFT0_ACVR2                     0x31103048            /*  CSPFT0 Address Comparator Value Register */
#define REG_CSPFT0_ACVR3                     0x3110304C            /*  CSPFT0 Address Comparator Value Register */
#define REG_CSPFT0_ACVRn(i)                  (REG_CSPFT0_ACVR0 + ((i) * 4))
#define REG_CSPFT0_ACVRn_COUNT               4
#define REG_CSPFT0_ACTR0                     0x31103080            /*  CSPFT0 Address Comparator Access Type Register */
#define REG_CSPFT0_ACTR1                     0x31103084            /*  CSPFT0 Address Comparator Access Type Register */
#define REG_CSPFT0_ACTR2                     0x31103088            /*  CSPFT0 Address Comparator Access Type Register */
#define REG_CSPFT0_ACTR3                     0x3110308C            /*  CSPFT0 Address Comparator Access Type Register */
#define REG_CSPFT0_ACTRn(i)                  (REG_CSPFT0_ACTR0 + ((i) * 4))
#define REG_CSPFT0_ACTRn_COUNT               4
/* ============================================================================================================================
      Trace Configuration Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT0_CTL                       0x31103000            /*  CSPFT0 Main Control Register */
#define REG_CSPFT0_HWFEAT                    0x31103004            /*  CSPFT0 Hardware Feature Register */
#define REG_CSPFT0_TRIGGER                   0x31103008            /*  CSPFT0 Trigger Event Register */
#define REG_CSPFT0_STAT                      0x31103010            /*  CSPFT0 Status Register */
#define REG_CSPFT0_TSSCTL                    0x31103018            /*  CSPFT0 TraceEnable Start/Stop Control Register */
#define REG_CSPFT0_TEEVENT                   0x31103020            /*  CSPFT0 TraceEnable Event Register */
#define REG_CSPFT0_TECTL                     0x31103024            /*  CSPFT0 TraceEnable Control Register */
#define REG_CSPFT0_EXTOUTEVR0                0x311031A0            /*  CSPFT0 External Output Event Register */
#define REG_CSPFT0_EXTOUTEVR1                0x311031A4            /*  CSPFT0 External Output Event Register */
#define REG_CSPFT0_EXTOUTEVR2                0x311031A8            /*  CSPFT0 External Output Event Register */
#define REG_CSPFT0_EXTOUTEVR3                0x311031AC            /*  CSPFT0 External Output Event Register */
#define REG_CSPFT0_EXTOUTEVRn(i)             (REG_CSPFT0_EXTOUTEVR0 + ((i) * 4))
#define REG_CSPFT0_EXTOUTEVRn_COUNT          4
#define REG_CSPFT0_CIDCVR0                   0x311031B0            /*  CSPFT0 Context ID Comparator Value */
#define REG_CSPFT0_CIDCVRn(i)                (REG_CSPFT0_CIDCVR0 + ((i) * 4))
#define REG_CSPFT0_CIDCVRn_COUNT             1
#define REG_CSPFT0_CIDCMR                    0x311031BC            /*  CSPFT0 Context ID Comparator Mask Register */
#define REG_CSPFT0_SYNCFR                    0x311031E0            /*  CSPFT0 Synchronization Frequency Register */
#define REG_CSPFT0_TRACEIDR                  0x31103200            /*  CSPFT0 CoreSight Trace ID Register */
/* ============================================================================================================================
      Trace Counter Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT0_CNTRLDVR0                 0x31103140            /*  CSPFT0 Counter Reload Value Register */
#define REG_CSPFT0_CNTRLDVR1                 0x31103144            /*  CSPFT0 Counter Reload Value Register */
#define REG_CSPFT0_CNTRLDVRn(i)              (REG_CSPFT0_CNTRLDVR0 + ((i) * 4))
#define REG_CSPFT0_CNTRLDVRn_COUNT           2
#define REG_CSPFT0_CNTENR0                   0x31103150            /*  CSPFT0 Counter Enable Event Register */
#define REG_CSPFT0_CNTENR1                   0x31103154            /*  CSPFT0 Counter Enable Event Register */
#define REG_CSPFT0_CNTENRn(i)                (REG_CSPFT0_CNTENR0 + ((i) * 4))
#define REG_CSPFT0_CNTENRn_COUNT             2
#define REG_CSPFT0_CNTRLDEVR0                0x31103160            /*  CSPFT0 Counter Reload Event Register */
#define REG_CSPFT0_CNTRLDEVR1                0x31103164            /*  CSPFT0 Counter Reload Event Register */
#define REG_CSPFT0_CNTRLDEVRn(i)             (REG_CSPFT0_CNTRLDEVR0 + ((i) * 4))
#define REG_CSPFT0_CNTRLDEVRn_COUNT          2
#define REG_CSPFT0_CNTVR0                    0x31103170            /*  CSPFT0 Counter Value Register */
#define REG_CSPFT0_CNTVR1                    0x31103174            /*  CSPFT0 Counter Value Register */
#define REG_CSPFT0_CNTVRn(i)                 (REG_CSPFT0_CNTVR0 + ((i) * 4))
#define REG_CSPFT0_CNTVRn_COUNT              2

/* ============================================================================================================================
        CSPFT1
   ============================================================================================================================ */
#define REG_CSPFT1_CCER                      0x311071E8            /*  CSPFT1 Configuration Code Extension Register */
/* ============================================================================================================================
      Component Identification Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT1_CID0                      0x31107FF0            /*  CSPFT1 Component ID0 Register */
#define REG_CSPFT1_CID1                      0x31107FF4            /*  CSPFT1 Component ID1 Register */
#define REG_CSPFT1_CID2                      0x31107FF8            /*  CSPFT1 Component ID2 Register */
#define REG_CSPFT1_CID3                      0x31107FFC            /*  CSPFT1 Component ID3 Register */
/* ============================================================================================================================
      Management Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT1_CLAIMSET                  0x31107FA0            /*  CSPFT1 Claim Tag Set Register */
#define REG_CSPFT1_CLAIMCLR                  0x31107FA4            /*  CSPFT1 Claim Tag Clear Register */
#define REG_CSPFT1_LAR                       0x31107FB0            /*  CSPFT1 Lock Access Register */
#define REG_CSPFT1_LSR                       0x31107FB4            /*  CSPFT1 Lock Status Register */
#define REG_CSPFT1_AUTHSTATUS                0x31107FB8            /*  CSPFT1 Authentication Status Register */
#define REG_CSPFT1_DEVTYPE                   0x31107FCC            /*  CSPFT1 Device Type Identifier Register */
/* ============================================================================================================================
      Peripheral Identification Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT1_PID4                      0x31107FD0            /*  CSPFT1 Peripheral ID4 Register */
#define REG_CSPFT1_PID0                      0x31107FE0            /*  CSPFT1 Peripheral ID0 Register */
#define REG_CSPFT1_PID1                      0x31107FE4            /*  CSPFT1 Peripheral ID1 Register */
#define REG_CSPFT1_PID2                      0x31107FE8            /*  CSPFT1 Peripheral ID2 Register */
#define REG_CSPFT1_PID3                      0x31107FEC            /*  CSPFT1 Peripheral ID3 Register */
/* ============================================================================================================================
      Trace Address Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT1_ACVR0                     0x31107040            /*  CSPFT1 Address Comparator Value Register */
#define REG_CSPFT1_ACVR1                     0x31107044            /*  CSPFT1 Address Comparator Value Register */
#define REG_CSPFT1_ACVR2                     0x31107048            /*  CSPFT1 Address Comparator Value Register */
#define REG_CSPFT1_ACVR3                     0x3110704C            /*  CSPFT1 Address Comparator Value Register */
#define REG_CSPFT1_ACVRn(i)                  (REG_CSPFT1_ACVR0 + ((i) * 4))
#define REG_CSPFT1_ACVRn_COUNT               4
#define REG_CSPFT1_ACTR0                     0x31107080            /*  CSPFT1 Address Comparator Access Type Register */
#define REG_CSPFT1_ACTR1                     0x31107084            /*  CSPFT1 Address Comparator Access Type Register */
#define REG_CSPFT1_ACTR2                     0x31107088            /*  CSPFT1 Address Comparator Access Type Register */
#define REG_CSPFT1_ACTR3                     0x3110708C            /*  CSPFT1 Address Comparator Access Type Register */
#define REG_CSPFT1_ACTRn(i)                  (REG_CSPFT1_ACTR0 + ((i) * 4))
#define REG_CSPFT1_ACTRn_COUNT               4
/* ============================================================================================================================
      Trace Configuration Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT1_CTL                       0x31107000            /*  CSPFT1 Main Control Register */
#define REG_CSPFT1_HWFEAT                    0x31107004            /*  CSPFT1 Hardware Feature Register */
#define REG_CSPFT1_TRIGGER                   0x31107008            /*  CSPFT1 Trigger Event Register */
#define REG_CSPFT1_STAT                      0x31107010            /*  CSPFT1 Status Register */
#define REG_CSPFT1_TSSCTL                    0x31107018            /*  CSPFT1 TraceEnable Start/Stop Control Register */
#define REG_CSPFT1_TEEVENT                   0x31107020            /*  CSPFT1 TraceEnable Event Register */
#define REG_CSPFT1_TECTL                     0x31107024            /*  CSPFT1 TraceEnable Control Register */
#define REG_CSPFT1_EXTOUTEVR0                0x311071A0            /*  CSPFT1 External Output Event Register */
#define REG_CSPFT1_EXTOUTEVR1                0x311071A4            /*  CSPFT1 External Output Event Register */
#define REG_CSPFT1_EXTOUTEVR2                0x311071A8            /*  CSPFT1 External Output Event Register */
#define REG_CSPFT1_EXTOUTEVR3                0x311071AC            /*  CSPFT1 External Output Event Register */
#define REG_CSPFT1_EXTOUTEVRn(i)             (REG_CSPFT1_EXTOUTEVR0 + ((i) * 4))
#define REG_CSPFT1_EXTOUTEVRn_COUNT          4
#define REG_CSPFT1_CIDCVR0                   0x311071B0            /*  CSPFT1 Context ID Comparator Value */
#define REG_CSPFT1_CIDCVRn(i)                (REG_CSPFT1_CIDCVR0 + ((i) * 4))
#define REG_CSPFT1_CIDCVRn_COUNT             1
#define REG_CSPFT1_CIDCMR                    0x311071BC            /*  CSPFT1 Context ID Comparator Mask Register */
#define REG_CSPFT1_SYNCFR                    0x311071E0            /*  CSPFT1 Synchronization Frequency Register */
#define REG_CSPFT1_TRACEIDR                  0x31107200            /*  CSPFT1 CoreSight Trace ID Register */
/* ============================================================================================================================
      Trace Counter Register Definitions
   ============================================================================================================================ */
#define REG_CSPFT1_CNTRLDVR0                 0x31107140            /*  CSPFT1 Counter Reload Value Register */
#define REG_CSPFT1_CNTRLDVR1                 0x31107144            /*  CSPFT1 Counter Reload Value Register */
#define REG_CSPFT1_CNTRLDVRn(i)              (REG_CSPFT1_CNTRLDVR0 + ((i) * 4))
#define REG_CSPFT1_CNTRLDVRn_COUNT           2
#define REG_CSPFT1_CNTENR0                   0x31107150            /*  CSPFT1 Counter Enable Event Register */
#define REG_CSPFT1_CNTENR1                   0x31107154            /*  CSPFT1 Counter Enable Event Register */
#define REG_CSPFT1_CNTENRn(i)                (REG_CSPFT1_CNTENR0 + ((i) * 4))
#define REG_CSPFT1_CNTENRn_COUNT             2
#define REG_CSPFT1_CNTRLDEVR0                0x31107160            /*  CSPFT1 Counter Reload Event Register */
#define REG_CSPFT1_CNTRLDEVR1                0x31107164            /*  CSPFT1 Counter Reload Event Register */
#define REG_CSPFT1_CNTRLDEVRn(i)             (REG_CSPFT1_CNTRLDEVR0 + ((i) * 4))
#define REG_CSPFT1_CNTRLDEVRn_COUNT          2
#define REG_CSPFT1_CNTVR0                    0x31107170            /*  CSPFT1 Counter Value Register */
#define REG_CSPFT1_CNTVR1                    0x31107174            /*  CSPFT1 Counter Value Register */
#define REG_CSPFT1_CNTVRn(i)                 (REG_CSPFT1_CNTVR0 + ((i) * 4))
#define REG_CSPFT1_CNTVRn_COUNT              2

/* ============================================================================================================================
        CSPFT Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/*  =========================================================================
 *! \enum   FUNC
 *! \brief  Function (FUNC) GLOBAL Enumerations
 *  ========================================================================= */
#define ENUM_CSPFT_A          0   /**< A                 */
#define ENUM_CSPFT_NOT_A      1   /**< NOT(A)            */
#define ENUM_CSPFT_A_AND_B    2   /**< A AND B           */
#define ENUM_CSPFT_NOT_A_AND_B 3   /**< NOT(A) AND B      */
#define ENUM_CSPFT_NOT_A_AND_NOT_B 4   /**< NOT(A) AND NOT(B) */
#define ENUM_CSPFT_A_OR_B     5   /**< A OR B            */
#define ENUM_CSPFT_NOT_A_OR_B 6   /**< NOT(A) OR B       */
#define ENUM_CSPFT_NOT_A_OR_NOT_B 7   /**< NOT(A) OR NOT(B)  */


/*  =========================================================================
 *! \enum   RESA
 *! \brief  Resource A (RESA) GLOBAL Enumerations
 *  ========================================================================= */
#define ENUM_CSPFT_ADDR_COMP0 0     /**< Single Addr Comparator 0               */
#define ENUM_CSPFT_ADDR_COMP1 1     /**< Single Addr Comparator 1               */
#define ENUM_CSPFT_ADDR_COMP2 2     /**< Single Addr Comparator 2               */
#define ENUM_CSPFT_ADDR_COMP3 3     /**< Single Addr Comparator 3               */
#define ENUM_CSPFT_ADDR_COMP4 4     /**< Single Addr Comparator 4               */
#define ENUM_CSPFT_ADDR_COMP5 5     /**< Single Addr Comparator 5               */
#define ENUM_CSPFT_ADDR_COMP6 6     /**< Single Addr Comparator 6               */
#define ENUM_CSPFT_ADDR_COMP7 7     /**< Single Addr Comparator 7               */
#define ENUM_CSPFT_ADDR_COMP8 8     /**< Single Addr Comparator 8               */
#define ENUM_CSPFT_ADDR_COMP9 9     /**< Single Addr Comparator 9               */
#define ENUM_CSPFT_ADDR_COMP10 10    /**< Single Addr Comparator 10              */
#define ENUM_CSPFT_ADDR_COMP11 11    /**< Single Addr Comparator 11              */
#define ENUM_CSPFT_ADDR_COMP12 12    /**< Single Addr Comparator 12              */
#define ENUM_CSPFT_ADDR_COMP13 13    /**< Single Addr Comparator 13              */
#define ENUM_CSPFT_ADDR_COMP14 14    /**< Single Addr Comparator 14              */
#define ENUM_CSPFT_ADDR_COMP15 15    /**< Single Addr Comparator 15              */
#define ENUM_CSPFT_ADDR_RANGE0 16    /**< Addr Range Comparator 0                */
#define ENUM_CSPFT_ADDR_RANGE1 17    /**< Addr Range Comparator 1                */
#define ENUM_CSPFT_ADDR_RANGE2 18    /**< Addr Range Comparator 2                */
#define ENUM_CSPFT_ADDR_RANGE3 19    /**< Addr Range Comparator 3                */
#define ENUM_CSPFT_ADDR_RANGE4 20    /**< Addr Range Comparator 4                */
#define ENUM_CSPFT_ADDR_RANGE5 21    /**< Addr Range Comparator 5                */
#define ENUM_CSPFT_ADDR_RANGE6 22    /**< Addr Range Comparator 6                */
#define ENUM_CSPFT_ADDR_RANGE7 23    /**< Addr Range Comparator 7                */
#define ENUM_CSPFT_CNT0_ZERO 64    /**< Counter 0 at Zero                      */
#define ENUM_CSPFT_CNT1_ZERO 65    /**< Counter 1 at Zero                      */
#define ENUM_CSPFT_CNT2_ZERO 66    /**< Counter 2 at Zero                      */
#define ENUM_CSPFT_CNT3_ZERO 67    /**< Counter 3 at Zero                      */
#define ENUM_CSPFT_CID_COMP0 88    /**< Context ID Comparator 0                */
#define ENUM_CSPFT_CID_COMP1 89    /**< Context ID Comparator 1                */
#define ENUM_CSPFT_CID_COMP2 90    /**< Context ID Comparator 2                */
#define ENUM_CSPFT_TSS    95    /**< TraceEnable Start/Stop Resource 0 or 1 */
#define ENUM_CSPFT_EXT_INP0 96    /**< External Inputs 0                      */
#define ENUM_CSPFT_EXT_INP1 97    /**< External Inputs 1                      */
#define ENUM_CSPFT_EXT_INP2 98    /**< External Inputs 2                      */
#define ENUM_CSPFT_EXT_INP3 99    /**< External Inputs 3                      */
#define ENUM_CSPFT_TRC_PROHIB 110   /**< Trace Prohibited                       */
#define ENUM_CSPFT_TRUE   111   /**< Always TRUE                            */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CCER                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CCER_VEI                  26            /*  Virtualization Extensions Implemented */
#define BITP_CSPFT_CCER_RSI                  23            /*  Return Stack Implemented */
#define BITP_CSPFT_CCER_TSI                  22            /*  Time Stamping Implemented */
#define BITM_CSPFT_CCER_VEI                  (_ADI_MSK_3(0x04000000,0x04000000UL, uint32_t  ))    /*  Virtualization Extensions Implemented */
#define BITM_CSPFT_CCER_RSI                  (_ADI_MSK_3(0x00800000,0x00800000UL, uint32_t  ))    /*  Return Stack Implemented */
#define BITM_CSPFT_CCER_TSI                  (_ADI_MSK_3(0x00400000,0x00400000UL, uint32_t  ))    /*  Time Stamping Implemented */

/* ============================================================================================================================
 *    Component Identification Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CID0                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CID0_COMPID                0            /*  Component ID */
#define BITM_CSPFT_CID0_COMPID               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CID1                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CID1_COMPID                0            /*  Component ID */
#define BITM_CSPFT_CID1_COMPID               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CID2                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CID2_COMPID                0            /*  Component ID */
#define BITM_CSPFT_CID2_COMPID               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CID3                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CID3_COMPID                0            /*  Component ID */
#define BITM_CSPFT_CID3_COMPID               (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Component ID */

/* ============================================================================================================================
 *    Management Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CLAIMSET                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CLAIMSET_TAGS              0            /*  Supported Tags */
#define BITM_CSPFT_CLAIMSET_TAGS             (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Supported Tags */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CLAIMCLR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CLAIMCLR_TAGS              0            /*  Tags */
#define BITM_CSPFT_CLAIMCLR_TAGS             (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Tags */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_LAR                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_LAR_VALUE                  0            /*  Lock Access */
#define BITM_CSPFT_LAR_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Lock Access */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_LSR                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_LSR_LOCKED                 1            /*  Lock Status */
#define BITP_CSPFT_LSR_LOCKEN                 0            /*  Locking Supported */
#define BITM_CSPFT_LSR_LOCKED                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Lock Status */
#define BITM_CSPFT_LSR_LOCKEN                (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Locking Supported */
#define ENUM_CSPFT_LSR_UNLOCKED              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCKED: Writes are permitted */
#define ENUM_CSPFT_LSR_LOCKED                (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  LOCKED: Locked. Writes are ignored */
#define ENUM_CSPFT_LSR_NOLOCK                (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  LOCKEN: Locking is Not Required. */
#define ENUM_CSPFT_LSR_LOCKREQ               (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  LOCKEN: Locking is Required. */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_AUTHSTATUS                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_AUTHSTATUS_ONE             7            /*  Always reads as one */
#define BITP_CSPFT_AUTHSTATUS_DBGEN           6            /*  Debug Enabled */
#define BITM_CSPFT_AUTHSTATUS_ONE            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  Always reads as one */
#define BITM_CSPFT_AUTHSTATUS_DBGEN          (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Debug Enabled */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_DEVTYPE                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_DEVTYPE_STYPE              4            /*  Sub Type = DSP */
#define BITP_CSPFT_DEVTYPE_TYPE               0            /*  Device Type = Trace Source */
#define BITM_CSPFT_DEVTYPE_STYPE             (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Sub Type = DSP */
#define BITM_CSPFT_DEVTYPE_TYPE              (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Device Type = Trace Source */

/* ============================================================================================================================
 *    Peripheral Identification Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_PID4                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_PID4_SIZE                  4            /*  Number of 4K Blocks */
#define BITP_CSPFT_PID4_JEOP106CC             0            /*  JEOP106 continuation code (number of leading 0x7Fs) */
#define BITM_CSPFT_PID4_SIZE                 (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Number of 4K Blocks */
#define BITM_CSPFT_PID4_JEOP106CC            (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  JEOP106 continuation code (number of leading 0x7Fs) */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_PID0                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_PID0_PARTNUM               0            /*  Part Number */
#define BITM_CSPFT_PID0_PARTNUM              (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Part Number */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_PID1                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_PID1_JEP106                4            /*  JEDEC JEP106 Manufacturer ID code */
#define BITP_CSPFT_PID1_PARTNUM               0            /*  Part Number */
#define BITM_CSPFT_PID1_JEP106               (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  JEDEC JEP106 Manufacturer ID code */
#define BITM_CSPFT_PID1_PARTNUM              (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Part Number */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_PID2                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_PID2_REV                   4            /*  Peripheral Revision */
#define BITP_CSPFT_PID2_JEDECASGN             3            /*  A JEDEC Assigned Value is Used */
#define BITP_CSPFT_PID2_JEP106                0            /*  JEDEC JEP106 Manufacturer ID code */
#define BITM_CSPFT_PID2_REV                  (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Peripheral Revision */
#define BITM_CSPFT_PID2_JEDECASGN            (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  A JEDEC Assigned Value is Used */
#define BITM_CSPFT_PID2_JEP106               (_ADI_MSK_3(0x00000007,0x00000007UL, uint32_t  ))    /*  JEDEC JEP106 Manufacturer ID code */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_PID3                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_PID3_REVAND                4            /*  Field to mark metal fix revision */
#define BITP_CSPFT_PID3_CUSTMOD               0            /*  Customer Modified */
#define BITM_CSPFT_PID3_REVAND               (_ADI_MSK_3(0x000000F0,0x000000F0UL, uint32_t  ))    /*  Field to mark metal fix revision */
#define BITM_CSPFT_PID3_CUSTMOD              (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Customer Modified */

/* ============================================================================================================================
 *    Trace Address Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_ACVR[n]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_ACVR_ADDR                  0            /*  Address for Comparison */
#define BITM_CSPFT_ACVR_ADDR                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address for Comparison */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_ACTR[n]                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_ACTR_CIDCTRL               8            /*  Context ID Comparator Control */
#define BITM_CSPFT_ACTR_CIDCTRL              (_ADI_MSK_3(0x00000300,0x00000300UL, uint32_t  ))    /*  Context ID Comparator Control */

/* ============================================================================================================================
 *    Trace Configuration Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CTL                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CTL_RSENA                 29            /*  Return Stack Enable */
#define BITP_CSPFT_CTL_CIDSZ                 14            /*  Context ID Size */
#define BITP_CSPFT_CTL_PB                    10            /*  Programming Bit */
#define BITP_CSPFT_CTL_BBRAN                  8            /*  Branch Broadcast */
#define BITM_CSPFT_CTL_RSENA                 (_ADI_MSK_3(0x20000000,0x20000000UL, uint32_t  ))    /*  Return Stack Enable */
#define BITM_CSPFT_CTL_CIDSZ                 (_ADI_MSK_3(0x0000C000,0x0000C000UL, uint32_t  ))    /*  Context ID Size */
#define BITM_CSPFT_CTL_PB                    (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  Programming Bit */
#define BITM_CSPFT_CTL_BBRAN                 (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  Branch Broadcast */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_HWFEAT                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_HWFEAT_NCIDC              24            /*  Number of Context ID Comparators */
#define BITP_CSPFT_HWFEAT_NEXO               20            /*  Number of External Outputs */
#define BITP_CSPFT_HWFEAT_NEXI               17            /*  Number of External Inputs */
#define BITP_CSPFT_HWFEAT_NCNTR              13            /*  Number of Counters */
#define BITP_CSPFT_HWFEAT_NACMP               0            /*  Number of Pairs of Address Comparators */
#define BITM_CSPFT_HWFEAT_NCIDC              (_ADI_MSK_3(0x03000000,0x03000000UL, uint32_t  ))    /*  Number of Context ID Comparators */
#define BITM_CSPFT_HWFEAT_NEXO               (_ADI_MSK_3(0x00700000,0x00700000UL, uint32_t  ))    /*  Number of External Outputs */
#define BITM_CSPFT_HWFEAT_NEXI               (_ADI_MSK_3(0x000E0000,0x000E0000UL, uint32_t  ))    /*  Number of External Inputs */
#define BITM_CSPFT_HWFEAT_NCNTR              (_ADI_MSK_3(0x0000E000,0x0000E000UL, uint32_t  ))    /*  Number of Counters */
#define BITM_CSPFT_HWFEAT_NACMP              (_ADI_MSK_3(0x0000000F,0x0000000FUL, uint32_t  ))    /*  Number of Pairs of Address Comparators */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_TRIGGER                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_TRIGGER_FUNC              14            /*  Function */
#define BITP_CSPFT_TRIGGER_RESB               7            /*  Resource B */
#define BITP_CSPFT_TRIGGER_RESA               0            /*  Resource A */
#define BITM_CSPFT_TRIGGER_FUNC              (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Function */
#define BITM_CSPFT_TRIGGER_RESB              (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Resource B */
#define BITM_CSPFT_TRIGGER_RESA              (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Resource A */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_STAT                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_STAT_TRIG                  3            /*  Trigger Bit */
#define BITP_CSPFT_STAT_TSS                   2            /*  Trace Start/Stop Bit Status */
#define BITP_CSPFT_STAT_PB                    1            /*  Prog Bit Status */
#define BITP_CSPFT_STAT_OF                    0            /*  Overflow */
#define BITM_CSPFT_STAT_TRIG                 (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  Trigger Bit */
#define BITM_CSPFT_STAT_TSS                  (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  Trace Start/Stop Bit Status */
#define BITM_CSPFT_STAT_PB                   (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  Prog Bit Status */
#define BITM_CSPFT_STAT_OF                   (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  Overflow */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_TSSCTL                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_TSSCTL_STOP               16            /*  Stop Address Comparator Select Bits */
#define BITP_CSPFT_TSSCTL_START               0            /*  Start Address Comparator Select Bits */
#define BITM_CSPFT_TSSCTL_STOP               (_ADI_MSK_3(0xFFFF0000,0xFFFF0000UL, uint32_t  ))    /*  Stop Address Comparator Select Bits */
#define BITM_CSPFT_TSSCTL_START              (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Start Address Comparator Select Bits */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_TEEVENT                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_TEEVENT_FUNC              14            /*  Function */
#define BITP_CSPFT_TEEVENT_RESB               7            /*  Resource B */
#define BITP_CSPFT_TEEVENT_RESA               0            /*  Resource A */
#define BITM_CSPFT_TEEVENT_FUNC              (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Function */
#define BITM_CSPFT_TEEVENT_RESB              (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Resource B */
#define BITM_CSPFT_TEEVENT_RESA              (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Resource A */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_TECTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_TECTL_TSSCENA             25            /*  Trace Start and Stop Control Enable */
#define BITP_CSPFT_TECTL_EXCL                24            /*  Include and Exclude Control */
#define BITP_CSPFT_TECTL_ARCS                 0            /*  Address Range Comparator Select Bits */
#define BITM_CSPFT_TECTL_TSSCENA             (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  Trace Start and Stop Control Enable */
#define BITM_CSPFT_TECTL_EXCL                (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  Include and Exclude Control */
#define BITM_CSPFT_TECTL_ARCS                (_ADI_MSK_3(0x000000FF,0x000000FFUL, uint32_t  ))    /*  Address Range Comparator Select Bits */
#define ENUM_CSPFT_TECTL_TSSDIS              (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  TSSCENA: Tracing is not affected by the trace start/stop logic */
#define ENUM_CSPFT_TECTL_TSSENA              (_ADI_MSK_3(0x02000000,0x02000000UL, uint32_t  ))    /*  TSSCENA: Tracing is controlled by the trace on and off address comparators */
#define ENUM_CSPFT_TECTL_TRINC               (_ADI_MSK_3(0x00000000,0x00000000UL, uint32_t  ))    /*  EXCL: Include. The specified address range comparators indicate the regions where tracing can occur. When outside the region trace is prevented. */
#define ENUM_CSPFT_TECTL_TREXC               (_ADI_MSK_3(0x01000000,0x01000000UL, uint32_t  ))    /*  EXCL: Exclude. The specified address range comparators indicate regions to be excluded from the trace. When outside the range tracing is enabled. */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_EXTOUTEVR[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_EXTOUTEVR_FUNC            14            /*  Function */
#define BITP_CSPFT_EXTOUTEVR_RESB             7            /*  Resource B */
#define BITP_CSPFT_EXTOUTEVR_RESA             0            /*  Resource A */
#define BITM_CSPFT_EXTOUTEVR_FUNC            (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Function */
#define BITM_CSPFT_EXTOUTEVR_RESB            (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Resource B */
#define BITM_CSPFT_EXTOUTEVR_RESA            (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Resource A */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CIDCVR[n]                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CIDCVR_VALUE               0            /*  Context ID Comparator Value Register */
#define BITM_CSPFT_CIDCVR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Context ID Comparator Value Register */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CIDCMR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CIDCMR_MASK                0            /*  Context ID Mask Value */
#define BITM_CSPFT_CIDCMR_MASK               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Context ID Mask Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_SYNCFR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_SYNCFR_SFREQ               0            /*  Synchronization frequency */
#define BITM_CSPFT_SYNCFR_SFREQ              (_ADI_MSK_3(0x00000FFF,0x00000FFFUL, uint32_t  ))    /*  Synchronization frequency */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_TRACEIDR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_TRACEIDR_TID               0            /*  Trace ID */
#define BITM_CSPFT_TRACEIDR_TID              (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Trace ID */

/* ============================================================================================================================
 *    Trace Counter Register Field Definitions
 * ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CNTRLDVR[n]                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CNTRLDVR_VALUE             0            /*  Counter Initial Value */
#define BITM_CSPFT_CNTRLDVR_VALUE            (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Counter Initial Value */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CNTENR[n]                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CNTENR_FUNC               14            /*  Function */
#define BITP_CSPFT_CNTENR_RESB                7            /*  Resource B */
#define BITP_CSPFT_CNTENR_RESA                0            /*  Resource A */
#define BITM_CSPFT_CNTENR_FUNC               (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Function */
#define BITM_CSPFT_CNTENR_RESB               (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Resource B */
#define BITM_CSPFT_CNTENR_RESA               (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Resource A */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CNTRLDEVR[n]                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CNTRLDEVR_FUNC            14            /*  Function */
#define BITP_CSPFT_CNTRLDEVR_RESB             7            /*  Resource B */
#define BITP_CSPFT_CNTRLDEVR_RESA             0            /*  Resource A */
#define BITM_CSPFT_CNTRLDEVR_FUNC            (_ADI_MSK_3(0x0001C000,0x0001C000UL, uint32_t  ))    /*  Function */
#define BITM_CSPFT_CNTRLDEVR_RESB            (_ADI_MSK_3(0x00003F80,0x00003F80UL, uint32_t  ))    /*  Resource B */
#define BITM_CSPFT_CNTRLDEVR_RESA            (_ADI_MSK_3(0x0000007F,0x0000007FUL, uint32_t  ))    /*  Resource A */

/* -------------------------------------------------------------------------------------------------------------------------
          CSPFT_CNTVR[n]                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSPFT_CNTVR_VALUE                0            /*  Current Counter Value */
#define BITM_CSPFT_CNTVR_VALUE               (_ADI_MSK_3(0x0000FFFF,0x0000FFFFUL, uint32_t  ))    /*  Current Counter Value */


/* ============================================================================================================================
        CSCTI_Register_Definitions
   ============================================================================================================================ */

/* ============================================================================================================================
        CTI2
   ============================================================================================================================ */
#define REG_CTI2_CTICONTROL                  0x31106000            /*  CTI2 CTI Control Register */
#define REG_CTI2_CTIINTACK                   0x31106010            /*  CTI2 CTI Interrupt Acknowledge Register */
#define REG_CTI2_CTIAPPSET                   0x31106014            /*  CTI2 CTI Application Trigger Set Register */
#define REG_CTI2_CTIAPPCLEAR                 0x31106018            /*  CTI2 CTI Application Trigger Clear Register */
#define REG_CTI2_CTIAPPPULSE                 0x3110601C            /*  CTI2 CTI Application Pulse Register */
#define REG_CTI2_CTIINEN0                    0x31106020            /*  CTI2 CTI Trigger 0 to Channel Enable Register */
#define REG_CTI2_CTIINEN1                    0x31106024            /*  CTI2 CTI Trigger 1 to Channel Enable Register */
#define REG_CTI2_CTIINEN2                    0x31106028            /*  CTI2 CTI Trigger 2 to Channel Enable Register */
#define REG_CTI2_CTIINEN3                    0x3110602C            /*  CTI2 CTI Trigger 3 to Channel Enable Register */
#define REG_CTI2_CTIINEN4                    0x31106030            /*  CTI2 CTI Trigger 4 to Channel Enable Register */
#define REG_CTI2_CTIINEN5                    0x31106034            /*  CTI2 CTI Trigger 5 to Channel Enable Register */
#define REG_CTI2_CTIINEN6                    0x31106038            /*  CTI2 CTI Trigger 6 to Channel Enable Register */
#define REG_CTI2_CTIINEN7                    0x3110603C            /*  CTI2 CTI Trigger 7 to Channel Enable Register */
#define REG_CTI2_CTIOUTEN0                   0x311060A0            /*  CTI2 CTI Channel to Trigger 0 Enable Register */
#define REG_CTI2_CTIOUTEN1                   0x311060A4            /*  CTI2 CTI Channel to Trigger 1 Enable Register */
#define REG_CTI2_CTIOUTEN2                   0x311060A8            /*  CTI2 CTI Channel to Trigger 2 Enable Register */
#define REG_CTI2_CTIOUTEN3                   0x311060AC            /*  CTI2 CTI Channel to Trigger 3 Enable Register */
#define REG_CTI2_CTIOUTEN4                   0x311060B0            /*  CTI2 CTI Channel to Trigger 4 Enable Register */
#define REG_CTI2_CTIOUTEN5                   0x311060B4            /*  CTI2 CTI Channel to Trigger 5 Enable Register */
#define REG_CTI2_CTIOUTEN6                   0x311060B8            /*  CTI2 CTI Channel to Trigger 6 Enable Register */
#define REG_CTI2_CTIOUTEN7                   0x311060BC            /*  CTI2 CTI Channel to Trigger 7 Enable Register */
#define REG_CTI2_CTITRIGINSTATUS             0x31106130            /*  CTI2 CTI Trigger In Status Register */
#define REG_CTI2_CTITRIGOUTSTATUS            0x31106134            /*  CTI2 CTI Trigger Out Status Register */
#define REG_CTI2_CTICHINSTATUS               0x31106138            /*  CTI2 CTI Channel In Status Register */
#define REG_CTI2_CTICHOUTSTATUS              0x3110613C            /*  CTI2 CTI Channel Out Status Register */
#define REG_CTI2_CTIGATE                     0x31106140            /*  CTI2 Enable CTI Channel Gate Register */
#define REG_CTI2_ASICCTL                     0x31106144            /*  CTI2 External Multiplexor Control Register */
#define REG_CTI2_ITCHINACK                   0x31106EDC            /*  CTI2 ITCHINACK */
#define REG_CTI2_ITTRIGINACK                 0x31106EE0            /*  CTI2 ITTRIGINACK */
#define REG_CTI2_ITCHOUT                     0x31106EE4            /*  CTI2 ITCHOUT */
#define REG_CTI2_ITTRIGOUT                   0x31106EE8            /*  CTI2 ITTRIGOUT */
#define REG_CTI2_ITCHOUTACK                  0x31106EEC            /*  CTI2 ITCHOUTACK */
#define REG_CTI2_ITTRIGOUTACK                0x31106EF0            /*  CTI2 ITTRIGOUTACK */
#define REG_CTI2_ITCHIN                      0x31106EF4            /*  CTI2 ITCHIN */
#define REG_CTI2_ITTRIGIN                    0x31106EF8            /*  CTI2 ITTRIGIN */
#define REG_CTI2_ITCTRL                      0x31106F00            /*  CTI2 Integration Mode Control Register */
#define REG_CTI2_CLAIMSET                    0x31106FA0            /*  CTI2 Claim Tag Set Register */
#define REG_CTI2_CLAIMCLR                    0x31106FA4            /*  CTI2 Claim Tag Clear Register */
#define REG_CTI2_LAR                         0x31106FB0            /*  CTI2 Lock Access Register */
#define REG_CTI2_LSR                         0x31106FB4            /*  CTI2 Lock Status Register */
#define REG_CTI2_AUTHSTATUS                  0x31106FB8            /*  CTI2 Authentication Status */
#define REG_CTI2_DEVID                       0x31106FC8            /*  CTI2 Device ID */
#define REG_CTI2_DEVTYPE                     0x31106FCC            /*  CTI2 Device Type */
#define REG_CTI2_PERIPHID4                   0x31106FD0            /*  CTI2 Peripheral ID4 */
#define REG_CTI2_PERIPHID5                   0x31106FD4            /*  CTI2 Peripheral ID5 */
#define REG_CTI2_PERIPHID6                   0x31106FD8            /*  CTI2 Peripheral ID6 */
#define REG_CTI2_PERIPHID7                   0x31106FDC            /*  CTI2 Peripheral ID7 */
#define REG_CTI2_PERIPHID0                   0x31106FE0            /*  CTI2 Peripheral ID0 */
#define REG_CTI2_PERIPHID1                   0x31106FE4            /*  CTI2 Peripheral ID1 */
#define REG_CTI2_PERIPHID2                   0x31106FE8            /*  CTI2 Peripheral ID2 */
#define REG_CTI2_PERIPHID3                   0x31106FEC            /*  CTI2 Peripheral ID3 */
#define REG_CTI2_COMPID0                     0x31106FF0            /*  CTI2 Component ID0 */
#define REG_CTI2_COMPID1                     0x31106FF4            /*  CTI2 Component ID1 */
#define REG_CTI2_COMPID2                     0x31106FF8            /*  CTI2 Component ID2 */
#define REG_CTI2_COMPID3                     0x31106FFC            /*  CTI2 Component ID3 */

/* ============================================================================================================================
        CTI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        CoreSight TMC Registers
   ============================================================================================================================ */

/* ============================================================================================================================
        CSTMC0
   ============================================================================================================================ */
#define REG_CSTMC0_FFCR                      0x31109304            /*  CSTMC0 Formatter and Flush Control Register */

/* ============================================================================================================================
        CSTMC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          CSTMC_FFCR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_CSTMC_FFCR_FLUSHMAN_R            6            /*  Manual Flush Completion Status */
#define BITM_CSTMC_FFCR_FLUSHMAN_R           (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  Manual Flush Completion Status */


/* ============================================================================================================================
        CoreSight TMC Registers
   ============================================================================================================================ */

/* ============================================================================================================================
        CSTMC1
   ============================================================================================================================ */
#define REG_CSTMC1_FFCR                      0x3110A304            /*  CSTMC1 Formatter and Flush Control Register */

/* ============================================================================================================================
        CSTMC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        CSCTI_Register_Definitions
   ============================================================================================================================ */

/* ============================================================================================================================
        CTI4
   ============================================================================================================================ */
#define REG_CTI4_CTICONTROL                  0x3110C000            /*  CTI4 CTI Control Register */
#define REG_CTI4_CTIINTACK                   0x3110C010            /*  CTI4 CTI Interrupt Acknowledge Register */
#define REG_CTI4_CTIAPPSET                   0x3110C014            /*  CTI4 CTI Application Trigger Set Register */
#define REG_CTI4_CTIAPPCLEAR                 0x3110C018            /*  CTI4 CTI Application Trigger Clear Register */
#define REG_CTI4_CTIAPPPULSE                 0x3110C01C            /*  CTI4 CTI Application Pulse Register */
#define REG_CTI4_CTIINEN0                    0x3110C020            /*  CTI4 CTI Trigger 0 to Channel Enable Register */
#define REG_CTI4_CTIINEN1                    0x3110C024            /*  CTI4 CTI Trigger 1 to Channel Enable Register */
#define REG_CTI4_CTIINEN2                    0x3110C028            /*  CTI4 CTI Trigger 2 to Channel Enable Register */
#define REG_CTI4_CTIINEN3                    0x3110C02C            /*  CTI4 CTI Trigger 3 to Channel Enable Register */
#define REG_CTI4_CTIINEN4                    0x3110C030            /*  CTI4 CTI Trigger 4 to Channel Enable Register */
#define REG_CTI4_CTIINEN5                    0x3110C034            /*  CTI4 CTI Trigger 5 to Channel Enable Register */
#define REG_CTI4_CTIINEN6                    0x3110C038            /*  CTI4 CTI Trigger 6 to Channel Enable Register */
#define REG_CTI4_CTIINEN7                    0x3110C03C            /*  CTI4 CTI Trigger 7 to Channel Enable Register */
#define REG_CTI4_CTIOUTEN0                   0x3110C0A0            /*  CTI4 CTI Channel to Trigger 0 Enable Register */
#define REG_CTI4_CTIOUTEN1                   0x3110C0A4            /*  CTI4 CTI Channel to Trigger 1 Enable Register */
#define REG_CTI4_CTIOUTEN2                   0x3110C0A8            /*  CTI4 CTI Channel to Trigger 2 Enable Register */
#define REG_CTI4_CTIOUTEN3                   0x3110C0AC            /*  CTI4 CTI Channel to Trigger 3 Enable Register */
#define REG_CTI4_CTIOUTEN4                   0x3110C0B0            /*  CTI4 CTI Channel to Trigger 4 Enable Register */
#define REG_CTI4_CTIOUTEN5                   0x3110C0B4            /*  CTI4 CTI Channel to Trigger 5 Enable Register */
#define REG_CTI4_CTIOUTEN6                   0x3110C0B8            /*  CTI4 CTI Channel to Trigger 6 Enable Register */
#define REG_CTI4_CTIOUTEN7                   0x3110C0BC            /*  CTI4 CTI Channel to Trigger 7 Enable Register */
#define REG_CTI4_CTITRIGINSTATUS             0x3110C130            /*  CTI4 CTI Trigger In Status Register */
#define REG_CTI4_CTITRIGOUTSTATUS            0x3110C134            /*  CTI4 CTI Trigger Out Status Register */
#define REG_CTI4_CTICHINSTATUS               0x3110C138            /*  CTI4 CTI Channel In Status Register */
#define REG_CTI4_CTICHOUTSTATUS              0x3110C13C            /*  CTI4 CTI Channel Out Status Register */
#define REG_CTI4_CTIGATE                     0x3110C140            /*  CTI4 Enable CTI Channel Gate Register */
#define REG_CTI4_ASICCTL                     0x3110C144            /*  CTI4 External Multiplexor Control Register */
#define REG_CTI4_ITCHINACK                   0x3110CEDC            /*  CTI4 ITCHINACK */
#define REG_CTI4_ITTRIGINACK                 0x3110CEE0            /*  CTI4 ITTRIGINACK */
#define REG_CTI4_ITCHOUT                     0x3110CEE4            /*  CTI4 ITCHOUT */
#define REG_CTI4_ITTRIGOUT                   0x3110CEE8            /*  CTI4 ITTRIGOUT */
#define REG_CTI4_ITCHOUTACK                  0x3110CEEC            /*  CTI4 ITCHOUTACK */
#define REG_CTI4_ITTRIGOUTACK                0x3110CEF0            /*  CTI4 ITTRIGOUTACK */
#define REG_CTI4_ITCHIN                      0x3110CEF4            /*  CTI4 ITCHIN */
#define REG_CTI4_ITTRIGIN                    0x3110CEF8            /*  CTI4 ITTRIGIN */
#define REG_CTI4_ITCTRL                      0x3110CF00            /*  CTI4 Integration Mode Control Register */
#define REG_CTI4_CLAIMSET                    0x3110CFA0            /*  CTI4 Claim Tag Set Register */
#define REG_CTI4_CLAIMCLR                    0x3110CFA4            /*  CTI4 Claim Tag Clear Register */
#define REG_CTI4_LAR                         0x3110CFB0            /*  CTI4 Lock Access Register */
#define REG_CTI4_LSR                         0x3110CFB4            /*  CTI4 Lock Status Register */
#define REG_CTI4_AUTHSTATUS                  0x3110CFB8            /*  CTI4 Authentication Status */
#define REG_CTI4_DEVID                       0x3110CFC8            /*  CTI4 Device ID */
#define REG_CTI4_DEVTYPE                     0x3110CFCC            /*  CTI4 Device Type */
#define REG_CTI4_PERIPHID4                   0x3110CFD0            /*  CTI4 Peripheral ID4 */
#define REG_CTI4_PERIPHID5                   0x3110CFD4            /*  CTI4 Peripheral ID5 */
#define REG_CTI4_PERIPHID6                   0x3110CFD8            /*  CTI4 Peripheral ID6 */
#define REG_CTI4_PERIPHID7                   0x3110CFDC            /*  CTI4 Peripheral ID7 */
#define REG_CTI4_PERIPHID0                   0x3110CFE0            /*  CTI4 Peripheral ID0 */
#define REG_CTI4_PERIPHID1                   0x3110CFE4            /*  CTI4 Peripheral ID1 */
#define REG_CTI4_PERIPHID2                   0x3110CFE8            /*  CTI4 Peripheral ID2 */
#define REG_CTI4_PERIPHID3                   0x3110CFEC            /*  CTI4 Peripheral ID3 */
#define REG_CTI4_COMPID0                     0x3110CFF0            /*  CTI4 Component ID0 */
#define REG_CTI4_COMPID1                     0x3110CFF4            /*  CTI4 Component ID1 */
#define REG_CTI4_COMPID2                     0x3110CFF8            /*  CTI4 Component ID2 */
#define REG_CTI4_COMPID3                     0x3110CFFC            /*  CTI4 Component ID3 */

/* ============================================================================================================================
        CTI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        CSCTI_Register_Definitions
   ============================================================================================================================ */

/* ============================================================================================================================
        CTI3
   ============================================================================================================================ */
#define REG_CTI3_CTICONTROL                  0x3110D000            /*  CTI3 CTI Control Register */
#define REG_CTI3_CTIINTACK                   0x3110D010            /*  CTI3 CTI Interrupt Acknowledge Register */
#define REG_CTI3_CTIAPPSET                   0x3110D014            /*  CTI3 CTI Application Trigger Set Register */
#define REG_CTI3_CTIAPPCLEAR                 0x3110D018            /*  CTI3 CTI Application Trigger Clear Register */
#define REG_CTI3_CTIAPPPULSE                 0x3110D01C            /*  CTI3 CTI Application Pulse Register */
#define REG_CTI3_CTIINEN0                    0x3110D020            /*  CTI3 CTI Trigger 0 to Channel Enable Register */
#define REG_CTI3_CTIINEN1                    0x3110D024            /*  CTI3 CTI Trigger 1 to Channel Enable Register */
#define REG_CTI3_CTIINEN2                    0x3110D028            /*  CTI3 CTI Trigger 2 to Channel Enable Register */
#define REG_CTI3_CTIINEN3                    0x3110D02C            /*  CTI3 CTI Trigger 3 to Channel Enable Register */
#define REG_CTI3_CTIINEN4                    0x3110D030            /*  CTI3 CTI Trigger 4 to Channel Enable Register */
#define REG_CTI3_CTIINEN5                    0x3110D034            /*  CTI3 CTI Trigger 5 to Channel Enable Register */
#define REG_CTI3_CTIINEN6                    0x3110D038            /*  CTI3 CTI Trigger 6 to Channel Enable Register */
#define REG_CTI3_CTIINEN7                    0x3110D03C            /*  CTI3 CTI Trigger 7 to Channel Enable Register */
#define REG_CTI3_CTIOUTEN0                   0x3110D0A0            /*  CTI3 CTI Channel to Trigger 0 Enable Register */
#define REG_CTI3_CTIOUTEN1                   0x3110D0A4            /*  CTI3 CTI Channel to Trigger 1 Enable Register */
#define REG_CTI3_CTIOUTEN2                   0x3110D0A8            /*  CTI3 CTI Channel to Trigger 2 Enable Register */
#define REG_CTI3_CTIOUTEN3                   0x3110D0AC            /*  CTI3 CTI Channel to Trigger 3 Enable Register */
#define REG_CTI3_CTIOUTEN4                   0x3110D0B0            /*  CTI3 CTI Channel to Trigger 4 Enable Register */
#define REG_CTI3_CTIOUTEN5                   0x3110D0B4            /*  CTI3 CTI Channel to Trigger 5 Enable Register */
#define REG_CTI3_CTIOUTEN6                   0x3110D0B8            /*  CTI3 CTI Channel to Trigger 6 Enable Register */
#define REG_CTI3_CTIOUTEN7                   0x3110D0BC            /*  CTI3 CTI Channel to Trigger 7 Enable Register */
#define REG_CTI3_CTITRIGINSTATUS             0x3110D130            /*  CTI3 CTI Trigger In Status Register */
#define REG_CTI3_CTITRIGOUTSTATUS            0x3110D134            /*  CTI3 CTI Trigger Out Status Register */
#define REG_CTI3_CTICHINSTATUS               0x3110D138            /*  CTI3 CTI Channel In Status Register */
#define REG_CTI3_CTICHOUTSTATUS              0x3110D13C            /*  CTI3 CTI Channel Out Status Register */
#define REG_CTI3_CTIGATE                     0x3110D140            /*  CTI3 Enable CTI Channel Gate Register */
#define REG_CTI3_ASICCTL                     0x3110D144            /*  CTI3 External Multiplexor Control Register */
#define REG_CTI3_ITCHINACK                   0x3110DEDC            /*  CTI3 ITCHINACK */
#define REG_CTI3_ITTRIGINACK                 0x3110DEE0            /*  CTI3 ITTRIGINACK */
#define REG_CTI3_ITCHOUT                     0x3110DEE4            /*  CTI3 ITCHOUT */
#define REG_CTI3_ITTRIGOUT                   0x3110DEE8            /*  CTI3 ITTRIGOUT */
#define REG_CTI3_ITCHOUTACK                  0x3110DEEC            /*  CTI3 ITCHOUTACK */
#define REG_CTI3_ITTRIGOUTACK                0x3110DEF0            /*  CTI3 ITTRIGOUTACK */
#define REG_CTI3_ITCHIN                      0x3110DEF4            /*  CTI3 ITCHIN */
#define REG_CTI3_ITTRIGIN                    0x3110DEF8            /*  CTI3 ITTRIGIN */
#define REG_CTI3_ITCTRL                      0x3110DF00            /*  CTI3 Integration Mode Control Register */
#define REG_CTI3_CLAIMSET                    0x3110DFA0            /*  CTI3 Claim Tag Set Register */
#define REG_CTI3_CLAIMCLR                    0x3110DFA4            /*  CTI3 Claim Tag Clear Register */
#define REG_CTI3_LAR                         0x3110DFB0            /*  CTI3 Lock Access Register */
#define REG_CTI3_LSR                         0x3110DFB4            /*  CTI3 Lock Status Register */
#define REG_CTI3_AUTHSTATUS                  0x3110DFB8            /*  CTI3 Authentication Status */
#define REG_CTI3_DEVID                       0x3110DFC8            /*  CTI3 Device ID */
#define REG_CTI3_DEVTYPE                     0x3110DFCC            /*  CTI3 Device Type */
#define REG_CTI3_PERIPHID4                   0x3110DFD0            /*  CTI3 Peripheral ID4 */
#define REG_CTI3_PERIPHID5                   0x3110DFD4            /*  CTI3 Peripheral ID5 */
#define REG_CTI3_PERIPHID6                   0x3110DFD8            /*  CTI3 Peripheral ID6 */
#define REG_CTI3_PERIPHID7                   0x3110DFDC            /*  CTI3 Peripheral ID7 */
#define REG_CTI3_PERIPHID0                   0x3110DFE0            /*  CTI3 Peripheral ID0 */
#define REG_CTI3_PERIPHID1                   0x3110DFE4            /*  CTI3 Peripheral ID1 */
#define REG_CTI3_PERIPHID2                   0x3110DFE8            /*  CTI3 Peripheral ID2 */
#define REG_CTI3_PERIPHID3                   0x3110DFEC            /*  CTI3 Peripheral ID3 */
#define REG_CTI3_COMPID0                     0x3110DFF0            /*  CTI3 Component ID0 */
#define REG_CTI3_COMPID1                     0x3110DFF4            /*  CTI3 Component ID1 */
#define REG_CTI3_COMPID2                     0x3110DFF8            /*  CTI3 Component ID2 */
#define REG_CTI3_COMPID3                     0x3110DFFC            /*  CTI3 Component ID3 */

/* ============================================================================================================================
        CTI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        ARM Integration ROM
   ============================================================================================================================ */

/* ============================================================================================================================
        ARMROM0
   ============================================================================================================================ */
#define REG_ARMROM0_ROMENTRY00               0x31110000            /*  ARMROM0 ROM Entry 00 */
#define REG_ARMROM0_ROMENTRY01               0x31110004            /*  ARMROM0 ROM Entry 01 */
#define REG_ARMROM0_ROMENTRY02               0x31110008            /*  ARMROM0 ROM Entry 02 */
#define REG_ARMROM0_ROMENTRY03               0x3111000C            /*  ARMROM0 ROM Entry 03 */
#define REG_ARMROM0_ROMENTRY04               0x31110010            /*  ARMROM0 ROM Entry 04 */
#define REG_ARMROM0_ROMENTRY05               0x31110014            /*  ARMROM0 ROM Entry 05 */
#define REG_ARMROM0_ROMENTRY06               0x31110018            /*  ARMROM0 ROM Entry 06 */
#define REG_ARMROM0_ROMENTRY07               0x3111001C            /*  ARMROM0 ROM Entry 07 */
#define REG_ARMROM0_ROMENTRY08               0x31110020            /*  ARMROM0 ROM Entry 08 */
#define REG_ARMROM0_ROMENTRY09               0x31110024            /*  ARMROM0 ROM Entry 09 */
#define REG_ARMROM0_ROMENTRY10               0x31110028            /*  ARMROM0 ROM Entry 10 */
#define REG_ARMROM0_ROMENTRY11               0x3111002C            /*  ARMROM0 ROM Entry 11 */
#define REG_ARMROM0_ROMENTRY12               0x31110030            /*  ARMROM0 ROM Entry 12 */
#define REG_ARMROM0_ROMENTRY13               0x31110034            /*  ARMROM0 ROM Entry 13 */
#define REG_ARMROM0_ROMENTRY14               0x31110038            /*  ARMROM0 ROM Entry 14 */
#define REG_ARMROM0_ROMENTRY15               0x3111003C            /*  ARMROM0 ROM Entry 15 */

/* ============================================================================================================================
        ARMROM Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY00                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY00_ROMENTRY00     0            /*  DEBUG */
#define BITM_ARMROM_ROMENTRY00_ROMENTRY00    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  DEBUG */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY01                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY01_ROMENTRY01     0
#define BITM_ARMROM_ROMENTRY01_ROMENTRY01    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY02                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY02_ROMENTRY02     0
#define BITM_ARMROM_ROMENTRY02_ROMENTRY02    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY03                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY03_ROMENTRY03     0
#define BITM_ARMROM_ROMENTRY03_ROMENTRY03    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY04                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY04_ROMENTRY04     0            /*  PMU */
#define BITM_ARMROM_ROMENTRY04_ROMENTRY04    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PMU */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY05                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY05_ROMENTRY05     0
#define BITM_ARMROM_ROMENTRY05_ROMENTRY05    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY06                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY06_ROMENTRY06     0
#define BITM_ARMROM_ROMENTRY06_ROMENTRY06    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY07                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY07_ROMENTRY07     0
#define BITM_ARMROM_ROMENTRY07_ROMENTRY07    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY08                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY08_ROMENTRY08     0            /*  CTI */
#define BITM_ARMROM_ROMENTRY08_ROMENTRY08    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  CTI */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY09                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY09_ROMENTRY09     0
#define BITM_ARMROM_ROMENTRY09_ROMENTRY09    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY10                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY10_ROMENTRY10     0
#define BITM_ARMROM_ROMENTRY10_ROMENTRY10    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY11                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY11_ROMENTRY11     0
#define BITM_ARMROM_ROMENTRY11_ROMENTRY11    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY12                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY12_ROMENTRY12     0            /*  ETM */
#define BITM_ARMROM_ROMENTRY12_ROMENTRY12    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ETM */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY13                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY13_ROMENTRY13     0
#define BITM_ARMROM_ROMENTRY13_ROMENTRY13    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY14                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY14_ROMENTRY14     0
#define BITM_ARMROM_ROMENTRY14_ROMENTRY14    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMROM_ROMENTRY15                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMROM_ROMENTRY15_ROMENTRY15     0
#define BITM_ARMROM_ROMENTRY15_ROMENTRY15    (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))


/* ============================================================================================================================
        Debug Registers
   ============================================================================================================================ */

/* ============================================================================================================================
        ARMDBG0
   ============================================================================================================================ */
#define REG_ARMDBG0_DIDR                     0x31120000            /*  ARMDBG0 Debug ID Register. */
#define REG_ARMDBG0_WFAR                     0x31120018            /*  ARMDBG0 The Watchpoint Fault Address Register. */
#define REG_ARMDBG0_VCR                      0x3112001C            /*  ARMDBG0 Vector Catch Register. */
#define REG_ARMDBG0_ECR                      0x31120024            /*  ARMDBG0 Event Catch Register. */
#define REG_ARMDBG0_DSCCR                    0x31120028            /*  ARMDBG0 Debug State Cache Control Register. */
#define REG_ARMDBG0_DSMCR                    0x3112002C            /*  ARMDBG0 Debug State MMU Control Register. */
#define REG_ARMDBG0_DTRRX                    0x31120080            /*  ARMDBG0 Read Data Transfer Register. */
#define REG_ARMDBG0_ITR                      0x31120084            /*  ARMDBG0 Instruction Transfer Register. */
#define REG_ARMDBG0_DSCR                     0x31120088            /*  ARMDBG0 Debug Status and Control Register. */
#define REG_ARMDBG0_DTRTX                    0x3112008C            /*  ARMDBG0 Write Data Transfer Register. */
#define REG_ARMDBG0_DRCR                     0x31120090            /*  ARMDBG0 Debug Run Control Register. */
#define REG_ARMDBG0_PCSR                     0x311200A0            /*  ARMDBG0 Program Counter Sampling Register. */
#define REG_ARMDBG0_CIDSR                    0x311200A4            /*  ARMDBG0 Context ID Sampling Register. */
#define REG_ARMDBG0_BVR0                     0x31120100            /*  ARMDBG0 Breakpoint Value Register 0. */
#define REG_ARMDBG0_BVR1                     0x31120104            /*  ARMDBG0 Breakpoint Value Register 1. */
#define REG_ARMDBG0_BVR2                     0x31120108            /*  ARMDBG0 Breakpoint Value Register 2. */
#define REG_ARMDBG0_BCR0                     0x31120140            /*  ARMDBG0 Breakpoint Control Register 0. */
#define REG_ARMDBG0_BCR1                     0x31120144            /*  ARMDBG0 Breakpoint Control Register 1. */
#define REG_ARMDBG0_BCR2                     0x31120148            /*  ARMDBG0 Breakpoint Control Register 2. */
#define REG_ARMDBG0_WVR0                     0x31120180            /*  ARMDBG0 Watchpoint Value Register 0. */
#define REG_ARMDBG0_WVR1                     0x31120184            /*  ARMDBG0 Watchpoint Value Register 1. */
#define REG_ARMDBG0_WCR0                     0x311201C0            /*  ARMDBG0 Watchpoint Control Register 0. */
#define REG_ARMDBG0_WCR1                     0x311201C4            /*  ARMDBG0 Watchpoint Control Register 1. */
#define REG_ARMDBG0_OSLAR                    0x31120300            /*  ARMDBG0 Operating System Lock Access Register. */
#define REG_ARMDBG0_OSLSR                    0x31120304            /*  ARMDBG0 Operating System Lock Status Register. */
#define REG_ARMDBG0_PRCR                     0x31120310            /*  ARMDBG0 Device Powerdown and Reset Control Register. */
#define REG_ARMDBG0_PRSR                     0x31120314            /*  ARMDBG0 Device Powerdown and Reset Status Register. */
#define REG_ARMDBG0_MIDR                     0x31120D00            /*  ARMDBG0 Main ID Register. */
#define REG_ARMDBG0_CTR                      0x31120D04            /*  ARMDBG0 Cache Type Register. */
#define REG_ARMDBG0_TCMTR                    0x31120D08            /*  ARMDBG0 TCM Type Register. */
#define REG_ARMDBG0_TLBTR                    0x31120D0C            /*  ARMDBG0 TCM Type Register. */
#define REG_ARMDBG0_MPUIR                    0x31120D10            /*  ARMDBG0 MPU Type Register (alias of MIDR in VMSA). */
#define REG_ARMDBG0_MPIDR                    0x31120D14            /*  ARMDBG0 Multiprocessor Affinity Register. */
#define REG_ARMDBG0_MIDRALIAS1               0x31120D18            /*  ARMDBG0 Main ID Register (alias at 0xd18). */
#define REG_ARMDBG0_MIDRALIAS2               0x31120D1C            /*  ARMDBG0 Main ID Register (alias at 0xd1c). */
#define REG_ARMDBG0_ID_PFR0                  0x31120D20            /*  ARMDBG0 Processor Feature Register 0. */
#define REG_ARMDBG0_ID_PFR1                  0x31120D24            /*  ARMDBG0 Processor Feature Register 1. */
#define REG_ARMDBG0_ID_DFR0                  0x31120D28            /*  ARMDBG0 Debug Feature Register 0. */
#define REG_ARMDBG0_ID_AFR0                  0x31120D2C            /*  ARMDBG0 Auxiliary Feature Register 0. */
#define REG_ARMDBG0_ID_MMFR0                 0x31120D30            /*  ARMDBG0 Memory Model Feature Register 0. */
#define REG_ARMDBG0_ID_MMFR1                 0x31120D34            /*  ARMDBG0 Memory Model Feature Register 1. */
#define REG_ARMDBG0_ID_MMFR2                 0x31120D38            /*  ARMDBG0 Memory Model Feature Register 2. */
#define REG_ARMDBG0_ID_MMFR3                 0x31120D3C            /*  ARMDBG0 Memory Model Feature Register 3. */
#define REG_ARMDBG0_ID_ISAR0                 0x31120D40            /*  ARMDBG0 ISA Feature Register 0. */
#define REG_ARMDBG0_ID_ISAR1                 0x31120D44            /*  ARMDBG0 ISA Feature Register 1. */
#define REG_ARMDBG0_ID_ISAR2                 0x31120D48            /*  ARMDBG0 ISA Feature Register 2. */
#define REG_ARMDBG0_ID_ISAR3                 0x31120D4C            /*  ARMDBG0 ISA Feature Register 3. */
#define REG_ARMDBG0_ID_ISAR4                 0x31120D50            /*  ARMDBG0 ISA Feature Register 4. */
#define REG_ARMDBG0_ID_ISAR5                 0x31120D54            /*  ARMDBG0 ISA Feature Register 5. */
#define REG_ARMDBG0_ITMISCOUT                0x31120EF8            /*  ARMDBG0 Miscellaneous Outputs Integration Register. */
#define REG_ARMDBG0_ITMISCIN                 0x31120EFC            /*  ARMDBG0 Miscellaneous Inputs Integration Register. */
#define REG_ARMDBG0_ITCTRL                   0x31120F00            /*  ARMDBG0 Integration Mode Control Register. */
#define REG_ARMDBG0_CLAIMSET                 0x31120FA0            /*  ARMDBG0 Claim Tag Set Register. */
#define REG_ARMDBG0_CLAIMCLR                 0x31120FA4            /*  ARMDBG0 Claim Tag Clear Register. */
#define REG_ARMDBG0_LOCKACCESS               0x31120FB0            /*  ARMDBG0 Lock Access Register. */
#define REG_ARMDBG0_LOCKSTATUS               0x31120FB4            /*  ARMDBG0 Lock Status Register. */
#define REG_ARMDBG0_AUTHSTATUS               0x31120FB8            /*  ARMDBG0 Authentication Status Register. */
#define REG_ARMDBG0_DEVID                    0x31120FC8            /*  ARMDBG0 Device Identifier. */
#define REG_ARMDBG0_DEVTYPE                  0x31120FCC            /*  ARMDBG0 Device Type Register. */
#define REG_ARMDBG0_PIR4                     0x31120FD0            /*  ARMDBG0 Peripheral ID Register 4. */
#define REG_ARMDBG0_PIR0                     0x31120FE0            /*  ARMDBG0 Peripheral ID Register 0. */
#define REG_ARMDBG0_PIR1                     0x31120FE4            /*  ARMDBG0 Peripheral ID Register 1. */
#define REG_ARMDBG0_PIR2                     0x31120FE8            /*  ARMDBG0 Peripheral ID Register 2. */
#define REG_ARMDBG0_PIR3                     0x31120FEC            /*  ARMDBG0 Peripheral ID Register 3. */
#define REG_ARMDBG0_CIR0                     0x31120FF0            /*  ARMDBG0 Component ID Register 0. */
#define REG_ARMDBG0_CIR1                     0x31120FF4            /*  ARMDBG0 Component ID Register 1. */
#define REG_ARMDBG0_CIR2                     0x31120FF8            /*  ARMDBG0 Component ID Register 2. */
#define REG_ARMDBG0_CIR3                     0x31120FFC            /*  ARMDBG0 Component ID Register 3. */

/* ============================================================================================================================
        ARMDBG Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DIDR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DIDR_VALUE                0
#define BITM_ARMDBG_DIDR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_WFAR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_WFAR_VALUE                0
#define BITM_ARMDBG_WFAR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_VCR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_VCR_VALUE                 0
#define BITM_ARMDBG_VCR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ECR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ECR_VALUE                 0
#define BITM_ARMDBG_ECR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DSCCR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DSCCR_VALUE               0
#define BITM_ARMDBG_DSCCR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DSMCR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DSMCR_VALUE               0
#define BITM_ARMDBG_DSMCR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DTRRX                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DTRRX_VALUE               0
#define BITM_ARMDBG_DTRRX_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ITR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ITR_VALUE                 0
#define BITM_ARMDBG_ITR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DSCR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DSCR_VALUE                0
#define BITM_ARMDBG_DSCR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DTRTX                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DTRTX_VALUE               0
#define BITM_ARMDBG_DTRTX_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DRCR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DRCR_VALUE                0
#define BITM_ARMDBG_DRCR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PCSR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PCSR_VALUE                0
#define BITM_ARMDBG_PCSR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CIDSR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CIDSR_VALUE               0
#define BITM_ARMDBG_CIDSR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_BVR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_BVR0_VALUE                0
#define BITM_ARMDBG_BVR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_BVR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_BVR1_VALUE                0
#define BITM_ARMDBG_BVR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_BVR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_BVR2_VALUE                0
#define BITM_ARMDBG_BVR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_BCR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_BCR0_VALUE                0
#define BITM_ARMDBG_BCR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_BCR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_BCR1_VALUE                0
#define BITM_ARMDBG_BCR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_BCR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_BCR2_VALUE                0
#define BITM_ARMDBG_BCR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_WVR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_WVR0_VALUE                0
#define BITM_ARMDBG_WVR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_WVR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_WVR1_VALUE                0
#define BITM_ARMDBG_WVR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_WCR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_WCR0_VALUE                0
#define BITM_ARMDBG_WCR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_WCR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_WCR1_VALUE                0
#define BITM_ARMDBG_WCR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_OSLAR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_OSLAR_VALUE               0
#define BITM_ARMDBG_OSLAR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_OSLSR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_OSLSR_VALUE               0
#define BITM_ARMDBG_OSLSR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PRCR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PRCR_VALUE                0
#define BITM_ARMDBG_PRCR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PRSR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PRSR_VALUE                0
#define BITM_ARMDBG_PRSR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_MIDR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_MIDR_VALUE                0
#define BITM_ARMDBG_MIDR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CTR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CTR_VALUE                 0
#define BITM_ARMDBG_CTR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_TCMTR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_TCMTR_VALUE               0
#define BITM_ARMDBG_TCMTR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_TLBTR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_TLBTR_VALUE               0
#define BITM_ARMDBG_TLBTR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_MPUIR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_MPUIR_VALUE               0
#define BITM_ARMDBG_MPUIR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_MPIDR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_MPIDR_VALUE               0
#define BITM_ARMDBG_MPIDR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_MIDRALIAS1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_MIDRALIAS1_VALUE          0
#define BITM_ARMDBG_MIDRALIAS1_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_MIDRALIAS2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_MIDRALIAS2_VALUE          0
#define BITM_ARMDBG_MIDRALIAS2_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_PFR0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_PFR0_VALUE             0
#define BITM_ARMDBG_ID_PFR0_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_PFR1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_PFR1_VALUE             0
#define BITM_ARMDBG_ID_PFR1_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_DFR0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_DFR0_VALUE             0
#define BITM_ARMDBG_ID_DFR0_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_AFR0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_AFR0_VALUE             0
#define BITM_ARMDBG_ID_AFR0_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_MMFR0                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_MMFR0_VALUE            0
#define BITM_ARMDBG_ID_MMFR0_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_MMFR1                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_MMFR1_VALUE            0
#define BITM_ARMDBG_ID_MMFR1_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_MMFR2                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_MMFR2_VALUE            0
#define BITM_ARMDBG_ID_MMFR2_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_MMFR3                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_MMFR3_VALUE            0
#define BITM_ARMDBG_ID_MMFR3_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_ISAR0                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_ISAR0_VALUE            0
#define BITM_ARMDBG_ID_ISAR0_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_ISAR1                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_ISAR1_VALUE            0
#define BITM_ARMDBG_ID_ISAR1_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_ISAR2                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_ISAR2_VALUE            0
#define BITM_ARMDBG_ID_ISAR2_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_ISAR3                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_ISAR3_VALUE            0
#define BITM_ARMDBG_ID_ISAR3_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_ISAR4                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_ISAR4_VALUE            0
#define BITM_ARMDBG_ID_ISAR4_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ID_ISAR5                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ID_ISAR5_VALUE            0
#define BITM_ARMDBG_ID_ISAR5_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ITMISCOUT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ITMISCOUT_VALUE           0
#define BITM_ARMDBG_ITMISCOUT_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ITMISCIN                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ITMISCIN_VALUE            0
#define BITM_ARMDBG_ITMISCIN_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_ITCTRL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_ITCTRL_VALUE              0
#define BITM_ARMDBG_ITCTRL_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CLAIMSET                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CLAIMSET_VALUE            0
#define BITM_ARMDBG_CLAIMSET_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CLAIMCLR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CLAIMCLR_VALUE            0
#define BITM_ARMDBG_CLAIMCLR_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_LOCKACCESS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_LOCKACCESS_VALUE          0
#define BITM_ARMDBG_LOCKACCESS_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_LOCKSTATUS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_LOCKSTATUS_VALUE          0
#define BITM_ARMDBG_LOCKSTATUS_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_AUTHSTATUS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_AUTHSTATUS_VALUE          0
#define BITM_ARMDBG_AUTHSTATUS_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DEVID                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DEVID_VALUE               0
#define BITM_ARMDBG_DEVID_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_DEVTYPE                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_DEVTYPE_VALUE             0
#define BITM_ARMDBG_DEVTYPE_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PIR4                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PIR4_VALUE                0
#define BITM_ARMDBG_PIR4_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PIR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PIR0_VALUE                0
#define BITM_ARMDBG_PIR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PIR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PIR1_VALUE                0
#define BITM_ARMDBG_PIR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PIR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PIR2_VALUE                0
#define BITM_ARMDBG_PIR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_PIR3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_PIR3_VALUE                0
#define BITM_ARMDBG_PIR3_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CIR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CIR0_VALUE                0
#define BITM_ARMDBG_CIR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CIR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CIR1_VALUE                0
#define BITM_ARMDBG_CIR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CIR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CIR2_VALUE                0
#define BITM_ARMDBG_CIR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))

/* -------------------------------------------------------------------------------------------------------------------------
          ARMDBG_CIR3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMDBG_CIR3_VALUE                0
#define BITM_ARMDBG_CIR3_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))


/* ============================================================================================================================
        PMU Registers
   ============================================================================================================================ */

/* ============================================================================================================================
        ARMPMU0
   ============================================================================================================================ */
#define REG_ARMPMU0_PMXEVCNTR0               0x31121000            /*  ARMPMU0 PM0 Counter Register. */
#define REG_ARMPMU0_PMXEVCNTR1               0x31121004            /*  ARMPMU0 PM1 Counter Register. */
#define REG_ARMPMU0_PMCCNTR                  0x3112107C            /*  ARMPMU0 Cycle Count Register. */
#define REG_ARMPMU0_PMXEVTYPER0              0x31121400            /*  ARMPMU0 PM0 Event Type Register. */
#define REG_ARMPMU0_PMXEVTYPER1              0x31121404            /*  ARMPMU0 PM0 Event Type Register. */
#define REG_ARMPMU0_PMCCFILTR                0x3112147C            /*  ARMPMU0 Cycle Count Filter Control Register. */
#define REG_ARMPMU0_PMCNTENSET               0x31121C00            /*  ARMPMU0 Count Enable Set Register. */
#define REG_ARMPMU0_PMCNTENCLR               0x31121C20            /*  ARMPMU0 Count Enable Clear Register. */
#define REG_ARMPMU0_PMINTENSET               0x31121C40            /*  ARMPMU0 Interrupt Enable Set Register. */
#define REG_ARMPMU0_PMINTENCLR               0x31121C60            /*  ARMPMU0 Interrupt Enable Clear Register. */
#define REG_ARMPMU0_PMOVSR                   0x31121C80            /*  ARMPMU0 Overflow Flag Status Register. */
#define REG_ARMPMU0_PMSWINC                  0x31121CA0            /*  ARMPMU0 Software Increment Register. */
#define REG_ARMPMU0_PMCFGR                   0x31121E00            /*  ARMPMU0 Configuration Register. */
#define REG_ARMPMU0_PMCR                     0x31121E04            /*  ARMPMU0 Control Register. */
#define REG_ARMPMU0_PMUSERENR                0x31121E08            /*  ARMPMU0 User Enable Register. */
#define REG_ARMPMU0_PMCEID0                  0x31121E20            /*  ARMPMU0 Common Event Identification Register 0. */
#define REG_ARMPMU0_PMCEID1                  0x31121E24            /*  ARMPMU0 Common Event Identification Register 1. */
#define REG_ARMPMU0_PMLAR                    0x31121FB0            /*  ARMPMU0 Lock Access Register. */
#define REG_ARMPMU0_PMLSR                    0x31121FB4            /*  ARMPMU0 Lock Status Register. */
#define REG_ARMPMU0_PMAUTHSTATUS             0x31121FB8            /*  ARMPMU0 Authentication Status Register. */
#define REG_ARMPMU0_PMDEVTYPE                0x31121FCC            /*  ARMPMU0 Device Type Register. */
#define REG_ARMPMU0_PIR4                     0x31121FD0            /*  ARMPMU0 Peripheral ID Register 4. */
#define REG_ARMPMU0_PIR0                     0x31121FE0            /*  ARMPMU0 Peripheral ID Register 0. */
#define REG_ARMPMU0_PIR1                     0x31121FE4            /*  ARMPMU0 Peripheral ID Register 1. */
#define REG_ARMPMU0_PIR2                     0x31121FE8            /*  ARMPMU0 Peripheral ID Register 2. */
#define REG_ARMPMU0_PIR3                     0x31121FEC            /*  ARMPMU0 Peripheral ID Register 3. */
#define REG_ARMPMU0_CIR0                     0x31121FF0            /*  ARMPMU0 Component ID Register 0. */
#define REG_ARMPMU0_CIR1                     0x31121FF4            /*  ARMPMU0 Component ID Register 1. */
#define REG_ARMPMU0_CIR2                     0x31121FF8            /*  ARMPMU0 Component ID Register 2. */
#define REG_ARMPMU0_CIR3                     0x31121FFC            /*  ARMPMU0 Component ID Register 3. */

/* ============================================================================================================================
        ARMPMU Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMXEVCNTR0                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMXEVCNTR0_VALUE          0            /*  PM0 Counter Register. */
#define BITM_ARMPMU_PMXEVCNTR0_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PM0 Counter Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMXEVCNTR1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMXEVCNTR1_VALUE          0            /*  PM1 Counter Register. */
#define BITM_ARMPMU_PMXEVCNTR1_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PM1 Counter Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCCNTR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCCNTR_VALUE             0            /*  Cycle Count Register. */
#define BITM_ARMPMU_PMCCNTR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Cycle Count Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMXEVTYPER0                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMXEVTYPER0_VALUE         0            /*  PM0 Event Type Register. */
#define BITM_ARMPMU_PMXEVTYPER0_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PM0 Event Type Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMXEVTYPER1                   Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMXEVTYPER1_VALUE         0            /*  PM0 Event Type Register. */
#define BITM_ARMPMU_PMXEVTYPER1_VALUE        (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  PM0 Event Type Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCCFILTR                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCCFILTR_VALUE           0            /*  Cycle Count Filter Control Register. */
#define BITM_ARMPMU_PMCCFILTR_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Cycle Count Filter Control Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCNTENSET                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCNTENSET_VALUE          0            /*  Count Enable Set Register. */
#define BITM_ARMPMU_PMCNTENSET_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Enable Set Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCNTENCLR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCNTENCLR_VALUE          0            /*  Count Enable Clear Register. */
#define BITM_ARMPMU_PMCNTENCLR_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Count Enable Clear Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMINTENSET                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMINTENSET_VALUE          0            /*  Interrupt Enable Set Register. */
#define BITM_ARMPMU_PMINTENSET_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Interrupt Enable Set Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMINTENCLR                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMINTENCLR_VALUE          0            /*  Interrupt Enable Clear Register. */
#define BITM_ARMPMU_PMINTENCLR_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Interrupt Enable Clear Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMOVSR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMOVSR_VALUE              0            /*  Overflow Flag Status Register. */
#define BITM_ARMPMU_PMOVSR_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Overflow Flag Status Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMSWINC                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMSWINC_VALUE             0            /*  Software Increment Register. */
#define BITM_ARMPMU_PMSWINC_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Software Increment Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCFGR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCFGR_VALUE              0            /*  Configuration Register. */
#define BITM_ARMPMU_PMCFGR_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Configuration Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCR_VALUE                0            /*  Control Register. */
#define BITM_ARMPMU_PMCR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Control Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMUSERENR                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMUSERENR_VALUE           0            /*  User Enable Register. */
#define BITM_ARMPMU_PMUSERENR_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  User Enable Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCEID0                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCEID0_VALUE             0            /*  Common Event Identification Register 0. */
#define BITM_ARMPMU_PMCEID0_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Common Event Identification Register 0. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMCEID1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMCEID1_VALUE             0            /*  Common Event Identification Register 1. */
#define BITM_ARMPMU_PMCEID1_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Common Event Identification Register 1. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMLAR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMLAR_VALUE               0            /*  Lock Access Register. */
#define BITM_ARMPMU_PMLAR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Lock Access Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMLSR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMLSR_VALUE               0            /*  Lock Status Register. */
#define BITM_ARMPMU_PMLSR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Lock Status Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMAUTHSTATUS                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMAUTHSTATUS_VALUE        0            /*  Authentication Status Register. */
#define BITM_ARMPMU_PMAUTHSTATUS_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Authentication Status Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PMDEVTYPE                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PMDEVTYPE_VALUE           0            /*  Device Type Register. */
#define BITM_ARMPMU_PMDEVTYPE_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Device Type Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PIR4                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PIR4_VALUE                0            /*  Peripheral ID Register 4. */
#define BITM_ARMPMU_PIR4_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 4. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PIR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PIR0_VALUE                0            /*  Peripheral ID Register 0. */
#define BITM_ARMPMU_PIR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 0. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PIR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PIR1_VALUE                0            /*  Peripheral ID Register 1 */
#define BITM_ARMPMU_PIR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PIR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PIR2_VALUE                0            /*  Peripheral ID Register 2. */
#define BITM_ARMPMU_PIR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 2. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_PIR3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_PIR3_VALUE                0            /*  Peripheral ID Register 3. */
#define BITM_ARMPMU_PIR3_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 3. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_CIR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_CIR0_VALUE                0            /*  Component ID Register 0. */
#define BITM_ARMPMU_CIR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 0. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_CIR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_CIR1_VALUE                0            /*  Component ID Register 1. */
#define BITM_ARMPMU_CIR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 1. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_CIR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_CIR2_VALUE                0            /*  Component ID Register 2. */
#define BITM_ARMPMU_CIR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 2. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMPMU_CIR3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMPMU_CIR3_VALUE                0            /*  Component ID Register 3. */
#define BITM_ARMPMU_CIR3_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 3. */


/* ============================================================================================================================
        CSCTI_Register_Definitions
   ============================================================================================================================ */

/* ============================================================================================================================
        CTI0
   ============================================================================================================================ */
#define REG_CTI0_CTICONTROL                  0x31128000            /*  CTI0 CTI Control Register */
#define REG_CTI0_CTIINTACK                   0x31128010            /*  CTI0 CTI Interrupt Acknowledge Register */
#define REG_CTI0_CTIAPPSET                   0x31128014            /*  CTI0 CTI Application Trigger Set Register */
#define REG_CTI0_CTIAPPCLEAR                 0x31128018            /*  CTI0 CTI Application Trigger Clear Register */
#define REG_CTI0_CTIAPPPULSE                 0x3112801C            /*  CTI0 CTI Application Pulse Register */
#define REG_CTI0_CTIINEN0                    0x31128020            /*  CTI0 CTI Trigger 0 to Channel Enable Register */
#define REG_CTI0_CTIINEN1                    0x31128024            /*  CTI0 CTI Trigger 1 to Channel Enable Register */
#define REG_CTI0_CTIINEN2                    0x31128028            /*  CTI0 CTI Trigger 2 to Channel Enable Register */
#define REG_CTI0_CTIINEN3                    0x3112802C            /*  CTI0 CTI Trigger 3 to Channel Enable Register */
#define REG_CTI0_CTIINEN4                    0x31128030            /*  CTI0 CTI Trigger 4 to Channel Enable Register */
#define REG_CTI0_CTIINEN5                    0x31128034            /*  CTI0 CTI Trigger 5 to Channel Enable Register */
#define REG_CTI0_CTIINEN6                    0x31128038            /*  CTI0 CTI Trigger 6 to Channel Enable Register */
#define REG_CTI0_CTIINEN7                    0x3112803C            /*  CTI0 CTI Trigger 7 to Channel Enable Register */
#define REG_CTI0_CTIOUTEN0                   0x311280A0            /*  CTI0 CTI Channel to Trigger 0 Enable Register */
#define REG_CTI0_CTIOUTEN1                   0x311280A4            /*  CTI0 CTI Channel to Trigger 1 Enable Register */
#define REG_CTI0_CTIOUTEN2                   0x311280A8            /*  CTI0 CTI Channel to Trigger 2 Enable Register */
#define REG_CTI0_CTIOUTEN3                   0x311280AC            /*  CTI0 CTI Channel to Trigger 3 Enable Register */
#define REG_CTI0_CTIOUTEN4                   0x311280B0            /*  CTI0 CTI Channel to Trigger 4 Enable Register */
#define REG_CTI0_CTIOUTEN5                   0x311280B4            /*  CTI0 CTI Channel to Trigger 5 Enable Register */
#define REG_CTI0_CTIOUTEN6                   0x311280B8            /*  CTI0 CTI Channel to Trigger 6 Enable Register */
#define REG_CTI0_CTIOUTEN7                   0x311280BC            /*  CTI0 CTI Channel to Trigger 7 Enable Register */
#define REG_CTI0_CTITRIGINSTATUS             0x31128130            /*  CTI0 CTI Trigger In Status Register */
#define REG_CTI0_CTITRIGOUTSTATUS            0x31128134            /*  CTI0 CTI Trigger Out Status Register */
#define REG_CTI0_CTICHINSTATUS               0x31128138            /*  CTI0 CTI Channel In Status Register */
#define REG_CTI0_CTICHOUTSTATUS              0x3112813C            /*  CTI0 CTI Channel Out Status Register */
#define REG_CTI0_CTIGATE                     0x31128140            /*  CTI0 Enable CTI Channel Gate Register */
#define REG_CTI0_ASICCTL                     0x31128144            /*  CTI0 External Multiplexor Control Register */
#define REG_CTI0_ITCHINACK                   0x31128EDC            /*  CTI0 ITCHINACK */
#define REG_CTI0_ITTRIGINACK                 0x31128EE0            /*  CTI0 ITTRIGINACK */
#define REG_CTI0_ITCHOUT                     0x31128EE4            /*  CTI0 ITCHOUT */
#define REG_CTI0_ITTRIGOUT                   0x31128EE8            /*  CTI0 ITTRIGOUT */
#define REG_CTI0_ITCHOUTACK                  0x31128EEC            /*  CTI0 ITCHOUTACK */
#define REG_CTI0_ITTRIGOUTACK                0x31128EF0            /*  CTI0 ITTRIGOUTACK */
#define REG_CTI0_ITCHIN                      0x31128EF4            /*  CTI0 ITCHIN */
#define REG_CTI0_ITTRIGIN                    0x31128EF8            /*  CTI0 ITTRIGIN */
#define REG_CTI0_ITCTRL                      0x31128F00            /*  CTI0 Integration Mode Control Register */
#define REG_CTI0_CLAIMSET                    0x31128FA0            /*  CTI0 Claim Tag Set Register */
#define REG_CTI0_CLAIMCLR                    0x31128FA4            /*  CTI0 Claim Tag Clear Register */
#define REG_CTI0_LAR                         0x31128FB0            /*  CTI0 Lock Access Register */
#define REG_CTI0_LSR                         0x31128FB4            /*  CTI0 Lock Status Register */
#define REG_CTI0_AUTHSTATUS                  0x31128FB8            /*  CTI0 Authentication Status */
#define REG_CTI0_DEVID                       0x31128FC8            /*  CTI0 Device ID */
#define REG_CTI0_DEVTYPE                     0x31128FCC            /*  CTI0 Device Type */
#define REG_CTI0_PERIPHID4                   0x31128FD0            /*  CTI0 Peripheral ID4 */
#define REG_CTI0_PERIPHID5                   0x31128FD4            /*  CTI0 Peripheral ID5 */
#define REG_CTI0_PERIPHID6                   0x31128FD8            /*  CTI0 Peripheral ID6 */
#define REG_CTI0_PERIPHID7                   0x31128FDC            /*  CTI0 Peripheral ID7 */
#define REG_CTI0_PERIPHID0                   0x31128FE0            /*  CTI0 Peripheral ID0 */
#define REG_CTI0_PERIPHID1                   0x31128FE4            /*  CTI0 Peripheral ID1 */
#define REG_CTI0_PERIPHID2                   0x31128FE8            /*  CTI0 Peripheral ID2 */
#define REG_CTI0_PERIPHID3                   0x31128FEC            /*  CTI0 Peripheral ID3 */
#define REG_CTI0_COMPID0                     0x31128FF0            /*  CTI0 Component ID0 */
#define REG_CTI0_COMPID1                     0x31128FF4            /*  CTI0 Component ID1 */
#define REG_CTI0_COMPID2                     0x31128FF8            /*  CTI0 Component ID2 */
#define REG_CTI0_COMPID3                     0x31128FFC            /*  CTI0 Component ID3 */

/* ============================================================================================================================
        CTI Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */

/* ============================================================================================================================
        ARM ETM
   ============================================================================================================================ */

/* ============================================================================================================================
        ARMETM0
   ============================================================================================================================ */
#define REG_ARMETM0_CR                       0x3112C000            /*  ARMETM0 Main Control Register */
#define REG_ARMETM0_CCR                      0x3112C004            /*  ARMETM0 Configuration Code Register */
#define REG_ARMETM0_TRIGGER                  0x3112C008            /*  ARMETM0 Trigger Event Register */
#define REG_ARMETM0_ASICCTLR                 0x3112C00C            /*  ARMETM0 ASIC Control Register */
#define REG_ARMETM0_SR                       0x3112C010            /*  ARMETM0 Status Register */
#define REG_ARMETM0_SCR                      0x3112C014            /*  ARMETM0 System Configuration Register */
#define REG_ARMETM0_TSSCR                    0x3112C018            /*  ARMETM0 TraceEnable Start/Stop Control Register */
#define REG_ARMETM0_TECR2                    0x3112C01C            /*  ARMETM0 TraceEnable Control Register 2 */
#define REG_ARMETM0_TEEVR                    0x3112C020            /*  ARMETM0 TraceEnable Event Register */
#define REG_ARMETM0_TECR1                    0x3112C024            /*  ARMETM0 TraceEnable Control Register 1 */
#define REG_ARMETM0_FFLR                     0x3112C02C            /*  ARMETM0 FIFOFULL Level Register */
#define REG_ARMETM0_VDEVR                    0x3112C030            /*  ARMETM0 ViewData Event Register */
#define REG_ARMETM0_VDCR1                    0x3112C034            /*  ARMETM0 ViewData Control Register 1 */
#define REG_ARMETM0_VDCR3                    0x3112C03C            /*  ARMETM0 ViewData Control Register 3 */
#define REG_ARMETM0_ACVR1                    0x3112C040            /*  ARMETM0 Address Comparator Value Register 1 */
#define REG_ARMETM0_ACVR2                    0x3112C044            /*  ARMETM0 Address Comparator Value Register 2 */
#define REG_ARMETM0_ACVR3                    0x3112C048            /*  ARMETM0 Address Comparator Value Register 3 */
#define REG_ARMETM0_ACVR4                    0x3112C04C            /*  ARMETM0 Address Comparator Value Register 4 */
#define REG_ARMETM0_ACVR5                    0x3112C050            /*  ARMETM0 Address Comparator Value Register 5 */
#define REG_ARMETM0_ACVR6                    0x3112C054            /*  ARMETM0 Address Comparator Value Register 6 */
#define REG_ARMETM0_ACVR7                    0x3112C058            /*  ARMETM0 Address Comparator Value Register 7 */
#define REG_ARMETM0_ACVR8                    0x3112C05C            /*  ARMETM0 Address Comparator Value Register 8 */
#define REG_ARMETM0_ACTR1                    0x3112C080            /*  ARMETM0 Address Comparator Access Type Register 1 */
#define REG_ARMETM0_ACTR2                    0x3112C084            /*  ARMETM0 Address Comparator Access Type Register 2 */
#define REG_ARMETM0_ACTR3                    0x3112C088            /*  ARMETM0 Address Comparator Access Type Register 3 */
#define REG_ARMETM0_ACTR4                    0x3112C08C            /*  ARMETM0 Address Comparator Access Type Registers 4 */
#define REG_ARMETM0_ACTR5                    0x3112C090            /*  ARMETM0 Address Comparator Access Type Register 5 */
#define REG_ARMETM0_ACTR6                    0x3112C094            /*  ARMETM0 Address Comparator Access Type Register 6 */
#define REG_ARMETM0_ACTR7                    0x3112C098            /*  ARMETM0 Address Comparator Access Type Register 7 */
#define REG_ARMETM0_ACTR8                    0x3112C09C            /*  ARMETM0 Address Comparator Access Type Register 8 */
#define REG_ARMETM0_DCVR1                    0x3112C0C0            /*  ARMETM0 Data Comparator Value Register 1 */
#define REG_ARMETM0_DCVR3                    0x3112C0C8            /*  ARMETM0 Data Comparator Value Register 3 */
#define REG_ARMETM0_DCMR1                    0x3112C100            /*  ARMETM0 Data Comparator Mask Register 1 */
#define REG_ARMETM0_DCMR3                    0x3112C108            /*  ARMETM0 Data Comparator Mask Register 3 */
#define REG_ARMETM0_CNTRLDVR1                0x3112C140            /*  ARMETM0 Counter Reload Value Register 1 */
#define REG_ARMETM0_CNTRLDVR2                0x3112C144            /*  ARMETM0 Counter Reload Value Register 2 */
#define REG_ARMETM0_CNTENR1                  0x3112C150            /*  ARMETM0 Counter Enable Register 1 */
#define REG_ARMETM0_CNTENR2                  0x3112C154            /*  ARMETM0 Counter Enable Register 2 */
#define REG_ARMETM0_CNTRLDEVR1               0x3112C160            /*  ARMETM0 Counter Reload Event Register 1 */
#define REG_ARMETM0_CNTRLDEVR2               0x3112C164            /*  ARMETM0 Counter Reload Event Register 2 */
#define REG_ARMETM0_CNTVR1                   0x3112C170            /*  ARMETM0 Counter Value Register 1 */
#define REG_ARMETM0_CNTVR2                   0x3112C174            /*  ARMETM0 Counter Value Register 2 */
#define REG_ARMETM0_SQ12EVR                  0x3112C180            /*  ARMETM0 Sequencer State Transition 12 Event Register */
#define REG_ARMETM0_SQ21EVR                  0x3112C184            /*  ARMETM0 Sequencer State Transition 21 Event Register */
#define REG_ARMETM0_SQ23EVR                  0x3112C188            /*  ARMETM0 Sequencer State Transition 23 Event Register */
#define REG_ARMETM0_SQ31EVR                  0x3112C18C            /*  ARMETM0 Sequencer State Transition 31 Event Register */
#define REG_ARMETM0_SQ32EVR                  0x3112C190            /*  ARMETM0 Sequencer State Transition 32 Event Register */
#define REG_ARMETM0_SQ13EVR                  0x3112C194            /*  ARMETM0 Sequencer State Transition 13 Event Register */
#define REG_ARMETM0_SQR                      0x3112C19C            /*  ARMETM0 Current Sequencer State Register */
#define REG_ARMETM0_EXTOUTEVR1               0x3112C1A0            /*  ARMETM0 External Output Event Register 1 */
#define REG_ARMETM0_EXTOUTEVR2               0x3112C1A4            /*  ARMETM0 External Output Event Register 2 */
#define REG_ARMETM0_CIDCVR                   0x3112C1B0            /*  ARMETM0 Context ID Comparator Value Register */
#define REG_ARMETM0_CIDCMR                   0x3112C1BC            /*  ARMETM0 Context ID Comparator Mask Register */
#define REG_ARMETM0_SYNCFR                   0x3112C1E0            /*  ARMETM0 Synchronization Frequency Register */
#define REG_ARMETM0_IDR                      0x3112C1E4            /*  ARMETM0 ETM ID Register */
#define REG_ARMETM0_CCER                     0x3112C1E8            /*  ARMETM0 Configuration Code Extension Register */
#define REG_ARMETM0_EXTINSELR                0x3112C1EC            /*  ARMETM0 Extended External Input Selection Register */
#define REG_ARMETM0_TSEVR                    0x3112C1F8            /*  ARMETM0 Timestamp Event Register */
#define REG_ARMETM0_AUXCR                    0x3112C1FC            /*  ARMETM0 Auxiliary Control Register */
#define REG_ARMETM0_TRACEIDR                 0x3112C200            /*  ARMETM0 CoreSight Trace ID Register */
#define REG_ARMETM0_ETMAUXIDR                0x3112C208            /*  ARMETM0 Auxiliary ID Register */
#define REG_ARMETM0_PDSR                     0x3112C314            /*  ARMETM0 Power-Down Status Register */
#define REG_ARMETM0_ITMISCOUT                0x3112CEDC            /*  ARMETM0 Miscellaneous Outputs Register */
#define REG_ARMETM0_ITMISCIN                 0x3112CEE0            /*  ARMETM0 Miscellaneous Inputs Register */
#define REG_ARMETM0_ITTRIGGERREQ             0x3112CEE8            /*  ARMETM0 Trigger Request Register */
#define REG_ARMETM0_ITATBDATA0               0x3112CEEC            /*  ARMETM0 ATB Data Register 0 */
#define REG_ARMETM0_ITATBCTR2                0x3112CEF0            /*  ARMETM0 ATB Control Register 2 */
#define REG_ARMETM0_ITATBCTR1                0x3112CEF4            /*  ARMETM0 ATB Control Register 1 */
#define REG_ARMETM0_ITATBCTR0                0x3112CEF8            /*  ARMETM0 ATB Control Register 0 */
#define REG_ARMETM0_ITCTRL                   0x3112CF00            /*  ARMETM0 Integration Mode Control Register */
#define REG_ARMETM0_CLAIMSET                 0x3112CFA0            /*  ARMETM0 Claim Tag Set Register */
#define REG_ARMETM0_CLAIMCLR                 0x3112CFA4            /*  ARMETM0 Claim Tag Clear Register */
#define REG_ARMETM0_LAR                      0x3112CFB0            /*  ARMETM0 Lock Access Register */
#define REG_ARMETM0_LSR                      0x3112CFB4            /*  ARMETM0 Lock Status Register */
#define REG_ARMETM0_AUTHSTATUS               0x3112CFB8            /*  ARMETM0 Authentication Status Register */
#define REG_ARMETM0_DEVID                    0x3112CFC8            /*  ARMETM0 Device Identifier */
#define REG_ARMETM0_DEVTYPE                  0x3112CFCC            /*  ARMETM0 Device Type Register */
#define REG_ARMETM0_PIR4                     0x3112CFD0            /*  ARMETM0 Peripheral ID Register 4 */
#define REG_ARMETM0_PIR5                     0x3112CFD4            /*  ARMETM0 Peripheral ID Register 5 */
#define REG_ARMETM0_PIR6                     0x3112CFD8            /*  ARMETM0 Peripheral ID Register 6 */
#define REG_ARMETM0_PIR7                     0x3112CFDC            /*  ARMETM0 Peripheral ID Register 7 */
#define REG_ARMETM0_PIR0                     0x3112CFE0            /*  ARMETM0 Peripheral ID Register 0 */
#define REG_ARMETM0_PIR1                     0x3112CFE4            /*  ARMETM0 Peripheral ID Register 1 */
#define REG_ARMETM0_PIR2                     0x3112CFE8            /*  ARMETM0 Peripheral ID Register 2 */
#define REG_ARMETM0_PIR3                     0x3112CFEC            /*  ARMETM0 Peripheral ID Register 3 */
#define REG_ARMETM0_CIR0                     0x3112CFF0            /*  ARMETM0 Component ID Register 0 */
#define REG_ARMETM0_CIR1                     0x3112CFF4            /*  ARMETM0 Component ID Register 1 */
#define REG_ARMETM0_CIR2                     0x3112CFF8            /*  ARMETM0 Component ID Register 2 */
#define REG_ARMETM0_CIR3                     0x3112CFFC            /*  ARMETM0 Component ID Register 3 */

/* ============================================================================================================================
        ARMETM Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CR                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CR_VALUE                  0            /*  Main Control Register */
#define BITM_ARMETM_CR_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Main Control Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CCR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CCR_VALUE                 0            /*  Configuration Code Register */
#define BITM_ARMETM_CCR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Configuration Code Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TRIGGER                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TRIGGER_VALUE             0            /*  Trigger Event Register */
#define BITM_ARMETM_TRIGGER_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Trigger Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ASICCTLR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ASICCTLR_VALUE            0            /*  ASIC Control Register */
#define BITM_ARMETM_ASICCTLR_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ASIC Control Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SR                            Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SR_VALUE                  0            /*  Status Register. */
#define BITM_ARMETM_SR_VALUE                 (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Status Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SCR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SCR_VALUE                 0            /*  System Configuration Register */
#define BITM_ARMETM_SCR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  System Configuration Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TSSCR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TSSCR_VALUE               0            /*  TraceEnable Start/Stop Control Register */
#define BITM_ARMETM_TSSCR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  TraceEnable Start/Stop Control Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TECR2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TECR2_VALUE               0            /*  TraceEnable Control Register 2 */
#define BITM_ARMETM_TECR2_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  TraceEnable Control Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TEEVR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TEEVR_VALUE               0            /*  TraceEnable Event Register */
#define BITM_ARMETM_TEEVR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  TraceEnable Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TECR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TECR1_VALUE               0            /*  TraceEnable Control Register 1 */
#define BITM_ARMETM_TECR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  TraceEnable Control Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_FFLR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_FFLR_VALUE                0            /*  FIFOFULL Level Register */
#define BITM_ARMETM_FFLR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  FIFOFULL Level Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_VDEVR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_VDEVR_VALUE               0            /*  ViewData Event Register */
#define BITM_ARMETM_VDEVR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ViewData Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_VDCR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_VDCR1_VALUE               0            /*  ViewData Control Register 1 */
#define BITM_ARMETM_VDCR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ViewData Control Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_VDCR3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_VDCR3_VALUE               0            /*  ViewData Control Register 3 */
#define BITM_ARMETM_VDCR3_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ViewData Control Register 3 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR1_VALUE               0            /*  Address Comparator Value Register 1 */
#define BITM_ARMETM_ACVR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR2_VALUE               0            /*  Address Comparator Value Register 2 */
#define BITM_ARMETM_ACVR2_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR3_VALUE               0            /*  Address Comparator Value Register 3 */
#define BITM_ARMETM_ACVR3_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 3 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR4                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR4_VALUE               0            /*  Address Comparator Value Register 4PM0 Event Type Register. */
#define BITM_ARMETM_ACVR4_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 4PM0 Event Type Register. */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR5                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR5_VALUE               0            /*  Address Comparator Value Register 5 */
#define BITM_ARMETM_ACVR5_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 5 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR6                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR6_VALUE               0            /*  Address Comparator Value Register 6 */
#define BITM_ARMETM_ACVR6_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR7                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR7_VALUE               0            /*  Address Comparator Value Register 7 */
#define BITM_ARMETM_ACVR7_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 7 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACVR8                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACVR8_VALUE               0            /*  Address Comparator Value Register 8 */
#define BITM_ARMETM_ACVR8_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Value Register 8 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR1_VALUE               0            /*  Address Comparator Access Type Register 1 */
#define BITM_ARMETM_ACTR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR2                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR2_VALUE               0            /*  Address Comparator Access Type Register 2 */
#define BITM_ARMETM_ACTR2_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR3_VALUE               0            /*  Address Comparator Access Type Register 3 */
#define BITM_ARMETM_ACTR3_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 3 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR4                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR4_VALUE               0            /*  Address Comparator Access Type Registers 4 */
#define BITM_ARMETM_ACTR4_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Registers 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR5                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR5_VALUE               0            /*  Address Comparator Access Type Register 5 */
#define BITM_ARMETM_ACTR5_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 5 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR6                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR6_VALUE               0            /*  Address Comparator Access Type Register 6 */
#define BITM_ARMETM_ACTR6_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR7                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR7_VALUE               0            /*  Address Comparator Access Type Register 7 */
#define BITM_ARMETM_ACTR7_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 7 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ACTR8                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ACTR8_VALUE               0            /*  Address Comparator Access Type Register 8 */
#define BITM_ARMETM_ACTR8_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Address Comparator Access Type Register 8 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_DCVR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_DCVR1_VALUE               0            /*  Data Comparator Value Register 1 */
#define BITM_ARMETM_DCVR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Comparator Value Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_DCVR3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_DCVR3_VALUE               0            /*  Data Comparator Value Register 3 */
#define BITM_ARMETM_DCVR3_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Comparator Value Register 3 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_DCMR1                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_DCMR1_VALUE               0            /*  Data Comparator Mask Register 1 */
#define BITM_ARMETM_DCMR1_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Comparator Mask Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_DCMR3                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_DCMR3_VALUE               0            /*  Data Comparator Mask Register 3 */
#define BITM_ARMETM_DCMR3_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Data Comparator Mask Register 3 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTRLDVR1                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTRLDVR1_VALUE           0            /*  Counter Reload Value Register 1 */
#define BITM_ARMETM_CNTRLDVR1_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Reload Value Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTRLDVR2                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTRLDVR2_VALUE           0            /*  Counter Reload Value Register 2 */
#define BITM_ARMETM_CNTRLDVR2_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Reload Value Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTENR1                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTENR1_VALUE             0            /*  Counter Enable Register 1 */
#define BITM_ARMETM_CNTENR1_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Enable Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTENR2                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTENR2_VALUE             0            /*  Counter Enable Register 2 */
#define BITM_ARMETM_CNTENR2_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Enable Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTRLDEVR1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTRLDEVR1_VALUE          0            /*  Counter Reload Event Register 1 */
#define BITM_ARMETM_CNTRLDEVR1_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Reload Event Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTRLDEVR2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTRLDEVR2_VALUE          0            /*  Counter Reload Event Register 2 */
#define BITM_ARMETM_CNTRLDEVR2_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Reload Event Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTVR1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTVR1_VALUE              0            /*  Counter Value Register 1 */
#define BITM_ARMETM_CNTVR1_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Value Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CNTVR2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CNTVR2_VALUE              0            /*  Counter Value Register 2 */
#define BITM_ARMETM_CNTVR2_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Counter Value Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQ12EVR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQ12EVR_VALUE             0            /*  Sequencer State Transition 12 Event Register */
#define BITM_ARMETM_SQ12EVR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Sequencer State Transition 12 Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQ21EVR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQ21EVR_VALUE             0            /*  Sequencer State Transition 21 Event Register */
#define BITM_ARMETM_SQ21EVR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Sequencer State Transition 21 Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQ23EVR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQ23EVR_VALUE             0            /*  Sequencer State Transition 23 Event Register */
#define BITM_ARMETM_SQ23EVR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Sequencer State Transition 23 Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQ31EVR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQ31EVR_VALUE             0            /*  Sequencer State Transition 31 Event Register */
#define BITM_ARMETM_SQ31EVR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Sequencer State Transition 31 Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQ32EVR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQ32EVR_VALUE             0            /*  Sequencer State Transition 32 Event Register */
#define BITM_ARMETM_SQ32EVR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Sequencer State Transition 32 Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQ13EVR                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQ13EVR_VALUE             0            /*  Sequencer State Transition 13 Event Register */
#define BITM_ARMETM_SQ13EVR_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Sequencer State Transition 13 Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SQR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SQR_VALUE                 0            /*  Current Sequencer State Register */
#define BITM_ARMETM_SQR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Current Sequencer State Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_EXTOUTEVR1                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_EXTOUTEVR1_VALUE          0            /*  External Output Event Register 1 */
#define BITM_ARMETM_EXTOUTEVR1_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  External Output Event Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_EXTOUTEVR2                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_EXTOUTEVR2_VALUE          0            /*  External Output Event Register 2 */
#define BITM_ARMETM_EXTOUTEVR2_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  External Output Event Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CIDCVR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CIDCVR_VALUE              0            /*  Context ID Comparator Value Register */
#define BITM_ARMETM_CIDCVR_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Context ID Comparator Value Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CIDCMR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CIDCMR_VALUE              0            /*  Context ID Comparator Mask Register */
#define BITM_ARMETM_CIDCMR_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Context ID Comparator Mask Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_SYNCFR                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_SYNCFR_VALUE              0            /*  Synchronization Frequency Register */
#define BITM_ARMETM_SYNCFR_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Synchronization Frequency Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_IDR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_IDR_VALUE                 0            /*  ETM ID Register */
#define BITM_ARMETM_IDR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ETM ID Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CCER                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CCER_VALUE                0            /*  Configuration Code Extension Register */
#define BITM_ARMETM_CCER_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Configuration Code Extension Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_EXTINSELR                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_EXTINSELR_VALUE           0            /*  Extended External Input Selection Register */
#define BITM_ARMETM_EXTINSELR_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Extended External Input Selection Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TSEVR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TSEVR_VALUE               0            /*  Timestamp Event Register */
#define BITM_ARMETM_TSEVR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Timestamp Event Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_AUXCR                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_AUXCR_VALUE               0            /*  Auxiliary Control Register */
#define BITM_ARMETM_AUXCR_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Auxiliary Control Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_TRACEIDR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_TRACEIDR_VALUE            0            /*  CoreSight Trace ID Register */
#define BITM_ARMETM_TRACEIDR_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  CoreSight Trace ID Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ETMAUXIDR                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ETMAUXIDR_VALUE           0            /*  Auxiliary ID Register */
#define BITM_ARMETM_ETMAUXIDR_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Auxiliary ID Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PDSR                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PDSR_VALUE                0            /*  Power-Down Status Register */
#define BITM_ARMETM_PDSR_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Power-Down Status Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITMISCOUT                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITMISCOUT_VALUE           0            /*  Miscellaneous Outputs Register */
#define BITM_ARMETM_ITMISCOUT_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Miscellaneous Outputs Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITMISCIN                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITMISCIN_VALUE            0            /*  Miscellaneous Inputs Register */
#define BITM_ARMETM_ITMISCIN_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Miscellaneous Inputs Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITTRIGGERREQ                  Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITTRIGGERREQ_VALUE        0            /*  Trigger Request Register */
#define BITM_ARMETM_ITTRIGGERREQ_VALUE       (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Trigger Request Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITATBDATA0                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITATBDATA0_VALUE          0            /*  ATB Data Register 0 */
#define BITM_ARMETM_ITATBDATA0_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ATB Data Register 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITATBCTR2                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITATBCTR2_VALUE           0            /*  ATB Control Register 2 */
#define BITM_ARMETM_ITATBCTR2_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ATB Control Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITATBCTR1                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITATBCTR1_VALUE           0            /*  ATB Control Register 1 */
#define BITM_ARMETM_ITATBCTR1_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ATB Control Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITATBCTR0                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITATBCTR0_VALUE           0            /*  ATB Control Register 0 */
#define BITM_ARMETM_ITATBCTR0_VALUE          (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  ATB Control Register 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_ITCTRL                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_ITCTRL_VALUE              0            /*  Integration Mode Control Register */
#define BITM_ARMETM_ITCTRL_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Integration Mode Control Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CLAIMSET                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CLAIMSET_VALUE            0            /*  Claim Tag Set Register */
#define BITM_ARMETM_CLAIMSET_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Claim Tag Set Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CLAIMCLR                      Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CLAIMCLR_VALUE            0            /*  Claim Tag Clear Register */
#define BITM_ARMETM_CLAIMCLR_VALUE           (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Claim Tag Clear Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_LAR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_LAR_VALUE                 0            /*  Lock Access Register */
#define BITM_ARMETM_LAR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Lock Access Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_LSR                           Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_LSR_VALUE                 0            /*  Lock Status Register */
#define BITM_ARMETM_LSR_VALUE                (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Lock Status Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_AUTHSTATUS                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_AUTHSTATUS_VALUE          0            /*  Authentication Status Register */
#define BITM_ARMETM_AUTHSTATUS_VALUE         (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Authentication Status Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_DEVID                         Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_DEVID_VALUE               0            /*  Device Identifier */
#define BITM_ARMETM_DEVID_VALUE              (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Device Identifier */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_DEVTYPE                       Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_DEVTYPE_VALUE             0            /*  Device Type Register */
#define BITM_ARMETM_DEVTYPE_VALUE            (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Device Type Register */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR4                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR4_VALUE                0            /*  Peripheral ID Register 4 */
#define BITM_ARMETM_PIR4_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 4 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR5                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR5_VALUE                0            /*  Peripheral ID Register 5 */
#define BITM_ARMETM_PIR5_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 5 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR6                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR6_VALUE                0            /*  Peripheral ID Register 6 */
#define BITM_ARMETM_PIR6_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 6 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR7                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR7_VALUE                0            /*  Peripheral ID Register 7 */
#define BITM_ARMETM_PIR7_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 7 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR0_VALUE                0            /*  Peripheral ID Register 0 */
#define BITM_ARMETM_PIR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR1_VALUE                0            /*  Peripheral ID Register 1 */
#define BITM_ARMETM_PIR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR2_VALUE                0            /*  Peripheral ID Register 2 */
#define BITM_ARMETM_PIR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_PIR3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_PIR3_VALUE                0            /*  Peripheral ID Register 3 */
#define BITM_ARMETM_PIR3_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Peripheral ID Register 3 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CIR0                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CIR0_VALUE                0            /*  Component ID Register 0 */
#define BITM_ARMETM_CIR0_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 0 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CIR1                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CIR1_VALUE                0            /*  Component ID Register 1 */
#define BITM_ARMETM_CIR1_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 1 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CIR2                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CIR2_VALUE                0            /*  Component ID Register 2 */
#define BITM_ARMETM_CIR2_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 2 */

/* -------------------------------------------------------------------------------------------------------------------------
          ARMETM_CIR3                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_ARMETM_CIR3_VALUE                0            /*  Component ID Register 3 */
#define BITM_ARMETM_CIR3_VALUE               (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  Component ID Register 3 */


/* ============================================================================================================================
        TAPC
   ============================================================================================================================ */

/* ============================================================================================================================
        TAPC
   ============================================================================================================================ */
#define REG_TAPC_IDCODE                      0x31130000            /*  TAPC IDCODE Register */
#define REG_TAPC_USERCODE                    0x31130004            /*  TAPC USERCODE Register */
#define REG_TAPC_SDBGKEY_CTL                 0x31130008            /*  TAPC Secure Debug Key Control Register */
#define REG_TAPC_SDBGKEY_STAT                0x3113000C            /*  TAPC Secure Debug Key Status Register */
#define REG_TAPC_SDBGKEY0                    0x31130010            /*  TAPC Secure Debug Key 0 Register */
#define REG_TAPC_SDBGKEY1                    0x31130014            /*  TAPC Secure Debug Key 1 Register */
#define REG_TAPC_SDBGKEY2                    0x31130018            /*  TAPC Secure Debug Key 2 Register */
#define REG_TAPC_SDBGKEY3                    0x3113001C            /*  TAPC Secure Debug Key 3 Register */
#define REG_TAPC_DBGCTL                      0x31131000            /*  TAPC Debug Control Register */

/* ============================================================================================================================
        TAPC Register BitMasks, Positions & Enumerations 
   ============================================================================================================================ */
/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_IDCODE                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_IDCODE_REVID               28            /*  Silicon Revision */
#define BITP_TAPC_IDCODE_JTAGID              12            /*  JTAG ID */
#define BITP_TAPC_IDCODE_MNFID                1            /*  Manufacturer ID */
#define BITP_TAPC_IDCODE_LSB                  0            /*  IDCODE LSB */
#define BITM_TAPC_IDCODE_REVID               (_ADI_MSK_3(0xF0000000,0xF0000000UL, uint32_t  ))    /*  Silicon Revision */
#define BITM_TAPC_IDCODE_JTAGID              (_ADI_MSK_3(0x0FFFF000,0x0FFFF000UL, uint32_t  ))    /*  JTAG ID */
#define BITM_TAPC_IDCODE_MNFID               (_ADI_MSK_3(0x00000FFE,0x00000FFEUL, uint32_t  ))    /*  Manufacturer ID */
#define BITM_TAPC_IDCODE_LSB                 (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  IDCODE LSB */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_USERCODE                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_USERCODE_VALUE              0            /*  USERCODE[31:0] */
#define BITM_TAPC_USERCODE_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  USERCODE[31:0] */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_SDBGKEY_CTL                     Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_SDBGKEY_CTL_VALID           0            /*  SDBGKEY Valid bit */
#define BITM_TAPC_SDBGKEY_CTL_VALID          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SDBGKEY Valid bit */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_SDBGKEY_STAT                    Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_SDBGKEY_STAT_FAIL           1            /*  SDBGKEY MATCH FAILED */
#define BITP_TAPC_SDBGKEY_STAT_PASS           0            /*  SDBGKEY MATCH PASSED */
#define BITM_TAPC_SDBGKEY_STAT_FAIL          (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  SDBGKEY MATCH FAILED */
#define BITM_TAPC_SDBGKEY_STAT_PASS          (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SDBGKEY MATCH PASSED */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_SDBGKEY0                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_SDBGKEY0_VALUE              0            /*  SDBGKEY */
#define BITM_TAPC_SDBGKEY0_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SDBGKEY */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_SDBGKEY1                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_SDBGKEY1_VALUE              0            /*  SDBGKEY */
#define BITM_TAPC_SDBGKEY1_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SDBGKEY */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_SDBGKEY2                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_SDBGKEY2_VALUE              0            /*  SDBGKEY */
#define BITM_TAPC_SDBGKEY2_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SDBGKEY */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_SDBGKEY3                        Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_SDBGKEY3_VALUE              0            /*  SDBGKEY */
#define BITM_TAPC_SDBGKEY3_VALUE             (_ADI_MSK_3(0xFFFFFFFF,0xFFFFFFFFUL, uint32_t  ))    /*  SDBGKEY */

/* -------------------------------------------------------------------------------------------------------------------------
          TAPC_DBGCTL                          Pos/Masks         Description
   ------------------------------------------------------------------------------------------------------------------------- */
#define BITP_TAPC_DBGCTL_SPIDENTRACE         15            /*  SPIDEN for Coresight trace modules */
#define BITP_TAPC_DBGCTL_NIDENTRACE          14            /*  NIDEN for Coresight trace modules */
#define BITP_TAPC_DBGCTL_DBGENTRACE          13            /*  DBGEN for Coresight trace modules */
#define BITP_TAPC_DBGCTL_NIDENCTISYS         12            /*  NIDEN for System CTI */
#define BITP_TAPC_DBGCTL_DBGENCTISYS         11            /*  DBGEN for System CTI */
#define BITP_TAPC_DBGCTL_SPIDENSTM           10            /*  SPIDEN for STM */
#define BITP_TAPC_DBGCTL_SPNIDENSTM           9            /*  SPNIDEN for STM */
#define BITP_TAPC_DBGCTL_NIDENSTM             8            /*  NIDEN for STM */
#define BITP_TAPC_DBGCTL_DBGENSTM             7            /*  DBGEN for STM */
#define BITP_TAPC_DBGCTL_DBGENC2              6            /*  DBGEN for Core 2 */
#define BITP_TAPC_DBGCTL_DBGENC1              5            /*  DBGEN for Core 1 */
#define BITP_TAPC_DBGCTL_SPIDENC0             4            /*  SPIDEN for Core 0 */
#define BITP_TAPC_DBGCTL_SPNIDENC0            3            /*  SPNIDEN for Core 0 */
#define BITP_TAPC_DBGCTL_NIDENC0              2            /*  NIDEN for Core 0 */
#define BITP_TAPC_DBGCTL_DBGENC0              1            /*  DBGEN for Core 0 */
#define BITP_TAPC_DBGCTL_SPIDENDAP            0            /*  SPIDEN for DAP */
#define BITM_TAPC_DBGCTL_SPIDENTRACE         (_ADI_MSK_3(0x00008000,0x00008000UL, uint32_t  ))    /*  SPIDEN for Coresight trace modules */
#define BITM_TAPC_DBGCTL_NIDENTRACE          (_ADI_MSK_3(0x00004000,0x00004000UL, uint32_t  ))    /*  NIDEN for Coresight trace modules */
#define BITM_TAPC_DBGCTL_DBGENTRACE          (_ADI_MSK_3(0x00002000,0x00002000UL, uint32_t  ))    /*  DBGEN for Coresight trace modules */
#define BITM_TAPC_DBGCTL_NIDENCTISYS         (_ADI_MSK_3(0x00001000,0x00001000UL, uint32_t  ))    /*  NIDEN for System CTI */
#define BITM_TAPC_DBGCTL_DBGENCTISYS         (_ADI_MSK_3(0x00000800,0x00000800UL, uint32_t  ))    /*  DBGEN for System CTI */
#define BITM_TAPC_DBGCTL_SPIDENSTM           (_ADI_MSK_3(0x00000400,0x00000400UL, uint32_t  ))    /*  SPIDEN for STM */
#define BITM_TAPC_DBGCTL_SPNIDENSTM          (_ADI_MSK_3(0x00000200,0x00000200UL, uint32_t  ))    /*  SPNIDEN for STM */
#define BITM_TAPC_DBGCTL_NIDENSTM            (_ADI_MSK_3(0x00000100,0x00000100UL, uint32_t  ))    /*  NIDEN for STM */
#define BITM_TAPC_DBGCTL_DBGENSTM            (_ADI_MSK_3(0x00000080,0x00000080UL, uint32_t  ))    /*  DBGEN for STM */
#define BITM_TAPC_DBGCTL_DBGENC2             (_ADI_MSK_3(0x00000040,0x00000040UL, uint32_t  ))    /*  DBGEN for Core 2 */
#define BITM_TAPC_DBGCTL_DBGENC1             (_ADI_MSK_3(0x00000020,0x00000020UL, uint32_t  ))    /*  DBGEN for Core 1 */
#define BITM_TAPC_DBGCTL_SPIDENC0            (_ADI_MSK_3(0x00000010,0x00000010UL, uint32_t  ))    /*  SPIDEN for Core 0 */
#define BITM_TAPC_DBGCTL_SPNIDENC0           (_ADI_MSK_3(0x00000008,0x00000008UL, uint32_t  ))    /*  SPNIDEN for Core 0 */
#define BITM_TAPC_DBGCTL_NIDENC0             (_ADI_MSK_3(0x00000004,0x00000004UL, uint32_t  ))    /*  NIDEN for Core 0 */
#define BITM_TAPC_DBGCTL_DBGENC0             (_ADI_MSK_3(0x00000002,0x00000002UL, uint32_t  ))    /*  DBGEN for Core 0 */
#define BITM_TAPC_DBGCTL_SPIDENDAP           (_ADI_MSK_3(0x00000001,0x00000001UL, uint32_t  ))    /*  SPIDEN for DAP */


/* SYS Parameters */

/***** SYS  */
#define PARAM_SYS_NUM_MDMA_STREAMS          8             /*  Number of Memory DMA streams  */

/* General-Purpose Timer Block Parameters */

/***** TIMER0  */
#define PARAM_TIMER0_NUMTIMERS             16             /*  number of individual timer instances in project timer top  */

/* System Event Controller Parameters */

/***** SEC0  */
#define PARAM_SEC0_SCOUNT                 256             /*  Number of system endpoints  */
#define PARAM_SEC0_CCOUNT                   2             /*  Number of cores  */

/* System Protection Unit Parameters */

/***** SPU0  */
#define PARAM_SPU0_END_POINT_COUNT        202             /*  Number of peripheral endpoints  */
#define PARAM_SPU0_CM_COUNT                 3             /*  Number of Core Masters that can access sMMRs  */
#define PARAM_SPU0_SM_COUNT                 3             /*  Number of System Masters that can access sMMRs  */
#define PARAM_SPU0_CSECNUM                  1             /*  Number of secure bits/signals per SECUREC register  */
/* ====================================================================================================
 *    DMA Alias Definitions
 * ==================================================================================================== */
#define LP0_DMA_DSCPTR_NXT                   (REG_DMA30_DSCPTR_NXT)
#define LP0_DMA_ADDRSTART                    (REG_DMA30_ADDRSTART)
#define LP0_DMA_CFG                          (REG_DMA30_CFG)
#define LP0_DMA_XCNT                         (REG_DMA30_XCNT)
#define LP0_DMA_XMOD                         (REG_DMA30_XMOD)
#define LP0_DMA_YCNT                         (REG_DMA30_YCNT)
#define LP0_DMA_YMOD                         (REG_DMA30_YMOD)
#define LP0_DMA_DSCPTR_CUR                   (REG_DMA30_DSCPTR_CUR)
#define LP0_DMA_DSCPTR_PRV                   (REG_DMA30_DSCPTR_PRV)
#define LP0_DMA_ADDR_CUR                     (REG_DMA30_ADDR_CUR)
#define LP0_DMA_STAT                         (REG_DMA30_STAT)
#define LP0_DMA_XCNT_CUR                     (REG_DMA30_XCNT_CUR)
#define LP0_DMA_YCNT_CUR                     (REG_DMA30_YCNT_CUR)
#define LP0_DMA_BWLCNT                       (REG_DMA30_BWLCNT)
#define LP0_DMA_BWLCNT_CUR                   (REG_DMA30_BWLCNT_CUR)
#define LP0_DMA_BWMCNT                       (REG_DMA30_BWMCNT)
#define LP0_DMA_BWMCNT_CUR                   (REG_DMA30_BWMCNT_CUR)
#define LP1_DMA_DSCPTR_NXT                   (REG_DMA36_DSCPTR_NXT)
#define LP1_DMA_ADDRSTART                    (REG_DMA36_ADDRSTART)
#define LP1_DMA_CFG                          (REG_DMA36_CFG)
#define LP1_DMA_XCNT                         (REG_DMA36_XCNT)
#define LP1_DMA_XMOD                         (REG_DMA36_XMOD)
#define LP1_DMA_YCNT                         (REG_DMA36_YCNT)
#define LP1_DMA_YMOD                         (REG_DMA36_YMOD)
#define LP1_DMA_DSCPTR_CUR                   (REG_DMA36_DSCPTR_CUR)
#define LP1_DMA_DSCPTR_PRV                   (REG_DMA36_DSCPTR_PRV)
#define LP1_DMA_ADDR_CUR                     (REG_DMA36_ADDR_CUR)
#define LP1_DMA_STAT                         (REG_DMA36_STAT)
#define LP1_DMA_XCNT_CUR                     (REG_DMA36_XCNT_CUR)
#define LP1_DMA_YCNT_CUR                     (REG_DMA36_YCNT_CUR)
#define LP1_DMA_BWLCNT                       (REG_DMA36_BWLCNT)
#define LP1_DMA_BWLCNT_CUR                   (REG_DMA36_BWLCNT_CUR)
#define LP1_DMA_BWMCNT                       (REG_DMA36_BWMCNT)
#define LP1_DMA_BWMCNT_CUR                   (REG_DMA36_BWMCNT_CUR)
#define SPORT0_A_DMA_DSCPTR_NXT              (REG_DMA0_DSCPTR_NXT)
#define SPORT0_A_DMA_ADDRSTART               (REG_DMA0_ADDRSTART)
#define SPORT0_A_DMA_CFG                     (REG_DMA0_CFG)
#define SPORT0_A_DMA_XCNT                    (REG_DMA0_XCNT)
#define SPORT0_A_DMA_XMOD                    (REG_DMA0_XMOD)
#define SPORT0_A_DMA_YCNT                    (REG_DMA0_YCNT)
#define SPORT0_A_DMA_YMOD                    (REG_DMA0_YMOD)
#define SPORT0_A_DMA_DSCPTR_CUR              (REG_DMA0_DSCPTR_CUR)
#define SPORT0_A_DMA_DSCPTR_PRV              (REG_DMA0_DSCPTR_PRV)
#define SPORT0_A_DMA_ADDR_CUR                (REG_DMA0_ADDR_CUR)
#define SPORT0_A_DMA_STAT                    (REG_DMA0_STAT)
#define SPORT0_A_DMA_XCNT_CUR                (REG_DMA0_XCNT_CUR)
#define SPORT0_A_DMA_YCNT_CUR                (REG_DMA0_YCNT_CUR)
#define SPORT0_A_DMA_BWLCNT                  (REG_DMA0_BWLCNT)
#define SPORT0_A_DMA_BWLCNT_CUR              (REG_DMA0_BWLCNT_CUR)
#define SPORT0_A_DMA_BWMCNT                  (REG_DMA0_BWMCNT)
#define SPORT0_A_DMA_BWMCNT_CUR              (REG_DMA0_BWMCNT_CUR)
#define SPORT0_B_DMA_DSCPTR_NXT              (REG_DMA1_DSCPTR_NXT)
#define SPORT0_B_DMA_ADDRSTART               (REG_DMA1_ADDRSTART)
#define SPORT0_B_DMA_CFG                     (REG_DMA1_CFG)
#define SPORT0_B_DMA_XCNT                    (REG_DMA1_XCNT)
#define SPORT0_B_DMA_XMOD                    (REG_DMA1_XMOD)
#define SPORT0_B_DMA_YCNT                    (REG_DMA1_YCNT)
#define SPORT0_B_DMA_YMOD                    (REG_DMA1_YMOD)
#define SPORT0_B_DMA_DSCPTR_CUR              (REG_DMA1_DSCPTR_CUR)
#define SPORT0_B_DMA_DSCPTR_PRV              (REG_DMA1_DSCPTR_PRV)
#define SPORT0_B_DMA_ADDR_CUR                (REG_DMA1_ADDR_CUR)
#define SPORT0_B_DMA_STAT                    (REG_DMA1_STAT)
#define SPORT0_B_DMA_XCNT_CUR                (REG_DMA1_XCNT_CUR)
#define SPORT0_B_DMA_YCNT_CUR                (REG_DMA1_YCNT_CUR)
#define SPORT0_B_DMA_BWLCNT                  (REG_DMA1_BWLCNT)
#define SPORT0_B_DMA_BWLCNT_CUR              (REG_DMA1_BWLCNT_CUR)
#define SPORT0_B_DMA_BWMCNT                  (REG_DMA1_BWMCNT)
#define SPORT0_B_DMA_BWMCNT_CUR              (REG_DMA1_BWMCNT_CUR)
#define SPORT1_A_DMA_DSCPTR_NXT              (REG_DMA2_DSCPTR_NXT)
#define SPORT1_A_DMA_ADDRSTART               (REG_DMA2_ADDRSTART)
#define SPORT1_A_DMA_CFG                     (REG_DMA2_CFG)
#define SPORT1_A_DMA_XCNT                    (REG_DMA2_XCNT)
#define SPORT1_A_DMA_XMOD                    (REG_DMA2_XMOD)
#define SPORT1_A_DMA_YCNT                    (REG_DMA2_YCNT)
#define SPORT1_A_DMA_YMOD                    (REG_DMA2_YMOD)
#define SPORT1_A_DMA_DSCPTR_CUR              (REG_DMA2_DSCPTR_CUR)
#define SPORT1_A_DMA_DSCPTR_PRV              (REG_DMA2_DSCPTR_PRV)
#define SPORT1_A_DMA_ADDR_CUR                (REG_DMA2_ADDR_CUR)
#define SPORT1_A_DMA_STAT                    (REG_DMA2_STAT)
#define SPORT1_A_DMA_XCNT_CUR                (REG_DMA2_XCNT_CUR)
#define SPORT1_A_DMA_YCNT_CUR                (REG_DMA2_YCNT_CUR)
#define SPORT1_A_DMA_BWLCNT                  (REG_DMA2_BWLCNT)
#define SPORT1_A_DMA_BWLCNT_CUR              (REG_DMA2_BWLCNT_CUR)
#define SPORT1_A_DMA_BWMCNT                  (REG_DMA2_BWMCNT)
#define SPORT1_A_DMA_BWMCNT_CUR              (REG_DMA2_BWMCNT_CUR)
#define SPORT1_B_DMA_DSCPTR_NXT              (REG_DMA3_DSCPTR_NXT)
#define SPORT1_B_DMA_ADDRSTART               (REG_DMA3_ADDRSTART)
#define SPORT1_B_DMA_CFG                     (REG_DMA3_CFG)
#define SPORT1_B_DMA_XCNT                    (REG_DMA3_XCNT)
#define SPORT1_B_DMA_XMOD                    (REG_DMA3_XMOD)
#define SPORT1_B_DMA_YCNT                    (REG_DMA3_YCNT)
#define SPORT1_B_DMA_YMOD                    (REG_DMA3_YMOD)
#define SPORT1_B_DMA_DSCPTR_CUR              (REG_DMA3_DSCPTR_CUR)
#define SPORT1_B_DMA_DSCPTR_PRV              (REG_DMA3_DSCPTR_PRV)
#define SPORT1_B_DMA_ADDR_CUR                (REG_DMA3_ADDR_CUR)
#define SPORT1_B_DMA_STAT                    (REG_DMA3_STAT)
#define SPORT1_B_DMA_XCNT_CUR                (REG_DMA3_XCNT_CUR)
#define SPORT1_B_DMA_YCNT_CUR                (REG_DMA3_YCNT_CUR)
#define SPORT1_B_DMA_BWLCNT                  (REG_DMA3_BWLCNT)
#define SPORT1_B_DMA_BWLCNT_CUR              (REG_DMA3_BWLCNT_CUR)
#define SPORT1_B_DMA_BWMCNT                  (REG_DMA3_BWMCNT)
#define SPORT1_B_DMA_BWMCNT_CUR              (REG_DMA3_BWMCNT_CUR)
#define SPORT2_A_DMA_DSCPTR_NXT              (REG_DMA4_DSCPTR_NXT)
#define SPORT2_A_DMA_ADDRSTART               (REG_DMA4_ADDRSTART)
#define SPORT2_A_DMA_CFG                     (REG_DMA4_CFG)
#define SPORT2_A_DMA_XCNT                    (REG_DMA4_XCNT)
#define SPORT2_A_DMA_XMOD                    (REG_DMA4_XMOD)
#define SPORT2_A_DMA_YCNT                    (REG_DMA4_YCNT)
#define SPORT2_A_DMA_YMOD                    (REG_DMA4_YMOD)
#define SPORT2_A_DMA_DSCPTR_CUR              (REG_DMA4_DSCPTR_CUR)
#define SPORT2_A_DMA_DSCPTR_PRV              (REG_DMA4_DSCPTR_PRV)
#define SPORT2_A_DMA_ADDR_CUR                (REG_DMA4_ADDR_CUR)
#define SPORT2_A_DMA_STAT                    (REG_DMA4_STAT)
#define SPORT2_A_DMA_XCNT_CUR                (REG_DMA4_XCNT_CUR)
#define SPORT2_A_DMA_YCNT_CUR                (REG_DMA4_YCNT_CUR)
#define SPORT2_A_DMA_BWLCNT                  (REG_DMA4_BWLCNT)
#define SPORT2_A_DMA_BWLCNT_CUR              (REG_DMA4_BWLCNT_CUR)
#define SPORT2_A_DMA_BWMCNT                  (REG_DMA4_BWMCNT)
#define SPORT2_A_DMA_BWMCNT_CUR              (REG_DMA4_BWMCNT_CUR)
#define SPORT2_B_DMA_DSCPTR_NXT              (REG_DMA5_DSCPTR_NXT)
#define SPORT2_B_DMA_ADDRSTART               (REG_DMA5_ADDRSTART)
#define SPORT2_B_DMA_CFG                     (REG_DMA5_CFG)
#define SPORT2_B_DMA_XCNT                    (REG_DMA5_XCNT)
#define SPORT2_B_DMA_XMOD                    (REG_DMA5_XMOD)
#define SPORT2_B_DMA_YCNT                    (REG_DMA5_YCNT)
#define SPORT2_B_DMA_YMOD                    (REG_DMA5_YMOD)
#define SPORT2_B_DMA_DSCPTR_CUR              (REG_DMA5_DSCPTR_CUR)
#define SPORT2_B_DMA_DSCPTR_PRV              (REG_DMA5_DSCPTR_PRV)
#define SPORT2_B_DMA_ADDR_CUR                (REG_DMA5_ADDR_CUR)
#define SPORT2_B_DMA_STAT                    (REG_DMA5_STAT)
#define SPORT2_B_DMA_XCNT_CUR                (REG_DMA5_XCNT_CUR)
#define SPORT2_B_DMA_YCNT_CUR                (REG_DMA5_YCNT_CUR)
#define SPORT2_B_DMA_BWLCNT                  (REG_DMA5_BWLCNT)
#define SPORT2_B_DMA_BWLCNT_CUR              (REG_DMA5_BWLCNT_CUR)
#define SPORT2_B_DMA_BWMCNT                  (REG_DMA5_BWMCNT)
#define SPORT2_B_DMA_BWMCNT_CUR              (REG_DMA5_BWMCNT_CUR)
#define SPORT3_A_DMA_DSCPTR_NXT              (REG_DMA6_DSCPTR_NXT)
#define SPORT3_A_DMA_ADDRSTART               (REG_DMA6_ADDRSTART)
#define SPORT3_A_DMA_CFG                     (REG_DMA6_CFG)
#define SPORT3_A_DMA_XCNT                    (REG_DMA6_XCNT)
#define SPORT3_A_DMA_XMOD                    (REG_DMA6_XMOD)
#define SPORT3_A_DMA_YCNT                    (REG_DMA6_YCNT)
#define SPORT3_A_DMA_YMOD                    (REG_DMA6_YMOD)
#define SPORT3_A_DMA_DSCPTR_CUR              (REG_DMA6_DSCPTR_CUR)
#define SPORT3_A_DMA_DSCPTR_PRV              (REG_DMA6_DSCPTR_PRV)
#define SPORT3_A_DMA_ADDR_CUR                (REG_DMA6_ADDR_CUR)
#define SPORT3_A_DMA_STAT                    (REG_DMA6_STAT)
#define SPORT3_A_DMA_XCNT_CUR                (REG_DMA6_XCNT_CUR)
#define SPORT3_A_DMA_YCNT_CUR                (REG_DMA6_YCNT_CUR)
#define SPORT3_A_DMA_BWLCNT                  (REG_DMA6_BWLCNT)
#define SPORT3_A_DMA_BWLCNT_CUR              (REG_DMA6_BWLCNT_CUR)
#define SPORT3_A_DMA_BWMCNT                  (REG_DMA6_BWMCNT)
#define SPORT3_A_DMA_BWMCNT_CUR              (REG_DMA6_BWMCNT_CUR)
#define SPORT3_B_DMA_DSCPTR_NXT              (REG_DMA7_DSCPTR_NXT)
#define SPORT3_B_DMA_ADDRSTART               (REG_DMA7_ADDRSTART)
#define SPORT3_B_DMA_CFG                     (REG_DMA7_CFG)
#define SPORT3_B_DMA_XCNT                    (REG_DMA7_XCNT)
#define SPORT3_B_DMA_XMOD                    (REG_DMA7_XMOD)
#define SPORT3_B_DMA_YCNT                    (REG_DMA7_YCNT)
#define SPORT3_B_DMA_YMOD                    (REG_DMA7_YMOD)
#define SPORT3_B_DMA_DSCPTR_CUR              (REG_DMA7_DSCPTR_CUR)
#define SPORT3_B_DMA_DSCPTR_PRV              (REG_DMA7_DSCPTR_PRV)
#define SPORT3_B_DMA_ADDR_CUR                (REG_DMA7_ADDR_CUR)
#define SPORT3_B_DMA_STAT                    (REG_DMA7_STAT)
#define SPORT3_B_DMA_XCNT_CUR                (REG_DMA7_XCNT_CUR)
#define SPORT3_B_DMA_YCNT_CUR                (REG_DMA7_YCNT_CUR)
#define SPORT3_B_DMA_BWLCNT                  (REG_DMA7_BWLCNT)
#define SPORT3_B_DMA_BWLCNT_CUR              (REG_DMA7_BWLCNT_CUR)
#define SPORT3_B_DMA_BWMCNT                  (REG_DMA7_BWMCNT)
#define SPORT3_B_DMA_BWMCNT_CUR              (REG_DMA7_BWMCNT_CUR)
#define SPORT4_A_DMA_DSCPTR_NXT              (REG_DMA10_DSCPTR_NXT)
#define SPORT4_A_DMA_ADDRSTART               (REG_DMA10_ADDRSTART)
#define SPORT4_A_DMA_CFG                     (REG_DMA10_CFG)
#define SPORT4_A_DMA_XCNT                    (REG_DMA10_XCNT)
#define SPORT4_A_DMA_XMOD                    (REG_DMA10_XMOD)
#define SPORT4_A_DMA_YCNT                    (REG_DMA10_YCNT)
#define SPORT4_A_DMA_YMOD                    (REG_DMA10_YMOD)
#define SPORT4_A_DMA_DSCPTR_CUR              (REG_DMA10_DSCPTR_CUR)
#define SPORT4_A_DMA_DSCPTR_PRV              (REG_DMA10_DSCPTR_PRV)
#define SPORT4_A_DMA_ADDR_CUR                (REG_DMA10_ADDR_CUR)
#define SPORT4_A_DMA_STAT                    (REG_DMA10_STAT)
#define SPORT4_A_DMA_XCNT_CUR                (REG_DMA10_XCNT_CUR)
#define SPORT4_A_DMA_YCNT_CUR                (REG_DMA10_YCNT_CUR)
#define SPORT4_A_DMA_BWLCNT                  (REG_DMA10_BWLCNT)
#define SPORT4_A_DMA_BWLCNT_CUR              (REG_DMA10_BWLCNT_CUR)
#define SPORT4_A_DMA_BWMCNT                  (REG_DMA10_BWMCNT)
#define SPORT4_A_DMA_BWMCNT_CUR              (REG_DMA10_BWMCNT_CUR)
#define SPORT4_B_DMA_DSCPTR_NXT              (REG_DMA11_DSCPTR_NXT)
#define SPORT4_B_DMA_ADDRSTART               (REG_DMA11_ADDRSTART)
#define SPORT4_B_DMA_CFG                     (REG_DMA11_CFG)
#define SPORT4_B_DMA_XCNT                    (REG_DMA11_XCNT)
#define SPORT4_B_DMA_XMOD                    (REG_DMA11_XMOD)
#define SPORT4_B_DMA_YCNT                    (REG_DMA11_YCNT)
#define SPORT4_B_DMA_YMOD                    (REG_DMA11_YMOD)
#define SPORT4_B_DMA_DSCPTR_CUR              (REG_DMA11_DSCPTR_CUR)
#define SPORT4_B_DMA_DSCPTR_PRV              (REG_DMA11_DSCPTR_PRV)
#define SPORT4_B_DMA_ADDR_CUR                (REG_DMA11_ADDR_CUR)
#define SPORT4_B_DMA_STAT                    (REG_DMA11_STAT)
#define SPORT4_B_DMA_XCNT_CUR                (REG_DMA11_XCNT_CUR)
#define SPORT4_B_DMA_YCNT_CUR                (REG_DMA11_YCNT_CUR)
#define SPORT4_B_DMA_BWLCNT                  (REG_DMA11_BWLCNT)
#define SPORT4_B_DMA_BWLCNT_CUR              (REG_DMA11_BWLCNT_CUR)
#define SPORT4_B_DMA_BWMCNT                  (REG_DMA11_BWMCNT)
#define SPORT4_B_DMA_BWMCNT_CUR              (REG_DMA11_BWMCNT_CUR)
#define SPORT5_A_DMA_DSCPTR_NXT              (REG_DMA12_DSCPTR_NXT)
#define SPORT5_A_DMA_ADDRSTART               (REG_DMA12_ADDRSTART)
#define SPORT5_A_DMA_CFG                     (REG_DMA12_CFG)
#define SPORT5_A_DMA_XCNT                    (REG_DMA12_XCNT)
#define SPORT5_A_DMA_XMOD                    (REG_DMA12_XMOD)
#define SPORT5_A_DMA_YCNT                    (REG_DMA12_YCNT)
#define SPORT5_A_DMA_YMOD                    (REG_DMA12_YMOD)
#define SPORT5_A_DMA_DSCPTR_CUR              (REG_DMA12_DSCPTR_CUR)
#define SPORT5_A_DMA_DSCPTR_PRV              (REG_DMA12_DSCPTR_PRV)
#define SPORT5_A_DMA_ADDR_CUR                (REG_DMA12_ADDR_CUR)
#define SPORT5_A_DMA_STAT                    (REG_DMA12_STAT)
#define SPORT5_A_DMA_XCNT_CUR                (REG_DMA12_XCNT_CUR)
#define SPORT5_A_DMA_YCNT_CUR                (REG_DMA12_YCNT_CUR)
#define SPORT5_A_DMA_BWLCNT                  (REG_DMA12_BWLCNT)
#define SPORT5_A_DMA_BWLCNT_CUR              (REG_DMA12_BWLCNT_CUR)
#define SPORT5_A_DMA_BWMCNT                  (REG_DMA12_BWMCNT)
#define SPORT5_A_DMA_BWMCNT_CUR              (REG_DMA12_BWMCNT_CUR)
#define SPORT5_B_DMA_DSCPTR_NXT              (REG_DMA13_DSCPTR_NXT)
#define SPORT5_B_DMA_ADDRSTART               (REG_DMA13_ADDRSTART)
#define SPORT5_B_DMA_CFG                     (REG_DMA13_CFG)
#define SPORT5_B_DMA_XCNT                    (REG_DMA13_XCNT)
#define SPORT5_B_DMA_XMOD                    (REG_DMA13_XMOD)
#define SPORT5_B_DMA_YCNT                    (REG_DMA13_YCNT)
#define SPORT5_B_DMA_YMOD                    (REG_DMA13_YMOD)
#define SPORT5_B_DMA_DSCPTR_CUR              (REG_DMA13_DSCPTR_CUR)
#define SPORT5_B_DMA_DSCPTR_PRV              (REG_DMA13_DSCPTR_PRV)
#define SPORT5_B_DMA_ADDR_CUR                (REG_DMA13_ADDR_CUR)
#define SPORT5_B_DMA_STAT                    (REG_DMA13_STAT)
#define SPORT5_B_DMA_XCNT_CUR                (REG_DMA13_XCNT_CUR)
#define SPORT5_B_DMA_YCNT_CUR                (REG_DMA13_YCNT_CUR)
#define SPORT5_B_DMA_BWLCNT                  (REG_DMA13_BWLCNT)
#define SPORT5_B_DMA_BWLCNT_CUR              (REG_DMA13_BWLCNT_CUR)
#define SPORT5_B_DMA_BWMCNT                  (REG_DMA13_BWMCNT)
#define SPORT5_B_DMA_BWMCNT_CUR              (REG_DMA13_BWMCNT_CUR)
#define SPORT6_A_DMA_DSCPTR_NXT              (REG_DMA14_DSCPTR_NXT)
#define SPORT6_A_DMA_ADDRSTART               (REG_DMA14_ADDRSTART)
#define SPORT6_A_DMA_CFG                     (REG_DMA14_CFG)
#define SPORT6_A_DMA_XCNT                    (REG_DMA14_XCNT)
#define SPORT6_A_DMA_XMOD                    (REG_DMA14_XMOD)
#define SPORT6_A_DMA_YCNT                    (REG_DMA14_YCNT)
#define SPORT6_A_DMA_YMOD                    (REG_DMA14_YMOD)
#define SPORT6_A_DMA_DSCPTR_CUR              (REG_DMA14_DSCPTR_CUR)
#define SPORT6_A_DMA_DSCPTR_PRV              (REG_DMA14_DSCPTR_PRV)
#define SPORT6_A_DMA_ADDR_CUR                (REG_DMA14_ADDR_CUR)
#define SPORT6_A_DMA_STAT                    (REG_DMA14_STAT)
#define SPORT6_A_DMA_XCNT_CUR                (REG_DMA14_XCNT_CUR)
#define SPORT6_A_DMA_YCNT_CUR                (REG_DMA14_YCNT_CUR)
#define SPORT6_A_DMA_BWLCNT                  (REG_DMA14_BWLCNT)
#define SPORT6_A_DMA_BWLCNT_CUR              (REG_DMA14_BWLCNT_CUR)
#define SPORT6_A_DMA_BWMCNT                  (REG_DMA14_BWMCNT)
#define SPORT6_A_DMA_BWMCNT_CUR              (REG_DMA14_BWMCNT_CUR)
#define SPORT6_B_DMA_DSCPTR_NXT              (REG_DMA15_DSCPTR_NXT)
#define SPORT6_B_DMA_ADDRSTART               (REG_DMA15_ADDRSTART)
#define SPORT6_B_DMA_CFG                     (REG_DMA15_CFG)
#define SPORT6_B_DMA_XCNT                    (REG_DMA15_XCNT)
#define SPORT6_B_DMA_XMOD                    (REG_DMA15_XMOD)
#define SPORT6_B_DMA_YCNT                    (REG_DMA15_YCNT)
#define SPORT6_B_DMA_YMOD                    (REG_DMA15_YMOD)
#define SPORT6_B_DMA_DSCPTR_CUR              (REG_DMA15_DSCPTR_CUR)
#define SPORT6_B_DMA_DSCPTR_PRV              (REG_DMA15_DSCPTR_PRV)
#define SPORT6_B_DMA_ADDR_CUR                (REG_DMA15_ADDR_CUR)
#define SPORT6_B_DMA_STAT                    (REG_DMA15_STAT)
#define SPORT6_B_DMA_XCNT_CUR                (REG_DMA15_XCNT_CUR)
#define SPORT6_B_DMA_YCNT_CUR                (REG_DMA15_YCNT_CUR)
#define SPORT6_B_DMA_BWLCNT                  (REG_DMA15_BWLCNT)
#define SPORT6_B_DMA_BWLCNT_CUR              (REG_DMA15_BWLCNT_CUR)
#define SPORT6_B_DMA_BWMCNT                  (REG_DMA15_BWMCNT)
#define SPORT6_B_DMA_BWMCNT_CUR              (REG_DMA15_BWMCNT_CUR)
#define SPORT7_A_DMA_DSCPTR_NXT              (REG_DMA16_DSCPTR_NXT)
#define SPORT7_A_DMA_ADDRSTART               (REG_DMA16_ADDRSTART)
#define SPORT7_A_DMA_CFG                     (REG_DMA16_CFG)
#define SPORT7_A_DMA_XCNT                    (REG_DMA16_XCNT)
#define SPORT7_A_DMA_XMOD                    (REG_DMA16_XMOD)
#define SPORT7_A_DMA_YCNT                    (REG_DMA16_YCNT)
#define SPORT7_A_DMA_YMOD                    (REG_DMA16_YMOD)
#define SPORT7_A_DMA_DSCPTR_CUR              (REG_DMA16_DSCPTR_CUR)
#define SPORT7_A_DMA_DSCPTR_PRV              (REG_DMA16_DSCPTR_PRV)
#define SPORT7_A_DMA_ADDR_CUR                (REG_DMA16_ADDR_CUR)
#define SPORT7_A_DMA_STAT                    (REG_DMA16_STAT)
#define SPORT7_A_DMA_XCNT_CUR                (REG_DMA16_XCNT_CUR)
#define SPORT7_A_DMA_YCNT_CUR                (REG_DMA16_YCNT_CUR)
#define SPORT7_A_DMA_BWLCNT                  (REG_DMA16_BWLCNT)
#define SPORT7_A_DMA_BWLCNT_CUR              (REG_DMA16_BWLCNT_CUR)
#define SPORT7_A_DMA_BWMCNT                  (REG_DMA16_BWMCNT)
#define SPORT7_A_DMA_BWMCNT_CUR              (REG_DMA16_BWMCNT_CUR)
#define SPORT7_B_DMA_DSCPTR_NXT              (REG_DMA17_DSCPTR_NXT)
#define SPORT7_B_DMA_ADDRSTART               (REG_DMA17_ADDRSTART)
#define SPORT7_B_DMA_CFG                     (REG_DMA17_CFG)
#define SPORT7_B_DMA_XCNT                    (REG_DMA17_XCNT)
#define SPORT7_B_DMA_XMOD                    (REG_DMA17_XMOD)
#define SPORT7_B_DMA_YCNT                    (REG_DMA17_YCNT)
#define SPORT7_B_DMA_YMOD                    (REG_DMA17_YMOD)
#define SPORT7_B_DMA_DSCPTR_CUR              (REG_DMA17_DSCPTR_CUR)
#define SPORT7_B_DMA_DSCPTR_PRV              (REG_DMA17_DSCPTR_PRV)
#define SPORT7_B_DMA_ADDR_CUR                (REG_DMA17_ADDR_CUR)
#define SPORT7_B_DMA_STAT                    (REG_DMA17_STAT)
#define SPORT7_B_DMA_XCNT_CUR                (REG_DMA17_XCNT_CUR)
#define SPORT7_B_DMA_YCNT_CUR                (REG_DMA17_YCNT_CUR)
#define SPORT7_B_DMA_BWLCNT                  (REG_DMA17_BWLCNT)
#define SPORT7_B_DMA_BWLCNT_CUR              (REG_DMA17_BWLCNT_CUR)
#define SPORT7_B_DMA_BWMCNT                  (REG_DMA17_BWMCNT)
#define SPORT7_B_DMA_BWMCNT_CUR              (REG_DMA17_BWMCNT_CUR)
#define UART0_TXDMA_DSCPTR_NXT               (REG_DMA20_DSCPTR_NXT)
#define UART0_TXDMA_ADDRSTART                (REG_DMA20_ADDRSTART)
#define UART0_TXDMA_CFG                      (REG_DMA20_CFG)
#define UART0_TXDMA_XCNT                     (REG_DMA20_XCNT)
#define UART0_TXDMA_XMOD                     (REG_DMA20_XMOD)
#define UART0_TXDMA_YCNT                     (REG_DMA20_YCNT)
#define UART0_TXDMA_YMOD                     (REG_DMA20_YMOD)
#define UART0_TXDMA_DSCPTR_CUR               (REG_DMA20_DSCPTR_CUR)
#define UART0_TXDMA_DSCPTR_PRV               (REG_DMA20_DSCPTR_PRV)
#define UART0_TXDMA_ADDR_CUR                 (REG_DMA20_ADDR_CUR)
#define UART0_TXDMA_STAT                     (REG_DMA20_STAT)
#define UART0_TXDMA_XCNT_CUR                 (REG_DMA20_XCNT_CUR)
#define UART0_TXDMA_YCNT_CUR                 (REG_DMA20_YCNT_CUR)
#define UART0_TXDMA_BWLCNT                   (REG_DMA20_BWLCNT)
#define UART0_TXDMA_BWLCNT_CUR               (REG_DMA20_BWLCNT_CUR)
#define UART0_TXDMA_BWMCNT                   (REG_DMA20_BWMCNT)
#define UART0_TXDMA_BWMCNT_CUR               (REG_DMA20_BWMCNT_CUR)
#define UART0_RXDMA_DSCPTR_NXT               (REG_DMA21_DSCPTR_NXT)
#define UART0_RXDMA_ADDRSTART                (REG_DMA21_ADDRSTART)
#define UART0_RXDMA_CFG                      (REG_DMA21_CFG)
#define UART0_RXDMA_XCNT                     (REG_DMA21_XCNT)
#define UART0_RXDMA_XMOD                     (REG_DMA21_XMOD)
#define UART0_RXDMA_YCNT                     (REG_DMA21_YCNT)
#define UART0_RXDMA_YMOD                     (REG_DMA21_YMOD)
#define UART0_RXDMA_DSCPTR_CUR               (REG_DMA21_DSCPTR_CUR)
#define UART0_RXDMA_DSCPTR_PRV               (REG_DMA21_DSCPTR_PRV)
#define UART0_RXDMA_ADDR_CUR                 (REG_DMA21_ADDR_CUR)
#define UART0_RXDMA_STAT                     (REG_DMA21_STAT)
#define UART0_RXDMA_XCNT_CUR                 (REG_DMA21_XCNT_CUR)
#define UART0_RXDMA_YCNT_CUR                 (REG_DMA21_YCNT_CUR)
#define UART0_RXDMA_BWLCNT                   (REG_DMA21_BWLCNT)
#define UART0_RXDMA_BWLCNT_CUR               (REG_DMA21_BWLCNT_CUR)
#define UART0_RXDMA_BWMCNT                   (REG_DMA21_BWMCNT)
#define UART0_RXDMA_BWMCNT_CUR               (REG_DMA21_BWMCNT_CUR)
#define EPPI0_CH0_DMA_DSCPTR_NXT             (REG_DMA28_DSCPTR_NXT)
#define EPPI0_CH0_DMA_ADDRSTART              (REG_DMA28_ADDRSTART)
#define EPPI0_CH0_DMA_CFG                    (REG_DMA28_CFG)
#define EPPI0_CH0_DMA_XCNT                   (REG_DMA28_XCNT)
#define EPPI0_CH0_DMA_XMOD                   (REG_DMA28_XMOD)
#define EPPI0_CH0_DMA_YCNT                   (REG_DMA28_YCNT)
#define EPPI0_CH0_DMA_YMOD                   (REG_DMA28_YMOD)
#define EPPI0_CH0_DMA_DSCPTR_CUR             (REG_DMA28_DSCPTR_CUR)
#define EPPI0_CH0_DMA_DSCPTR_PRV             (REG_DMA28_DSCPTR_PRV)
#define EPPI0_CH0_DMA_ADDR_CUR               (REG_DMA28_ADDR_CUR)
#define EPPI0_CH0_DMA_STAT                   (REG_DMA28_STAT)
#define EPPI0_CH0_DMA_XCNT_CUR               (REG_DMA28_XCNT_CUR)
#define EPPI0_CH0_DMA_YCNT_CUR               (REG_DMA28_YCNT_CUR)
#define EPPI0_CH0_DMA_BWLCNT                 (REG_DMA28_BWLCNT)
#define EPPI0_CH0_DMA_BWLCNT_CUR             (REG_DMA28_BWLCNT_CUR)
#define EPPI0_CH0_DMA_BWMCNT                 (REG_DMA28_BWMCNT)
#define EPPI0_CH0_DMA_BWMCNT_CUR             (REG_DMA28_BWMCNT_CUR)
#define EPPI0_CH1_DMA_DSCPTR_NXT             (REG_DMA29_DSCPTR_NXT)
#define EPPI0_CH1_DMA_ADDRSTART              (REG_DMA29_ADDRSTART)
#define EPPI0_CH1_DMA_CFG                    (REG_DMA29_CFG)
#define EPPI0_CH1_DMA_XCNT                   (REG_DMA29_XCNT)
#define EPPI0_CH1_DMA_XMOD                   (REG_DMA29_XMOD)
#define EPPI0_CH1_DMA_YCNT                   (REG_DMA29_YCNT)
#define EPPI0_CH1_DMA_YMOD                   (REG_DMA29_YMOD)
#define EPPI0_CH1_DMA_DSCPTR_CUR             (REG_DMA29_DSCPTR_CUR)
#define EPPI0_CH1_DMA_DSCPTR_PRV             (REG_DMA29_DSCPTR_PRV)
#define EPPI0_CH1_DMA_ADDR_CUR               (REG_DMA29_ADDR_CUR)
#define EPPI0_CH1_DMA_STAT                   (REG_DMA29_STAT)
#define EPPI0_CH1_DMA_XCNT_CUR               (REG_DMA29_XCNT_CUR)
#define EPPI0_CH1_DMA_YCNT_CUR               (REG_DMA29_YCNT_CUR)
#define EPPI0_CH1_DMA_BWLCNT                 (REG_DMA29_BWLCNT)
#define EPPI0_CH1_DMA_BWLCNT_CUR             (REG_DMA29_BWLCNT_CUR)
#define EPPI0_CH1_DMA_BWMCNT                 (REG_DMA29_BWMCNT)
#define EPPI0_CH1_DMA_BWMCNT_CUR             (REG_DMA29_BWMCNT_CUR)
#define UART1_TXDMA_DSCPTR_NXT               (REG_DMA34_DSCPTR_NXT)
#define UART1_TXDMA_ADDRSTART                (REG_DMA34_ADDRSTART)
#define UART1_TXDMA_CFG                      (REG_DMA34_CFG)
#define UART1_TXDMA_XCNT                     (REG_DMA34_XCNT)
#define UART1_TXDMA_XMOD                     (REG_DMA34_XMOD)
#define UART1_TXDMA_YCNT                     (REG_DMA34_YCNT)
#define UART1_TXDMA_YMOD                     (REG_DMA34_YMOD)
#define UART1_TXDMA_DSCPTR_CUR               (REG_DMA34_DSCPTR_CUR)
#define UART1_TXDMA_DSCPTR_PRV               (REG_DMA34_DSCPTR_PRV)
#define UART1_TXDMA_ADDR_CUR                 (REG_DMA34_ADDR_CUR)
#define UART1_TXDMA_STAT                     (REG_DMA34_STAT)
#define UART1_TXDMA_XCNT_CUR                 (REG_DMA34_XCNT_CUR)
#define UART1_TXDMA_YCNT_CUR                 (REG_DMA34_YCNT_CUR)
#define UART1_TXDMA_BWLCNT                   (REG_DMA34_BWLCNT)
#define UART1_TXDMA_BWLCNT_CUR               (REG_DMA34_BWLCNT_CUR)
#define UART1_TXDMA_BWMCNT                   (REG_DMA34_BWMCNT)
#define UART1_TXDMA_BWMCNT_CUR               (REG_DMA34_BWMCNT_CUR)
#define UART1_RXDMA_DSCPTR_NXT               (REG_DMA35_DSCPTR_NXT)
#define UART1_RXDMA_ADDRSTART                (REG_DMA35_ADDRSTART)
#define UART1_RXDMA_CFG                      (REG_DMA35_CFG)
#define UART1_RXDMA_XCNT                     (REG_DMA35_XCNT)
#define UART1_RXDMA_XMOD                     (REG_DMA35_XMOD)
#define UART1_RXDMA_YCNT                     (REG_DMA35_YCNT)
#define UART1_RXDMA_YMOD                     (REG_DMA35_YMOD)
#define UART1_RXDMA_DSCPTR_CUR               (REG_DMA35_DSCPTR_CUR)
#define UART1_RXDMA_DSCPTR_PRV               (REG_DMA35_DSCPTR_PRV)
#define UART1_RXDMA_ADDR_CUR                 (REG_DMA35_ADDR_CUR)
#define UART1_RXDMA_STAT                     (REG_DMA35_STAT)
#define UART1_RXDMA_XCNT_CUR                 (REG_DMA35_XCNT_CUR)
#define UART1_RXDMA_YCNT_CUR                 (REG_DMA35_YCNT_CUR)
#define UART1_RXDMA_BWLCNT                   (REG_DMA35_BWLCNT)
#define UART1_RXDMA_BWLCNT_CUR               (REG_DMA35_BWLCNT_CUR)
#define UART1_RXDMA_BWMCNT                   (REG_DMA35_BWMCNT)
#define UART1_RXDMA_BWMCNT_CUR               (REG_DMA35_BWMCNT_CUR)
#define UART2_TXDMA_DSCPTR_NXT               (REG_DMA37_DSCPTR_NXT)
#define UART2_TXDMA_ADDRSTART                (REG_DMA37_ADDRSTART)
#define UART2_TXDMA_CFG                      (REG_DMA37_CFG)
#define UART2_TXDMA_XCNT                     (REG_DMA37_XCNT)
#define UART2_TXDMA_XMOD                     (REG_DMA37_XMOD)
#define UART2_TXDMA_YCNT                     (REG_DMA37_YCNT)
#define UART2_TXDMA_YMOD                     (REG_DMA37_YMOD)
#define UART2_TXDMA_DSCPTR_CUR               (REG_DMA37_DSCPTR_CUR)
#define UART2_TXDMA_DSCPTR_PRV               (REG_DMA37_DSCPTR_PRV)
#define UART2_TXDMA_ADDR_CUR                 (REG_DMA37_ADDR_CUR)
#define UART2_TXDMA_STAT                     (REG_DMA37_STAT)
#define UART2_TXDMA_XCNT_CUR                 (REG_DMA37_XCNT_CUR)
#define UART2_TXDMA_YCNT_CUR                 (REG_DMA37_YCNT_CUR)
#define UART2_TXDMA_BWLCNT                   (REG_DMA37_BWLCNT)
#define UART2_TXDMA_BWLCNT_CUR               (REG_DMA37_BWLCNT_CUR)
#define UART2_TXDMA_BWMCNT                   (REG_DMA37_BWMCNT)
#define UART2_TXDMA_BWMCNT_CUR               (REG_DMA37_BWMCNT_CUR)
#define UART2_RXDMA_DSCPTR_NXT               (REG_DMA38_DSCPTR_NXT)
#define UART2_RXDMA_ADDRSTART                (REG_DMA38_ADDRSTART)
#define UART2_RXDMA_CFG                      (REG_DMA38_CFG)
#define UART2_RXDMA_XCNT                     (REG_DMA38_XCNT)
#define UART2_RXDMA_XMOD                     (REG_DMA38_XMOD)
#define UART2_RXDMA_YCNT                     (REG_DMA38_YCNT)
#define UART2_RXDMA_YMOD                     (REG_DMA38_YMOD)
#define UART2_RXDMA_DSCPTR_CUR               (REG_DMA38_DSCPTR_CUR)
#define UART2_RXDMA_DSCPTR_PRV               (REG_DMA38_DSCPTR_PRV)
#define UART2_RXDMA_ADDR_CUR                 (REG_DMA38_ADDR_CUR)
#define UART2_RXDMA_STAT                     (REG_DMA38_STAT)
#define UART2_RXDMA_XCNT_CUR                 (REG_DMA38_XCNT_CUR)
#define UART2_RXDMA_YCNT_CUR                 (REG_DMA38_YCNT_CUR)
#define UART2_RXDMA_BWLCNT                   (REG_DMA38_BWLCNT)
#define UART2_RXDMA_BWLCNT_CUR               (REG_DMA38_BWLCNT_CUR)
#define UART2_RXDMA_BWMCNT                   (REG_DMA38_BWMCNT)
#define UART2_RXDMA_BWMCNT_CUR               (REG_DMA38_BWMCNT_CUR)
#define UART3_TXDMA_DSCPTR_NXT               (REG_DMA53_DSCPTR_NXT)
#define UART3_TXDMA_ADDRSTART                (REG_DMA53_ADDRSTART)
#define UART3_TXDMA_CFG                      (REG_DMA53_CFG)
#define UART3_TXDMA_XCNT                     (REG_DMA53_XCNT)
#define UART3_TXDMA_XMOD                     (REG_DMA53_XMOD)
#define UART3_TXDMA_YCNT                     (REG_DMA53_YCNT)
#define UART3_TXDMA_YMOD                     (REG_DMA53_YMOD)
#define UART3_TXDMA_DSCPTR_CUR               (REG_DMA53_DSCPTR_CUR)
#define UART3_TXDMA_DSCPTR_PRV               (REG_DMA53_DSCPTR_PRV)
#define UART3_TXDMA_ADDR_CUR                 (REG_DMA53_ADDR_CUR)
#define UART3_TXDMA_STAT                     (REG_DMA53_STAT)
#define UART3_TXDMA_XCNT_CUR                 (REG_DMA53_XCNT_CUR)
#define UART3_TXDMA_YCNT_CUR                 (REG_DMA53_YCNT_CUR)
#define UART3_TXDMA_BWLCNT                   (REG_DMA53_BWLCNT)
#define UART3_TXDMA_BWLCNT_CUR               (REG_DMA53_BWLCNT_CUR)
#define UART3_TXDMA_BWMCNT                   (REG_DMA53_BWMCNT)
#define UART3_TXDMA_BWMCNT_CUR               (REG_DMA53_BWMCNT_CUR)
#define UART3_RXDMA_DSCPTR_NXT               (REG_DMA54_DSCPTR_NXT)
#define UART3_RXDMA_ADDRSTART                (REG_DMA54_ADDRSTART)
#define UART3_RXDMA_CFG                      (REG_DMA54_CFG)
#define UART3_RXDMA_XCNT                     (REG_DMA54_XCNT)
#define UART3_RXDMA_XMOD                     (REG_DMA54_XMOD)
#define UART3_RXDMA_YCNT                     (REG_DMA54_YCNT)
#define UART3_RXDMA_YMOD                     (REG_DMA54_YMOD)
#define UART3_RXDMA_DSCPTR_CUR               (REG_DMA54_DSCPTR_CUR)
#define UART3_RXDMA_DSCPTR_PRV               (REG_DMA54_DSCPTR_PRV)
#define UART3_RXDMA_ADDR_CUR                 (REG_DMA54_ADDR_CUR)
#define UART3_RXDMA_STAT                     (REG_DMA54_STAT)
#define UART3_RXDMA_XCNT_CUR                 (REG_DMA54_XCNT_CUR)
#define UART3_RXDMA_YCNT_CUR                 (REG_DMA54_YCNT_CUR)
#define UART3_RXDMA_BWLCNT                   (REG_DMA54_BWLCNT)
#define UART3_RXDMA_BWLCNT_CUR               (REG_DMA54_BWLCNT_CUR)
#define UART3_RXDMA_BWMCNT                   (REG_DMA54_BWMCNT)
#define UART3_RXDMA_BWMCNT_CUR               (REG_DMA54_BWMCNT_CUR)
#define SPI0_TXDMA_DSCPTR_NXT                (REG_DMA22_DSCPTR_NXT)
#define SPI0_TXDMA_ADDRSTART                 (REG_DMA22_ADDRSTART)
#define SPI0_TXDMA_CFG                       (REG_DMA22_CFG)
#define SPI0_TXDMA_XCNT                      (REG_DMA22_XCNT)
#define SPI0_TXDMA_XMOD                      (REG_DMA22_XMOD)
#define SPI0_TXDMA_YCNT                      (REG_DMA22_YCNT)
#define SPI0_TXDMA_YMOD                      (REG_DMA22_YMOD)
#define SPI0_TXDMA_DSCPTR_CUR                (REG_DMA22_DSCPTR_CUR)
#define SPI0_TXDMA_DSCPTR_PRV                (REG_DMA22_DSCPTR_PRV)
#define SPI0_TXDMA_ADDR_CUR                  (REG_DMA22_ADDR_CUR)
#define SPI0_TXDMA_STAT                      (REG_DMA22_STAT)
#define SPI0_TXDMA_XCNT_CUR                  (REG_DMA22_XCNT_CUR)
#define SPI0_TXDMA_YCNT_CUR                  (REG_DMA22_YCNT_CUR)
#define SPI0_TXDMA_BWLCNT                    (REG_DMA22_BWLCNT)
#define SPI0_TXDMA_BWLCNT_CUR                (REG_DMA22_BWLCNT_CUR)
#define SPI0_TXDMA_BWMCNT                    (REG_DMA22_BWMCNT)
#define SPI0_TXDMA_BWMCNT_CUR                (REG_DMA22_BWMCNT_CUR)
#define SPI0_RXDMA_DSCPTR_NXT                (REG_DMA23_DSCPTR_NXT)
#define SPI0_RXDMA_ADDRSTART                 (REG_DMA23_ADDRSTART)
#define SPI0_RXDMA_CFG                       (REG_DMA23_CFG)
#define SPI0_RXDMA_XCNT                      (REG_DMA23_XCNT)
#define SPI0_RXDMA_XMOD                      (REG_DMA23_XMOD)
#define SPI0_RXDMA_YCNT                      (REG_DMA23_YCNT)
#define SPI0_RXDMA_YMOD                      (REG_DMA23_YMOD)
#define SPI0_RXDMA_DSCPTR_CUR                (REG_DMA23_DSCPTR_CUR)
#define SPI0_RXDMA_DSCPTR_PRV                (REG_DMA23_DSCPTR_PRV)
#define SPI0_RXDMA_ADDR_CUR                  (REG_DMA23_ADDR_CUR)
#define SPI0_RXDMA_STAT                      (REG_DMA23_STAT)
#define SPI0_RXDMA_XCNT_CUR                  (REG_DMA23_XCNT_CUR)
#define SPI0_RXDMA_YCNT_CUR                  (REG_DMA23_YCNT_CUR)
#define SPI0_RXDMA_BWLCNT                    (REG_DMA23_BWLCNT)
#define SPI0_RXDMA_BWLCNT_CUR                (REG_DMA23_BWLCNT_CUR)
#define SPI0_RXDMA_BWMCNT                    (REG_DMA23_BWMCNT)
#define SPI0_RXDMA_BWMCNT_CUR                (REG_DMA23_BWMCNT_CUR)
#define SPI1_TXDMA_DSCPTR_NXT                (REG_DMA24_DSCPTR_NXT)
#define SPI1_TXDMA_ADDRSTART                 (REG_DMA24_ADDRSTART)
#define SPI1_TXDMA_CFG                       (REG_DMA24_CFG)
#define SPI1_TXDMA_XCNT                      (REG_DMA24_XCNT)
#define SPI1_TXDMA_XMOD                      (REG_DMA24_XMOD)
#define SPI1_TXDMA_YCNT                      (REG_DMA24_YCNT)
#define SPI1_TXDMA_YMOD                      (REG_DMA24_YMOD)
#define SPI1_TXDMA_DSCPTR_CUR                (REG_DMA24_DSCPTR_CUR)
#define SPI1_TXDMA_DSCPTR_PRV                (REG_DMA24_DSCPTR_PRV)
#define SPI1_TXDMA_ADDR_CUR                  (REG_DMA24_ADDR_CUR)
#define SPI1_TXDMA_STAT                      (REG_DMA24_STAT)
#define SPI1_TXDMA_XCNT_CUR                  (REG_DMA24_XCNT_CUR)
#define SPI1_TXDMA_YCNT_CUR                  (REG_DMA24_YCNT_CUR)
#define SPI1_TXDMA_BWLCNT                    (REG_DMA24_BWLCNT)
#define SPI1_TXDMA_BWLCNT_CUR                (REG_DMA24_BWLCNT_CUR)
#define SPI1_TXDMA_BWMCNT                    (REG_DMA24_BWMCNT)
#define SPI1_TXDMA_BWMCNT_CUR                (REG_DMA24_BWMCNT_CUR)
#define SPI1_RXDMA_DSCPTR_NXT                (REG_DMA25_DSCPTR_NXT)
#define SPI1_RXDMA_ADDRSTART                 (REG_DMA25_ADDRSTART)
#define SPI1_RXDMA_CFG                       (REG_DMA25_CFG)
#define SPI1_RXDMA_XCNT                      (REG_DMA25_XCNT)
#define SPI1_RXDMA_XMOD                      (REG_DMA25_XMOD)
#define SPI1_RXDMA_YCNT                      (REG_DMA25_YCNT)
#define SPI1_RXDMA_YMOD                      (REG_DMA25_YMOD)
#define SPI1_RXDMA_DSCPTR_CUR                (REG_DMA25_DSCPTR_CUR)
#define SPI1_RXDMA_DSCPTR_PRV                (REG_DMA25_DSCPTR_PRV)
#define SPI1_RXDMA_ADDR_CUR                  (REG_DMA25_ADDR_CUR)
#define SPI1_RXDMA_STAT                      (REG_DMA25_STAT)
#define SPI1_RXDMA_XCNT_CUR                  (REG_DMA25_XCNT_CUR)
#define SPI1_RXDMA_YCNT_CUR                  (REG_DMA25_YCNT_CUR)
#define SPI1_RXDMA_BWLCNT                    (REG_DMA25_BWLCNT)
#define SPI1_RXDMA_BWLCNT_CUR                (REG_DMA25_BWLCNT_CUR)
#define SPI1_RXDMA_BWMCNT                    (REG_DMA25_BWMCNT)
#define SPI1_RXDMA_BWMCNT_CUR                (REG_DMA25_BWMCNT_CUR)
#define SPI2_TXDMA_DSCPTR_NXT                (REG_DMA26_DSCPTR_NXT)
#define SPI2_TXDMA_ADDRSTART                 (REG_DMA26_ADDRSTART)
#define SPI2_TXDMA_CFG                       (REG_DMA26_CFG)
#define SPI2_TXDMA_XCNT                      (REG_DMA26_XCNT)
#define SPI2_TXDMA_XMOD                      (REG_DMA26_XMOD)
#define SPI2_TXDMA_YCNT                      (REG_DMA26_YCNT)
#define SPI2_TXDMA_YMOD                      (REG_DMA26_YMOD)
#define SPI2_TXDMA_DSCPTR_CUR                (REG_DMA26_DSCPTR_CUR)
#define SPI2_TXDMA_DSCPTR_PRV                (REG_DMA26_DSCPTR_PRV)
#define SPI2_TXDMA_ADDR_CUR                  (REG_DMA26_ADDR_CUR)
#define SPI2_TXDMA_STAT                      (REG_DMA26_STAT)
#define SPI2_TXDMA_XCNT_CUR                  (REG_DMA26_XCNT_CUR)
#define SPI2_TXDMA_YCNT_CUR                  (REG_DMA26_YCNT_CUR)
#define SPI2_TXDMA_BWLCNT                    (REG_DMA26_BWLCNT)
#define SPI2_TXDMA_BWLCNT_CUR                (REG_DMA26_BWLCNT_CUR)
#define SPI2_TXDMA_BWMCNT                    (REG_DMA26_BWMCNT)
#define SPI2_TXDMA_BWMCNT_CUR                (REG_DMA26_BWMCNT_CUR)
#define SPI2_RXDMA_DSCPTR_NXT                (REG_DMA27_DSCPTR_NXT)
#define SPI2_RXDMA_ADDRSTART                 (REG_DMA27_ADDRSTART)
#define SPI2_RXDMA_CFG                       (REG_DMA27_CFG)
#define SPI2_RXDMA_XCNT                      (REG_DMA27_XCNT)
#define SPI2_RXDMA_XMOD                      (REG_DMA27_XMOD)
#define SPI2_RXDMA_YCNT                      (REG_DMA27_YCNT)
#define SPI2_RXDMA_YMOD                      (REG_DMA27_YMOD)
#define SPI2_RXDMA_DSCPTR_CUR                (REG_DMA27_DSCPTR_CUR)
#define SPI2_RXDMA_DSCPTR_PRV                (REG_DMA27_DSCPTR_PRV)
#define SPI2_RXDMA_ADDR_CUR                  (REG_DMA27_ADDR_CUR)
#define SPI2_RXDMA_STAT                      (REG_DMA27_STAT)
#define SPI2_RXDMA_XCNT_CUR                  (REG_DMA27_XCNT_CUR)
#define SPI2_RXDMA_YCNT_CUR                  (REG_DMA27_YCNT_CUR)
#define SPI2_RXDMA_BWLCNT                    (REG_DMA27_BWLCNT)
#define SPI2_RXDMA_BWLCNT_CUR                (REG_DMA27_BWLCNT_CUR)
#define SPI2_RXDMA_BWMCNT                    (REG_DMA27_BWMCNT)
#define SPI2_RXDMA_BWMCNT_CUR                (REG_DMA27_BWMCNT_CUR)
#define SPI3_TXDMA_DSCPTR_NXT                (REG_DMA55_DSCPTR_NXT)
#define SPI3_TXDMA_ADDRSTART                 (REG_DMA55_ADDRSTART)
#define SPI3_TXDMA_CFG                       (REG_DMA55_CFG)
#define SPI3_TXDMA_XCNT                      (REG_DMA55_XCNT)
#define SPI3_TXDMA_XMOD                      (REG_DMA55_XMOD)
#define SPI3_TXDMA_YCNT                      (REG_DMA55_YCNT)
#define SPI3_TXDMA_YMOD                      (REG_DMA55_YMOD)
#define SPI3_TXDMA_DSCPTR_CUR                (REG_DMA55_DSCPTR_CUR)
#define SPI3_TXDMA_DSCPTR_PRV                (REG_DMA55_DSCPTR_PRV)
#define SPI3_TXDMA_ADDR_CUR                  (REG_DMA55_ADDR_CUR)
#define SPI3_TXDMA_STAT                      (REG_DMA55_STAT)
#define SPI3_TXDMA_XCNT_CUR                  (REG_DMA55_XCNT_CUR)
#define SPI3_TXDMA_YCNT_CUR                  (REG_DMA55_YCNT_CUR)
#define SPI3_TXDMA_BWLCNT                    (REG_DMA55_BWLCNT)
#define SPI3_TXDMA_BWLCNT_CUR                (REG_DMA55_BWLCNT_CUR)
#define SPI3_TXDMA_BWMCNT                    (REG_DMA55_BWMCNT)
#define SPI3_TXDMA_BWMCNT_CUR                (REG_DMA55_BWMCNT_CUR)
#define SPI3_RXDMA_DSCPTR_NXT                (REG_DMA56_DSCPTR_NXT)
#define SPI3_RXDMA_ADDRSTART                 (REG_DMA56_ADDRSTART)
#define SPI3_RXDMA_CFG                       (REG_DMA56_CFG)
#define SPI3_RXDMA_XCNT                      (REG_DMA56_XCNT)
#define SPI3_RXDMA_XMOD                      (REG_DMA56_XMOD)
#define SPI3_RXDMA_YCNT                      (REG_DMA56_YCNT)
#define SPI3_RXDMA_YMOD                      (REG_DMA56_YMOD)
#define SPI3_RXDMA_DSCPTR_CUR                (REG_DMA56_DSCPTR_CUR)
#define SPI3_RXDMA_DSCPTR_PRV                (REG_DMA56_DSCPTR_PRV)
#define SPI3_RXDMA_ADDR_CUR                  (REG_DMA56_ADDR_CUR)
#define SPI3_RXDMA_STAT                      (REG_DMA56_STAT)
#define SPI3_RXDMA_XCNT_CUR                  (REG_DMA56_XCNT_CUR)
#define SPI3_RXDMA_YCNT_CUR                  (REG_DMA56_YCNT_CUR)
#define SPI3_RXDMA_BWLCNT                    (REG_DMA56_BWLCNT)
#define SPI3_RXDMA_BWLCNT_CUR                (REG_DMA56_BWLCNT_CUR)
#define SPI3_RXDMA_BWMCNT                    (REG_DMA56_BWMCNT)
#define SPI3_RXDMA_BWMCNT_CUR                (REG_DMA56_BWMCNT_CUR)
#define SYS_MDMA2_SRC_DSCPTR_NXT             (REG_DMA39_DSCPTR_NXT)
#define SYS_MDMA2_SRC_ADDRSTART              (REG_DMA39_ADDRSTART)
#define SYS_MDMA2_SRC_CFG                    (REG_DMA39_CFG)
#define SYS_MDMA2_SRC_XCNT                   (REG_DMA39_XCNT)
#define SYS_MDMA2_SRC_XMOD                   (REG_DMA39_XMOD)
#define SYS_MDMA2_SRC_YCNT                   (REG_DMA39_YCNT)
#define SYS_MDMA2_SRC_YMOD                   (REG_DMA39_YMOD)
#define SYS_MDMA2_SRC_DSCPTR_CUR             (REG_DMA39_DSCPTR_CUR)
#define SYS_MDMA2_SRC_DSCPTR_PRV             (REG_DMA39_DSCPTR_PRV)
#define SYS_MDMA2_SRC_ADDR_CUR               (REG_DMA39_ADDR_CUR)
#define SYS_MDMA2_SRC_STAT                   (REG_DMA39_STAT)
#define SYS_MDMA2_SRC_XCNT_CUR               (REG_DMA39_XCNT_CUR)
#define SYS_MDMA2_SRC_YCNT_CUR               (REG_DMA39_YCNT_CUR)
#define SYS_MDMA2_SRC_BWLCNT                 (REG_DMA39_BWLCNT)
#define SYS_MDMA2_SRC_BWLCNT_CUR             (REG_DMA39_BWLCNT_CUR)
#define SYS_MDMA2_SRC_BWMCNT                 (REG_DMA39_BWMCNT)
#define SYS_MDMA2_SRC_BWMCNT_CUR             (REG_DMA39_BWMCNT_CUR)
#define SYS_MDMA6_SRC_DSCPTR_NXT             (REG_DMA49_DSCPTR_NXT)
#define SYS_MDMA6_SRC_ADDRSTART              (REG_DMA49_ADDRSTART)
#define SYS_MDMA6_SRC_CFG                    (REG_DMA49_CFG)
#define SYS_MDMA6_SRC_XCNT                   (REG_DMA49_XCNT)
#define SYS_MDMA6_SRC_XMOD                   (REG_DMA49_XMOD)
#define SYS_MDMA6_SRC_YCNT                   (REG_DMA49_YCNT)
#define SYS_MDMA6_SRC_YMOD                   (REG_DMA49_YMOD)
#define SYS_MDMA6_SRC_DSCPTR_CUR             (REG_DMA49_DSCPTR_CUR)
#define SYS_MDMA6_SRC_DSCPTR_PRV             (REG_DMA49_DSCPTR_PRV)
#define SYS_MDMA6_SRC_ADDR_CUR               (REG_DMA49_ADDR_CUR)
#define SYS_MDMA6_SRC_STAT                   (REG_DMA49_STAT)
#define SYS_MDMA6_SRC_XCNT_CUR               (REG_DMA49_XCNT_CUR)
#define SYS_MDMA6_SRC_YCNT_CUR               (REG_DMA49_YCNT_CUR)
#define SYS_MDMA6_SRC_BWLCNT                 (REG_DMA49_BWLCNT)
#define SYS_MDMA6_SRC_BWLCNT_CUR             (REG_DMA49_BWLCNT_CUR)
#define SYS_MDMA6_SRC_BWMCNT                 (REG_DMA49_BWMCNT)
#define SYS_MDMA6_SRC_BWMCNT_CUR             (REG_DMA49_BWMCNT_CUR)
#define SYS_MDMA2_DST_DSCPTR_NXT             (REG_DMA40_DSCPTR_NXT)
#define SYS_MDMA2_DST_ADDRSTART              (REG_DMA40_ADDRSTART)
#define SYS_MDMA2_DST_CFG                    (REG_DMA40_CFG)
#define SYS_MDMA2_DST_XCNT                   (REG_DMA40_XCNT)
#define SYS_MDMA2_DST_XMOD                   (REG_DMA40_XMOD)
#define SYS_MDMA2_DST_YCNT                   (REG_DMA40_YCNT)
#define SYS_MDMA2_DST_YMOD                   (REG_DMA40_YMOD)
#define SYS_MDMA2_DST_DSCPTR_CUR             (REG_DMA40_DSCPTR_CUR)
#define SYS_MDMA2_DST_DSCPTR_PRV             (REG_DMA40_DSCPTR_PRV)
#define SYS_MDMA2_DST_ADDR_CUR               (REG_DMA40_ADDR_CUR)
#define SYS_MDMA2_DST_STAT                   (REG_DMA40_STAT)
#define SYS_MDMA2_DST_XCNT_CUR               (REG_DMA40_XCNT_CUR)
#define SYS_MDMA2_DST_YCNT_CUR               (REG_DMA40_YCNT_CUR)
#define SYS_MDMA2_DST_BWLCNT                 (REG_DMA40_BWLCNT)
#define SYS_MDMA2_DST_BWLCNT_CUR             (REG_DMA40_BWLCNT_CUR)
#define SYS_MDMA2_DST_BWMCNT                 (REG_DMA40_BWMCNT)
#define SYS_MDMA2_DST_BWMCNT_CUR             (REG_DMA40_BWMCNT_CUR)
#define SYS_MDMA6_DST_DSCPTR_NXT             (REG_DMA50_DSCPTR_NXT)
#define SYS_MDMA6_DST_ADDRSTART              (REG_DMA50_ADDRSTART)
#define SYS_MDMA6_DST_CFG                    (REG_DMA50_CFG)
#define SYS_MDMA6_DST_XCNT                   (REG_DMA50_XCNT)
#define SYS_MDMA6_DST_XMOD                   (REG_DMA50_XMOD)
#define SYS_MDMA6_DST_YCNT                   (REG_DMA50_YCNT)
#define SYS_MDMA6_DST_YMOD                   (REG_DMA50_YMOD)
#define SYS_MDMA6_DST_DSCPTR_CUR             (REG_DMA50_DSCPTR_CUR)
#define SYS_MDMA6_DST_DSCPTR_PRV             (REG_DMA50_DSCPTR_PRV)
#define SYS_MDMA6_DST_ADDR_CUR               (REG_DMA50_ADDR_CUR)
#define SYS_MDMA6_DST_STAT                   (REG_DMA50_STAT)
#define SYS_MDMA6_DST_XCNT_CUR               (REG_DMA50_XCNT_CUR)
#define SYS_MDMA6_DST_YCNT_CUR               (REG_DMA50_YCNT_CUR)
#define SYS_MDMA6_DST_BWLCNT                 (REG_DMA50_BWLCNT)
#define SYS_MDMA6_DST_BWLCNT_CUR             (REG_DMA50_BWLCNT_CUR)
#define SYS_MDMA6_DST_BWMCNT                 (REG_DMA50_BWMCNT)
#define SYS_MDMA6_DST_BWMCNT_CUR             (REG_DMA50_BWMCNT_CUR)
#define SYS_MDMA3_SRC_DSCPTR_NXT             (REG_DMA43_DSCPTR_NXT)
#define SYS_MDMA3_SRC_ADDRSTART              (REG_DMA43_ADDRSTART)
#define SYS_MDMA3_SRC_CFG                    (REG_DMA43_CFG)
#define SYS_MDMA3_SRC_XCNT                   (REG_DMA43_XCNT)
#define SYS_MDMA3_SRC_XMOD                   (REG_DMA43_XMOD)
#define SYS_MDMA3_SRC_YCNT                   (REG_DMA43_YCNT)
#define SYS_MDMA3_SRC_YMOD                   (REG_DMA43_YMOD)
#define SYS_MDMA3_SRC_DSCPTR_CUR             (REG_DMA43_DSCPTR_CUR)
#define SYS_MDMA3_SRC_DSCPTR_PRV             (REG_DMA43_DSCPTR_PRV)
#define SYS_MDMA3_SRC_ADDR_CUR               (REG_DMA43_ADDR_CUR)
#define SYS_MDMA3_SRC_STAT                   (REG_DMA43_STAT)
#define SYS_MDMA3_SRC_XCNT_CUR               (REG_DMA43_XCNT_CUR)
#define SYS_MDMA3_SRC_YCNT_CUR               (REG_DMA43_YCNT_CUR)
#define SYS_MDMA3_SRC_BWLCNT                 (REG_DMA43_BWLCNT)
#define SYS_MDMA3_SRC_BWLCNT_CUR             (REG_DMA43_BWLCNT_CUR)
#define SYS_MDMA3_SRC_BWMCNT                 (REG_DMA43_BWMCNT)
#define SYS_MDMA3_SRC_BWMCNT_CUR             (REG_DMA43_BWMCNT_CUR)
#define SYS_MDMA7_SRC_DSCPTR_NXT             (REG_DMA51_DSCPTR_NXT)
#define SYS_MDMA7_SRC_ADDRSTART              (REG_DMA51_ADDRSTART)
#define SYS_MDMA7_SRC_CFG                    (REG_DMA51_CFG)
#define SYS_MDMA7_SRC_XCNT                   (REG_DMA51_XCNT)
#define SYS_MDMA7_SRC_XMOD                   (REG_DMA51_XMOD)
#define SYS_MDMA7_SRC_YCNT                   (REG_DMA51_YCNT)
#define SYS_MDMA7_SRC_YMOD                   (REG_DMA51_YMOD)
#define SYS_MDMA7_SRC_DSCPTR_CUR             (REG_DMA51_DSCPTR_CUR)
#define SYS_MDMA7_SRC_DSCPTR_PRV             (REG_DMA51_DSCPTR_PRV)
#define SYS_MDMA7_SRC_ADDR_CUR               (REG_DMA51_ADDR_CUR)
#define SYS_MDMA7_SRC_STAT                   (REG_DMA51_STAT)
#define SYS_MDMA7_SRC_XCNT_CUR               (REG_DMA51_XCNT_CUR)
#define SYS_MDMA7_SRC_YCNT_CUR               (REG_DMA51_YCNT_CUR)
#define SYS_MDMA7_SRC_BWLCNT                 (REG_DMA51_BWLCNT)
#define SYS_MDMA7_SRC_BWLCNT_CUR             (REG_DMA51_BWLCNT_CUR)
#define SYS_MDMA7_SRC_BWMCNT                 (REG_DMA51_BWMCNT)
#define SYS_MDMA7_SRC_BWMCNT_CUR             (REG_DMA51_BWMCNT_CUR)
#define SYS_MDMA3_DST_DSCPTR_NXT             (REG_DMA44_DSCPTR_NXT)
#define SYS_MDMA3_DST_ADDRSTART              (REG_DMA44_ADDRSTART)
#define SYS_MDMA3_DST_CFG                    (REG_DMA44_CFG)
#define SYS_MDMA3_DST_XCNT                   (REG_DMA44_XCNT)
#define SYS_MDMA3_DST_XMOD                   (REG_DMA44_XMOD)
#define SYS_MDMA3_DST_YCNT                   (REG_DMA44_YCNT)
#define SYS_MDMA3_DST_YMOD                   (REG_DMA44_YMOD)
#define SYS_MDMA3_DST_DSCPTR_CUR             (REG_DMA44_DSCPTR_CUR)
#define SYS_MDMA3_DST_DSCPTR_PRV             (REG_DMA44_DSCPTR_PRV)
#define SYS_MDMA3_DST_ADDR_CUR               (REG_DMA44_ADDR_CUR)
#define SYS_MDMA3_DST_STAT                   (REG_DMA44_STAT)
#define SYS_MDMA3_DST_XCNT_CUR               (REG_DMA44_XCNT_CUR)
#define SYS_MDMA3_DST_YCNT_CUR               (REG_DMA44_YCNT_CUR)
#define SYS_MDMA3_DST_BWLCNT                 (REG_DMA44_BWLCNT)
#define SYS_MDMA3_DST_BWLCNT_CUR             (REG_DMA44_BWLCNT_CUR)
#define SYS_MDMA3_DST_BWMCNT                 (REG_DMA44_BWMCNT)
#define SYS_MDMA3_DST_BWMCNT_CUR             (REG_DMA44_BWMCNT_CUR)
#define SYS_MDMA7_DST_DSCPTR_NXT             (REG_DMA52_DSCPTR_NXT)
#define SYS_MDMA7_DST_ADDRSTART              (REG_DMA52_ADDRSTART)
#define SYS_MDMA7_DST_CFG                    (REG_DMA52_CFG)
#define SYS_MDMA7_DST_XCNT                   (REG_DMA52_XCNT)
#define SYS_MDMA7_DST_XMOD                   (REG_DMA52_XMOD)
#define SYS_MDMA7_DST_YCNT                   (REG_DMA52_YCNT)
#define SYS_MDMA7_DST_YMOD                   (REG_DMA52_YMOD)
#define SYS_MDMA7_DST_DSCPTR_CUR             (REG_DMA52_DSCPTR_CUR)
#define SYS_MDMA7_DST_DSCPTR_PRV             (REG_DMA52_DSCPTR_PRV)
#define SYS_MDMA7_DST_ADDR_CUR               (REG_DMA52_ADDR_CUR)
#define SYS_MDMA7_DST_STAT                   (REG_DMA52_STAT)
#define SYS_MDMA7_DST_XCNT_CUR               (REG_DMA52_XCNT_CUR)
#define SYS_MDMA7_DST_YCNT_CUR               (REG_DMA52_YCNT_CUR)
#define SYS_MDMA7_DST_BWLCNT                 (REG_DMA52_BWLCNT)
#define SYS_MDMA7_DST_BWLCNT_CUR             (REG_DMA52_BWLCNT_CUR)
#define SYS_MDMA7_DST_BWMCNT                 (REG_DMA52_BWMCNT)
#define SYS_MDMA7_DST_BWMCNT_CUR             (REG_DMA52_BWMCNT_CUR)
#define SYS_MDMA0_SRC_DSCPTR_NXT             (REG_DMA8_DSCPTR_NXT)
#define SYS_MDMA0_SRC_ADDRSTART              (REG_DMA8_ADDRSTART)
#define SYS_MDMA0_SRC_CFG                    (REG_DMA8_CFG)
#define SYS_MDMA0_SRC_XCNT                   (REG_DMA8_XCNT)
#define SYS_MDMA0_SRC_XMOD                   (REG_DMA8_XMOD)
#define SYS_MDMA0_SRC_YCNT                   (REG_DMA8_YCNT)
#define SYS_MDMA0_SRC_YMOD                   (REG_DMA8_YMOD)
#define SYS_MDMA0_SRC_DSCPTR_CUR             (REG_DMA8_DSCPTR_CUR)
#define SYS_MDMA0_SRC_DSCPTR_PRV             (REG_DMA8_DSCPTR_PRV)
#define SYS_MDMA0_SRC_ADDR_CUR               (REG_DMA8_ADDR_CUR)
#define SYS_MDMA0_SRC_STAT                   (REG_DMA8_STAT)
#define SYS_MDMA0_SRC_XCNT_CUR               (REG_DMA8_XCNT_CUR)
#define SYS_MDMA0_SRC_YCNT_CUR               (REG_DMA8_YCNT_CUR)
#define SYS_MDMA0_SRC_BWLCNT                 (REG_DMA8_BWLCNT)
#define SYS_MDMA0_SRC_BWLCNT_CUR             (REG_DMA8_BWLCNT_CUR)
#define SYS_MDMA0_SRC_BWMCNT                 (REG_DMA8_BWMCNT)
#define SYS_MDMA0_SRC_BWMCNT_CUR             (REG_DMA8_BWMCNT_CUR)
#define SYS_MDMA0_DST_DSCPTR_NXT             (REG_DMA9_DSCPTR_NXT)
#define SYS_MDMA0_DST_ADDRSTART              (REG_DMA9_ADDRSTART)
#define SYS_MDMA0_DST_CFG                    (REG_DMA9_CFG)
#define SYS_MDMA0_DST_XCNT                   (REG_DMA9_XCNT)
#define SYS_MDMA0_DST_XMOD                   (REG_DMA9_XMOD)
#define SYS_MDMA0_DST_YCNT                   (REG_DMA9_YCNT)
#define SYS_MDMA0_DST_YMOD                   (REG_DMA9_YMOD)
#define SYS_MDMA0_DST_DSCPTR_CUR             (REG_DMA9_DSCPTR_CUR)
#define SYS_MDMA0_DST_DSCPTR_PRV             (REG_DMA9_DSCPTR_PRV)
#define SYS_MDMA0_DST_ADDR_CUR               (REG_DMA9_ADDR_CUR)
#define SYS_MDMA0_DST_STAT                   (REG_DMA9_STAT)
#define SYS_MDMA0_DST_XCNT_CUR               (REG_DMA9_XCNT_CUR)
#define SYS_MDMA0_DST_YCNT_CUR               (REG_DMA9_YCNT_CUR)
#define SYS_MDMA0_DST_BWLCNT                 (REG_DMA9_BWLCNT)
#define SYS_MDMA0_DST_BWLCNT_CUR             (REG_DMA9_BWLCNT_CUR)
#define SYS_MDMA0_DST_BWMCNT                 (REG_DMA9_BWMCNT)
#define SYS_MDMA0_DST_BWMCNT_CUR             (REG_DMA9_BWMCNT_CUR)
#define SYS_MDMA1_SRC_DSCPTR_NXT             (REG_DMA18_DSCPTR_NXT)
#define SYS_MDMA1_SRC_ADDRSTART              (REG_DMA18_ADDRSTART)
#define SYS_MDMA1_SRC_CFG                    (REG_DMA18_CFG)
#define SYS_MDMA1_SRC_XCNT                   (REG_DMA18_XCNT)
#define SYS_MDMA1_SRC_XMOD                   (REG_DMA18_XMOD)
#define SYS_MDMA1_SRC_YCNT                   (REG_DMA18_YCNT)
#define SYS_MDMA1_SRC_YMOD                   (REG_DMA18_YMOD)
#define SYS_MDMA1_SRC_DSCPTR_CUR             (REG_DMA18_DSCPTR_CUR)
#define SYS_MDMA1_SRC_DSCPTR_PRV             (REG_DMA18_DSCPTR_PRV)
#define SYS_MDMA1_SRC_ADDR_CUR               (REG_DMA18_ADDR_CUR)
#define SYS_MDMA1_SRC_STAT                   (REG_DMA18_STAT)
#define SYS_MDMA1_SRC_XCNT_CUR               (REG_DMA18_XCNT_CUR)
#define SYS_MDMA1_SRC_YCNT_CUR               (REG_DMA18_YCNT_CUR)
#define SYS_MDMA1_SRC_BWLCNT                 (REG_DMA18_BWLCNT)
#define SYS_MDMA1_SRC_BWLCNT_CUR             (REG_DMA18_BWLCNT_CUR)
#define SYS_MDMA1_SRC_BWMCNT                 (REG_DMA18_BWMCNT)
#define SYS_MDMA1_SRC_BWMCNT_CUR             (REG_DMA18_BWMCNT_CUR)
#define SYS_MDMA1_DST_DSCPTR_NXT             (REG_DMA19_DSCPTR_NXT)
#define SYS_MDMA1_DST_ADDRSTART              (REG_DMA19_ADDRSTART)
#define SYS_MDMA1_DST_CFG                    (REG_DMA19_CFG)
#define SYS_MDMA1_DST_XCNT                   (REG_DMA19_XCNT)
#define SYS_MDMA1_DST_XMOD                   (REG_DMA19_XMOD)
#define SYS_MDMA1_DST_YCNT                   (REG_DMA19_YCNT)
#define SYS_MDMA1_DST_YMOD                   (REG_DMA19_YMOD)
#define SYS_MDMA1_DST_DSCPTR_CUR             (REG_DMA19_DSCPTR_CUR)
#define SYS_MDMA1_DST_DSCPTR_PRV             (REG_DMA19_DSCPTR_PRV)
#define SYS_MDMA1_DST_ADDR_CUR               (REG_DMA19_ADDR_CUR)
#define SYS_MDMA1_DST_STAT                   (REG_DMA19_STAT)
#define SYS_MDMA1_DST_XCNT_CUR               (REG_DMA19_XCNT_CUR)
#define SYS_MDMA1_DST_YCNT_CUR               (REG_DMA19_YCNT_CUR)
#define SYS_MDMA1_DST_BWLCNT                 (REG_DMA19_BWLCNT)
#define SYS_MDMA1_DST_BWLCNT_CUR             (REG_DMA19_BWLCNT_CUR)
#define SYS_MDMA1_DST_BWMCNT                 (REG_DMA19_BWMCNT)
#define SYS_MDMA1_DST_BWMCNT_CUR             (REG_DMA19_BWMCNT_CUR)
#define SYS_MDMA4_SRC_DSCPTR_NXT             (REG_DMA45_DSCPTR_NXT)
#define SYS_MDMA4_SRC_ADDRSTART              (REG_DMA45_ADDRSTART)
#define SYS_MDMA4_SRC_CFG                    (REG_DMA45_CFG)
#define SYS_MDMA4_SRC_XCNT                   (REG_DMA45_XCNT)
#define SYS_MDMA4_SRC_XMOD                   (REG_DMA45_XMOD)
#define SYS_MDMA4_SRC_YCNT                   (REG_DMA45_YCNT)
#define SYS_MDMA4_SRC_YMOD                   (REG_DMA45_YMOD)
#define SYS_MDMA4_SRC_DSCPTR_CUR             (REG_DMA45_DSCPTR_CUR)
#define SYS_MDMA4_SRC_DSCPTR_PRV             (REG_DMA45_DSCPTR_PRV)
#define SYS_MDMA4_SRC_ADDR_CUR               (REG_DMA45_ADDR_CUR)
#define SYS_MDMA4_SRC_STAT                   (REG_DMA45_STAT)
#define SYS_MDMA4_SRC_XCNT_CUR               (REG_DMA45_XCNT_CUR)
#define SYS_MDMA4_SRC_YCNT_CUR               (REG_DMA45_YCNT_CUR)
#define SYS_MDMA4_SRC_BWLCNT                 (REG_DMA45_BWLCNT)
#define SYS_MDMA4_SRC_BWLCNT_CUR             (REG_DMA45_BWLCNT_CUR)
#define SYS_MDMA4_SRC_BWMCNT                 (REG_DMA45_BWMCNT)
#define SYS_MDMA4_SRC_BWMCNT_CUR             (REG_DMA45_BWMCNT_CUR)
#define SYS_MDMA4_DST_DSCPTR_NXT             (REG_DMA46_DSCPTR_NXT)
#define SYS_MDMA4_DST_ADDRSTART              (REG_DMA46_ADDRSTART)
#define SYS_MDMA4_DST_CFG                    (REG_DMA46_CFG)
#define SYS_MDMA4_DST_XCNT                   (REG_DMA46_XCNT)
#define SYS_MDMA4_DST_XMOD                   (REG_DMA46_XMOD)
#define SYS_MDMA4_DST_YCNT                   (REG_DMA46_YCNT)
#define SYS_MDMA4_DST_YMOD                   (REG_DMA46_YMOD)
#define SYS_MDMA4_DST_DSCPTR_CUR             (REG_DMA46_DSCPTR_CUR)
#define SYS_MDMA4_DST_DSCPTR_PRV             (REG_DMA46_DSCPTR_PRV)
#define SYS_MDMA4_DST_ADDR_CUR               (REG_DMA46_ADDR_CUR)
#define SYS_MDMA4_DST_STAT                   (REG_DMA46_STAT)
#define SYS_MDMA4_DST_XCNT_CUR               (REG_DMA46_XCNT_CUR)
#define SYS_MDMA4_DST_YCNT_CUR               (REG_DMA46_YCNT_CUR)
#define SYS_MDMA4_DST_BWLCNT                 (REG_DMA46_BWLCNT)
#define SYS_MDMA4_DST_BWLCNT_CUR             (REG_DMA46_BWLCNT_CUR)
#define SYS_MDMA4_DST_BWMCNT                 (REG_DMA46_BWMCNT)
#define SYS_MDMA4_DST_BWMCNT_CUR             (REG_DMA46_BWMCNT_CUR)
#define SYS_MDMA5_SRC_DSCPTR_NXT             (REG_DMA47_DSCPTR_NXT)
#define SYS_MDMA5_SRC_ADDRSTART              (REG_DMA47_ADDRSTART)
#define SYS_MDMA5_SRC_CFG                    (REG_DMA47_CFG)
#define SYS_MDMA5_SRC_XCNT                   (REG_DMA47_XCNT)
#define SYS_MDMA5_SRC_XMOD                   (REG_DMA47_XMOD)
#define SYS_MDMA5_SRC_YCNT                   (REG_DMA47_YCNT)
#define SYS_MDMA5_SRC_YMOD                   (REG_DMA47_YMOD)
#define SYS_MDMA5_SRC_DSCPTR_CUR             (REG_DMA47_DSCPTR_CUR)
#define SYS_MDMA5_SRC_DSCPTR_PRV             (REG_DMA47_DSCPTR_PRV)
#define SYS_MDMA5_SRC_ADDR_CUR               (REG_DMA47_ADDR_CUR)
#define SYS_MDMA5_SRC_STAT                   (REG_DMA47_STAT)
#define SYS_MDMA5_SRC_XCNT_CUR               (REG_DMA47_XCNT_CUR)
#define SYS_MDMA5_SRC_YCNT_CUR               (REG_DMA47_YCNT_CUR)
#define SYS_MDMA5_SRC_BWLCNT                 (REG_DMA47_BWLCNT)
#define SYS_MDMA5_SRC_BWLCNT_CUR             (REG_DMA47_BWLCNT_CUR)
#define SYS_MDMA5_SRC_BWMCNT                 (REG_DMA47_BWMCNT)
#define SYS_MDMA5_SRC_BWMCNT_CUR             (REG_DMA47_BWMCNT_CUR)
#define SYS_MDMA5_DST_DSCPTR_NXT             (REG_DMA48_DSCPTR_NXT)
#define SYS_MDMA5_DST_ADDRSTART              (REG_DMA48_ADDRSTART)
#define SYS_MDMA5_DST_CFG                    (REG_DMA48_CFG)
#define SYS_MDMA5_DST_XCNT                   (REG_DMA48_XCNT)
#define SYS_MDMA5_DST_XMOD                   (REG_DMA48_XMOD)
#define SYS_MDMA5_DST_YCNT                   (REG_DMA48_YCNT)
#define SYS_MDMA5_DST_YMOD                   (REG_DMA48_YMOD)
#define SYS_MDMA5_DST_DSCPTR_CUR             (REG_DMA48_DSCPTR_CUR)
#define SYS_MDMA5_DST_DSCPTR_PRV             (REG_DMA48_DSCPTR_PRV)
#define SYS_MDMA5_DST_ADDR_CUR               (REG_DMA48_ADDR_CUR)
#define SYS_MDMA5_DST_STAT                   (REG_DMA48_STAT)
#define SYS_MDMA5_DST_XCNT_CUR               (REG_DMA48_XCNT_CUR)
#define SYS_MDMA5_DST_YCNT_CUR               (REG_DMA48_YCNT_CUR)
#define SYS_MDMA5_DST_BWLCNT                 (REG_DMA48_BWLCNT)
#define SYS_MDMA5_DST_BWLCNT_CUR             (REG_DMA48_BWLCNT_CUR)
#define SYS_MDMA5_DST_BWMCNT                 (REG_DMA48_BWMCNT)
#define SYS_MDMA5_DST_BWMCNT_CUR             (REG_DMA48_BWMCNT_CUR)

/* ====================================================================================================
 *    Interrupt Definitions
 * ==================================================================================================== */
#define ADI_INTR_BASE                         32         /* ARM A5 GIC offset needed for interrupt indexing for ADSP-SC59x */

#define INTR_SYS_C0_SOFT0_INT                (-32)    /* Core 0 Software Driven Interrupt 0 */
#define GIC_SYS_C0_SOFT0_INT                   0    /* Core 0 Software Driven Interrupt 0 */
#define INTR_SYS_C0_SOFT1_INT                (-31)    /* Core 0 Software Driven Interrupt 1 */
#define GIC_SYS_C0_SOFT1_INT                   1    /* Core 0 Software Driven Interrupt 1 */
#define INTR_SYS_C0_SOFT2_INT                (-30)    /* Core 0 Software Driven Interrupt 2 */
#define GIC_SYS_C0_SOFT2_INT                   2    /* Core 0 Software Driven Interrupt 2 */
#define INTR_SYS_C0_SOFT3_INT                (-29)    /* Core 0 Software Driven Interrupt 3 */
#define GIC_SYS_C0_SOFT3_INT                   3    /* Core 0 Software Driven Interrupt 3 */
#define INTR_SYS_C0_SOFT4_INT                (-28)    /* Core 0 Software Driven Interrupt 4 */
#define GIC_SYS_C0_SOFT4_INT                   4    /* Core 0 Software Driven Interrupt 4 */
#define INTR_SYS_C0_SOFT5_INT                (-27)    /* Core 0 Software Driven Interrupt 5 */
#define GIC_SYS_C0_SOFT5_INT                   5    /* Core 0 Software Driven Interrupt 5 */
#define INTR_SYS_C0_SOFT6_INT                (-26)    /* Core 0 Software Driven Interrupt 6 */
#define GIC_SYS_C0_SOFT6_INT                   6    /* Core 0 Software Driven Interrupt 6 */
#define INTR_SYS_C0_SOFT7_INT                (-25)    /* Core 0 Software Driven Interrupt 7 */
#define GIC_SYS_C0_SOFT7_INT                   7    /* Core 0 Software Driven Interrupt 7 */
#define INTR_SYS_C0_RESET                    ( -8)    /* Reset (Core 0 only) */
#define GIC_SYS_C0_RESET                      24    /* Reset (Core 0 only) */
#define INTR_SYS_C0_UNDEF_INST               ( -7)    /* Undefined Instruction Exception (Core 0 only) */
#define GIC_SYS_C0_UNDEF_INST                 25    /* Undefined Instruction Exception (Core 0 only) */
#define INTR_SYS_C0_SUPV_CALL                ( -6)    /* Supervisor Call (Core 0 only) */
#define GIC_SYS_C0_SUPV_CALL                  26    /* Supervisor Call (Core 0 only) */
#define INTR_SYS_C0_PREFETCH_ABORT           ( -5)    /* Prefetch Abort Interrupt (Core 0 only) */
#define GIC_SYS_C0_PREFETCH_ABORT             27    /* Prefetch Abort Interrupt (Core 0 only) */
#define INTR_SYS_C0_DATA_ABORT               ( -4)    /* Data Abort Interrupt (Core 0 only) */
#define GIC_SYS_C0_DATA_ABORT                 28    /* Data Abort Interrupt (Core 0 only) */
#define INTR_SYS_C0_IRQ                      ( -2)    /* IRQ Interrupt (Core 0 only) */
#define GIC_SYS_C0_IRQ                        30    /* IRQ Interrupt (Core 0 only) */
#define INTR_SYS_C0_FIQ                      ( -1)    /* FIQ Interrupt (Core 0 only) */
#define GIC_SYS_C0_FIQ                        31    /* FIQ Interrupt (Core 0 only) */
#define INTR_SEC0_ERR                         (ADI_INTR_BASE + 0)   /* Error */
#define SEC_SEC0_ERR                           0    /* Error */
#define INTR_CGU0_EVT                         (ADI_INTR_BASE + 1)   /* Event */
#define SEC_CGU0_EVT                           1    /* Event */
#define INTR_CGU1_EVT                         (ADI_INTR_BASE + 2)   /* Event */
#define SEC_CGU1_EVT                           2    /* Event */
#define INTR_WDOG0_EXP                        (ADI_INTR_BASE + 3)   /* Expiration */
#define SEC_WDOG0_EXP                          3    /* Expiration */
#define INTR_WDOG1_EXP                        (ADI_INTR_BASE + 4)   /* Expiration */
#define SEC_WDOG1_EXP                          4    /* Expiration */
#define INTR_WDOG2_EXP                        (ADI_INTR_BASE + 5)   /* Expiration */
#define SEC_WDOG2_EXP                          5    /* Expiration */
#define INTR_OTPC0_ERR                        (ADI_INTR_BASE + 6)   /* Dual-bit Error */
#define SEC_OTPC0_ERR                          6    /* Dual-bit Error */
#define INTR_TMU0_FAULT                       (ADI_INTR_BASE + 7)   /* Fault */
#define SEC_TMU0_FAULT                         7    /* Fault */
#define INTR_TMU0_ALERT                       (ADI_INTR_BASE + 8)   /* Fault */
#define SEC_TMU0_ALERT                         8    /* Fault */
#define INTR_TAPC_KEYFAIL                     (ADI_INTR_BASE + 9)   /* Test/User Key Fail Interrupt */
#define SEC_TAPC_KEYFAIL                       9    /* Test/User Key Fail Interrupt */
#define INTR_L2CTL0_ECC_ERR                  (ADI_INTR_BASE + 10)   /* ECC Error */
#define SEC_L2CTL0_ECC_ERR                    10    /* ECC Error */
#define INTR_L2CTL0_EVT                      (ADI_INTR_BASE + 12)   /* Scrub/Initialization Done */
#define SEC_L2CTL0_EVT                        12    /* Scrub/Initialization Done */
#define INTR_MEC1_EEIRQ0                     (ADI_INTR_BASE + 13)   /* ECC Error Interrupt Request */
#define SEC_MEC1_EEIRQ0                       13    /* ECC Error Interrupt Request */
#define INTR_MEC1_PEIRQ0                     (ADI_INTR_BASE + 15)   /* Parity Error Interrupt Request */
#define SEC_MEC1_PEIRQ0                       15    /* Parity Error Interrupt Request */
#define INTR_MEC1_PEIRQ1                     (ADI_INTR_BASE + 16)   /* Parity Error Interrupt Request */
#define SEC_MEC1_PEIRQ1                       16    /* Parity Error Interrupt Request */
#define INTR_MEC1_PEIRQ2                     (ADI_INTR_BASE + 17)   /* Parity Error Interrupt Request */
#define SEC_MEC1_PEIRQ2                       17    /* Parity Error Interrupt Request */
#define INTR_MEC1_PEIRQ3                     (ADI_INTR_BASE + 18)   /* Parity Error Interrupt Request */
#define SEC_MEC1_PEIRQ3                       18    /* Parity Error Interrupt Request */
#define INTR_MEC0_EEIRQ0                     (ADI_INTR_BASE + 19)   /* ECC Error Interrupt Request */
#define INTR_MEC0_PEIRQ0                     (ADI_INTR_BASE + 21)   /* Parity Error Interrupt Request */
#define INTR_MEC0_PEIRQ1                     (ADI_INTR_BASE + 22)   /* Parity Error Interrupt Request */
#define INTR_MEC0_PEIRQ2                     (ADI_INTR_BASE + 23)   /* Parity Error Interrupt Request */
#define INTR_MEC0_PEIRQ3                     (ADI_INTR_BASE + 24)   /* Parity Error Interrupt Request */
#define INTR_MEC2_EEIRQ0                     (ADI_INTR_BASE + 25)   /* ECC Error Interrupt Request */
#define SEC_MEC2_EEIRQ0                       25    /* ECC Error Interrupt Request */
#define INTR_MEC2_PEIRQ0                     (ADI_INTR_BASE + 27)   /* Parity Error Interrupt Request */
#define SEC_MEC2_PEIRQ0                       27    /* Parity Error Interrupt Request */
#define INTR_MEC2_PEIRQ1                     (ADI_INTR_BASE + 28)   /* Parity Error Interrupt Request */
#define SEC_MEC2_PEIRQ1                       28    /* Parity Error Interrupt Request */
#define INTR_MEC2_PEIRQ2                     (ADI_INTR_BASE + 29)   /* Parity Error Interrupt Request */
#define SEC_MEC2_PEIRQ2                       29    /* Parity Error Interrupt Request */
#define INTR_MEC2_PEIRQ3                     (ADI_INTR_BASE + 30)   /* Parity Error Interrupt Request */
#define SEC_MEC2_PEIRQ3                       30    /* Parity Error Interrupt Request */
#define INTR_SYS_C0_L2CC                     (ADI_INTR_BASE + 31)   /* Core 0 L2CC Interrupt */
#define SEC_SYS_C0_L2CC                       31    /* Core 0 L2CC Interrupt */
#define INTR_SYS_C0_PMUIRQ                   (ADI_INTR_BASE + 32)   /* Performance Monitoring Unit Interrupt (Core 0 only) */
#define INTR_SYS_C0_INITDONE                 (ADI_INTR_BASE + 33)   /* Core 0 Memory Initialization Done */
#define SEC_SYS_C0_INITDONE                   33    /* Core 0 Memory Initialization Done */
#define INTR_SYS_C1_DATA_READ_ERR            (ADI_INTR_BASE + 34)   /* Core 1 Data Read Interrupt */
#define SEC_SYS_C1_DATA_READ_ERR              34    /* Core 1 Data Read Interrupt */
#define INTR_SYS_C1_DATA_WRITE_ERR           (ADI_INTR_BASE + 35)   /* Core 1 Data Write Interrupt */
#define SEC_SYS_C1_DATA_WRITE_ERR             35    /* Core 1 Data Write Interrupt */
#define INTR_SYS_C1_INST_READ_ERR            (ADI_INTR_BASE + 36)   /* Core 1 Instruction Read Interrupt */
#define SEC_SYS_C1_INST_READ_ERR              36    /* Core 1 Instruction Read Interrupt */
#define INTR_SYS_SOFT8_INT                   (ADI_INTR_BASE + 37)   /* Software Interrupt 8 */
#define SEC_SYS_SOFT8_INT                     37    /* Software Interrupt 8 */
#define INTR_SYS_C2_DATA_READ_ERR            (ADI_INTR_BASE + 38)   /* Core 2 Data Read Interrupt */
#define SEC_SYS_C2_DATA_READ_ERR              38    /* Core 2 Data Read Interrupt */
#define INTR_SYS_C2_DATA_WRITE_ERR           (ADI_INTR_BASE + 39)   /* Core 2 Data Write Interrupt */
#define SEC_SYS_C2_DATA_WRITE_ERR             39    /* Core 2 Data Write Interrupt */
#define INTR_SYS_C2_INST_READ_ERR            (ADI_INTR_BASE + 40)   /* Core 2 Instruction Read Interrupt */
#define SEC_SYS_C2_INST_READ_ERR              40    /* Core 2 Instruction Read Interrupt */
#define INTR_SYS_SOFT9_INT                   (ADI_INTR_BASE + 41)   /* Core 2 Idle Interrupt */
#define SEC_SYS_SOFT9_INT                     41    /* Core 2 Idle Interrupt */
#define INTR_SYS_C1_DS_SLV_ACC_INTR          (ADI_INTR_BASE + 42)   /* Core 1 Slave Access Interrupt */
#define SEC_SYS_C1_DS_SLV_ACC_INTR            42    /* Core 1 Slave Access Interrupt */
#define INTR_SYS_C2_DS_SLV_ACC_INTR          (ADI_INTR_BASE + 43)   /* Core 2 Slave Access Interrupt */
#define SEC_SYS_C2_DS_SLV_ACC_INTR            43    /* Core 2 Slave Access Interrupt */
#define INTR_DAI0_IRQH                       (ADI_INTR_BASE + 44)   /* High priority Interrupt */
#define SEC_DAI0_IRQH                         44    /* High priority Interrupt */
#define INTR_DAI1_IRQH                       (ADI_INTR_BASE + 45)   /* High priority Interrupt */
#define SEC_DAI1_IRQH                         45    /* High priority Interrupt */
#define INTR_DAI0_IRQL                       (ADI_INTR_BASE + 46)   /* Low Priority Interrupt */
#define SEC_DAI0_IRQL                         46    /* Low Priority Interrupt */
#define INTR_DAI1_IRQL                       (ADI_INTR_BASE + 47)   /* Low Priority Interrupt */
#define SEC_DAI1_IRQL                         47    /* Low Priority Interrupt */
#define INTR_TIMER0_TMR00                    (ADI_INTR_BASE + 48)   /* Timer 0 */
#define SEC_TIMER0_TMR00                      48    /* Timer 0 */
#define INTR_TIMER0_TMR01                    (ADI_INTR_BASE + 49)   /* Timer 1 */
#define SEC_TIMER0_TMR01                      49    /* Timer 1 */
#define INTR_TIMER0_TMR02                    (ADI_INTR_BASE + 50)   /* Timer 2 */
#define SEC_TIMER0_TMR02                      50    /* Timer 2 */
#define INTR_TIMER0_TMR03                    (ADI_INTR_BASE + 51)   /* Timer 3 */
#define SEC_TIMER0_TMR03                      51    /* Timer 3 */
#define INTR_TIMER0_TMR04                    (ADI_INTR_BASE + 52)   /* Timer 4 */
#define SEC_TIMER0_TMR04                      52    /* Timer 4 */
#define INTR_TIMER0_TMR05                    (ADI_INTR_BASE + 53)   /* Timer 5 */
#define SEC_TIMER0_TMR05                      53    /* Timer 5 */
#define INTR_TIMER0_TMR06                    (ADI_INTR_BASE + 54)   /* Timer 6 */
#define SEC_TIMER0_TMR06                      54    /* Timer 6 */
#define INTR_TIMER0_TMR07                    (ADI_INTR_BASE + 55)   /* Timer 7 */
#define SEC_TIMER0_TMR07                      55    /* Timer 7 */
#define INTR_TIMER0_TMR08                    (ADI_INTR_BASE + 56)   /* Timer 8 */
#define SEC_TIMER0_TMR08                      56    /* Timer 8 */
#define INTR_TIMER0_TMR09                    (ADI_INTR_BASE + 57)   /* Timer 9 */
#define SEC_TIMER0_TMR09                      57    /* Timer 9 */
#define INTR_TIMER0_TMR10                    (ADI_INTR_BASE + 58)   /* Timer 10 */
#define SEC_TIMER0_TMR10                      58    /* Timer 10 */
#define INTR_TIMER0_TMR11                    (ADI_INTR_BASE + 59)   /* Timer 11 */
#define SEC_TIMER0_TMR11                      59    /* Timer 11 */
#define INTR_TIMER0_TMR12                    (ADI_INTR_BASE + 60)   /* Timer 12 */
#define SEC_TIMER0_TMR12                      60    /* Timer 12 */
#define INTR_TIMER0_TMR13                    (ADI_INTR_BASE + 61)   /* Timer 13 */
#define SEC_TIMER0_TMR13                      61    /* Timer 13 */
#define INTR_TIMER0_TMR14                    (ADI_INTR_BASE + 62)   /* Timer 14 */
#define SEC_TIMER0_TMR14                      62    /* Timer 14 */
#define INTR_TIMER0_TMR15                    (ADI_INTR_BASE + 63)   /* Timer 15 */
#define SEC_TIMER0_TMR15                      63    /* Timer 15 */
#define INTR_TIMER0_STAT                     (ADI_INTR_BASE + 64)   /* Status */
#define SEC_TIMER0_STAT                       64    /* Status */
#define INTR_PINT0_BLOCK                     (ADI_INTR_BASE + 65)   /* Pin Interrupt Block 0 */
#define SEC_PINT0_BLOCK                       65    /* Pin Interrupt Block 0 */
#define INTR_PINT1_BLOCK                     (ADI_INTR_BASE + 66)   /* Pin Interrupt Block 1 */
#define SEC_PINT1_BLOCK                       66    /* Pin Interrupt Block 1 */
#define INTR_PINT2_BLOCK                     (ADI_INTR_BASE + 67)   /* Pin Interrupt Block 2 */
#define SEC_PINT2_BLOCK                       67    /* Pin Interrupt Block 2 */
#define INTR_PINT3_BLOCK                     (ADI_INTR_BASE + 68)   /* Pin Interrupt Block 3 */
#define SEC_PINT3_BLOCK                       68    /* Pin Interrupt Block 3 */
#define INTR_PINT4_BLOCK                     (ADI_INTR_BASE + 69)   /* Pin Interrupt Block 4 */
#define SEC_PINT4_BLOCK                       69    /* Pin Interrupt Block 4 */
#define INTR_PINT5_BLOCK                     (ADI_INTR_BASE + 70)   /* Pin Interrupt Block 5 */
#define SEC_PINT5_BLOCK                       70    /* Pin Interrupt Block 5 */
#define INTR_PINT6_BLOCK                     (ADI_INTR_BASE + 71)   /* Pin Interrupt Block 6 */
#define SEC_PINT6_BLOCK                       71    /* Pin Interrupt Block 6 */
#define INTR_PINT7_BLOCK                     (ADI_INTR_BASE + 72)   /* Pin Interrupt Block 7 */
#define SEC_PINT7_BLOCK                       72    /* Pin Interrupt Block 7 */
#define INTR_SYS_SOFT0_INT                   (ADI_INTR_BASE + 73)   /* Software Interrupt 0 */
#define SEC_SYS_SOFT0_INT                     73    /* Software Interrupt 0 */
#define INTR_SYS_SOFT1_INT                   (ADI_INTR_BASE + 74)   /* Software Interrupt 1 */
#define SEC_SYS_SOFT1_INT                     74    /* Software Interrupt 1 */
#define INTR_SYS_SOFT2_INT                   (ADI_INTR_BASE + 75)   /* Software Interrupt 2 */
#define SEC_SYS_SOFT2_INT                     75    /* Software Interrupt 2 */
#define INTR_SYS_SOFT3_INT                   (ADI_INTR_BASE + 76)   /* Software Interrupt 3 */
#define SEC_SYS_SOFT3_INT                     76    /* Software Interrupt 3 */
#define INTR_SYS_SOFT4_INT                   (ADI_INTR_BASE + 77)   /* Software Interrupt 4 */
#define SEC_SYS_SOFT4_INT                     77    /* Software Interrupt 4 */
#define INTR_SYS_SOFT5_INT                   (ADI_INTR_BASE + 78)   /* Software Interrupt 5 */
#define SEC_SYS_SOFT5_INT                     78    /* Software Interrupt 5 */
#define INTR_SYS_SOFT6_INT                   (ADI_INTR_BASE + 79)   /* Software Interrupt 6 */
#define SEC_SYS_SOFT6_INT                     79    /* Software Interrupt 6 */
#define INTR_SYS_SOFT7_INT                   (ADI_INTR_BASE + 80)   /* Software Interrupt 7 */
#define SEC_SYS_SOFT7_INT                     80    /* Software Interrupt 7 */
#define INTR_SPORT0_A_DMA                    (ADI_INTR_BASE + 81)   /* Channel A DMA */
#define SEC_SPORT0_A_DMA                      81    /* Channel A DMA */
#define INTR_SPORT0_A_STAT                   (ADI_INTR_BASE + 82)   /* Channel A Status */
#define SEC_SPORT0_A_STAT                     82    /* Channel A Status */
#define INTR_SPORT0_B_DMA                    (ADI_INTR_BASE + 83)   /* Channel B DMA */
#define SEC_SPORT0_B_DMA                      83    /* Channel B DMA */
#define INTR_SPORT0_B_STAT                   (ADI_INTR_BASE + 84)   /* Channel B Status */
#define SEC_SPORT0_B_STAT                     84    /* Channel B Status */
#define INTR_SPORT1_A_DMA                    (ADI_INTR_BASE + 85)   /* Channel A DMA */
#define SEC_SPORT1_A_DMA                      85    /* Channel A DMA */
#define INTR_SPORT1_A_STAT                   (ADI_INTR_BASE + 86)   /* Channel A Status */
#define SEC_SPORT1_A_STAT                     86    /* Channel A Status */
#define INTR_SPORT1_B_DMA                    (ADI_INTR_BASE + 87)   /* Channel B DMA */
#define SEC_SPORT1_B_DMA                      87    /* Channel B DMA */
#define INTR_SPORT1_B_STAT                   (ADI_INTR_BASE + 88)   /* Channel B Status */
#define SEC_SPORT1_B_STAT                     88    /* Channel B Status */
#define INTR_SPORT2_A_DMA                    (ADI_INTR_BASE + 89)   /* Channel A DMA */
#define SEC_SPORT2_A_DMA                      89    /* Channel A DMA */
#define INTR_SPORT2_A_STAT                   (ADI_INTR_BASE + 90)   /* Channel A Status */
#define SEC_SPORT2_A_STAT                     90    /* Channel A Status */
#define INTR_SPORT2_B_DMA                    (ADI_INTR_BASE + 91)   /* Channel B DMA */
#define SEC_SPORT2_B_DMA                      91    /* Channel B DMA */
#define INTR_SPORT2_B_STAT                   (ADI_INTR_BASE + 92)   /* Channel B Status */
#define SEC_SPORT2_B_STAT                     92    /* Channel B Status */
#define INTR_SPORT3_A_DMA                    (ADI_INTR_BASE + 93)   /* Channel A DMA */
#define SEC_SPORT3_A_DMA                      93    /* Channel A DMA */
#define INTR_SPORT3_A_STAT                   (ADI_INTR_BASE + 94)   /* Channel A Status */
#define SEC_SPORT3_A_STAT                     94    /* Channel A Status */
#define INTR_SPORT3_B_DMA                    (ADI_INTR_BASE + 95)   /* Channel B DMA */
#define SEC_SPORT3_B_DMA                      95    /* Channel B DMA */
#define INTR_SPORT3_B_STAT                   (ADI_INTR_BASE + 96)   /* Channel B Status */
#define SEC_SPORT3_B_STAT                     96    /* Channel B Status */
#define INTR_SPORT4_A_DMA                    (ADI_INTR_BASE + 97)   /* Channel A DMA */
#define SEC_SPORT4_A_DMA                      97    /* Channel A DMA */
#define INTR_SPORT4_A_STAT                   (ADI_INTR_BASE + 98)   /* Channel A Status */
#define SEC_SPORT4_A_STAT                     98    /* Channel A Status */
#define INTR_SPORT4_B_DMA                    (ADI_INTR_BASE + 99)   /* Channel B DMA */
#define SEC_SPORT4_B_DMA                      99    /* Channel B DMA */
#define INTR_SPORT4_B_STAT                  (ADI_INTR_BASE + 100)   /* Channel B Status */
#define SEC_SPORT4_B_STAT                    100    /* Channel B Status */
#define INTR_SPORT5_A_DMA                   (ADI_INTR_BASE + 101)   /* Channel A DMA */
#define SEC_SPORT5_A_DMA                     101    /* Channel A DMA */
#define INTR_SPORT5_A_STAT                  (ADI_INTR_BASE + 102)   /* Channel A Status */
#define SEC_SPORT5_A_STAT                    102    /* Channel A Status */
#define INTR_SPORT5_B_DMA                   (ADI_INTR_BASE + 103)   /* Channel B DMA */
#define SEC_SPORT5_B_DMA                     103    /* Channel B DMA */
#define INTR_SPORT5_B_STAT                  (ADI_INTR_BASE + 104)   /* Channel B Status */
#define SEC_SPORT5_B_STAT                    104    /* Channel B Status */
#define INTR_SPORT6_A_DMA                   (ADI_INTR_BASE + 105)   /* Channel A DMA */
#define SEC_SPORT6_A_DMA                     105    /* Channel A DMA */
#define INTR_SPORT6_A_STAT                  (ADI_INTR_BASE + 106)   /* Channel A Status */
#define SEC_SPORT6_A_STAT                    106    /* Channel A Status */
#define INTR_SPORT6_B_DMA                   (ADI_INTR_BASE + 107)   /* Channel B DMA */
#define SEC_SPORT6_B_DMA                     107    /* Channel B DMA */
#define INTR_SPORT6_B_STAT                  (ADI_INTR_BASE + 108)   /* Channel B Status */
#define SEC_SPORT6_B_STAT                    108    /* Channel B Status */
#define INTR_SPORT7_A_DMA                   (ADI_INTR_BASE + 109)   /* Channel A DMA */
#define SEC_SPORT7_A_DMA                     109    /* Channel A DMA */
#define INTR_SPORT7_A_STAT                  (ADI_INTR_BASE + 110)   /* Channel A Status */
#define SEC_SPORT7_A_STAT                    110    /* Channel A Status */
#define INTR_SPORT7_B_DMA                   (ADI_INTR_BASE + 111)   /* Channel B DMA */
#define SEC_SPORT7_B_DMA                     111    /* Channel B DMA */
#define INTR_SPORT7_B_STAT                  (ADI_INTR_BASE + 112)   /* Channel B Status */
#define SEC_SPORT7_B_STAT                    112    /* Channel B Status */
#define INTR_DAI0_GBL_SPORT_INT0            (ADI_INTR_BASE + 113)   /* Global SPORT Interrupt 0 */
#define SEC_DAI0_GBL_SPORT_INT0              113    /* Global SPORT Interrupt 0 */
#define INTR_DAI0_GBL_SPORT_INT1            (ADI_INTR_BASE + 114)   /* Global SPORT Interrupt 1 */
#define SEC_DAI0_GBL_SPORT_INT1              114    /* Global SPORT Interrupt 1 */
#define INTR_DAI1_GBL_SPORT_INT0            (ADI_INTR_BASE + 115)   /* Global SPORT Interrupt 0 */
#define SEC_DAI1_GBL_SPORT_INT0              115    /* Global SPORT Interrupt 0 */
#define INTR_DAI1_GBL_SPORT_INT1            (ADI_INTR_BASE + 116)   /* Global SPORT Interrupt 1 */
#define SEC_DAI1_GBL_SPORT_INT1              116    /* Global SPORT Interrupt 1 */
#define INTR_LP0_DMA                        (ADI_INTR_BASE + 117)   /* DMA Channel */
#define SEC_LP0_DMA                          117    /* DMA Channel */
#define INTR_LP0_STAT                       (ADI_INTR_BASE + 118)   /* Status */
#define SEC_LP0_STAT                         118    /* Status */
#define INTR_LP1_DMA                        (ADI_INTR_BASE + 119)   /* DMA Channel */
#define SEC_LP1_DMA                          119    /* DMA Channel */
#define INTR_LP1_STAT                       (ADI_INTR_BASE + 120)   /* Status */
#define SEC_LP1_STAT                         120    /* Status */
#define INTR_SPI0_TXDMA                     (ADI_INTR_BASE + 121)   /* TX DMA Channel */
#define SEC_SPI0_TXDMA                       121    /* TX DMA Channel */
#define INTR_SPI0_RXDMA                     (ADI_INTR_BASE + 122)   /* RX DMA Channel */
#define SEC_SPI0_RXDMA                       122    /* RX DMA Channel */
#define INTR_SPI0_STAT                      (ADI_INTR_BASE + 123)   /* Status */
#define SEC_SPI0_STAT                        123    /* Status */
#define INTR_SPI0_ERR                       (ADI_INTR_BASE + 124)   /* Error */
#define SEC_SPI0_ERR                         124    /* Error */
#define INTR_SPI1_TXDMA                     (ADI_INTR_BASE + 125)   /* TX DMA Channel */
#define SEC_SPI1_TXDMA                       125    /* TX DMA Channel */
#define INTR_SPI1_RXDMA                     (ADI_INTR_BASE + 126)   /* RX DMA Channel */
#define SEC_SPI1_RXDMA                       126    /* RX DMA Channel */
#define INTR_SPI1_STAT                      (ADI_INTR_BASE + 127)   /* Status */
#define SEC_SPI1_STAT                        127    /* Status */
#define INTR_SPI1_ERR                       (ADI_INTR_BASE + 128)   /* Error */
#define SEC_SPI1_ERR                         128    /* Error */
#define INTR_SPI2_TXDMA                     (ADI_INTR_BASE + 129)   /* TX DMA Channel */
#define SEC_SPI2_TXDMA                       129    /* TX DMA Channel */
#define INTR_SPI2_RXDMA                     (ADI_INTR_BASE + 130)   /* RX DMA Channel */
#define SEC_SPI2_RXDMA                       130    /* RX DMA Channel */
#define INTR_SPI2_STAT                      (ADI_INTR_BASE + 131)   /* Status */
#define SEC_SPI2_STAT                        131    /* Status */
#define INTR_SPI2_ERR                       (ADI_INTR_BASE + 132)   /* Error */
#define SEC_SPI2_ERR                         132    /* Error */
#define INTR_SPI3_TXDMA                     (ADI_INTR_BASE + 133)   /* TX DMA Channel */
#define SEC_SPI3_TXDMA                       133    /* TX DMA Channel */
#define INTR_SPI3_RXDMA                     (ADI_INTR_BASE + 134)   /* RX DMA Channel */
#define SEC_SPI3_RXDMA                       134    /* RX DMA Channel */
#define INTR_SPI3_STAT                      (ADI_INTR_BASE + 135)   /* Status */
#define SEC_SPI3_STAT                        135    /* Status */
#define INTR_SPI3_ERR                       (ADI_INTR_BASE + 136)   /* Error */
#define SEC_SPI3_ERR                         136    /* Error */
#define INTR_OSPI0_INT                      (ADI_INTR_BASE + 137)   /* Error */
#define SEC_OSPI0_INT                        137    /* Error */
#define INTR_UART0_TXDMA                    (ADI_INTR_BASE + 138)   /* Transmit DMA */
#define SEC_UART0_TXDMA                      138    /* Transmit DMA */
#define INTR_UART0_RXDMA                    (ADI_INTR_BASE + 139)   /* Receive DMA */
#define SEC_UART0_RXDMA                      139    /* Receive DMA */
#define INTR_UART0_STAT                     (ADI_INTR_BASE + 140)   /* Status */
#define SEC_UART0_STAT                       140    /* Status */
#define INTR_UART1_TXDMA                    (ADI_INTR_BASE + 141)   /* Transmit DMA */
#define SEC_UART1_TXDMA                      141    /* Transmit DMA */
#define INTR_UART1_RXDMA                    (ADI_INTR_BASE + 142)   /* Receive DMA */
#define SEC_UART1_RXDMA                      142    /* Receive DMA */
#define INTR_UART1_STAT                     (ADI_INTR_BASE + 143)   /* Status */
#define SEC_UART1_STAT                       143    /* Status */
#define INTR_UART2_TXDMA                    (ADI_INTR_BASE + 144)   /* Transmit DMA */
#define SEC_UART2_TXDMA                      144    /* Transmit DMA */
#define INTR_UART2_RXDMA                    (ADI_INTR_BASE + 145)   /* Receive DMA */
#define SEC_UART2_RXDMA                      145    /* Receive DMA */
#define INTR_UART2_STAT                     (ADI_INTR_BASE + 146)   /* Status */
#define SEC_UART2_STAT                       146    /* Status */
#define INTR_UART3_TXDMA                    (ADI_INTR_BASE + 147)   /* Transmit DMA */
#define SEC_UART3_TXDMA                      147    /* Transmit DMA */
#define INTR_UART3_RXDMA                    (ADI_INTR_BASE + 148)   /* Receive DMA */
#define SEC_UART3_RXDMA                      148    /* Receive DMA */
#define INTR_UART3_STAT                     (ADI_INTR_BASE + 149)   /* Status */
#define SEC_UART3_STAT                       149    /* Status */
#define INTR_TWI0_DATA                      (ADI_INTR_BASE + 150)   /* Data Interrupt */
#define SEC_TWI0_DATA                        150    /* Data Interrupt */
#define INTR_TWI1_DATA                      (ADI_INTR_BASE + 151)   /* Data Interrupt */
#define SEC_TWI1_DATA                        151    /* Data Interrupt */
#define INTR_TWI2_DATA                      (ADI_INTR_BASE + 152)   /* Data Interrupt */
#define SEC_TWI2_DATA                        152    /* Data Interrupt */
#define INTR_TWI3_DATA                      (ADI_INTR_BASE + 153)   /* Data Interrupt */
#define SEC_TWI3_DATA                        153    /* Data Interrupt */
#define INTR_TWI4_DATA                      (ADI_INTR_BASE + 154)   /* Data Interrupt */
#define SEC_TWI4_DATA                        154    /* Data Interrupt */
#define INTR_TWI5_DATA                      (ADI_INTR_BASE + 155)   /* Data Interrupt */
#define SEC_TWI5_DATA                        155    /* Data Interrupt */
#define INTR_CNT0_STAT                      (ADI_INTR_BASE + 156)   /* Status */
#define SEC_CNT0_STAT                        156    /* Status */
#define INTR_CTI0_EVT0                      (ADI_INTR_BASE + 157)   /* Core 0 CTI Event */
#define INTR_CTI1_EVT0                      (ADI_INTR_BASE + 158)   /* Core 1 CTI Event */
#define SEC_CTI1_EVT0                        158    /* Core 1 CTI Event */
#define INTR_CTI2_EVT0                      (ADI_INTR_BASE + 159)   /* Core 2 CTI Event */
#define SEC_CTI2_EVT0                        159    /* Core 2 CTI Event */
#define INTR_PKIC0_IRQ                      (ADI_INTR_BASE + 160)   /* Interrupt */
#define SEC_PKIC0_IRQ                        160    /* Interrupt */
#define INTR_PKTE0_IRQ                      (ADI_INTR_BASE + 161)   /* Interrupt */
#define SEC_PKTE0_IRQ                        161    /* Interrupt */
#define INTR_TRU0_SLV0                      (ADI_INTR_BASE + 162)   /* Interrupt 0 - Core 0 */
#define INTR_TRU0_SLV1                      (ADI_INTR_BASE + 163)   /* Interrupt 1 - Core 0 */
#define INTR_TRU0_SLV2                      (ADI_INTR_BASE + 164)   /* Interrupt 2 - Core 0 */
#define INTR_TRU0_SLV3                      (ADI_INTR_BASE + 165)   /* Interrupt 3 - Core 0 */
#define INTR_FIR0_DMA                       (ADI_INTR_BASE + 166)   /* Core 1 DMA */
#define SEC_FIR0_DMA                         166    /* Core 1 DMA */
#define INTR_FIR0_STAT                      (ADI_INTR_BASE + 167)   /* Core 1 Status */
#define SEC_FIR0_STAT                        167    /* Core 1 Status */
#define INTR_IIR0_DMA                       (ADI_INTR_BASE + 168)   /* Core 1 DMA */
#define SEC_IIR0_DMA                         168    /* Core 1 DMA */
#define INTR_IIR0_STAT                      (ADI_INTR_BASE + 169)   /* Core 1 Status */
#define SEC_IIR0_STAT                        169    /* Core 1 Status */
#define INTR_IIR1_DMA                       (ADI_INTR_BASE + 170)   /* Core 1 DMA */
#define SEC_IIR1_DMA                         170    /* Core 1 DMA */
#define INTR_IIR1_STAT                      (ADI_INTR_BASE + 171)   /* Core 1 Status */
#define SEC_IIR1_STAT                        171    /* Core 1 Status */
#define INTR_IIR2_DMA                       (ADI_INTR_BASE + 172)   /* Core 1 DMA */
#define SEC_IIR2_DMA                         172    /* Core 1 DMA */
#define INTR_IIR2_STAT                      (ADI_INTR_BASE + 173)   /* Core 1 Status */
#define SEC_IIR2_STAT                        173    /* Core 1 Status */
#define INTR_IIR3_DMA                       (ADI_INTR_BASE + 174)   /* Core 1 DMA */
#define SEC_IIR3_DMA                         174    /* Core 1 DMA */
#define INTR_IIR3_STAT                      (ADI_INTR_BASE + 175)   /* Core 1 Status */
#define SEC_IIR3_STAT                        175    /* Core 1 Status */
#define INTR_FIR1_DMA                       (ADI_INTR_BASE + 176)   /* Core 2 DMA */
#define SEC_FIR1_DMA                         176    /* Core 2 DMA */
#define INTR_FIR1_STAT                      (ADI_INTR_BASE + 177)   /* Core 2 Status */
#define SEC_FIR1_STAT                        177    /* Core 2 Status */
#define INTR_IIR4_DMA                       (ADI_INTR_BASE + 178)   /* Core 2 DMA */
#define SEC_IIR4_DMA                         178    /* Core 2 DMA */
#define INTR_IIR4_STAT                      (ADI_INTR_BASE + 179)   /* Core 2 Status */
#define SEC_IIR4_STAT                        179    /* Core 2 Status */
#define INTR_IIR5_DMA                       (ADI_INTR_BASE + 180)   /* Core 2 DMA */
#define SEC_IIR5_DMA                         180    /* Core 2 DMA */
#define INTR_IIR5_STAT                      (ADI_INTR_BASE + 181)   /* Core 2 Status */
#define SEC_IIR5_STAT                        181    /* Core 2 Status */
#define INTR_IIR6_DMA                       (ADI_INTR_BASE + 182)   /* Core 2 DMA */
#define SEC_IIR6_DMA                         182    /* Core 2 DMA */
#define INTR_IIR6_STAT                      (ADI_INTR_BASE + 183)   /* Core 2 Status */
#define SEC_IIR6_STAT                        183    /* Core 2 Status */
#define INTR_IIR7_DMA                       (ADI_INTR_BASE + 184)   /* Core 2 DMA */
#define SEC_IIR7_DMA                         184    /* Core 2 DMA */
#define INTR_IIR7_STAT                      (ADI_INTR_BASE + 185)   /* Core 2 Status */
#define SEC_IIR7_STAT                        185    /* Core 2 Status */
#define INTR_HADC0_EVT                      (ADI_INTR_BASE + 186)   /* Event */
#define SEC_HADC0_EVT                        186    /* Event */
#define INTR_CRC0_ERR                       (ADI_INTR_BASE + 190)   /* Error */
#define SEC_CRC0_ERR                         190    /* Error */
#define INTR_CRC1_ERR                       (ADI_INTR_BASE + 191)   /* Error */
#define SEC_CRC1_ERR                         191    /* Error */
#define INTR_SYS_MDMA0_SRC                  (ADI_INTR_BASE + 192)   /* Memory DMA Stream 0 Source Channel */
#define SEC_SYS_MDMA0_SRC                    192    /* Memory DMA Stream 0 Source Channel */
#define INTR_SYS_MDMA0_DST                  (ADI_INTR_BASE + 193)   /* Memory DMA Stream 0 Destination Channel */
#define SEC_SYS_MDMA0_DST                    193    /* Memory DMA Stream 0 Destination Channel */
#define INTR_SYS_MDMA1_SRC                  (ADI_INTR_BASE + 194)   /* Memory DMA Stream 1 Source Channel */
#define SEC_SYS_MDMA1_SRC                    194    /* Memory DMA Stream 1 Source Channel */
#define INTR_SYS_MDMA1_DST                  (ADI_INTR_BASE + 195)   /* Memory DMA Stream 1 Destination Channel */
#define SEC_SYS_MDMA1_DST                    195    /* Memory DMA Stream 1 Destination Channel */
#define INTR_CRC0_DCNTEXP                   (ADI_INTR_BASE + 196)   /* Data Count Expiration */
#define SEC_CRC0_DCNTEXP                     196    /* Data Count Expiration */
#define INTR_CRC1_DCNTEXP                   (ADI_INTR_BASE + 197)   /* Data Count Expiration */
#define SEC_CRC1_DCNTEXP                     197    /* Data Count Expiration */
#define INTR_CRC2_ERR                       (ADI_INTR_BASE + 198)   /* Error */
#define SEC_CRC2_ERR                         198    /* Error */
#define INTR_CRC3_ERR                       (ADI_INTR_BASE + 199)   /* Error */
#define SEC_CRC3_ERR                         199    /* Error */
#define INTR_SYS_MDMA4_SRC                  (ADI_INTR_BASE + 200)   /* Memory DMA Stream 0 Source Channel */
#define SEC_SYS_MDMA4_SRC                    200    /* Memory DMA Stream 0 Source Channel */
#define INTR_SYS_MDMA4_DST                  (ADI_INTR_BASE + 201)   /* Memory DMA Stream 0 Destination Channel */
#define SEC_SYS_MDMA4_DST                    201    /* Memory DMA Stream 0 Destination Channel */
#define INTR_SYS_MDMA5_SRC                  (ADI_INTR_BASE + 202)   /* Memory DMA Stream 1 Source Channel */
#define SEC_SYS_MDMA5_SRC                    202    /* Memory DMA Stream 1 Source Channel */
#define INTR_SYS_MDMA5_DST                  (ADI_INTR_BASE + 203)   /* Memory DMA Stream 1 Destination Channel */
#define SEC_SYS_MDMA5_DST                    203    /* Memory DMA Stream 1 Destination Channel */
#define INTR_CRC2_DCNTEXP                   (ADI_INTR_BASE + 204)   /* Data Count Expiration */
#define SEC_CRC2_DCNTEXP                     204    /* Data Count Expiration */
#define INTR_CRC3_DCNTEXP                   (ADI_INTR_BASE + 205)   /* Data Count Expiration */
#define SEC_CRC3_DCNTEXP                     205    /* Data Count Expiration */
#define INTR_SYS_MDMA2_SRC                  (ADI_INTR_BASE + 206)   /* Enhanced BW MDMA2 Channel 0 (Source) */
#define SEC_SYS_MDMA2_SRC                    206    /* Enhanced BW MDMA2 Channel 0 (Source) */
#define INTR_SYS_MDMA2_DST                  (ADI_INTR_BASE + 207)   /* Enhanced BW MDMA2 Channel 1 (Destination) */
#define SEC_SYS_MDMA2_DST                    207    /* Enhanced BW MDMA2 Channel 1 (Destination) */
#define INTR_SYS_MDMA3_SRC                  (ADI_INTR_BASE + 208)   /* Max BW MDMA3 Channel 0 (Source) */
#define SEC_SYS_MDMA3_SRC                    208    /* Max BW MDMA3 Channel 0 (Source) */
#define INTR_SYS_MDMA3_DST                  (ADI_INTR_BASE + 209)   /* Max BW MDMA3 Channel 1 (Destination) */
#define SEC_SYS_MDMA3_DST                    209    /* Max BW MDMA3 Channel 1 (Destination) */
#define INTR_EMDMA0_DONE                    (ADI_INTR_BASE + 210)   /* Transfer Done */
#define SEC_EMDMA0_DONE                      210    /* Transfer Done */
#define INTR_EMDMA1_DONE                    (ADI_INTR_BASE + 211)   /* Transfer Done */
#define SEC_EMDMA1_DONE                      211    /* Transfer Done */
#define INTR_SYS_MDMA7_SRC                  (ADI_INTR_BASE + 212)   /* Max BW MDMA7 Channel 0 (Source) */
#define SEC_SYS_MDMA7_SRC                    212    /* Max BW MDMA7 Channel 0 (Source) */
#define INTR_SYS_MDMA7_DST                  (ADI_INTR_BASE + 213)   /* Max BW MDMA7 Channel 1 (Destination) */
#define SEC_SYS_MDMA7_DST                    213    /* Max BW MDMA7 Channel 1 (Destination) */
#define INTR_SYS_MDMA6_SRC                  (ADI_INTR_BASE + 214)   /* Enhanced BW MDMA6 Channel 0 (Source) */
#define SEC_SYS_MDMA6_SRC                    214    /* Enhanced BW MDMA6 Channel 0 (Source) */
#define INTR_SYS_MDMA6_DST                  (ADI_INTR_BASE + 215)   /* Enhanced BW MDMA6 Channel 1 (Destination) */
#define SEC_SYS_MDMA6_DST                    215    /* Enhanced BW MDMA6 Channel 1 (Destination) */
#define INTR_SPU0_INT                       (ADI_INTR_BASE + 216)   /* Interrupt */
#define SEC_SPU0_INT                         216    /* Interrupt */
#define INTR_SYS_SMPU_AGGR_INT              (ADI_INTR_BASE + 217)   /* SMPU Aggregated Interrupt/Event */
#define SEC_SYS_SMPU_AGGR_INT                217    /* SMPU Aggregated Interrupt/Event */
#define INTR_EPPI0_CH0_DMA                  (ADI_INTR_BASE + 218)   /* Channel 0 DMA */
#define SEC_EPPI0_CH0_DMA                    218    /* Channel 0 DMA */
#define INTR_EPPI0_CH1_DMA                  (ADI_INTR_BASE + 219)   /* Channel 1 DMA */
#define SEC_EPPI0_CH1_DMA                    219    /* Channel 1 DMA */
#define INTR_EPPI0_STAT                     (ADI_INTR_BASE + 220)   /* Status */
#define SEC_EPPI0_STAT                       220    /* Status */
#define INTR_EMAC0_STAT                     (ADI_INTR_BASE + 221)   /* Status */
#define SEC_EMAC0_STAT                       221    /* Status */
#define INTR_EMAC0_PWR                      (ADI_INTR_BASE + 222)   /* Power */
#define SEC_EMAC0_PWR                        222    /* Power */
#define INTR_EMAC0_DMA0                     (ADI_INTR_BASE + 223)   /* DMA0 */
#define SEC_EMAC0_DMA0                       223    /* DMA0 */
#define INTR_EMAC0_DMA1                     (ADI_INTR_BASE + 224)   /* DMA1 */
#define SEC_EMAC0_DMA1                       224    /* DMA1 */
#define INTR_EMAC0_DMA2                     (ADI_INTR_BASE + 225)   /* DMA2 */
#define SEC_EMAC0_DMA2                       225    /* DMA2 */
#define INTR_EMAC0_MAC                      (ADI_INTR_BASE + 226)   /* MAC */
#define SEC_EMAC0_MAC                        226    /* MAC */
#define INTR_EMAC1_STAT                     (ADI_INTR_BASE + 227)   /* Status */
#define SEC_EMAC1_STAT                       227    /* Status */
#define INTR_EMAC1_PWR                      (ADI_INTR_BASE + 228)   /* Power */
#define SEC_EMAC1_PWR                        228    /* Power */
#define INTR_EMAC1_DMA0                     (ADI_INTR_BASE + 229)   /* DMA */
#define SEC_EMAC1_DMA0                       229    /* DMA */
#define INTR_EMAC1_MAC                      (ADI_INTR_BASE + 230)   /* MAC */
#define SEC_EMAC1_MAC                        230    /* MAC */
#define INTR_SYS_RESERVED_INT0              (ADI_INTR_BASE + 232)   /* Reserved 0 */
#define SEC_SYS_RESERVED_INT0                232    /* Reserved 0 */
#define INTR_SYS_RESERVED_INT1              (ADI_INTR_BASE + 234)   /* Reserved 1 */
#define SEC_SYS_RESERVED_INT1                234    /* Reserved 1 */
#define INTR_SYS_RESERVED_INT2              (ADI_INTR_BASE + 237)   /* Reserved 2 */
#define SEC_SYS_RESERVED_INT2                237    /* Reserved 2 */
#define INTR_SYS_RESERVED_INT3              (ADI_INTR_BASE + 239)   /* Reserved 3 */
#define SEC_SYS_RESERVED_INT3                239    /* Reserved 3 */
#define INTR_USBC0_INT                      (ADI_INTR_BASE + 241)   /* USB0 Interrupt */
#define SEC_USBC0_INT                        241    /* USB0 Interrupt */
#define INTR_TRU0_SLV4                      (ADI_INTR_BASE + 242)   /* Interrupt 4 - Core 1 */
#define SEC_TRU0_SLV4                        242    /* Interrupt 4 - Core 1 */
#define INTR_TRU0_SLV5                      (ADI_INTR_BASE + 243)   /* Interrupt 5 - Core 1 */
#define SEC_TRU0_SLV5                        243    /* Interrupt 5 - Core 1 */
#define INTR_TRU0_SLV6                      (ADI_INTR_BASE + 244)   /* Interrupt 6 - Core 1 */
#define SEC_TRU0_SLV6                        244    /* Interrupt 6 - Core 1 */
#define INTR_TRU0_SLV7                      (ADI_INTR_BASE + 245)   /* Interrupt 7 - Core 1 */
#define SEC_TRU0_SLV7                        245    /* Interrupt 7 - Core 1 */
#define INTR_TRU0_SLV8                      (ADI_INTR_BASE + 246)   /* Interrupt 8 - Core 2 */
#define SEC_TRU0_SLV8                        246    /* Interrupt 8 - Core 2 */
#define INTR_TRU0_SLV9                      (ADI_INTR_BASE + 247)   /* Interrupt 9 - Core 2 */
#define SEC_TRU0_SLV9                        247    /* Interrupt 9 - Core 2 */
#define INTR_TRU0_SLV10                     (ADI_INTR_BASE + 248)   /* Interrupt 10 - Core 2 */
#define SEC_TRU0_SLV10                       248    /* Interrupt 10 - Core 2 */
#define INTR_TRU0_SLV11                     (ADI_INTR_BASE + 249)   /* Interrupt 11 - Core 2 */
#define SEC_TRU0_SLV11                       249    /* Interrupt 11 - Core 2 */
#define INTR_FIR0_BUS_ERR                   (ADI_INTR_BASE + 251)   /* Core 1 FIR Bus Error */
#define SEC_FIR0_BUS_ERR                     251    /* Core 1 FIR Bus Error */
#define CHID_FIR0_BUS_ERR                      0    /* Core 1 FIR Bus Error */
#define INTR_IIR0_BUS_ERR                   (ADI_INTR_BASE + 252)   /* Core 1 IIR Bus Error */
#define SEC_IIR0_BUS_ERR                     251    /* Core 1 IIR Bus Error */
#define CHID_IIR0_BUS_ERR                      1    /* Core 1 IIR Bus Error */
#define INTR_IIR1_BUS_ERR                   (ADI_INTR_BASE + 253)   /* Core 1 IIR Bus Error */
#define SEC_IIR1_BUS_ERR                     251    /* Core 1 IIR Bus Error */
#define CHID_IIR1_BUS_ERR                      2    /* Core 1 IIR Bus Error */
#define INTR_IIR2_BUS_ERR                   (ADI_INTR_BASE + 254)   /* Core 1 IIR Bus Error */
#define SEC_IIR2_BUS_ERR                     251    /* Core 1 IIR Bus Error */
#define CHID_IIR2_BUS_ERR                      3    /* Core 1 IIR Bus Error */
#define INTR_IIR3_BUS_ERR                   (ADI_INTR_BASE + 255)   /* Core 1 IIR Bus Error */
#define SEC_IIR3_BUS_ERR                     251    /* Core 1 IIR Bus Error */
#define CHID_IIR3_BUS_ERR                      4    /* Core 1 IIR Bus Error */
#define INTR_FIR1_BUS_ERR                   (ADI_INTR_BASE + 256)   /* Core 2 FIR Bus Error */
#define SEC_FIR1_BUS_ERR                     251    /* Core 2 FIR Bus Error */
#define CHID_FIR1_BUS_ERR                      5    /* Core 2 FIR Bus Error */
#define INTR_IIR4_BUS_ERR                   (ADI_INTR_BASE + 257)   /* Core 2 IIR Bus Error */
#define SEC_IIR4_BUS_ERR                     251    /* Core 2 IIR Bus Error */
#define CHID_IIR4_BUS_ERR                      6    /* Core 2 IIR Bus Error */
#define INTR_IIR5_BUS_ERR                   (ADI_INTR_BASE + 258)   /* Core 2 IIR Bus Error */
#define SEC_IIR5_BUS_ERR                     251    /* Core 2 IIR Bus Error */
#define CHID_IIR5_BUS_ERR                      7    /* Core 2 IIR Bus Error */
#define INTR_IIR6_BUS_ERR                   (ADI_INTR_BASE + 259)   /* Core 2 IIR Bus Error */
#define SEC_IIR6_BUS_ERR                     251    /* Core 2 IIR Bus Error */
#define CHID_IIR6_BUS_ERR                      8    /* Core 2 IIR Bus Error */
#define INTR_IIR7_BUS_ERR                   (ADI_INTR_BASE + 260)   /* Core 2 IIR Bus Error */
#define SEC_IIR7_BUS_ERR                     251    /* Core 2 IIR Bus Error */
#define CHID_IIR7_BUS_ERR                      9    /* Core 2 IIR Bus Error */
#define INTR_SPI0_TXDMA_ERR                 (ADI_INTR_BASE + 261)   /* TX DMA Channel Error */
#define SEC_SPI0_TXDMA_ERR                   252    /* TX DMA Channel Error */
#define CHID_SPI0_TXDMA_ERR                    0    /* TX DMA Channel Error */
#define INTR_SPI0_RXDMA_ERR                 (ADI_INTR_BASE + 262)   /* RX DMA Channel Error */
#define SEC_SPI0_RXDMA_ERR                   252    /* RX DMA Channel Error */
#define CHID_SPI0_RXDMA_ERR                    1    /* RX DMA Channel Error */
#define INTR_SPI1_TXDMA_ERR                 (ADI_INTR_BASE + 263)   /* TX DMA Channel Error */
#define SEC_SPI1_TXDMA_ERR                   252    /* TX DMA Channel Error */
#define CHID_SPI1_TXDMA_ERR                    2    /* TX DMA Channel Error */
#define INTR_SPI1_RXDMA_ERR                 (ADI_INTR_BASE + 264)   /* RX DMA Channel Error */
#define SEC_SPI1_RXDMA_ERR                   252    /* RX DMA Channel Error */
#define CHID_SPI1_RXDMA_ERR                    3    /* RX DMA Channel Error */
#define INTR_SPI2_TXDMA_ERR                 (ADI_INTR_BASE + 265)   /* TX DMA Channel Error */
#define SEC_SPI2_TXDMA_ERR                   252    /* TX DMA Channel Error */
#define CHID_SPI2_TXDMA_ERR                    4    /* TX DMA Channel Error */
#define INTR_SPI2_RXDMA_ERR                 (ADI_INTR_BASE + 266)   /* RX DMA Channel Error */
#define SEC_SPI2_RXDMA_ERR                   252    /* RX DMA Channel Error */
#define CHID_SPI2_RXDMA_ERR                    5    /* RX DMA Channel Error */
#define INTR_SPI3_TXDMA_ERR                 (ADI_INTR_BASE + 267)   /* TX DMA Channel Error */
#define SEC_SPI3_TXDMA_ERR                   252    /* TX DMA Channel Error */
#define CHID_SPI3_TXDMA_ERR                    6    /* TX DMA Channel Error */
#define INTR_SPI3_RXDMA_ERR                 (ADI_INTR_BASE + 268)   /* RX DMA Channel Error */
#define SEC_SPI3_RXDMA_ERR                   252    /* RX DMA Channel Error */
#define CHID_SPI3_RXDMA_ERR                    7    /* RX DMA Channel Error */
#define INTR_UART0_TXDMA_ERR                (ADI_INTR_BASE + 269)   /* Transmit DMA Error */
#define SEC_UART0_TXDMA_ERR                  252    /* Transmit DMA Error */
#define CHID_UART0_TXDMA_ERR                   8    /* Transmit DMA Error */
#define INTR_UART0_RXDMA_ERR                (ADI_INTR_BASE + 270)   /* Receive DMA Error */
#define SEC_UART0_RXDMA_ERR                  252    /* Receive DMA Error */
#define CHID_UART0_RXDMA_ERR                   9    /* Receive DMA Error */
#define INTR_UART1_TXDMA_ERR                (ADI_INTR_BASE + 271)   /* Transmit DMA Error */
#define SEC_UART1_TXDMA_ERR                  252    /* Transmit DMA Error */
#define CHID_UART1_TXDMA_ERR                  10    /* Transmit DMA Error */
#define INTR_UART1_RXDMA_ERR                (ADI_INTR_BASE + 272)   /* Receive DMA Error */
#define SEC_UART1_RXDMA_ERR                  252    /* Receive DMA Error */
#define CHID_UART1_RXDMA_ERR                  11    /* Receive DMA Error */
#define INTR_UART2_TXDMA_ERR                (ADI_INTR_BASE + 273)   /* Transmit DMA Error */
#define SEC_UART2_TXDMA_ERR                  252    /* Transmit DMA Error */
#define CHID_UART2_TXDMA_ERR                  12    /* Transmit DMA Error */
#define INTR_UART2_RXDMA_ERR                (ADI_INTR_BASE + 274)   /* Receive DMA Error */
#define SEC_UART2_RXDMA_ERR                  252    /* Receive DMA Error */
#define CHID_UART2_RXDMA_ERR                  13    /* Receive DMA Error */
#define INTR_UART3_TXDMA_ERR                (ADI_INTR_BASE + 275)   /* Transmit DMA Error */
#define SEC_UART3_TXDMA_ERR                  252    /* Transmit DMA Error */
#define CHID_UART3_TXDMA_ERR                  14    /* Transmit DMA Error */
#define INTR_UART3_RXDMA_ERR                (ADI_INTR_BASE + 276)   /* Receive DMA Error */
#define SEC_UART3_RXDMA_ERR                  252    /* Receive DMA Error */
#define CHID_UART3_RXDMA_ERR                  15    /* Receive DMA Error */
#define INTR_LP0_DMA_ERR                    (ADI_INTR_BASE + 277)   /* DMA Data Error */
#define SEC_LP0_DMA_ERR                      252    /* DMA Data Error */
#define CHID_LP0_DMA_ERR                      16    /* DMA Data Error */
#define INTR_LP1_DMA_ERR                    (ADI_INTR_BASE + 278)   /* DMA Data Error */
#define SEC_LP1_DMA_ERR                      252    /* DMA Data Error */
#define CHID_LP1_DMA_ERR                      17    /* DMA Data Error */
#define INTR_EPPI0_CH0_DMA_ERR              (ADI_INTR_BASE + 279)   /* DMA Channel 0 Error */
#define SEC_EPPI0_CH0_DMA_ERR                252    /* DMA Channel 0 Error */
#define CHID_EPPI0_CH0_DMA_ERR                18    /* DMA Channel 0 Error */
#define INTR_EPPI0_CH1_DMA_ERR              (ADI_INTR_BASE + 280)   /* DMA Channel 1 Error */
#define SEC_EPPI0_CH1_DMA_ERR                252    /* DMA Channel 1 Error */
#define CHID_EPPI0_CH1_DMA_ERR                19    /* DMA Channel 1 Error */
#define INTR_SYS_MDMA0_SRC_ERR              (ADI_INTR_BASE + 281)   /* Enhanced BW MDMA0 Channel 0 (Source) Error */
#define SEC_SYS_MDMA0_SRC_ERR                253    /* Enhanced BW MDMA0 Channel 0 (Source) Error */
#define CHID_SYS_MDMA0_SRC_ERR                 0    /* Enhanced BW MDMA0 Channel 0 (Source) Error */
#define INTR_SYS_MDMA0_DST_ERR              (ADI_INTR_BASE + 282)   /* Enhanced BW MDMA0 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA0_DST_ERR                253    /* Enhanced BW MDMA0 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA0_DST_ERR                 1    /* Enhanced BW MDMA0 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA1_SRC_ERR              (ADI_INTR_BASE + 283)   /* Standard BW MDMA1 Channel 0 (Source) Error */
#define SEC_SYS_MDMA1_SRC_ERR                253    /* Standard BW MDMA1 Channel 0 (Source) Error */
#define CHID_SYS_MDMA1_SRC_ERR                 2    /* Standard BW MDMA1 Channel 0 (Source) Error */
#define INTR_SYS_MDMA1_DST_ERR              (ADI_INTR_BASE + 284)   /* Standard BW MDMA1 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA1_DST_ERR                253    /* Standard BW MDMA1 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA1_DST_ERR                 3    /* Standard BW MDMA1 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA2_SRC_ERR              (ADI_INTR_BASE + 285)   /* Standard BW MDMA2 Channel 0 (Source) Error */
#define SEC_SYS_MDMA2_SRC_ERR                253    /* Standard BW MDMA2 Channel 0 (Source) Error */
#define CHID_SYS_MDMA2_SRC_ERR                 4    /* Standard BW MDMA2 Channel 0 (Source) Error */
#define INTR_SYS_MDMA2_DST_ERR              (ADI_INTR_BASE + 286)   /* Standard BW MDMA2 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA2_DST_ERR                253    /* Standard BW MDMA2 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA2_DST_ERR                 5    /* Standard BW MDMA2 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA3_SRC_ERR              (ADI_INTR_BASE + 287)   /* Standard BW MDMA3 Channel 0 (Source) Error */
#define SEC_SYS_MDMA3_SRC_ERR                253    /* Standard BW MDMA3 Channel 0 (Source) Error */
#define CHID_SYS_MDMA3_SRC_ERR                 6    /* Standard BW MDMA3 Channel 0 (Source) Error */
#define INTR_SYS_MDMA3_DST_ERR              (ADI_INTR_BASE + 288)   /* Standard BW MDMA3 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA3_DST_ERR                253    /* Standard BW MDMA3 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA3_DST_ERR                 7    /* Standard BW MDMA3 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA4_SRC_ERR              (ADI_INTR_BASE + 289)   /* Standard BW MDMA4 Channel 0 (Source) Error */
#define SEC_SYS_MDMA4_SRC_ERR                253    /* Standard BW MDMA4 Channel 0 (Source) Error */
#define CHID_SYS_MDMA4_SRC_ERR                 8    /* Standard BW MDMA4 Channel 0 (Source) Error */
#define INTR_SYS_MDMA4_DST_ERR              (ADI_INTR_BASE + 290)   /* Standard BW MDMA4 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA4_DST_ERR                253    /* Standard BW MDMA4 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA4_DST_ERR                 9    /* Standard BW MDMA4 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA5_SRC_ERR              (ADI_INTR_BASE + 291)   /* Standard BW MDMA5 Channel 0 (Source) Error */
#define SEC_SYS_MDMA5_SRC_ERR                253    /* Standard BW MDMA5 Channel 0 (Source) Error */
#define CHID_SYS_MDMA5_SRC_ERR                10    /* Standard BW MDMA5 Channel 0 (Source) Error */
#define INTR_SYS_MDMA5_DST_ERR              (ADI_INTR_BASE + 292)   /* Standard BW MDMA5 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA5_DST_ERR                253    /* Standard BW MDMA5 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA5_DST_ERR                11    /* Standard BW MDMA5 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA6_SRC_ERR              (ADI_INTR_BASE + 293)   /* Standard BW MDMA6 Channel 0 (Source) Error */
#define SEC_SYS_MDMA6_SRC_ERR                253    /* Standard BW MDMA6 Channel 0 (Source) Error */
#define CHID_SYS_MDMA6_SRC_ERR                12    /* Standard BW MDMA6 Channel 0 (Source) Error */
#define INTR_SYS_MDMA6_DST_ERR              (ADI_INTR_BASE + 294)   /* Standard BW MDMA6 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA6_DST_ERR                253    /* Standard BW MDMA6 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA6_DST_ERR                13    /* Standard BW MDMA6 Channel 1 (Destination) Error */
#define INTR_SYS_MDMA7_SRC_ERR              (ADI_INTR_BASE + 295)   /* Standard BW MDMA7 Channel 0 (Source) Error */
#define SEC_SYS_MDMA7_SRC_ERR                253    /* Standard BW MDMA7 Channel 0 (Source) Error */
#define CHID_SYS_MDMA7_SRC_ERR                14    /* Standard BW MDMA7 Channel 0 (Source) Error */
#define INTR_SYS_MDMA7_DST_ERR              (ADI_INTR_BASE + 296)   /* Standard BW MDMA7 Channel 1 (Destination) Error */
#define SEC_SYS_MDMA7_DST_ERR                253    /* Standard BW MDMA7 Channel 1 (Destination) Error */
#define CHID_SYS_MDMA7_DST_ERR                15    /* Standard BW MDMA7 Channel 1 (Destination) Error */
#define INTR_SPORT0_A_DMA_ERR               (ADI_INTR_BASE + 297)   /* Channel A DMA Error */
#define SEC_SPORT0_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT0_A_DMA_ERR                  0    /* Channel A DMA Error */
#define INTR_SPORT0_B_DMA_ERR               (ADI_INTR_BASE + 298)   /* Channel B DMA Error */
#define SEC_SPORT0_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT0_B_DMA_ERR                  1    /* Channel B DMA Error */
#define INTR_SPORT1_A_DMA_ERR               (ADI_INTR_BASE + 299)   /* Channel A DMA Error */
#define SEC_SPORT1_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT1_A_DMA_ERR                  2    /* Channel A DMA Error */
#define INTR_SPORT1_B_DMA_ERR               (ADI_INTR_BASE + 300)   /* Channel B DMA Error */
#define SEC_SPORT1_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT1_B_DMA_ERR                  3    /* Channel B DMA Error */
#define INTR_SPORT2_A_DMA_ERR               (ADI_INTR_BASE + 301)   /* Channel A DMA Error */
#define SEC_SPORT2_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT2_A_DMA_ERR                  4    /* Channel A DMA Error */
#define INTR_SPORT2_B_DMA_ERR               (ADI_INTR_BASE + 302)   /* Channel B DMA Error */
#define SEC_SPORT2_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT2_B_DMA_ERR                  5    /* Channel B DMA Error */
#define INTR_SPORT3_A_DMA_ERR               (ADI_INTR_BASE + 303)   /* Channel A DMA Error */
#define SEC_SPORT3_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT3_A_DMA_ERR                  6    /* Channel A DMA Error */
#define INTR_SPORT3_B_DMA_ERR               (ADI_INTR_BASE + 304)   /* Channel B DMA Error */
#define SEC_SPORT3_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT3_B_DMA_ERR                  7    /* Channel B DMA Error */
#define INTR_SPORT4_A_DMA_ERR               (ADI_INTR_BASE + 305)   /* Channel A DMA Error */
#define SEC_SPORT4_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT4_A_DMA_ERR                  8    /* Channel A DMA Error */
#define INTR_SPORT4_B_DMA_ERR               (ADI_INTR_BASE + 306)   /* Channel B DMA Error */
#define SEC_SPORT4_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT4_B_DMA_ERR                  9    /* Channel B DMA Error */
#define INTR_SPORT5_A_DMA_ERR               (ADI_INTR_BASE + 307)   /* Channel A DMA Error */
#define SEC_SPORT5_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT5_A_DMA_ERR                 10    /* Channel A DMA Error */
#define INTR_SPORT5_B_DMA_ERR               (ADI_INTR_BASE + 308)   /* Channel B DMA Error */
#define SEC_SPORT5_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT5_B_DMA_ERR                 11    /* Channel B DMA Error */
#define INTR_SPORT6_A_DMA_ERR               (ADI_INTR_BASE + 309)   /* Channel A DMA Error */
#define SEC_SPORT6_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT6_A_DMA_ERR                 12    /* Channel A DMA Error */
#define INTR_SPORT6_B_DMA_ERR               (ADI_INTR_BASE + 310)   /* Channel B DMA Error */
#define SEC_SPORT6_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT6_B_DMA_ERR                 13    /* Channel B DMA Error */
#define INTR_SPORT7_A_DMA_ERR               (ADI_INTR_BASE + 311)   /* Channel A DMA Error */
#define SEC_SPORT7_A_DMA_ERR                 254    /* Channel A DMA Error */
#define CHID_SPORT7_A_DMA_ERR                 14    /* Channel A DMA Error */
#define INTR_SPORT7_B_DMA_ERR               (ADI_INTR_BASE + 312)   /* Channel B DMA Error */
#define SEC_SPORT7_B_DMA_ERR                 254    /* Channel B DMA Error */
#define CHID_SPORT7_B_DMA_ERR                 15    /* Channel B DMA Error */
#define INTR_SWU1_EVT                       (ADI_INTR_BASE + 314)   /* Event L2 Memory Core Port 0 */
#define SEC_SWU1_EVT                         255    /* Event L2 Memory Core Port 0 */
#define CHID_SWU1_EVT                          1    /* Event L2 Memory Core Port 0 */
#define INTR_SWU2_EVT                       (ADI_INTR_BASE + 315)   /* Event L2 Memory DMA Port 0 */
#define SEC_SWU2_EVT                         255    /* Event L2 Memory DMA Port 0 */
#define CHID_SWU2_EVT                          2    /* Event L2 Memory DMA Port 0 */
#define INTR_SWU7_EVT                       (ADI_INTR_BASE + 316)   /* Event SHARC0 Slave Port 1 */
#define SEC_SWU7_EVT                         255    /* Event SHARC0 Slave Port 1 */
#define CHID_SWU7_EVT                          3    /* Event SHARC0 Slave Port 1 */
#define INTR_SWU8_EVT                       (ADI_INTR_BASE + 317)   /* Event SHARC0 Slave Port 2 */
#define SEC_SWU8_EVT                         255    /* Event SHARC0 Slave Port 2 */
#define CHID_SWU8_EVT                          4    /* Event SHARC0 Slave Port 2 */
#define INTR_SWU9_EVT                       (ADI_INTR_BASE + 318)   /* Event SHARC1 Slave Port 1 */
#define SEC_SWU9_EVT                         255    /* Event SHARC1 Slave Port 1 */
#define CHID_SWU9_EVT                          5    /* Event SHARC1 Slave Port 1 */
#define INTR_SWU10_EVT                      (ADI_INTR_BASE + 319)   /* Event SHARC1 Slave Port 2 */
#define SEC_SWU10_EVT                        255    /* Event SHARC1 Slave Port 2 */
#define CHID_SWU10_EVT                         6    /* Event SHARC1 Slave Port 2 */
#define INTR_SWU11_EVT                      (ADI_INTR_BASE + 320)   /* Event SMMR */
#define SEC_SWU11_EVT                        255    /* Event SMMR */
#define CHID_SWU11_EVT                         7    /* Event SMMR */
#define INTR_SWU12_EVT                      (ADI_INTR_BASE + 321)   /* Event SPI2/OSPI */
#define SEC_SWU12_EVT                        255    /* Event SPI2/OSPI */
#define CHID_SWU12_EVT                         8    /* Event SPI2/OSPI */
#define INTR_SWU13_EVT                      (ADI_INTR_BASE + 322)   /* Event DMC0 */
#define SEC_SWU13_EVT                        255    /* Event DMC0 */
#define CHID_SWU13_EVT                         9    /* Event DMC0 */
#define INTR_SWU3_EVT                       (ADI_INTR_BASE + 323)   /* Event CL2_1 */
#define SEC_SWU3_EVT                         255    /* Event CL2_1 */
#define CHID_SWU3_EVT                         10    /* Event CL2_1 */
#define INTR_SWU4_EVT                       (ADI_INTR_BASE + 324)   /* Event DL2_1 */
#define SEC_SWU4_EVT                         255    /* Event DL2_1 */
#define CHID_SWU4_EVT                         11    /* Event DL2_1 */
#define INTR_SWU5_EVT                       (ADI_INTR_BASE + 325)   /* Event CL2_2 */
#define SEC_SWU5_EVT                         255    /* Event CL2_2 */
#define CHID_SWU5_EVT                         12    /* Event CL2_2 */

/* ====================================================================================================
 *    Trigger Master Definitions
 * ==================================================================================================== */
#define TRGM_CGU0_EVT                          1    /* Event */
#define TRGM_CGU1_EVT                          2    /* Event */
#define TRGM_CNT0_STAT                         3    /* Status */
#define TRGM_CNT0_UD                           4    /* CNT0 Count Up and Direction */
#define TRGM_CNT0_DG                           5    /* CNT0 Count Down and Gate */
#define TRGM_CNT0_TO                           6    /* CNT0 Output to Timer Block */
#define TRGM_SYS_C1_SID_ACK                    7    /* Core 1 System Interface Disable Acknowledge */
#define TRGM_SYS_C0_SNDEVT                     8    /* C0 Send Event */
#define TRGM_SYS_C0_WFI                        9    /* C0 Wait For Interrupt */
#define TRGM_SYS_C0_WFE                       10    /* C0 Wait For Event */
#define TRGM_SYS_C0_INITSOFT                  11    /* Core 0 Memory Initialization Software Trigger */
#define TRGM_SYS_C0_INITDONE                  12    /* Core 0 Memory Initialization Done */
#define TRGM_SYS_C2_SID_ACK                   13    /* C2 System Interface Disable Acknowledge */
#define TRGM_SYS_MDMA0_SRC                    14    /* Enhanced BW DMA Channel 0 Source (CRC IN) */
#define TRGM_SYS_MDMA0_DST                    15    /* Enhanced BW DMA Channel 0 Source (CRC OUT) */
#define TRGM_SYS_MDMA1_SRC                    16    /* Enhanced BW DMA Channel 0 Source (CRC IN) */
#define TRGM_SYS_MDMA1_DST                    17    /* Enhanced BW DMA Channel 0 Source (CRC OUT) */
#define TRGM_SYS_MDMA4_SRC                    18    /* Standard BW DMA Channel 0 Source (CRC IN) */
#define TRGM_SYS_MDMA4_DST                    19    /* Standard BW DMA Channel 0 Source (CRC OUT) */
#define TRGM_SYS_MDMA5_SRC                    20    /* Standard BW DMA Channel 0 Source (CRC IN) */
#define TRGM_SYS_MDMA5_DST                    21    /* Standard BW DMA Channel 0 Source (CRC OUT) */
#define TRGM_CTI3_MST0                        22    /* SYSCTI (CTI3) System Halt Slave 0 */
#define TRGM_CTI3_MST1                        23    /* SYSCTI (CTI3) System Halt Slave 1 */
#define TRGM_CTI3_MST2                        24    /* SYSCTI (CTI3) System Halt Slave 2 */
#define TRGM_CTI3_MST3                        25    /* SYSCTI (CTI3) System Halt Slave 3 */
#define TRGM_CTI3_MST4                        26    /* SYSCTI (CTI3) System Halt Slave 4 */
#define TRGM_CTI3_MST5                        27    /* SYSCTI (CTI3) System Halt Slave 5 */
#define TRGM_CTI3_MST6                        28    /* SYSCTI (CTI3) System Halt Slave 6 */
#define TRGM_CTI3_MST7                        29    /* SYSCTI (CTI3) System Halt Slave 7 */
#define TRGM_EMAC0_STAT                       30    /* Status */
#define TRGM_EMAC1_STAT                       31    /* Status */
#define TRGM_EMDMA0_DONE                      32    /* DMA Done */
#define TRGM_EMDMA1_DONE                      33    /* DMA Done */
#define TRGM_EPPI0_CH0_DMA                    34    /* Channel 0 DMA */
#define TRGM_EPPI0_CH1_DMA                    35    /* Channel 1 DMA */
#define TRGM_C1_FIR0_DMA                      36    /* Core 1 DMA */
#define TRGM_C2_FIR0_DMA                      37    /* Core 2 DMA */
#define TRGM_HADC0_EOC                        38    /* HADC0 End of Conversion */
#define TRGM_C1_IIR0_DMA                      39    /* Core 1 DMA */
#define TRGM_C1_IIR1_DMA                      40    /* Core 1 DMA */
#define TRGM_C1_IIR2_DMA                      41    /* Core 1 DMA */
#define TRGM_C1_IIR3_DMA                      42    /* Core 1 DMA */
#define TRGM_C2_IIR0_DMA                      43    /* Core 2 DMA */
#define TRGM_C2_IIR1_DMA                      44    /* Core 2 DMA */
#define TRGM_C2_IIR2_DMA                      45    /* Core 2 DMA */
#define TRGM_C2_IIR3_DMA                      46    /* Core 2 DMA */
#define TRGM_L2CTL0_EVT                       47    /* L2 Memory Event */
#define TRGM_LP0_DMA                          48    /* DMA Channel */
#define TRGM_LP1_DMA                          49    /* DMA Channel */
#define TRGM_SYS_MDMA2_SRC                    50    /* Enh BW DMA Channel 0 */
#define TRGM_SYS_MDMA2_DST                    51    /* Enh BW DMA Channel 1 */
#define TRGM_SYS_MDMA3_SRC                    52    /* Max BW DMA Channel 0 */
#define TRGM_SYS_MDMA3_DST                    53    /* Max BW DMA Channel 1 */
#define TRGM_SYS_MDMA6_SRC                    54    /* Enh BW DMA Channel 0 */
#define TRGM_SYS_MDMA6_DST                    55    /* Enh BW DMA Channel 1 */
#define TRGM_SYS_MDMA7_SRC                    56    /* Max BW DMA Channel 0 */
#define TRGM_SYS_MDMA7_DST                    57    /* Max BW DMA Channel 1 */
#define TRGM_MEC0_EEIRQ0                      58    /* ECC Error Interrupt Request */
#define TRGM_MEC0_PEIRQ0                      59    /* Parity Error Interrupt Request */
#define TRGM_MEC0_PEIRQ1                      60    /* Parity Error Interrupt Request */
#define TRGM_MEC0_PEIRQ2                      61    /* Parity Error Interrupt Request */
#define TRGM_MEC0_PEIRQ3                      62    /* Parity Error Interrupt Request */
#define TRGM_MEC1_EEIRQ0                      63    /* ECC Error Interrupt Request */
#define TRGM_MEC1_PEIRQ0                      64    /* Parity Error Interrupt Request */
#define TRGM_MEC1_PEIRQ1                      65    /* Parity Error Interrupt Request */
#define TRGM_MEC1_PEIRQ2                      66    /* Parity Error Interrupt Request */
#define TRGM_MEC1_PEIRQ3                      67    /* Parity Error Interrupt Request */
#define TRGM_MEC2_EEIRQ0                      68    /* ECC Error Interrupt Request */
#define TRGM_MEC2_PEIRQ0                      69    /* Parity Error Interrupt Request */
#define TRGM_MEC2_PEIRQ1                      70    /* Parity Error Interrupt Request */
#define TRGM_MEC2_PEIRQ2                      71    /* Parity Error Interrupt Request */
#define TRGM_MEC2_PEIRQ3                      72    /* Parity Error Interrupt Request */
#define TRGM_PINT0_BLOCK                      73    /* Pin Interrupt Block */
#define TRGM_PINT1_BLOCK                      74    /* Pin Interrupt Block */
#define TRGM_PINT2_BLOCK                      75    /* Pin Interrupt Block */
#define TRGM_PINT3_BLOCK                      76    /* Pin Interrupt Block */
#define TRGM_PINT4_BLOCK                      77    /* Pin Interrupt Block */
#define TRGM_PINT5_BLOCK                      78    /* Pin Interrupt Block */
#define TRGM_PINT6_BLOCK                      79    /* Pin Interrupt Block */
#define TRGM_PINT7_BLOCK                      80    /* Pin Interrupt Block */
#define TRGM_SEC0_FAULT                       81    /* Fault */
#define TRGM_SPI0_TXDMA                       82    /* TX DMA Channel */
#define TRGM_SPI0_RXDMA                       83    /* RX DMA Channel */
#define TRGM_SPI1_TXDMA                       84    /* TX DMA Channel */
#define TRGM_SPI1_RXDMA                       85    /* RX DMA Channel */
#define TRGM_SPI3_TXDMA                       86    /* TX DMA Channel */
#define TRGM_SPI3_RXDMA                       87    /* RX DMA Channel */
#define TRGM_SPI2_TXDMA                       88    /* TX DMA Channel */
#define TRGM_SPI2_RXDMA                       89    /* RX DMA Channel */
#define TRGM_SPORT0_A_DMA                     90    /* Channel A DMA */
#define TRGM_SPORT0_B_DMA                     91    /* Channel B DMA */
#define TRGM_SPORT1_A_DMA                     92    /* Channel A DMA */
#define TRGM_SPORT1_B_DMA                     93    /* Channel B DMA */
#define TRGM_SPORT2_A_DMA                     94    /* Channel A DMA */
#define TRGM_SPORT2_B_DMA                     95    /* Channel B DMA */
#define TRGM_SPORT3_A_DMA                     96    /* Channel A DMA */
#define TRGM_SPORT3_B_DMA                     97    /* Channel B DMA */
#define TRGM_SPORT4_A_DMA                     98    /* Channel A DMA */
#define TRGM_SPORT4_B_DMA                     99    /* Channel B DMA */
#define TRGM_SPORT5_A_DMA                    100    /* Channel A DMA */
#define TRGM_SPORT5_B_DMA                    101    /* Channel B DMA */
#define TRGM_SPORT6_A_DMA                    102    /* Channel A DMA */
#define TRGM_SPORT6_B_DMA                    103    /* Channel B DMA */
#define TRGM_SPORT7_A_DMA                    104    /* Channel A DMA */
#define TRGM_SPORT7_B_DMA                    105    /* Channel B DMA */
#define TRGM_DAI0_GBL_SPORT_TRG_O0           106    /* SPORT GROUP0 Trigger Output */
#define TRGM_DAI0_GBL_SPORT_TRG_O1           107    /* SPORT GROUP1 Trigger Output */
#define TRGM_DAI1_GBL_SPORT_TRG_O0           108    /* SPORT GROUP2 Trigger Output */
#define TRGM_DAI1_GBL_SPORT_TRG_O1           109    /* SPORT Group3 Trigger Output */
#define TRGM_SWU1_EVT                        111    /* Event */
#define TRGM_SWU2_EVT                        112    /* Event */
#define TRGM_SWU7_EVT                        113    /* Event */
#define TRGM_SWU8_EVT                        114    /* Event */
#define TRGM_SWU9_EVT                        115    /* Event */
#define TRGM_SWU10_EVT                       116    /* Event */
#define TRGM_SWU11_EVT                       117    /* Event */
#define TRGM_SWU12_EVT                       118    /* Event */
#define TRGM_SWU13_EVT                       119    /* Event */
#define TRGM_SWU3_EVT                        120    /* Event */
#define TRGM_SWU4_EVT                        121    /* Event */
#define TRGM_SWU5_EVT                        122    /* Event */
#define TRGM_SWU1_DBG                        124    /* Debug */
#define TRGM_SWU2_DBG                        125    /* Debug */
#define TRGM_SWU7_DBG                        126    /* Debug */
#define TRGM_SWU8_DBG                        127    /* Debug */
#define TRGM_SWU9_DBG                        128    /* Debug */
#define TRGM_SWU10_DBG                       129    /* Debug */
#define TRGM_SWU11_DBG                       130    /* Debug */
#define TRGM_SWU12_DBG                       131    /* Debug */
#define TRGM_SWU13_DBG                       132    /* Debug */
#define TRGM_SWU3_DBG                        133    /* Debug */
#define TRGM_SWU4_DBG                        134    /* Debug */
#define TRGM_SWU5_DBG                        135    /* Debug */
#define TRGM_SYS_SOFT0_MST                   136    /* Software-driven Trigger 0 */
#define TRGM_SYS_SOFT1_MST                   137    /* Software-driven Trigger 1 */
#define TRGM_SYS_SOFT2_MST                   138    /* Software-driven Trigger 2 */
#define TRGM_SYS_SOFT3_MST                   139    /* Software-driven Trigger 3 */
#define TRGM_SYS_SOFT4_MST                   140    /* Software-driven Trigger 4 */
#define TRGM_SYS_SOFT5_MST                   141    /* Software-driven Trigger 5 */
#define TRGM_TIMER0_TMR00_MST                142    /* Timer 0 */
#define TRGM_TIMER0_TMR01_MST                143    /* Timer 1 */
#define TRGM_TIMER0_TMR02_MST                144    /* Timer 2 */
#define TRGM_TIMER0_TMR03_MST                145    /* Timer 3 */
#define TRGM_TIMER0_TMR04_MST                146    /* Timer 4 */
#define TRGM_TIMER0_TMR05_MST                147    /* Timer 5 */
#define TRGM_TIMER0_TMR06_MST                148    /* Timer 6 */
#define TRGM_TIMER0_TMR07_MST                149    /* Timer 7 */
#define TRGM_TIMER0_TMR08_MST                150    /* Timer 8 */
#define TRGM_TIMER0_TMR09_MST                151    /* Timer 9 */
#define TRGM_TIMER0_TMR10_MST                152    /* Timer 10 */
#define TRGM_TIMER0_TMR11_MST                153    /* Timer 11 */
#define TRGM_TIMER0_TMR12_MST                154    /* Timer 12 */
#define TRGM_TIMER0_TMR13_MST                155    /* Timer 13 */
#define TRGM_TIMER0_TMR14_MST                156    /* Timer 14 */
#define TRGM_TIMER0_TMR15_MST                157    /* Timer 15 */
#define TRGM_TMU0_FAULT                      158    /* TM0 Fault Event */
#define TRGM_TMU0_ALERT                      159    /* TM0 Alert Event */
#define TRGM_UART0_TXDMA                     160    /* Transmit DMA */
#define TRGM_UART0_RXDMA                     161    /* Receive DMA */
#define TRGM_UART1_TXDMA                     162    /* Transmit DMA */
#define TRGM_UART1_RXDMA                     163    /* Receive DMA */
#define TRGM_UART2_TXDMA                     164    /* Transmit DMA */
#define TRGM_UART2_RXDMA                     165    /* Receive DMA */
#define TRGM_UART3_TXDMA                     166    /* Transmit DMA */
#define TRGM_UART3_RXDMA                     167    /* Receive DMA */
#define TRGM_USBC0_SOF_TGL                   168    /* USB start of frame generation toggle */
#define TRGM_USBC0_SOF_SENT_TGL              169    /* USB start of frame transmission toggle */
#define TRGM_USBC0_DMAREQ                    170    /* USB Internal DMA Request for Remote Memory Support */
#define TRGM_USBC0_DMADONE                   171    /* USB Internal DMA Done for Remote Memory Support */
#define TRGM_WDOG0_EXP                       172    /* Expiration */
#define TRGM_WDOG1_EXP                       173    /* Expiration */
#define TRGM_WDOG2_EXP                       174    /* Expiration */
#define TRGM_PCG0_HWA                        177    /* PCG-A Hardware trigger control */
#define TRGM_PCG0_HWB                        178    /* PCG-B Hardware trigger control */
#define TRGM_PCG0_HWC                        179    /* PCG-C Hardware trigger control */
#define TRGM_PCG0_HWD                        180    /* PCG-D Hardware trigger control */
#define TRGM_PCG0_HWE                        181    /* PCG-E Hardware trigger control */
#define TRGM_PCG0_HWF                        182    /* PCG-F Hardware trigger control */
#define TRGM_PCG0_HWG                        183    /* PCG-G Hardware trigger control */
#define TRGM_PCG0_HWH                        184    /* PCG-H Hardware trigger control */

/* ====================================================================================================
 *    Trigger Slave Definitions
 * ==================================================================================================== */
#define TRGS_CNT0_UD                           0    /* CNT0 Count Up and Direction */
#define TRGS_CNT0_DG                           1    /* CNT0 Count Down and Gate */
#define TRGS_SYS_C0_INITSTART                  2    /* Core 0 Memory Initialization Start Trigger */
#define TRGS_SYS_C0_EVT                        3    /* Core 0 Event Input for Wakeup from WFE State */
#define TRGS_SYS_MDMA0_SRC                     4    /* Enhanced BW DMA Channel 0 Source (CRC IN) */
#define TRGS_SYS_MDMA0_DST                     5    /* Enhanced BW DMA Channel 0 Source (CRC OUT) */
#define TRGS_SYS_MDMA1_SRC                     6    /* Enhanced BW DMA Channel 0 Source (CRC IN) */
#define TRGS_SYS_MDMA1_DST                     7    /* Enhanced BW DMA Channel 0 Source (CRC OUT) */
#define TRGS_SYS_MDMA4_SRC                     8    /* Standard BW DMA Channel 0 Source (CRC IN) */
#define TRGS_SYS_MDMA4_DST                     9    /* Standard BW DMA Channel 0 Source (CRC OUT) */
#define TRGS_SYS_MDMA5_SRC                    10    /* Standard BW DMA Channel 1 Source (CRC IN) */
#define TRGS_SYS_MDMA5_DST                    11    /* Standard BW DMA Channel 1 Source (CRC OUT) */
#define TRGS_CTI3_SLV0                        12    /* SYSCTI System Halt Master 0 */
#define TRGS_CTI3_SLV1                        13    /* SYSCTI System Halt Master 1 */
#define TRGS_CTI3_SLV2                        14    /* SYSCTI System Halt Master 2 */
#define TRGS_CTI3_SLV3                        15    /* SYSCTI System Halt Master 3 */
#define TRGS_CTI3_SLV4                        16    /* SYSCTI System Halt Master 4 */
#define TRGS_CTI3_SLV5                        17    /* SYSCTI System Halt Master 5 */
#define TRGS_CTI3_SLV6                        18    /* SYSCTI System Halt Master 6 */
#define TRGS_EPPI0_CH0_DMA                    19    /* Channel 0 DMA */
#define TRGS_EPPI0_CH1_DMA                    20    /* Channel 1 DMA */
#define TRGS_C1_FIR0_TRGI                     21    /* Core 1 FIR Wait on Trigger Input */
#define TRGS_C2_FIR0_TRGI                     22    /* Core 2 FIR Wait on Trigger Input */
#define TRGS_C1_IIR0_TRGI                     23    /* Core 1 IIR Wait on Trigger Input */
#define TRGS_C1_IIR1_TRGI                     24    /* Core 1 IIR Wait on Trigger Input */
#define TRGS_C1_IIR2_TRGI                     25    /* Core 1 IIR Wait on Trigger Input */
#define TRGS_C1_IIR3_TRGI                     26    /* Core 1 IIR Wait on Trigger Input */
#define TRGS_C2_IIR0_TRGI                     27    /* Core 2 IIR Wait on Trigger Input */
#define TRGS_C2_IIR1_TRGI                     28    /* Core 2 IIR Wait on Trigger Input */
#define TRGS_C2_IIR2_TRGI                     29    /* Core 2 IIR Wait on Trigger Input */
#define TRGS_C2_IIR3_TRGI                     30    /* Core 2 IIR Wait on Trigger Input */
#define TRGS_LP0_DMA                          31    /* DMA Channel */
#define TRGS_LP1_DMA                          32    /* DMA Channel */
#define TRGS_SYS_MDMA2_SRC                    33    /* Enh BW DMA Channel 0 */
#define TRGS_SYS_MDMA2_DST                    34    /* Enh BW DMA Channel 1 */
#define TRGS_SYS_MDMA3_SRC                    35    /* Max BW DMA Channel 0 */
#define TRGS_SYS_MDMA3_DST                    36    /* Max BW DMA Channel 1 */
#define TRGS_SYS_MDMA6_SRC                    37    /* Enh BW DMA Channel 0 */
#define TRGS_SYS_MDMA6_DST                    38    /* Enh BW DMA Channel 1 */
#define TRGS_SYS_MDMA7_SRC                    39    /* Max BW DMA Channel 0 */
#define TRGS_SYS_MDMA7_DST                    40    /* Max BW DMA Channel 1 */
#define TRGS_PORTA_TOGGLE                     41    /* Port Toggle Trigger */
#define TRGS_PORTB_TOGGLE                     42    /* Port Toggle Trigger */
#define TRGS_PORTC_TOGGLE                     43    /* Port Toggle Trigger */
#define TRGS_PORTD_TOGGLE                     44    /* Port Toggle Trigger */
#define TRGS_PORTE_TOGGLE                     45    /* Port Toggle Trigger */
#define TRGS_PORTF_TOGGLE                     46    /* Port Toggle Trigger */
#define TRGS_PORTG_TOGGLE                     47    /* Port Toggle Trigger */
#define TRGS_PORTH_TOGGLE                     48    /* Port Toggle Trigger */
#define TRGS_PORTI_TOGGLE                     49    /* Port Toggle Trigger */
#define TRGS_RCU0_SYSRST0                     50    /* System Reset Slave 0 */
#define TRGS_RCU0_SYSRST1                     51    /* System Reset Slave 1 */
#define TRGS_SPI0_TXDMA                       52    /* TX DMA Channel */
#define TRGS_SPI0_RXDMA                       53    /* RX DMA Channel */
#define TRGS_SPI1_TXDMA                       54    /* TX DMA Channel */
#define TRGS_SPI1_RXDMA                       55    /* RX DMA Channel */
#define TRGS_SPI3_TXDMA                       56    /* TX DMA Channel */
#define TRGS_SPI3_RXDMA                       57    /* RX DMA Channel */
#define TRGS_SPI2_TXDMA                       58    /* TX DMA Channel */
#define TRGS_SPI2_RXDMA                       59    /* RX DMA Channel */
#define TRGS_SPORT0_A_DMA                     60    /* Channel A DMA */
#define TRGS_SPORT0_B_DMA                     61    /* Channel B DMA */
#define TRGS_SPORT1_A_DMA                     62    /* Channel A DMA */
#define TRGS_SPORT1_B_DMA                     63    /* Channel B DMA */
#define TRGS_SPORT2_A_DMA                     64    /* Channel A DMA */
#define TRGS_SPORT2_B_DMA                     65    /* Channel B DMA */
#define TRGS_SPORT3_A_DMA                     66    /* Channel A DMA */
#define TRGS_SPORT3_B_DMA                     67    /* Channel B DMA */
#define TRGS_SPORT4_A_DMA                     68    /* Channel A DMA */
#define TRGS_SPORT4_B_DMA                     69    /* Channel B DMA */
#define TRGS_SPORT5_A_DMA                     70    /* Channel A DMA */
#define TRGS_SPORT5_B_DMA                     71    /* Channel B DMA */
#define TRGS_SPORT6_A_DMA                     72    /* Channel A DMA */
#define TRGS_SPORT6_B_DMA                     73    /* Channel B DMA */
#define TRGS_SPORT7_A_DMA                     74    /* Channel A DMA */
#define TRGS_SPORT7_B_DMA                     75    /* Channel B DMA */
#define TRGS_DAI0_GBL_SPORT_TRG_I0            76    /* SPORT GROUP0 Trigger Input */
#define TRGS_DAI0_GBL_SPORT_TRG_I1            77    /* SPORT GROUP1 Trigger Input */
#define TRGS_DAI1_GBL_SPORT_TRG_I0            78    /* SPORT GROUP2 Trigger Input */
#define TRGS_DAI1_GBL_SPORT_TRG_I1            79    /* SPORT GROUP3 Trigger Input */
#define TRGS_STM0_EVT0                        80    /* STM0 Event 0 */
#define TRGS_STM0_EVT1                        81    /* STM0 Event 1 */
#define TRGS_STM0_EVT2                        82    /* STM0 Event 2 */
#define TRGS_STM0_EVT3                        83    /* STM0 Event 3 */
#define TRGS_STM0_EVT4                        84    /* STM0 Event 4 */
#define TRGS_STM0_EVT5                        85    /* STM0 Event 5 */
#define TRGS_STM0_EVT6                        86    /* STM0 Event 6 */
#define TRGS_STM0_EVT7                        87    /* STM0 Event 7 */
#define TRGS_STM0_EVT8                        88    /* STM0 Event 8 */
#define TRGS_STM0_EVT9                        89    /* STM0 Event 9 */
#define TRGS_STM0_EVT10                       90    /* STM0 Event 10 */
#define TRGS_STM0_EVT11                       91    /* STM0 Event 11 */
#define TRGS_STM0_EVT12                       92    /* STM0 Event 12 */
#define TRGS_STM0_EVT13                       93    /* STM0 Event 13 */
#define TRGS_STM0_EVT14                       94    /* STM0 Event 14 */
#define TRGS_STM0_EVT15                       95    /* STM0 Event 15 */
#define TRGS_STM0_EVT16                       96    /* STM0 Event 16 */
#define TRGS_STM0_EVT17                       97    /* STM0 Event 17 */
#define TRGS_STM0_EVT18                       98    /* STM0 Event 18 */
#define TRGS_STM0_EVT19                       99    /* STM0 Event 19 */
#define TRGS_STM0_EVT20                      100    /* STM0 Event 20 */
#define TRGS_STM0_EVT21                      101    /* STM0 Event 21 */
#define TRGS_STM0_EVT22                      102    /* STM0 Event 22 */
#define TRGS_STM0_EVT23                      103    /* STM0 Event 23 */
#define TRGS_STM0_EVT24                      104    /* STM0 Event 24 */
#define TRGS_STM0_EVT25                      105    /* STM0 Event 25 */
#define TRGS_STM0_EVT26                      106    /* STM0 Event 26 */
#define TRGS_STM0_EVT27                      107    /* STM0 Event 27 */
#define TRGS_STM0_EVT28                      108    /* STM0 Event 28 */
#define TRGS_STM0_EVT29                      109    /* STM0 Event 29 */
#define TRGS_STM0_EVT30                      110    /* STM0 Event 30 */
#define TRGS_STM0_EVT31                      111    /* STM0 Event 31 */
#define TRGS_SWU1_EN                         113    /* Enable */
#define TRGS_SWU2_EN                         114    /* Enable */
#define TRGS_SWU7_EN                         115    /* Enable */
#define TRGS_SWU8_EN                         116    /* Enable */
#define TRGS_SWU9_EN                         117    /* Enable */
#define TRGS_SWU10_EN                        118    /* Enable */
#define TRGS_SWU11_EN                        119    /* Enable */
#define TRGS_SWU12_EN                        120    /* Enable */
#define TRGS_SWU13_EN                        121    /* Enable */
#define TRGS_SWU3_EN                         122    /* Enable Event CL2_1 */
#define TRGS_SWU4_EN                         123    /* Enable Event DL2_1 */
#define TRGS_SWU5_EN                         124    /* Enable Event CL2_2 */
#define TRGS_TIMER0_TMR00_SLV0               125    /* Timer 0 */
#define TRGS_TIMER0_TMR00_SLV1               126    /* Timer 0 */
#define TRGS_TIMER0_TMR01_SLV0               127    /* Timer 1 */
#define TRGS_TIMER0_TMR01_SLV1               128    /* Timer 1 */
#define TRGS_TIMER0_TMR02_SLV0               129    /* Timer 2 */
#define TRGS_TIMER0_TMR02_SLV1               130    /* Timer 2 */
#define TRGS_TIMER0_TMR03_SLV0               131    /* Timer 3 */
#define TRGS_TIMER0_TMR03_SLV1               132    /* Timer 3 */
#define TRGS_TIMER0_TMR04_SLV0               133    /* Timer 4 */
#define TRGS_TIMER0_TMR04_SLV1               134    /* Timer 4 */
#define TRGS_TIMER0_TMR05_SLV0               135    /* Timer 5 */
#define TRGS_TIMER0_TMR05_SLV1               136    /* Timer 5 */
#define TRGS_TIMER0_TMR06_SLV0               137    /* Timer 6 */
#define TRGS_TIMER0_TMR06_SLV1               138    /* Timer 6 */
#define TRGS_TIMER0_TMR07_SLV0               139    /* Timer 7 */
#define TRGS_TIMER0_TMR07_SLV1               140    /* Timer 7 */
#define TRGS_TIMER0_TMR08_SLV0               141    /* Timer 8 */
#define TRGS_TIMER0_TMR08_SLV1               142    /* Timer 8 */
#define TRGS_TIMER0_TMR09_SLV0               143    /* Timer 9 */
#define TRGS_TIMER0_TMR09_SLV1               144    /* Timer 9 */
#define TRGS_TIMER0_TMR10_SLV0               145    /* Timer 10 */
#define TRGS_TIMER0_TMR10_SLV1               146    /* Timer 10 */
#define TRGS_TIMER0_TMR11_SLV0               147    /* Timer 11 */
#define TRGS_TIMER0_TMR11_SLV1               148    /* Timer 11 */
#define TRGS_TIMER0_TMR12_SLV0               149    /* Timer 12 */
#define TRGS_TIMER0_TMR12_SLV1               150    /* Timer 12 */
#define TRGS_TIMER0_TMR13_SLV0               151    /* Timer 13 */
#define TRGS_TIMER0_TMR13_SLV1               152    /* Timer 13 */
#define TRGS_TIMER0_TMR14_SLV0               153    /* Timer 14 */
#define TRGS_TIMER0_TMR14_SLV1               154    /* Timer 14 */
#define TRGS_TIMER0_TMR15_SLV0               155    /* Timer 15 */
#define TRGS_TIMER0_TMR15_SLV1               156    /* Timer 15 */
#define TRGS_TRU0_SLV0                       157    /* Interrupt Request 0 */
#define TRGS_TRU0_SLV1                       158    /* Interrupt Request 1 */
#define TRGS_TRU0_SLV2                       159    /* Interrupt Request 2 */
#define TRGS_TRU0_SLV3                       160    /* Interrupt Request 3 */
#define TRGS_TRU0_SLV4                       161    /* Interrupt Request 4 */
#define TRGS_TRU0_SLV5                       162    /* Interrupt Request 5 */
#define TRGS_TRU0_SLV6                       163    /* Interrupt Request 6 */
#define TRGS_TRU0_SLV7                       164    /* Interrupt Request 7 */
#define TRGS_TRU0_SLV8                       165    /* Interrupt Request 8 */
#define TRGS_TRU0_SLV9                       166    /* Interrupt Request 9 */
#define TRGS_TRU0_SLV10                      167    /* Interrupt Request 10 */
#define TRGS_TRU0_SLV11                      168    /* Interrupt Request 11 */
#define TRGS_UART0_TXDMA                     169    /* Transmit DMA */
#define TRGS_UART0_RXDMA                     170    /* Receive DMA */
#define TRGS_UART1_TXDMA                     171    /* Transmit DMA */
#define TRGS_UART1_RXDMA                     172    /* Receive DMA */
#define TRGS_UART2_TXDMA                     173    /* Transmit DMA */
#define TRGS_UART2_RXDMA                     174    /* Receive DMA */
#define TRGS_UART3_TXDMA                     175    /* Transmit DMA */
#define TRGS_UART3_RXDMA                     176    /* Receive DMA */
#define TRGS_PCG0_HWA                        177    /* PCG-A Hardware trigger control */
#define TRGS_PCG0_HWB                        178    /* PCG-B Hardware trigger control */
#define TRGS_PCG0_HWC                        179    /* PCG-C Hardware trigger control */
#define TRGS_PCG0_HWD                        180    /* PCG-D Hardware trigger control */
#define TRGS_PCG0_HWE                        181    /* PCG-E Hardware trigger control */
#define TRGS_PCG0_HWF                        182    /* PCG-F Hardware trigger control */
#define TRGS_PCG0_HWG                        183    /* PCG-G Hardware trigger control */
#define TRGS_PCG0_HWH                        184    /* PCG-H Hardware trigger control */

#endif